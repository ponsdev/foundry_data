{"_id":"CZZcV1nHIsStNfhz","name":"remove all effects","permission":{"default":0,"devnIbfBHb74U9Zv":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.QozX9UXKaJTCc8NY"}},"scope":"global","command":"// Remove all active effects from the selected token\nlet removeList = token?.actor?.effects.map(e=>e.id)\ntoken?.actor?.deleteEmbeddedEntity(\"ActiveEffect\", removeList)","author":"devnIbfBHb74U9Zv","img":"icons/svg/dice-target.svg","actorIds":[]}
{"name":"Whisper","permission":{"default":0,"devnIbfBHb74U9Zv":3},"type":"script","flags":{},"scope":"global","command":"ChatMessage.create({\r\n    content: args[0],\r\n    whisper: ChatMessage.getWhisperIDs(\"GM\")\r\n})","author":"devnIbfBHb74U9Zv","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"IJDEUyvtXOG6dPGK"}
{"_id":"KukwXWvSediF4abJ","name":"Divine Smite","permission":{"default":0,"devnIbfBHb74U9Zv":3},"type":"script","flags":{"furnace":{"gmexecute":true,"runAsGM":false},"combat-utility-belt":{"macroTrigger":""}},"scope":"global","command":"// Called as an active effect:\n// macro.execute CUSTOM @target @item.level @itemCardId\n// requires midi-qol to work.\n// The @itemCardID allows the DamageOnlyWorkflow to put the damage roll on the item card\nif (args[0] === \"on\") {\n  let target = canvas.tokens.get(args[1])\n  let numDice = 1 + (Number(args[2]) || 1)\n  let undead = [\"undead\", \"fiend\"].some(type => (target.actor.data.data.details.type || \"\").toLowerCase().includes(type));\n  if (undead) numDice += 1;\n  let damageRoll = new Roll(`${numDice}d8`).roll();\n  new MidiQOL.DamageOnlyWorkflow(actor, token, damageRoll.total, \"radiant\", [target], damageRoll, {flavor: \"Divine Smite - Damage Roll (Radiant)\", itemCardId: args[3]})\n}","author":"devnIbfBHb74U9Zv","img":"systems/dnd5e/icons/spells/beam-red-2.jpg","actorIds":[]}
{"_id":"OLllXCNbZIWXRHA0","name":"Summon","permission":{"default":0,"devnIbfBHb74U9Zv":3},"type":"script","flags":{"furnace":{"gmexecute":true,"runAsGM":true},"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.xRxHaaEAyHItfyNH"}},"scope":"global","command":"// call with \n// macro.execute CUSTOM Summon @token @unique Ghoul 100 100\n// Ghoul is the token to be summoned.\nlet caster = canvas.tokens.get(args[1]);\nlet unique = args[2];\nif (!caster) {\nChatMessage.create({content: \"No caster token selected\"})\nreturn\n}\nlet casterActor = token.actor;\nif (args[0] === \"on\") { // do the summons\n  let summoned = game.actors.getName(args[3]);\n  console.log(\"Summoned is \", summoned, args[3])\n  let tokenData = {x: token.center.x + args[4], y: token.center.y + args[5], hidden:false, disposition: 1};\n  tokenData = mergeObject(summoned.data.token, tokenData, {inplace: false});\n  let summonedToken = await canvas.scene.createEmbeddedEntity(\"Token\", tokenData)\n  await caster.setFlag(\"dynamiceffects\", unique, summonedToken._id)\n} else { // the off case\n  let summonedId = await caster.getFlag(\"dynamiceffects\", unique);\n  if (summonedId) {\n    await canvas.scene.deleteEmbeddedEntity(\"Token\", summonedId);\n    await caster.unsetFlag(\"dynamiceffects\", unique);\n  }\n}","author":"devnIbfBHb74U9Zv","img":"icons/svg/dice-target.svg","actorIds":[]}
{"_id":"Rwf9EIPv4vd4j0GE","name":"remove all temporary effects","permission":{"default":0,"devnIbfBHb74U9Zv":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.QozX9UXKaJTCc8NY"}},"scope":"global","command":"// Remove all temporary effects from the selected token\nlet removeList = token?.actor?.temporaryEffects.map(e=>e.id)\ntoken?.actor?.deleteEmbeddedEntity(\"ActiveEffect\", removeList)","author":"devnIbfBHb74U9Zv","img":"icons/svg/dice-target.svg","actorIds":[]}
{"_id":"akTGO1MXZPeOUrEr","name":"applyActiveEffects","permission":{"default":0,"devnIbfBHb74U9Zv":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.Uer5d5rz63S9XQLM"}},"scope":"global","command":"// Apply items active effects to the targets\nif (!actor) {\n  ui.notifications.warn(\"no actor selected\")\n  return;\n}\nlet item = actor.items.getName(\"Bless\")\nif (!item) {\n  ui.notifications.warn(\"no item found\");\n  return;;\n}\nlet targets = game.user.targets;\nif (!targets?.size) {\n  ui.notifications.warn(\"no targets selected\");\n  return;\n}\nDAE.doEffects(item, true, targets, {whisper: false})","author":"devnIbfBHb74U9Zv","img":"icons/svg/dice-target.svg","actorIds":[]}
{"name":"deleteToken","permission":{"default":0,"devnIbfBHb74U9Zv":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true}},"scope":"global","command":"let startScene = game.scenes.get(args[0]);\r\nif (!startScene || !args[1]) return;\r\nawait startScene.deleteEmbeddedEntity(\"Token\", args[1]);","author":"devnIbfBHb74U9Zv","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"b7arWwNLWNoQaVBD"}
{"_id":"gVTMTz5AiqiqVecO","name":"Aid","permission":{"default":0,"devnIbfBHb74U9Zv":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true}},"scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\nif (!target) {\r\n  ChatMessage.create({content: `Token ${args[1]} is no longer in scene`, whisper: ChatMessage.getWhisperIDs(\"GM\")})\r\n  return;\r\n}\r\n\r\nlet increment = 5 * (args[2] - 1);\r\nif (!args[2]) increment = 5;\r\nlet hpMax = target.actor.data.data.attributes.hp.max;\r\nlet hp = target.actor.data.data.attributes.hp.value;\r\n\r\nif (args[0] === \"on\") {\r\n  target.actor.update({\"data.attributes.hp.max\": hpMax + increment, \"data.attributes.hp.value\": hp + increment})\r\nChatMessage.create({content: `Aid Spell: ${target.name} received ${increment} HP`})\r\n} else {\r\n  target.actor.update({\"data.attributes.hp.max\": hpMax - increment, \"data.attributes.hp.value\": Math.min(hp, hpMax - increment)})\r\nChatMessage.create({content: `Aid Spell Expiry: ${target.name} Max HP reduced by ${increment}`})\r\n}\r\n// Run as an active effect on the Aid spell via macro.execute = @target @spellLevel\r\n","author":"devnIbfBHb74U9Zv","img":"icons/svg/dice-target.svg","actorIds":[]}
{"name":"Bless","permission":{"default":0,"devnIbfBHb74U9Zv":3},"type":"script","flags":{"dnd5e":{"itemMacro":true},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.i7gvEqa3DDsrmgCT"}},"scope":"global","command":"actor.items.getName(\"Bless\")?.roll()","author":"devnIbfBHb74U9Zv","img":"systems/dnd5e/icons/spells/haste-sky-1.jpg","actorIds":[],"_id":"n3AuqIXZQG1TQ6ue"}
{"_id":"oWh4uTrugSY4uEdi","name":"Invisible","permission":{"default":0,"devnIbfBHb74U9Zv":3},"type":"script","flags":{"furnace":{"gmexecute":true,"runAsGM":true},"combat-utility-belt":{"macroTrigger":""}},"scope":"global","command":"//#args 0=tokenId 1 = sceneId\r\nlet hide = args[0] === \"on\";\r\nscene.updateEmbeddedEntity(\"Token\", {\"_id\": args[1], \"hidden\": hide})","author":"devnIbfBHb74U9Zv","img":"icons/svg/dice-target.svg","actorIds":[]}
{"name":"Active Effects","permission":{"default":0,"devnIbfBHb74U9Zv":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.V3BxEbwh7WL2VXsI"}},"scope":"global","command":"if (!canvas.tokens.controlled[0]?.actor) {\nui.notifications.warn(\"No Token selected\");\nreturn;\n}\nnew DAE.ActiveEffects(canvas.tokens.controlled[0].actor).render(true)","author":"devnIbfBHb74U9Zv","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"sRiep07y41LaZNP2"}
{"name":"createToken","permission":{"default":0,"devnIbfBHb74U9Zv":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true}},"scope":"global","command":"let targetScene = game.scenes.get(args[0])\r\nif (!targetScene || !args[3]) return;\r\nawait targetScene.createEmbeddedEntity('Token', mergeObject(duplicate(args[3]), { \"x\": args[1] || 0, \"y\": args[2] || 0}, { overwrite: true, inplace: true }));","author":"devnIbfBHb74U9Zv","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"xTQOMuRlZJIE8C6X"}
{"_id":"xuE9JiWntRzjeBBr","name":"TeleportToToken","permission":{"default":0},"type":"script","sort":100001,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"scope":"global","command":"let targetScene;\r\nif (!token) return ChatMessage.create({content: `No token selected`})\r\nfor (let scene of game.scenes.entities) {\r\n  var targetToken = scene.data.tokens.find(t => t.name === args[0]);\r\n  if (targetToken) {\r\n   targetScene = scene;\r\n   break;\r\n  }\r\n}\r\nif (!targetScene) return ChatMessage.create({content: `Could not find token ${args[0]} in any scene`});\r\nCanvasAnimation.terminateAnimation(`Token.${token.id}.animateMovement`);\r\n\r\nlet x = targetToken.x + targetScene.data.grid * (args[1] || 0);\r\nlet y = targetToken.y + targetScene.data.grid * (args[2] || 0);\r\nlet startScene = canvas.scene.id;\r\n\r\nawait game.macros.getName(\"createToken\")?.execute(targetScene.id, x, y, token.data)\r\nif(targetScene.id === startScene) {\r\n  await game.macros.getName(\"deleteToken\")?.execute(startScene, token.id)\r\n} else {\r\n  Hooks.once(\"canvasReady\", () => {\r\n    game.macros.getName(\"deleteToken\")?.execute(startScene, token.id)\r\n  })\r\n  await targetScene.view();\r\n}\r\ncanvas.pan(x,y)\r\n// This macro is intended to be used with Trigger Happy and requires Furnace advanced macros to run.\r\n// Sample trigger happy setup.\r\n// You must place two tokens on some scene(s). They must have unqiue name (not actor name, but token name).\r\n// @Token[Target1] @Trigger[move capture] @ChatMessage[/TeleportToToken Target2 -1 1]\r\n// The sample will, when a player moves their token over the target token \"Target1\", \r\n// delete the players token and recreate it next to the token named Target2\r\n// For the example above the players token will be placed 1 grid unit to the left of Target2 and one grid unit down from Target2\r\n","author":"devnIbfBHb74U9Zv","img":"icons/svg/dice-target.svg","actorIds":[]}
