{"_id":"CZZcV1nHIsStNfhz","name":"remove all effects","permission":{"default":0,"devnIbfBHb74U9Zv":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.QozX9UXKaJTCc8NY"}},"scope":"global","command":"// Remove all active effects from the selected token\nlet removeList = token?.actor?.effects.map(e=>e.id)\ntoken?.actor?.deleteEmbeddedEntity(\"ActiveEffect\", removeList)","author":"devnIbfBHb74U9Zv","img":"icons/svg/dice-target.svg","actorIds":[]}
{"name":"Whisper","permission":{"default":0,"devnIbfBHb74U9Zv":3},"type":"script","flags":{},"scope":"global","command":"ChatMessage.create({\r\n    content: args[0],\r\n    whisper: ChatMessage.getWhisperIDs(\"GM\")\r\n})","author":"devnIbfBHb74U9Zv","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"IJDEUyvtXOG6dPGK"}
{"_id":"OLllXCNbZIWXRHA0","name":"Summon","permission":{"default":0,"devnIbfBHb74U9Zv":3},"type":"script","flags":{"furnace":{"gmexecute":true,"runAsGM":true},"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.xRxHaaEAyHItfyNH"}},"scope":"global","command":"// call with \n// macro.execute CUSTOM Summon @token @unique Ghoul 100 100\n// Ghoul is the token to be summoned.\nlet caster = canvas.tokens.get(args[1]);\nlet unique = args[2];\nif (!caster) {\nChatMessage.create({content: \"No caster token selected\"})\nreturn\n}\nlet casterActor = token.actor;\nif (args[0] === \"on\") { // do the summons\n  let summoned = game.actors.getName(args[3]);\n  console.log(\"Summoned is \", summoned, args[3])\n  let tokenData = {x: token.center.x + args[4], y: token.center.y + args[5], hidden:false, disposition: 1};\n  tokenData = mergeObject(summoned.data.token, tokenData, {inplace: false});\n  let summonedToken = await canvas.scene.createEmbeddedEntity(\"Token\", tokenData)\n  await caster.setFlag(\"dynamiceffects\", unique, summonedToken._id)\n} else { // the off case\n  let summonedId = await caster.getFlag(\"dynamiceffects\", unique);\n  if (summonedId) {\n    await canvas.scene.deleteEmbeddedEntity(\"Token\", summonedId);\n    await caster.unsetFlag(\"dynamiceffects\", unique);\n  }\n}","author":"devnIbfBHb74U9Zv","img":"icons/svg/dice-target.svg","actorIds":[]}
{"_id":"Rwf9EIPv4vd4j0GE","name":"remove all temporary effects","permission":{"default":0,"devnIbfBHb74U9Zv":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.QozX9UXKaJTCc8NY"}},"scope":"global","command":"// Remove all temporary effects from the selected token\nlet removeList = token?.actor?.temporaryEffects.map(e=>e.id)\ntoken?.actor?.deleteEmbeddedEntity(\"ActiveEffect\", removeList)","author":"devnIbfBHb74U9Zv","img":"icons/svg/dice-target.svg","actorIds":[]}
{"name":"deleteToken","permission":{"default":0,"devnIbfBHb74U9Zv":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true}},"scope":"global","command":"let startScene = game.scenes.get(args[0]);\r\nif (!startScene || !args[1]) return;\r\nawait startScene.deleteEmbeddedEntity(\"Token\", args[1]);","author":"devnIbfBHb74U9Zv","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"b7arWwNLWNoQaVBD"}
{"_id":"oWh4uTrugSY4uEdi","name":"Invisible","permission":{"default":0,"devnIbfBHb74U9Zv":3},"type":"script","flags":{"furnace":{"gmexecute":true,"runAsGM":true},"combat-utility-belt":{"macroTrigger":""}},"scope":"global","command":"//#args 0=tokenId 1 = sceneId\r\nlet hide = args[0] === \"on\";\r\nscene.updateEmbeddedEntity(\"Token\", {\"_id\": args[1], \"hidden\": hide})","author":"devnIbfBHb74U9Zv","img":"icons/svg/dice-target.svg","actorIds":[]}
{"name":"Active Effects","permission":{"default":0,"devnIbfBHb74U9Zv":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.V3BxEbwh7WL2VXsI"}},"scope":"global","command":"if (!canvas.tokens.controlled[0]?.actor) {\nui.notifications.warn(\"No Token selected\");\nreturn;\n}\nnew DAE.ActiveEffects(canvas.tokens.controlled[0].actor).render(true)","author":"devnIbfBHb74U9Zv","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"sRiep07y41LaZNP2"}
{"name":"createToken","permission":{"default":0,"devnIbfBHb74U9Zv":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true}},"scope":"global","command":"let targetScene = game.scenes.get(args[0])\r\nif (!targetScene || !args[3]) return;\r\nawait targetScene.createEmbeddedEntity('Token', mergeObject(duplicate(args[3]), { \"x\": args[1] || 0, \"y\": args[2] || 0}, { overwrite: true, inplace: true }));","author":"devnIbfBHb74U9Zv","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"xTQOMuRlZJIE8C6X"}
{"name":"TeleportToToken","type":"script","author":"g4WGw0lAZ3nIhapn","img":"icons/svg/dice-target.svg","scope":"global","command":"let targetScene;\nif (!token) return ChatMessage.create({content: `No token selected`})\nfor (let scene of game.scenes.entities) {\n  var targetToken = scene.data.tokens.find(t => t.name === args[0]);\n  if (targetToken) {\n   targetScene = scene;\n   break;\n  }\n}\nif (!targetScene) return ChatMessage.create({content: `Could not find token ${args[0]} in any scene`});\nCanvasAnimation.terminateAnimation(`Token.${token.id}.animateMovement`);\n\nlet x = targetToken.data.x + targetScene.data.grid * (args[1] || 0);\nlet y = targetToken.data.y + targetScene.data.grid * (args[2] || 0);\nlet startScene = canvas.scene.id;\n\nawait game.macros.getName(\"createToken\")?.execute(targetScene.id, x, y, token.data)\nif(targetScene.id === startScene) {\n  await game.macros.getName(\"deleteToken\")?.execute(startScene, token.id)\n} else {\n  Hooks.once(\"canvasReady\", () => {\n    game.macros.getName(\"deleteToken\")?.execute(startScene, token.id)\n  })\n  await targetScene.view();\n}\ncanvas.pan(x,y)\n// This macro is intended to be used with Trigger Happy and requires Furnace advanced macros to run.\n// Sample trigger happy setup.\n// You must place two tokens on some scene(s). They must have unqiue name (not actor name, but token name).\n// @Token[Target1] @Trigger[move capture] @ChatMessage[/TeleportToToken Target2 -1 1]\n// The sample will, when a player moves their token over the target token \"Target1\", \n// delete the players token and recreate it next to the token named Target2\n// For the example above the players token will be placed 1 grid unit to the left of Target2 and one grid unit down from Target2","folder":null,"sort":0,"permission":{"default":0,"g4WGw0lAZ3nIhapn":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Compendium.dae.sample-macros.xuE9JiWntRzjeBBr"},"advanced-macros":{"runAsGM":false}},"_id":"yLkADmtTr5qkiQj4"}
