{"version":3,"file":"lib-wrapper.js","sources":["../src/libWrapper-consts.js","../src/utils/libWrapper-misc.js","../src/utils/libWrapper-polyfill.js","../src/ui/libWrapper-notifications.js","../src/utils/libWrapper-errors.js","../src/ui/libWrapper-stats.js","../src/lib/libWrapper-wrapper.js","../src/ui/libWrapper-settings.js","../src/lib/libWrapper-api.js"],"sourcesContent":["// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright © 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\n//*********************\n// Module information\nexport const MODULE_ID    = 'lib-wrapper';\nexport const MODULE_TITLE = 'libWrapper';\n\n\n//*********************\n// Semantic versioning\n\nexport let VERSION        = '';\nexport let MAJOR_VERSION  = -1;\nexport let MINOR_VERSION  = -1;\nexport let PATCH_VERSION  = -1;\nexport let SUFFIX_VERSION = -1;\nexport let META_VERSION   = '';\n\nexport function parse_manifest_version() {\n\tif(VERSION)\n\t\treturn;\n\n\tconst version_str = game.modules?.get(MODULE_ID)?.data?.version;\n\tif(!version_str)\n\t\tthrow `libWrapper: Unable to find version string inside 'game.modules'`;\n\n\tconst match = version_str.match(/^([0-9]+)\\.([0-9]+)\\.([0-9]+).([0-9]+)(.*)$/i);\n\tif(!match)\n\t\tthrow `libWrapper: Unable to parse version string '${version_str}'`\n\n\tVERSION        = match[0];\n\tMAJOR_VERSION  = parseInt(match[1]);\n\tMINOR_VERSION  = parseInt(match[2]);\n\tPATCH_VERSION  = parseInt(match[3]);\n\tSUFFIX_VERSION = parseInt(match[4]);\n\tMETA_VERSION   = match[5];\n}\n\n\n//*********************\n// Miscellaneous definitions\nexport const IS_UNITTEST = (typeof Game === 'undefined');\nexport const PROPERTIES_CONFIGURABLE = IS_UNITTEST ? true : false;\n\n\n//*********************\n// Debug\nexport let DEBUG = false;\nexport function setDebug(new_debug) { DEBUG = new_debug; }\n\n\n//*********************\n// TYPES\nexport const TYPES_LIST = ['WRAPPER', 'MIXED', 'OVERRIDE'];\nObject.freeze(TYPES_LIST);\n\nexport const TYPES = {\n\tWRAPPER : 1,\n\tMIXED   : 2,\n\tOVERRIDE: 3\n};\nObject.freeze(TYPES);\n\nexport const TYPES_REVERSE = {};\nfor(let key in TYPES) {\n\tTYPES_REVERSE[TYPES[key]] = key;\n}\nObject.freeze(TYPES_REVERSE);\n\n\n//*********************\n// PERFORMANCE MODES\nexport const PERF_MODES_LIST = ['STANDARD', 'AUTO', 'FAST'];\nObject.freeze(PERF_MODES_LIST);\n\nexport const PERF_MODES = {\n\tSTANDARD: 1,\n\tAUTO    : 2,\n\tFAST    : 3\n};\nObject.freeze(PERF_MODES);\n\nexport const PERF_MODES_REVERSE = {};\nfor(let key in PERF_MODES) {\n\tPERF_MODES_REVERSE[PERF_MODES[key]] = key;\n}\nObject.freeze(PERF_MODES_REVERSE);","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright © 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {IS_UNITTEST, MODULE_ID} from '../consts.js';\n\n\n// Find currently executing module name (that is not libWrapper)\nexport function get_current_module_name(stack_trace=undefined) {\n\tif(stack_trace === undefined) {\n\t\tconst old_stack_limit = Error.stackTraceLimit;\n\t\tError.stackTraceLimit = Infinity;\n\t\tstack_trace = Error().stack;\n\t\tError.stackTraceLimit = old_stack_limit;\n\n\t\tif(!stack_trace)\n\t\t\treturn null;\n\t}\n\n\tconst matches = stack_trace.matchAll(/(?<=\\/)(modules|systems)\\/(.+?)(?=\\/)/ig);\n\tif(!matches)\n\t\treturn null;\n\n\tfor(let match of matches) {\n\t\tconst type = match[1];\n\t\tconst name = match[2];\n\n\t\tif(type === 'systems') {\n\t\t\tif(name == game.data.system.id)\n\t\t\t\treturn name;\n\t\t}\n\t\telse if(type === 'modules') {\n\t\t\tif(!name || name == MODULE_ID || !game?.modules?.has(name))\n\t\t\t\tcontinue;\n\n\t\t\treturn name;\n\t\t}\n\t\telse {\n\t\t\tconsole.error(\"invalid type\");\n\t\t\tthrow new (globalThis.libWrapper?.LibWrapperInternalError ?? Error)(`Invalid type: ${type}`);\n\t\t}\n\t}\n\n\treturn null;\n}\n\n\n// HACK: The browser doesn't expose all global variables (e.g. 'Game') inside globalThis, but it does to an eval\n// We declare this helper here so that the eval does not have access to the anonymous function scope\nconst __eval_copy = eval;\nexport function get_global_variable(varname) {\n\ttry {\n\t\treturn globalThis[varname] ?? __eval_copy(varname);\n\t}\n\tcatch (e) {\n\t\treturn undefined;\n\t}\n}\n\n\n// Change the name of a function object\n// Note: This is extremely hacky, and only works in some browsers, and only sometimes (usually when a function is anonymous)\nexport function set_function_name(fn, name) {\n\ttry {\n\t\t// Only supported by Firefox: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\n\t\tfn.displayName = name;\n\n\t\t// Hack: Try and over-ride the 'name' property\n\t\tObject.defineProperty(fn, 'name', {\n\t\t\tvalue: name,\n\t\t\twritable: false,\n\t\t\tenumerable: false,\n\t\t\tconfigurable: true\n\t\t});\n\t}\n\tcatch (e) {\n\t\t// disregard unless this is a unit test - probably unsupported by browser\n\t\tif(IS_UNITTEST)\n\t\t\tthrow e;\n\t}\n}\n\n// Decorate name\nexport function decorate_name(name, suffix='') {\n\tif(suffix !== '')\n\t\treturn `🎁${name}#${suffix}`;\n\telse\n\t\treturn `🎁${name}`;\n}\n\n// Decorate the name of all functions of a given class\n// Note: This is extremely hacky, and only works in some browsers, and only sometimes (usually when a function is anonymous)\nexport function decorate_class_function_names(klass) {\n\tconst props = Object.getOwnPropertyNames(klass);\n\tprops.push(...Object.getOwnPropertySymbols(klass))\n\n\tfor(const prop of props) {\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(klass, prop);\n\n\t\tif(typeof descriptor.value === 'function')\n\t\t\tset_function_name(descriptor.value, decorate_name(prop));\n\t\tif(typeof descriptor.get === 'function')\n\t\t\tset_function_name(descriptor.get, decorate_name(prop, 'getter'));\n\t\tif(typeof descriptor.set === 'function')\n\t\t\tset_function_name(descriptor.set, decorate_name(prop, 'setter'));\n\t}\n\n\tif(klass.prototype)\n\t\tdecorate_class_function_names(klass.prototype);\n}\n\n\n// Shared list of active wrappers\nexport const WRAPPERS = new Set();","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright © 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\n\n// Helper to throw errors\n// This is so we can avoid importing errors.js, to avoid a import loop\nfunction throw_error(message) {\n    if(globalThis.libWrapper)\n        throw new globalThis.libWrapper.LibWrapperInternalError(message);\n    else\n        throw new Error(message);\n}\n\n\n// game.user.data polyfill, so it can be used before 'ready'\nexport const game_user_data = function(return_null=false) {\n    // Try game.user.data first\n    const orig_game_user_data = game?.user?.data;\n    if(orig_game_user_data)\n        return orig_game_user_data;\n\n    // Grab the user ID\n    const userid = game.userId ?? game.data.userId;\n    if(!userid) {\n        if(return_null)\n            return null;\n        throw_error(\"Unable to obtain the current user ID\");\n    }\n\n    // Find user in game.data.users\n    const user_data = game.data.users.find((x) => { return x._id == userid });\n    if(!user_data) {\n        if(return_null)\n            return null;\n        throw_error(\"Unable to obtain the current user data object\");\n    }\n\n    // Done\n    return user_data;\n}\n\n// game.user.can polyfill, so it can be used before 'ready'\nexport const game_user_can = function(action, return_null=false) {\n    // Try game.user.can first\n    const orig_game_user_can = game?.user?.can;\n    if(orig_game_user_can)\n        return orig_game_user_can(action);\n\n    // Obtain game.user.data\n    const user_data = game_user_data(return_null);\n    if(!user_data)\n        return null;\n\n    // Check if user is GM\n    if(user_data.role === 4)\n        return true;\n\n    // Check if the action is in the per-user permissions\n    if(action in user_data.permissions) return user_data.permissions[action];\n\n    // Otherwise, check the role's permissions\n    const game_permissions_str = game.data.settings.find((x) => { return x.key === 'core.permissions'});\n    if(game_permissions_str?.value) {\n        const game_permissions = JSON.parse(game_permissions_str.value);\n\n        const rolePerms = game_permissions[action];\n        if(rolePerms && rolePerms.includes(user_data.role))\n            return true;\n    }\n\n    return false;\n}\n\n// game.user.isGM polyfill, so it can be used before 'ready'\nexport const game_user_isGM = function(return_null=false) {\n    // Try game.user.isGM first\n    const orig_game_user_isGM = game?.user?.isGM;\n    if(orig_game_user_isGM !== undefined)\n        return orig_game_user_isGM;\n\n    // Obtain game.user.data\n    const user_data = game_user_data(return_null);\n    if(!user_data)\n        return null;\n\n    // Done\n    return user_data.role === 4;\n}","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright © 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {MODULE_ID} from '../consts.js';\nimport {decorate_class_function_names} from '../utils/misc.js';\nimport {game_user_isGM} from '../utils/polyfill.js'\n\n\n// Notify user\nexport class LibWrapperNotifications {\n\tstatic init() {\n\t}\n\n\tstatic get ui_notifications_enabled() {\n\t\t// Make sure we don't accidentally throw a second time, while handling what might be another exception\n\t\ttry {\n\t\t\tif(game_user_isGM()) {\n\t\t\t\tif(!game?.settings?.get(MODULE_ID, 'notify-issues-gm'))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(!game?.settings?.get(MODULE_ID, 'notify-issues-player'))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tcatch(e) {\n\t\t\t// We swallow the new error, and assume we want to display errors\n\t\t\tconsole.error(\"libWrapper: Could not decide whether to show notifications or not. Defaulting to 'yes'.\\n\", e);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tstatic ui(msg, fn='error') {\n\t\tif(!this.ui_notifications_enabled)\n\t\t\treturn;\n\n\t\t// Check if we've already notified the user of this\n\t\tif(!this.NOTIFICATION_SET)\n\t\t\tthis.NOTIFICATION_SET = new Set();\n\t\telse if(this.NOTIFICATION_SET.has(msg))\n\t\t\treturn;\n\n\t\tthis.NOTIFICATION_SET.add(msg);\n\n\t\t// Wait until 'ready' if the error occurs early during load\n\t\tconst do_notify = (is_hook) => {\n\t\t\t// Notify - ensure that ui.notifications exists as if an error occurs too early it might not be defined yet\n\t\t\tlet notify = globalThis?.ui?.notifications;\n\t\t\tif(notify)\n\t\t\t\tnotify[fn].call(notify, `libWrapper: ${msg}`, {permanent: fn == 'error'});\n\t\t\telse if(!is_hook && !game.ready) {\n\t\t\t\tHooks.once('ready', do_notify, true);\n\t\t\t}\n\t\t};\n\t\tdo_notify(false);\n\t}\n\n\n\tstatic console_ui(ui_msg, console_msg, fn='error', ...vargs) {\n\t\tconsole[fn].call(console, `libWrapper: ${ui_msg}\\n${console_msg}`, ...vargs);\n\n\t\tthis.ui(`${ui_msg} (See JS console)`, fn);\n\t}\n\n\n\tstatic conflict(module, other, potential, console_msg) {\n\t\tif(!module)\n\t\t\tmodule = 'an unknown module';\n\t\telse if(module.startsWith(\"\\u00AB\") && module.endsWith(\"\\u00BB\"))\n\t\t\tmodule = `module ${module}`;\n\t\telse\n\t\t\tmodule = `module '${module}'`;\n\n\t\tif(Array.isArray(other))\n\t\t\tother = (other.length > 1) ? `[${other.join(', ')}]` : `'${other[0]}'`\n\t\telse\n\t\t\tother = `'${other}'`;\n\n\t\tthis.console_ui(\n\t\t\tpotential ? `Potential conflict detected between ${module} and ${other}.` : `Conflict detected between ${module} and ${other}.`,\n\t\t\tconsole_msg,\n\t\t\tpotential ? 'warn' : 'error'\n\t\t);\n\t}\n}\ndecorate_class_function_names(LibWrapperNotifications);","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright © 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {IS_UNITTEST, MODULE_ID} from '../consts.js';\nimport {get_current_module_name, decorate_name} from './misc.js';\nimport {LibWrapperNotifications} from '../ui/notifications.js';\n\n\n// Custom libWrapper Error\nexport class LibWrapperError extends Error {\n\tconstructor(ui_msg, console_msg, notification_fn, ...args) {\n\t\tsuper(`${ui_msg}\\n${console_msg}`, ...args);\n\n\t\t// Maintains proper stack trace for where our error was thrown (only available on V8)\n\t\tif (Error.captureStackTrace)\n\t\t\tError.captureStackTrace(this, this.constructor);\n\t\tthis.name = this.constructor.name;\n\n\t\t// Store arguments\n\t\tthis.ui_msg = ui_msg;\n\t\tthis.console_msg = console_msg;\n\t\tthis.notification_fn = notification_fn ?? 'error';\n\t}\n\n\t/**\n\t * Called if this error is unhandled\n\t */\n\tonUnhandled() {\n\t}\n}\nObject.freeze(LibWrapperError);\n\n// Internal error\nexport class LibWrapperInternalError extends LibWrapperError {\n\tconstructor(console_msg, ...args) {\n\t\tconst module = get_current_module_name();\n\n\t\tsuper(\n\t\t\tmodule ? `Internal error detected, possibly related to '${module}'.`\n\t\t\t       : 'Internal error detected.'\n\t\t\t,\n\t\t\tconsole_msg,\n\t\t\t'error',\n\t\t\t...args\n\t\t);\n\n\t\t// Custom debugging information\n\t\tthis.module = module;\n\t}\n}\nObject.freeze(LibWrapperInternalError);\n\n// Error caused by a module\nexport class LibWrapperModuleError extends LibWrapperError {\n\tconstructor(console_msg, module, ...args) {\n\t\tlet possibly = false;\n\n\t\tif(!module) {\n\t\t\tmodule = module ?? get_current_module_name();\n\t\t\tpossibly = true;\n\t\t}\n\n\t\tsuper(\n\t\t\t(module ? (\n\t\t\t\tpossibly ? `Error detected, possibly in '${module}'.` :\n\t\t\t\t           `Error detected in '${module}'.`\n\t\t\t\t) :\n\t\t\t\t'Error detected in unknown module.'\n\t\t\t),\n\t\t\tconsole_msg,\n\t\t\t'error',\n\t\t\t...args\n\t\t);\n\n\t\t// Custom debugging information\n\t\tthis.module = module;\n\t}\n}\nObject.freeze(LibWrapperModuleError);\n\n// Already Overridden Error\nexport class LibWrapperAlreadyOverriddenError extends LibWrapperError {\n\tconstructor(module, conflicting_module, target, ...args) {\n\t\tsuper(\n\t\t\t`Conflict detected between '${module}' and '${conflicting_module}'.`,\n\t\t\t`Failed to wrap '${target}' for '${module}' with type OVERRIDE. A OVERRIDE wrapper for the same method has already been registered by '${conflicting_module}'.`,\n\t\t\t'error',\n\t\t\t...args\n\t\t);\n\n\t\t// Custom debugging information\n\t\tthis.module = module;\n\t\tthis.conflicting_module = conflicting_module;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * Returns the title of the module that caused the wrapping conflict\n\t */\n\tget conflicting_module_title() {\n\t\treturn game.modules.get(this.conflicting_module)?.data?.title;\n\t}\n\n\t/**\n\t * Called if this error is unhandled\n\t */\n\tonUnhandled() {\n\t\tsuper.onUnhandled();\n\n\t\tLibWrapperStats.register_conflict(this.module, this.conflicting_module, this.target);\n\t}\n}\nObject.freeze(LibWrapperAlreadyOverriddenError);\n\n// Invalid Wrapper Chain Error\nexport class LibWrapperInvalidWrapperChainError extends LibWrapperError {\n\tconstructor(wrapper, module, console_msg, ...args) {\n\t\tlet user_msg = (module) ?\n\t\t\t`Error detected in '${module}'.`:\n\t\t\t`Error detected in wrapper '${wrapper.name}'.`\n\t\t;\n\n\t\tsuper(\n\t\t\tuser_msg,\n\t\t\tconsole_msg,\n\t\t\t'error',\n\t\t\t...args\n\t\t);\n\n\t\t// Custom debugging information\n\t\tthis._wrapper = wrapper;\n\t\tthis.module = module;\n\t}\n\n\tget wrapper_name() {\n\t\treturn this._wrapper.name;\n\t}\n}\nObject.freeze(LibWrapperInvalidWrapperChainError);\n\n\n\n// Error listeners for unhandled exceptions\nconst onUnhandledError = function(e) {\n\t// We first check whether this exception is an instance of LibWrapperError.\n\t// If not, we will check if it was caused by one. Otherwise, we do nothing.\n\twhile(!(e instanceof LibWrapperError)) {\n\t\tif(e.reason === undefined)\n\t\t\treturn;\n\n\t\te = e.reason;\n\t}\n\n\t// This is a LibWrapperError exception, and we need to handle it\n\ttry {\n\t\t// Notify user of the issue\n\t\tif(e.ui_msg && e.notification_fn)\n\t\t\tLibWrapperNotifications.ui(`${e.ui_msg} (See JS console)`, e.notification_fn);\n\n\t\t// Trigger 'onUnhandled'\n\t\tif(e.onUnhandled)\n\t\t\te.onUnhandled.apply(e);\n\t}\n\tcatch (e) {\n\t\tconsole.warn('libWrapper: Exception thrown while processing unhandled libWrapper Exception.', e);\n\t}\n}\n\nexport const init_error_listeners = function() {\n\t// Do nothing inside unit tests\n\tif(IS_UNITTEST)\n\t\treturn;\n\t\n\t// Javascript native unhandled exception listeners\n\tglobalThis.addEventListener('error', onUnhandledError);\n\tglobalThis.addEventListener('unhandledrejection', onUnhandledError);\n\n\t// Wrap Hooks._call to intercept unhandled exceptions during hooks\n\ttry {\n\t\tlibWrapper.register('lib-wrapper', 'Hooks._call', function(wrapped, ...args) {\n\t\t\t// Replace fn with a custom function containing an error handler\n\t\t\tconst fn = args[1];\n\n\t\t\tconst fn_nm = `Hooks._call#hook=${args[0]}`;\n\t\t\tconst obj = {\n\t\t\t\t[fn_nm]: function(...hook_args) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn fn.apply(this, hook_args);\n\t\t\t\t\t}\n\t\t\t\t\tcatch(e) {\n\t\t\t\t\t\tonUnhandledError(e);\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\targs[1] = obj[fn_nm];\n\n\t\t\t// Because we changed the 'fn', we need to manually check for this\n\t\t\tif(this._once.includes(fn))\n\t\t\t\tthis.off(args[0], fn);\n\n\t\t\t// Done\n\t\t\treturn wrapped(...args);\n\t\t}, 'WRAPPER', {perf_mode: 'FAST'});\n\t}\n\tcatch(e) {\n\t\t// Handle a possible error gracefully\n\t\tLibWrapperNotifications.console_ui(\n\t\t\t\"A non-critical error occurred while initializing libWrapper.\",\n\t\t\t\"Could not setup 'Hooks._call' wrapper.\\n\",\n\t\t\t'warn',\n\t\t\te\n\t\t);\n\t}\n}","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright © 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {MODULE_ID, IS_UNITTEST} from '../consts.js';\nimport {LibWrapperNotifications} from './notifications.js';\nimport {game_user_can} from '../utils/polyfill.js'\n\nexport class LibWrapperStats {\n\tstatic _collect_stats() {\n\t\t// We do this in a try-catch in case future Foundry versions break this code, it won't completely break libWrapper\n\t\ttry {\n\t\t\treturn game_user_can('SETTINGS_MODIFY');\n\t\t}\n\t\tcatch(e) {\n\t\t\tif(IS_UNITTEST)\n\t\t\t\tthrow e;\n\n\t\t\tLibWrapperNotifications.console_ui(\n\t\t\t\t\"A non-critical error occurred while initializing libWrapper.\",\n\t\t\t\t\"Could not read user permissions during initialization.\\n\",\n\t\t\t\t'warn',\n\t\t\t\te\n\t\t\t);\n\n\t\t\t// Default to 'true' on error\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tstatic init() {\n\t\tthis.collect_stats = this._collect_stats();\n\n\t\t// If we got this far, we're going to be collecting statistics, so initialize the containers\n\t\tif(!this.collect_stats)\n\t\t\treturn;\n\n\t\tthis.MODULES   = new Set();\n\t\tthis.CONFLICTS = new Map();\n\t}\n\n\tstatic register_module(module) {\n\t\tif(!this.collect_stats)\n\t\t\treturn;\n\n\t\tif(module == MODULE_ID)\n\t\t\treturn;\n\n\t\tthis.MODULES.add(module);\n\t}\n\n\tstatic register_conflict(module, other, target) {\n\t\tif(!this.collect_stats)\n\t\t\treturn;\n\n\t\tif(Array.isArray(other)) {\n\t\t\tlet notify = false;\n\t\t\tother.forEach((m) => {\n\t\t\t\tnotify |= LibWrapperStats.register_conflict(module, m, target);\n\t\t\t});\n\t\t\treturn notify;\n\t\t}\n\n\t\t// We first notify everyone that an override was just lost. This hook being handled will prevent us from registering the module conflict\n\t\tif(Hooks.call('libWrapper.ConflictDetected', module, other, target) === false) {\n\t\t\tconsole.debug(`Conflict between '${module}' and '${other}' over '${target}' ignored, as 'libWrapper.ConflictDetected' hook returned false.`);\n\t\t\treturn false;\n\t\t}\n\n\t\t// We now register the conflict\n\t\tconst key = `${module}/${other}`;\n\n\t\tlet data = this.CONFLICTS.get(key);\n\t\tif(!data) {\n\t\t\tdata = {\n\t\t\t\tcount: 0,\n\t\t\t\tmodule: module,\n\t\t\t\tother: other,\n\t\t\t\ttargets: new Map()\n\t\t\t};\n\t\t\tthis.CONFLICTS.set(key, data);\n\t\t}\n\n\t\tdata.count++;\n\t\tdata.targets.set(target, (data.targets.get(target) ?? 0) + 1);\n\n\t\t// Done\n\t\treturn true;\n\t}\n\n\tstatic get conflicts() {\n\t\treturn this.CONFLICTS;\n\t}\n\n\tstatic get modules() {\n\t\treturn this.MODULES;\n\t}\n}","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright © 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {MODULE_ID, PROPERTIES_CONFIGURABLE, TYPES, DEBUG, PERF_MODES} from '../consts.js';\nimport {get_current_module_name, decorate_name, set_function_name, decorate_class_function_names} from '../utils/misc.js';\nimport {LibWrapperInternalError, LibWrapperModuleError, LibWrapperInvalidWrapperChainError} from '../utils/errors.js';\nimport {LibWrapperNotifications} from '../ui/notifications.js';\nimport {LibWrapperStats} from '../ui/stats.js';\n\n\n// Wrapper class - this class is responsible for the actual wrapping\nexport class Wrapper {\n\t// Properties\n\tget name() {\n\t\treturn this.names[0];\n\t}\n\n\n\t// Callstack\n\t_callstack_name(nm, arg1=this.name) {\n\t\treturn decorate_name(arg1, nm);\n\t}\n\n\n\n\t// Constructor\n\tconstructor (obj, fn_name, name=undefined, module=undefined) {\n\t\t// Basic instance variables\n\t\tthis.fn_name = fn_name;\n\t\tthis.object  = obj;\n\n\t\t// Calidate whether we can wrap this object\n\t\tlet descriptor = Object.getOwnPropertyDescriptor(obj, fn_name);\n\n\t\tif(descriptor) {\n\t\t\tif(descriptor.get?._lib_wrapper) {\n\t\t\t\tlet wrapper = descriptor.get?._lib_wrapper;\n\n\t\t\t\tif(name && !wrapper.names.indexOf(name))\n\t\t\t\t\twrapper.names.push(name);\n\n\t\t\t\tif(wrapper && wrapper instanceof this.constructor)\n\t\t\t\t\treturn wrapper;\n\t\t\t}\n\n\t\t\tif(descriptor.configurable === false) {\n\t\t\t\tthrow new LibWrapperModuleError(`libWrapper: '${name}' cannot be wrapped, the corresponding descriptor has 'configurable=false'.`, module);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(descriptor.get) {\n\t\t\t\t\tthis.is_property = true;\n\t\t\t\t\tthis._wrapped_getter = descriptor.get;\n\t\t\t\t\tthis._wrapped_setter = descriptor.set;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.is_property = false;\n\t\t\t\t\tthis._wrapped = descriptor.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdescriptor = this._get_inherited_descriptor();\n\n\t\t\tif(!descriptor)\n\t\t\t\tthrow new LibWrapperModuleError(`libWrapper: Can't wrap '${name}', target does not exist or could not be found.`, module);\n\n\t\t\tconst wrapper = descriptor.get?._lib_wrapper;\n\n\t\t\tif(wrapper) {\n\t\t\t\tthis.is_property = wrapper.is_property;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(descriptor.get ?? descriptor.set)\n\t\t\t\t\tthis.is_property = true;\n\t\t\t\telse\n\t\t\t\t\tthis.is_property = false;\n\t\t\t}\n\t\t}\n\n\t\t// Setup instance variables\n\t\tthis.names   = [];\n\n\t\tthis.getter_data = [];\n\t\tthis._getter_data_id = 0;\n\t\tif(this.is_property) {\n\t\t\tthis.setter_data = [];\n\t\t\tthis._setter_data_id = 0;\n\t\t}\n\n\t\tthis.active  = false;\n\n\t\tthis._outstanding_wrappers = 0;\n\t\tthis._warned_detected_classic_wrapper = false;\n\t\tthis._current_handler_id = 0;\n\n\t\tif(!this.is_property) {\n\t\t\tthis._pending_wrapped_calls = [];\n\t\t\tthis._pending_wrapped_calls_cnt = 0;\n\t\t}\n\n\t\tthis.update_use_static_dispatch();\n\n\t\t// Add name\n\t\tif(!name)\n\t\t\tname = fn_name;\n\n\t\tif(this.names.indexOf(name) == -1)\n\t\t\tthis.names.push(name);\n\n\t\t// Do actual wrapping\n\t\tthis._wrap();\n\t}\n\n\n\t// Handler\n\t_get_handler() {\n\t\t// Return the cached handler, if it is still valid\n\t\tconst handler_id = this._current_handler_id;\n\t\tif(handler_id === this._cached_handler_id)\n\t\t\treturn this._cached_handler;\n\n\t\t// Create a handler function\n\t\tconst _this = this;\n\t\tconst handler_nm = this._callstack_name(handler_id);\n\t\tconst wrapped = this._wrapped;\n\n\t\t// We use a trick here to be able to convince the browser to name the method the way we want it\n\t\tconst obj = {\n\t\t\t[handler_nm]: function(...args) {\n\t\t\t\tconst is_static_dispatch = _this.use_static_dispatch;\n\n\t\t\t\t// Check if we should skip wrappers\n\t\t\t\tif(_this.should_skip_wrappers(this, handler_id, is_static_dispatch)) {\n\t\t\t\t\treturn _this.get_wrapped(this, false, wrapped).apply(this, args);\n\t\t\t\t}\n\t\t\t\t// Otherwise, trigger the wrapper dispatch chain\n\t\t\t\telse {\n\t\t\t\t\t// Trigger the desired dispatch chain - dynamic or static\n\t\t\t\t\tif(is_static_dispatch)\n\t\t\t\t\t\treturn _this.get_static_dispatch_chain(this).apply(this, args);\n\t\t\t\t\telse\n\t\t\t\t\t\treturn _this.call_wrapper(null, this, ...args);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t['toString']: function () {\n\t\t\t\treturn _this.get_wrapped(this).toString();\n\t\t\t}\n\t\t};\n\t\tconst handler = obj[handler_nm];\n\t\thandler.toString = obj['toString'];\n\n\t\t// Cache handler\n\t\tthis._cached_handler = handler;\n\t\tthis._cached_handler_id = handler_id;\n\n\t\t// Done\n\t\treturn handler;\n\t}\n\n\tget_static_dispatch_chain(obj) {\n\t\tconst fn_data_id = this._getter_data_id;\n\t\tlet dispatch_chain = null;\n\n\t\t// Use the cached dispatch chain, if still valid\n\t\tif(fn_data_id === this._cached_static_dispatch_chain_id && obj === this._cached_static_dispatch_chain_obj) {\n\t\t\tdispatch_chain = this._cached_static_dispatch_chain;\n\t\t}\n\t\t// Otherwise, generate a new static dispatch chain\n\t\telse {\n\t\t\tconst _init_dispatch_chain = () => {\n\t\t\t\tdispatch_chain = this.call_wrapped.bind(this, /*state=*/ null, obj);\n\t\t\t};\n\n\t\t\t// Walk wrappers in reverse order\n\t\t\tconst fn_data = this.get_fn_data(false);\n\t\t\tfor(let i = fn_data.length-1; i >= 0; i--) {\n\t\t\t\tconst data = fn_data[i];\n\t\t\t\tconst fn = data.fn;\n\n\t\t\t\t// OVERRIDE type will usually not continue the chain\n\t\t\t\tif(!data.chain)\n\t\t\t\t\tdispatch_chain = fn.bind(obj);\n\t\t\t\t// Else, bind the wrapper\n\t\t\t\telse {\n\t\t\t\t\tif(!dispatch_chain)\n\t\t\t\t\t\t_init_dispatch_chain();\n\n\t\t\t\t\tdispatch_chain = fn.bind(obj, dispatch_chain);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(!dispatch_chain)\n\t\t\t\t_init_dispatch_chain();\n\n\t\t\t// Cache static dispatch chain\n\t\t\tthis._cached_static_dispatch_chain_obj = obj;\n\t\t\tthis._cached_static_dispatch_chain_id  = fn_data_id;\n\t\t\tthis._cached_static_dispatch_chain     = dispatch_chain;\n\t\t}\n\n\t\t// Done\n\t\treturn dispatch_chain;\n\t}\n\n\tshould_skip_wrappers(obj, handler_id, is_static_dispatch) {\n\t\t// We don't need to skip wrappers if the handler is still valid\n\t\tif(handler_id == this._current_handler_id)\n\t\t\treturn false;\n\n\t\t// Sanity check\n\t\tif(handler_id > this._current_handler_id)\n\t\t\tthrow new LibWrapperInternalError(`Unreachable: handler_id=${handler_id} > this._current_handler_id=${this._current_handler_id}`);\n\n\t\t// Find pending calls that match this object - if any is found, skip wrappers\n\t\tif(!this.is_property) {\n\t\t\t// Check if there's any pending wrapped calls\n\t\t\tif(this._pending_wrapped_calls_cnt <= 0)\n\t\t\t\treturn false;\n\n\t\t\t// Check if our object exists in the pending wrapped calls\n\t\t\tif(!is_static_dispatch) {\n\t\t\t\tconst pend_i = this._pending_wrapped_calls.indexOf(obj);\n\t\t\t\tif(pend_i < 0)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tskip_existing_handlers() {\n\t\tthis._current_handler_id++;\n\t}\n\n\t_calc_use_static_dispatch() {\n\t\t// Do all the wrappers in fn_data specify the same, explicit, performance mode wish?\n\t\tconst fn_data = this.get_fn_data(false);\n\n\t\tlet perf_mode = undefined;\n\t\tfor(const data of fn_data) {\n\t\t\tif(!data.perf_mode)\n\t\t\t\tcontinue;\n\n\t\t\tif(perf_mode === undefined) {\n\t\t\t\tperf_mode = data.perf_mode;\n\t\t\t}\n\t\t\telse if(perf_mode !== data.perf_mode) {\n\t\t\t\tperf_mode = PERF_MODES.AUTO;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif(perf_mode === PERF_MODES.FAST)\n\t\t\treturn true;\n\t\telse if(perf_mode === PERF_MODES.SAFE)\n\t\t\treturn false;\n\t\telse /* PERF_MODES.AUTO */ {\n\t\t\t// Default to static dispatch in user-enabled high performance mode\n\t\t\tif(game?.settings?.get(MODULE_ID, 'high-performance-mode'))\n\t\t\t\treturn true;\n\n\t\t\t// Finally, default to false\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tupdate_use_static_dispatch() {\n\t\tthis.use_static_dispatch = this._calc_use_static_dispatch();\n\t}\n\n\n\t// Wrap/unwrap logic\n\t_wrap() {\n\t\tif(this.active)\n\t\t\treturn;\n\n\t\t// Setup setter/getter\n\t\t// We use a trick here to be able to convince the browser to name the method the way we want it\n\t\tconst getter_nm = this._callstack_name('getter');\n\t\tconst setter_nm = this._callstack_name('setter');\n\t\tlet obj;\n\n\t\tif(!this.is_property) {\n\t\t\tconst _this = this;\n\n\t\t\t// Setup setter / getter\n\t\t\tobj = {\n\t\t\t\t[getter_nm]: () => _this._get_handler(),\n\n\t\t\t\t[setter_nm]: function(value) {\n\t\t\t\t\treturn _this.set_nonproperty(value, this);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// Setup setter / getter\n\t\t\tconst _this = this;\n\n\t\t\tobj = {\n\t\t\t\t[getter_nm]: function(...args) {\n\t\t\t\t\treturn _this.call_wrapper(null, this, ...args);\n\t\t\t\t},\n\n\t\t\t\t[setter_nm]: function(...args) {\n\t\t\t\t\treturn _this.call_wrapper({setter: true}, this, ...args);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst getter = obj[getter_nm];\n\t\tconst setter = obj[setter_nm];\n\n\t\t// Store a reference to this in the getter so that we can support 'singleton'-like functionality\n\t\tgetter._lib_wrapper = this;\n\n\t\t// Define a property with a getter/setter\n\t\tObject.defineProperty(this.object, this.fn_name, {\n\t\t\tget: getter,\n\t\t\tset: setter,\n\t\t\tconfigurable: PROPERTIES_CONFIGURABLE\n\t\t});\n\n\t\tthis.active = true;\n\n\t\tconsole.debug(`libWrapper: Wrapped '${this.name}'.`);\n\t}\n\n\tunwrap() {\n\t\tif(!this.active)\n\t\t\treturn;\n\n\t\tif(!PROPERTIES_CONFIGURABLE)\n\t\t\tthrow new LibWrapperInternalError('libWrapper: Cannot unwrap when PROPERTIES_CONFIGURABLE==false');\n\n\n\t\t// Remove the property\n\t\tdelete this.object[this.fn_name];\n\n\t\tif(this.is_property) {\n\t\t\tObject.defineProperty(this.object, this.fn_name, {\n\t\t\t\tget: this._wrapped_getter,\n\t\t\t\tset: this._wrapped_setter,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.object[this.fn_name] = this._wrapped;\n\t\t}\n\n\n\t\t// Done\n\t\tthis.active = false;\n\n\t\tconsole.debug(`libWrapper: Unwrapped '${this.name}'.`);\n\t}\n\n\n\n\t// Utilities related to getting the wrapped value\n\t_get_inherited_descriptor() {\n\t\tlet iObj = Object.getPrototypeOf(this.object);\n\t\tlet descriptor = null;\n\n\t\twhile(iObj) {\n\t\t\tdescriptor = Object.getOwnPropertyDescriptor(iObj, this.fn_name);\n\t\t\tif(descriptor)\n\t\t\t\treturn descriptor;\n\n\t\t\tiObj = Object.getPrototypeOf(iObj);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tget_wrapped(obj, setter=false, wrapped=this._wrapped) {\n\t\tlet result;\n\n\t\t// Properties return the getter or setter, depending on what is requested\n\t\tif(this.is_property)\n\t\t\tresult = setter ? this._wrapped_setter : this._wrapped_getter;\n\t\telse\n\t\t\tresult = wrapped;\n\n\t\t// If this wrapper is 'empty', we need to search up the inheritance hierarchy for the return value\n\t\tif(result === undefined) {\n\t\t\tconst descriptor = this._get_inherited_descriptor();\n\n\t\t\tif(descriptor) {\n\t\t\t\tif(this.is_property) {\n\t\t\t\t\tif(!(descriptor.get ?? descriptor.set))\n\t\t\t\t\t\tthrow new LibWrapperInternalError(`This wrapper is set up to wrap a property, but the inherited descriptor is a method.`);\n\n\t\t\t\t\tif(setter)\n\t\t\t\t\t\tresult = descriptor.set;\n\t\t\t\t\telse\n\t\t\t\t\t\tresult = descriptor.get;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresult = descriptor.value ?? descriptor.get.apply(obj);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Done\n\t\tif(result === undefined)\n\t\t\tconsole.warn(`libWrapper: There is no wrapped method for '${this.name}', returning 'undefined'.`);\n\n\t\treturn result;\n\t}\n\n\n\n\t// Calling the wrapped method\n\tcall_wrapped(state, obj, ...args) {\n\t\t// Keep track of call state\n\t\tif(state)\n\t\t\tthis._call_wrapper_update_state(state);\n\n\t\t// Load necessary state\n\t\tconst is_setter = state?.setter ?? false;\n\t\tconst is_dynamic_dispatch = (!!state);\n\n\t\t// If necessary, set this wrapped call as pending\n\t\tlet pend = undefined;\n\t\tif(!this.is_property) {\n\t\t\tthis._pending_wrapped_calls_cnt++;\n\n\t\t\tif(is_dynamic_dispatch) {\n\t\t\t\tpend = obj;\n\t\t\t\tthis._pending_wrapped_calls.push(pend);\n\t\t\t}\n\t\t}\n\n\t\t// Try-catch block to handle normal exception flow\n\t\tlet result = undefined;\n\t\ttry {\n\t\t\tconst wrapped = this.get_wrapped(this.object, is_setter);\n\t\t\tresult = wrapped?.apply(obj, args);\n\t\t}\n\t\tcatch(e) {\n\t\t\tif(!this.is_property)\n\t\t\t\tthis._cleanup_call_wrapped(pend, is_dynamic_dispatch);\n\n\t\t\tthrow e;\n\t\t}\n\n\t\t// We only need to keep track of pending calls when we're not wrapping a property\n\t\tif(this.is_property)\n\t\t\treturn result;\n\n\t\t// If the result is a Promise, then we must wait until it fulfills before cleaning up.\n\t\t// Per the JS spec, the only way to detect a Promise (since Promises can be polyfilled, extended, wrapped, etc) is to look for the 'then' method.\n\t\t// Anything with a 'then' function is technically a Promise. This leaves a path for false-positives, but I don't see a way to avoid this.\n\t\tif(typeof result?.then === 'function') {\n\t\t\tresult = result.then(\n\t\t\t\t// onResolved\n\t\t\t\tv => {\n\t\t\t\t\tthis._cleanup_call_wrapped(pend, is_dynamic_dispatch);\n\t\t\t\t\treturn v;\n\t\t\t\t},\n\t\t\t\t// onRejected\n\t\t\t\te => {\n\t\t\t\t\tthis._cleanup_call_wrapped(pend, is_dynamic_dispatch);\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\t// Otherwise, we can immediately cleanup.\n\t\telse {\n\t\t\tthis._cleanup_call_wrapped(pend, is_dynamic_dispatch);\n\t\t}\n\n\t\t// Done\n\t\treturn result;\n\t}\n\n\t_cleanup_call_wrapped(pend, is_dynamic_dispatch) {\n\t\tif(!this._pending_wrapped_calls_cnt)\n\t\t\tthrow new LibWrapperInternalError(`this._pending_wrapped_calls_cnt=${this._pending_wrapped_calls_cnt} should be unreachable at this point.`);\n\t\tthis._pending_wrapped_calls_cnt--;\n\n\t\tif(is_dynamic_dispatch) {\n\t\t\tconst pend_i = this._pending_wrapped_calls.indexOf(pend);\n\t\t\tif(pend_i < 0)\n\t\t\t\tthrow new LibWrapperInternalError(`Could not find 'pend' inside 'this._pending_wrapped_calls'.`);\n\n\t\t\tthis._pending_wrapped_calls.splice(pend_i, 1);\n\t\t}\n\t}\n\n\n\n\t// Main call wrapper logic\n\tcall_wrapper(state, obj, ...args) {\n\t\t// Keep track of call state\n\t\tif(state)\n\t\t\tthis._call_wrapper_update_state(state);\n\n\t\t// Set up basic information about this wrapper\n\t\tconst index = state?.index ?? 0;\n\t\tconst is_setter = state?.setter ?? false;\n\t\tconst fn_data = state?.fn_data ?? this.get_fn_data(is_setter);\n\n\t\t// Grab the next function data from the function data array\n\t\tconst data = fn_data[index];\n\n\t\t// If no methods exist, then finish the chain\n\t\tif(!data) {\n\t\t\tif(fn_data.length > 0)\n\t\t\t\tthrow new LibWrapperInternalError(`Must not have 'data===${data}' when 'fn_data.length==${fn_data.length}'.`);\n\n\t\t\t// There are no wrappers, return the wrapped value.\n\t\t\treturn this.call_wrapped(null, obj, ...args);\n\t\t}\n\n\t\t// Grab wrapper function from function data object\n\t\tconst fn = data.fn;\n\n\t\t// OVERRIDE type will usually not continue the chain\n\t\tif(!data.chain) {\n\t\t\t// Call next method in the chain\n\t\t\treturn fn.apply(obj, args);\n\t\t}\n\n\t\t// Get next index\n\t\tconst next_index = index + 1;\n\t\tconst is_last = (next_index >= fn_data.length);\n\n\t\t// Prepare the continuation of the chain\n\t\tconst next_state = {\n\t\t\tindex    : next_index,\n\t\t\tcalled   : false,\n\t\t\tvalid    : true,\n\t\t\tsetter   : is_setter,\n\t\t\tprev_data: data,\n\t\t\tfn_data  : fn_data\n\t\t};\n\n\t\t// Create the next wrapper function\n\t\tconst next_fn = is_last ? this.call_wrapped.bind(this, next_state, obj) : this.call_wrapper.bind(this, next_state, obj);\n\t\tthis._outstanding_wrappers++;\n\n\t\t// Try-catch block to handle normal exception flow\n\t\tlet result = undefined;\n\t\ttry {\n\t\t\t// Call next method in the chain\n\t\t\tresult = fn.call(obj, next_fn, ...args);\n\t\t}\n\t\tcatch(e) {\n\t\t\treturn this._cleanup_call_wrapper_thrown(next_state, e);\n\t\t}\n\n\t\t// If the result is a Promise, then we must wait until it fulfills before cleaning up.\n\t\t// Per the JS spec, the only way to detect a Promise (since Promises can be polyfilled, extended, wrapped, etc) is to look for the 'then' method.\n\t\t// Anything with a 'then' function is technically a Promise. This leaves a path for false-positives, but I don't see a way to avoid this.\n\t\tif(typeof result?.then === 'function') {\n\t\t\tresult = result.then(\n\t\t\t\t// onResolved\n\t\t\t\tv => this._cleanup_call_wrapper(v, next_state, data, fn_data, next_fn, obj, args),\n\t\t\t\t// onRejected\n\t\t\t\te => this._cleanup_call_wrapper_thrown(next_state, e)\n\t\t\t);\n\t\t}\n\t\t// Otherwise, we can immediately cleanup.\n\t\telse {\n\t\t\tresult = this._cleanup_call_wrapper(result, next_state, data, fn_data, next_fn, obj, args);\n\t\t}\n\n\t\t// Done\n\t\treturn result;\n\t}\n\n\t_call_wrapper_update_state(state) {\n\t\t// Keep track of call state\n\t\tif('valid' in state && !state.valid) {\n\t\t\tthrow new LibWrapperInvalidWrapperChainError(\n\t\t\t\tthis,\n\t\t\t\tstate.prev_data?.module,\n\t\t\t\t`This wrapper function for '${this.name}' is no longer valid, and must not be called.`\n\t\t\t);\n\t\t}\n\n\t\t// Mark this state object as called\n\t\tstate.called = true;\n\t}\n\n\t_invalidate_state(state) {\n\t\tstate.valid = false;\n\n\t\tthis._outstanding_wrappers--;\n\t\tif(this._outstanding_wrappers < 0)\n\t\t\tthrow new LibWrapperInternalError(`Outstanding wrappers = ${this._outstanding_wrappers}, should never fall below 0.`);\n\t}\n\n\t_cleanup_call_wrapper_thrown(next_state, e) {\n\t\t// An exception/rejection causes invalidation of next_state\n\t\tthis._invalidate_state(next_state);\n\n\t\t// Re-throw\n\t\tthrow e;\n\t}\n\n\t_cleanup_call_wrapper(result, next_state, data, fn_data, next_fn, obj, args) {\n\t\t// Try-finally to ensure we invalidate the wrapper even if this logic fails\n\t\ttry {\n\t\t\t// Check that next_fn was called\n\t\t\tif(!next_state.called) {\n\t\t\t\t// We need to collect affected modules information if we're collecting statistics, or we haven't warned the user of this conflict yet.\n\t\t\t\tlet collect_affected = (!data.warned_conflict || LibWrapperStats.collect_stats);\n\t\t\t\tlet affectedModules = null;\n\t\t\t\tlet is_last_wrapper = false;\n\n\t\t\t\tif(collect_affected) {\n\t\t\t\t\taffectedModules = fn_data.slice(next_state.index).filter((x) => {\n\t\t\t\t\t\treturn x.module != data.module;\n\t\t\t\t\t}).map((x) => {\n\t\t\t\t\t\treturn x.module;\n\t\t\t\t\t});\n\n\t\t\t\t\tis_last_wrapper = (affectedModules.length == 0);\n\n\t\t\t\t\tLibWrapperStats.register_conflict(data.module, affectedModules, this.name);\n\t\t\t\t}\n\n\t\t\t\t// WRAPPER-type functions that do this are breaking an API requirement, as such we need to be loud about this.\n\t\t\t\t// As a \"punishment\" of sorts, we forcefully unregister them and ignore whatever they did.\n\t\t\t\tif(data.type == TYPES.WRAPPER) {\n\t\t\t\t\tLibWrapperNotifications.console_ui(\n\t\t\t\t\t\t`Error detected in module '${data.module}'.`,\n\t\t\t\t\t\t`The wrapper for '${data.target}' registered by module '${data.module}' with type WRAPPER did not chain the call to the next wrapper, which breaks a libWrapper API requirement. This wrapper will be unregistered.`,\n\t\t\t\t\t\t'error'\n\t\t\t\t\t);\n\n\t\t\t\t\tglobalThis.libWrapper.unregister(data.module, data.target);\n\n\t\t\t\t\t// Manually chain to the next wrapper if there are more in the chain\n\t\t\t\t\tif(!is_last_wrapper)\n\t\t\t\t\t\tresult = next_fn.apply(obj, args);\n\t\t\t\t}\n\n\t\t\t\t// Other TYPES get a generic 'conflict' message\n\t\t\t\telse if(!data.warned_conflict && !is_last_wrapper) {\n\t\t\t\t\tLibWrapperNotifications.conflict(data.module, affectedModules, true, `Module '${data.module}' did not chain the wrapper for '${data.target}'.`);\n\t\t\t\t\tdata.warned_conflict = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\t// Invalidate state to avoid asynchronous calls\n\t\t\tthis._invalidate_state(next_state);\n\t\t}\n\n\t\t// Done\n\t\treturn result;\n\t}\n\n\n\n\t// Non-property setter\n\tset_nonproperty(value, obj=null) {\n\t\tif(this.is_property)\n\t\t\tthrow new LibWrapperInternalError('Must not call \\'set_nonproperty\\' for a property wrapper.');\n\n\t\tconst inherited = (obj !== this.object);\n\n\t\t// If assigning to an instance directly, assign directly to instance\n\t\tif(inherited) {\n\t\t\tObject.defineProperty(obj, this.fn_name, {\n\t\t\t\tvalue: value,\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\twritable: true\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap the new value\n\t\tthis._wrapped = value;\n\t\tthis.skip_existing_handlers();\n\n\t\t// Warn user and/or log conflict\n\t\tthis.warn_classic_wrapper();\n\t}\n\n\n\n\t// Conflict logging utilities\n\tget_affected_modules() {\n\t\tconst affectedModules = this.getter_data.map((x) => {\n\t\t\treturn x.module;\n\t\t});\n\n\t\treturn affectedModules;\n\t}\n\n\twarn_classic_wrapper() {\n\t\tconst module_name = get_current_module_name() ?? '\\u00ABunknown\\u00BB';\n\t\tconst affectedModules = this.get_affected_modules();\n\n\t\tif(affectedModules.length > 0) {\n\t\t\tconst notify = LibWrapperStats.register_conflict(module_name, affectedModules, this.name);\n\n\t\t\tif(notify) {\n\t\t\t\tLibWrapperNotifications.conflict(module_name, affectedModules, true, `Detected non-libWrapper wrapping of '${this.name}' by '${module_name}'. This will potentially lead to conflicts.`);\n\n\t\t\t\tif(DEBUG && console.trace)\n\t\t\t\t\tconsole.trace();\n\t\t\t}\n\t\t}\n\n\t\tif(!this.detected_classic_wrapper)\n\t\t\tthis.detected_classic_wrapper = []\n\t\tthis.detected_classic_wrapper.push(module_name);\n\t}\n\n\n\n\t// Wraper array methods\n\t// NOTE: These should only ever be called from libWrapper, they do not clean up after themselves\n\tget_fn_data(setter, to_modify=false) {\n\t\t// to_modify=true must be used any time the fn_data array will be modified.\n\t\t// If there are any outstanding wrapper calls, this will force the creation of a copy of the array, to avoid affecting said outstanding wrapper calls.\n\n\t\t// Sanity check\n\t\tif(setter && !this.is_property)\n\t\t\tthrow new LibWrapperInternalError(`libWrapper: '${this.name}' does not wrap a property, thus setter=true is illegal.`);\n\n\t\t// Get current fn_data\n\t\tconst prop_nm = setter ? 'setter_data' : 'getter_data';\n\t\tlet result = this[prop_nm];\n\n\t\t// If we are going to modify the return result...\n\t\tif(to_modify) {\n\t\t\t// Duplicate fn_data if we are modifying it and there are outstanding wrappers\n\t\t\tif(this._outstanding_wrappers > 0) {\n\t\t\t\tresult = this[prop_nm].slice(0);\n\t\t\t\tthis[prop_nm] = result;\n\t\t\t}\n\n\t\t\t// Increment unique ID\n\t\t\tthis[`_${prop_nm}_id`]++;\n\t\t}\n\n\t\t// Done\n\t\treturn result;\n\t}\n\n\t_post_update_fn_data() {\n\t\tthis.update_use_static_dispatch();\n\t}\n\n\tsort() {\n\t\tfor(let setter of [false, true]) {\n\t\t\tif(setter && !this.is_property)\n\t\t\t\tcontinue;\n\n\t\t\tlet fn_data = this.get_fn_data(setter);\n\t\t\tfn_data.sort((a,b) => { return a.type - b.type || b.priority - a.priority });\n\t\t}\n\t}\n\n\tadd(data) {\n\t\t// Try to set a function name if there is none already\n\t\tconst fn = data.fn;\n\t\tif(!fn.name || fn.name === 'anonymous')\n\t\t\tset_function_name(fn, this._callstack_name(data.module ?? '<unknown>'));\n\n\t\t// Add to fn_data\n\t\tconst fn_data = this.get_fn_data(data.setter, true);\n\n\t\tfn_data.splice(0, 0, data);\n\t\tthis.sort(data.setter);\n\n\t\tthis._post_update_fn_data();\n\t}\n\n\tremove(data) {\n\t\tconst fn_data = this.get_fn_data(data.setter, true);\n\n\t\tconst index = fn_data.indexOf(data);\n\t\tfn_data.splice(index, 1);\n\n\t\tthis._post_update_fn_data();\n\t}\n\n\tclear() {\n\t\tthis.getter_data = [];\n\n\t\tif(this.is_property)\n\t\t\tthis.setter_data = [];\n\n\t\tthis._post_update_fn_data();\n\t}\n\n\tis_empty() {\n\t\treturn !this.getter_data.length && !this.setter_data?.length;\n\t}\n};\ndecorate_class_function_names(Wrapper);\n\n// Prevent modifications\nObject.freeze(Wrapper);","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright © 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {MODULE_ID, MODULE_TITLE, VERSION, TYPES_REVERSE, PERF_MODES_REVERSE} from '../consts.js';\nimport {LibWrapperModuleError} from '../utils/errors.js'\nimport {LibWrapperStats} from './stats.js';\nimport {get_current_module_name, WRAPPERS} from '../utils/misc.js';\n\n// Map of currently loaded priorities\nexport const PRIORITIES = new Map();\n\nexport const load_priorities = function(value=null) {\n\tconst module = get_current_module_name();\n\tif(module)\n\t\tthrow new LibWrapperModuleError(`Module '${module}' is not allowed to call libWrapper.load_priorities()`, module);\n\n\t// Create existing priorities\n\tPRIORITIES.clear();\n\n\t// Parse config\n\tconst priority_cfg = value ?? game?.settings?.get(MODULE_ID, 'module-priorities');\n\tif(!priority_cfg)\n\t\treturn;\n\n\tfor(let type of ['prioritized', 'deprioritized']) {\n\t\tconst current = priority_cfg[type];\n\t\tif(!current)\n\t\t\tcontinue;\n\n\t\tconst base_priority = (type == 'prioritized') ? 10000 : -10000;\n\n\t\tObject.entries(current).forEach(entry => {\n\t\t\tconst [module_id, module_info] = entry;\n\n\t\t\tif(PRIORITIES.has(module_id))\n\t\t\t\treturn;\n\n\t\t\tPRIORITIES.set(module_id, base_priority - module_info.index);\n\t\t});\n\t}\n}\n\n\n\n// Main settings class\nexport class LibWrapperSettings extends FormApplication {\n\tstatic init() {\n\t\tgame.settings.register(MODULE_ID, 'notify-issues-gm', {\n\t\t\tname: 'Notify GM of Issues',\n\t\t\tdefault: true,\n\t\t\ttype: Boolean,\n\t\t\tscope: 'world',\n\t\t\tconfig: true,\n\t\t\thint: 'Whether to notify GMs when an issue is detected, for example a conflict.'\n\t\t});\n\n\t\tgame.settings.register(MODULE_ID, 'notify-issues-player', {\n\t\t\tname: 'Notify Players of Issues',\n\t\t\tdefault: false,\n\t\t\ttype: Boolean,\n\t\t\tscope: 'world',\n\t\t\tconfig: true,\n\t\t\thint: 'Whether to notify Players when an issue is detected, for example a conflict.'\n\t\t});\n\n\t\tgame.settings.register(MODULE_ID, 'high-performance-mode', {\n\t\t\tname: 'High-Performance Mode',\n\t\t\tdefault: false,\n\t\t\ttype: Boolean,\n\t\t\tscope: 'world',\n\t\t\tconfig: true,\n\t\t\thint: 'This disables most dynamic conflict detection capabilities in exchange for performance, especially relevant on low-end systems. Note that this will significantly decrease the chance conflicts are detected. As such, it is recommended to turn this off when installing or updating modules.'\n\t\t});\n\n\t\tgame.settings.registerMenu(MODULE_ID, 'menu', {\n\t\t\tname: '',\n\t\t\tlabel: `${MODULE_TITLE} Settings Menu`,\n\t\t\ticon: \"fas fa-cog\",\n\t\t\ttype: LibWrapperSettings,\n\t\t\trestricted: true\n\t\t});\n\n\t\tgame.settings.register(MODULE_ID, 'module-priorities', {\n\t\t\tname: '',\n\t\t\tdefault: {},\n\t\t\ttype: Object,\n\t\t\tscope: 'world',\n\t\t\tconfig: false,\n\t\t\tonChange: value => load_priorities()\n\t\t});\n\n\t\t// When done, load the priorities\n\t\tload_priorities();\n\t}\n\n\n\t// Settings UI\n\tstatic get defaultOptions() {\n\t\treturn {\n\t\t\t...super.defaultOptions,\n\t\t\ttemplate: `modules/${MODULE_ID}/templates/settings.html`,\n\t\t\theight: 700,\n\t\t\ttitle: `${MODULE_TITLE} Settings Menu`,\n\t\t\twidth: 600,\n\t\t\tclasses: [MODULE_ID, \"settings\"],\n\t\t\ttabs: [\n\t\t\t\t{\n\t\t\t\t\tnavSelector: '.tabs',\n\t\t\t\t\tcontentSelector: 'form',\n\t\t\t\t\tinitial: 'name'\n\t\t\t\t}\n\t\t\t],\n\t\t\tsubmitOnClose: false,\n\t\t\tcloseOnSubmit: false\n\t\t}\n\t}\n\n\tconstructor(object = {}, options) {\n\t\tsuper(object, options);\n\t}\n\n\tstatic showYesNoDialog(msg, yes_callback) {\n\t\tnew Dialog({\n\t\t\tcontent: msg,\n\t\t\tbuttons: {\n\t\t\t\tyes: {\n\t\t\t\t\ticon: '<i class=\"fas fa-check\"></i>',\n\t\t\t\t\tlabel: 'Yes',\n\t\t\t\t\tcallback: yes_callback\n\t\t\t\t},\n\t\t\t\tno: {\n\t\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\t\t\tlabel: 'No'\n\t\t\t\t}\n\t\t\t}\n\t\t}).render(true);\n\t}\n\n\t_get_module_data(module_id) {\n\t\tif(module_id === game.data.system.id) {\n\t\t\tconsole.log(game.data.system);\n\t\t\treturn game.data.system.data;\n\t\t}\n\n\t\treturn game.modules.get(module_id)?.data;\n\t}\n\n\tgetActiveWrappers() {\n\t\tlet data = [];\n\n\t\tWRAPPERS.forEach((wrapper) => {\n\t\t\tfor(let is_setter of [false, true]) {\n\t\t\t\tif(is_setter && !wrapper.is_property)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tlet name = wrapper.name;\n\t\t\t\tif(is_setter)\n\t\t\t\t\tname = `${name}#set`;\n\n\t\t\t\tlet _d = {\n\t\t\t\t\tname  : name,\n\t\t\t\t\tmodules: []\n\t\t\t\t};\n\n\t\t\t\twrapper.get_fn_data(is_setter).forEach((fn_data) => {\n\t\t\t\t\tif(fn_data.module == MODULE_ID)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tconst d = {\n\t\t\t\t\t\tname     : fn_data.module,\n\t\t\t\t\t\ttype     : TYPES_REVERSE[fn_data.type],\n\t\t\t\t\t\tperf_mode: PERF_MODES_REVERSE[fn_data.perf_mode]\n\t\t\t\t\t};\n\n\t\t\t\t\tif(d.perf_mode == 'AUTO')\n\t\t\t\t\t\td.perf_mode = null;\n\t\t\t\t\telse\n\t\t\t\t\t\td.perf_mode = `, ${d.perf_mode}`;\n\n\t\t\t\t\t_d.modules.push(d);\n\t\t\t\t});\n\n\t\t\t\tif(wrapper.detected_classic_wrapper) {\n\t\t\t\t\twrapper.detected_classic_wrapper.forEach((module) => {\n\t\t\t\t\t\t_d.modules.push({\n\t\t\t\t\t\t\tname     : module,\n\t\t\t\t\t\t\ttype     : 'MANUAL',\n\t\t\t\t\t\t\tperf_mode: null\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif(_d.modules.length > 0)\n\t\t\t\t\tdata.push(_d);\n\t\t\t}\n\t\t});\n\n\t\tdata.sort((a,b) => b.modules.length - a.modules.length);\n\n\t\treturn data;\n\t}\n\n\tgetConflicts() {\n\t\tif(!LibWrapperStats.collect_stats)\n\t\t\treturn null;\n\n\t\tlet data = [];\n\n\t\tLibWrapperStats.conflicts.forEach((conflict) => {\n\t\t\tlet targets = [];\n\n\t\t\tdata.push({\n\t\t\t\tcount: conflict.count,\n\t\t\t\tmodule: conflict.module,\n\t\t\t\tother: conflict.other,\n\t\t\t\ttargets: targets\n\t\t\t});\n\n\t\t\tconflict.targets.forEach((count, target) => {\n\t\t\t\ttargets.push({target: target, count: count});\n\t\t\t});\n\n\t\t\ttargets.sort((a,b) => a.count - b.count);\n\t\t});\n\n\t\tdata.sort((a,b) => a.count - b.count);\n\n\t\treturn data;\n\t}\n\n\tgetModules() {\n\t\tlet data = {\n\t\t\tprioritized: [],\n\t\t\tnormal: [],\n\t\t\tdeprioritized: []\n\t\t};\n\n\t\tconst priorities = game.settings.get(MODULE_ID, 'module-priorities');\n\t\tconst cfg_prioritized   = priorities.prioritized   ?? {};\n\t\tconst cfg_deprioritized = priorities.deprioritized ?? {};\n\n\t\t// Normal modules\n\t\tif(LibWrapperStats.collect_stats) {\n\t\t\tLibWrapperStats.modules.forEach((module_id) => {\n\t\t\t\tconst module_data = this._get_module_data(module_id);\n\n\t\t\t\tif(module_id in cfg_prioritized || module_id in cfg_deprioritized)\n\t\t\t\t\treturn;\n\n\t\t\t\tdata.normal.push({\n\t\t\t\t\tid: module_id,\n\t\t\t\t\ttitle: module_data.title\n\t\t\t\t});\n\t\t\t});\n\t\t\tdata.normal.sort((a,b) => {return a.id - b.id});\n\t\t}\n\n\t\t// Prioritized modules\n\t\tObject.entries(cfg_prioritized).forEach((entry) => {\n\t\t\tconst [module_id, module_info] = entry;\n\t\t\tconst module_data = this._get_module_data(module_id);\n\n\t\t\tdata.prioritized.push({\n\t\t\t\tid: module_id,\n\t\t\t\ttitle: module_data?.title ?? `${module_info.title} <Inactive>`,\n\t\t\t\tindex: module_info.index\n\t\t\t});\n\t\t});\n\t\tdata.prioritized.sort((a,b) => { return a.index - b.index });\n\n\t\t// Deprioritized modules\n\t\tObject.entries(cfg_deprioritized).forEach((entry) => {\n\t\t\tconst [module_id, module_info] = entry;\n\n\t\t\t// In case something went wrong and we have a duplicate module\n\t\t\tif(module_id in cfg_prioritized)\n\t\t\t\treturn;\n\n\t\t\tconst module_data = this._get_module_data(module_id);\n\n\t\t\tdata.deprioritized.push({\n\t\t\t\tid: module_id,\n\t\t\t\ttitle: module_data?.title ?? `${module_info.title} <Inactive>`,\n\t\t\t\tindex: module_info.index\n\t\t\t});\n\t\t});\n\t\tdata.deprioritized.sort((a,b) => { return a.index - b.index });\n\n\t\t// Done\n\t\treturn data;\n\t}\n\n\tgetData() {\n\t\tlet data = {\n\t\t\tabout: {\n\t\t\t\tname: MODULE_TITLE,\n\t\t\t\tversion: VERSION,\n\t\t\t\tcollect_stats: LibWrapperStats.collect_stats\n\t\t\t},\n\n\t\t\twrappers: this.getActiveWrappers(),\n\t\t\tconflicts: this.getConflicts(),\n\t\t\tmodules: this.getModules()\n\t\t};\n\n\t\treturn data;\n\t}\n\n\tactivateListeners(html) {\n\t\tsuper.activateListeners(html);\n\n\t\tlet _this = this;\n\n\t\t// Tree view\n\t\thtml.find('.caret.has-nested').on('click', function(event) {\n\t\t\tconst $this = $(this);\n\n\t\t\t$this.parent().find('.nested').toggleClass('active');\n\t\t\t$this.toggleClass('caret-down');\n\t\t});\n\n\t\t// Reload button\n\t\thtml.find('button#reload').on('click', function(event) {\n\t\t\t_this.render(true);\n\t\t});\n\n\t\t// Easily focus the priority groups\n\t\thtml.find('.module-priority-group').on('click', function(event) {\n\t\t\tconst $this = $(this);\n\n\t\t\tconst select = $this.find('select');\n\n\t\t\tif(!select.is(':focus'))\n\t\t\t\tselect.focus();\n\t\t});\n\n\t\t// Change priority buttons\n\t\thtml.find('button.change-priority').on('click', function(event) {\n\t\t\tconst $this = $(this);\n\n\t\t\tconst which = $this.data('which');\n\t\t\tconst direction = $this.data('direction');\n\t\t\tconst up = (direction === 'up');\n\n\t\t\tconst list = html.find(`#${which}`);\n\t\t\tconst selected = list.find('option:selected');\n\n\t\t\tconst insertPos = up ? selected.prev() : selected.next();\n\n\t\t\tif(!insertPos.length)\n\t\t\t\treturn;\n\n\t\t\tif(up)\n\t\t\t\tinsertPos.before(selected);\n\t\t\telse\n\t\t\t\tinsertPos.after(selected);\n\t\t});\n\n\t\t// Change category buttons\n\t\thtml.find('button.change-category').on('click', function(event) {\n\t\t\tconst $this = $(this);\n\n\t\t\tconst _from = $this.data('from');\n\t\t\tconst _to = $this.data('to');\n\n\t\t\tconst from = html.find(`#${_from}`);\n\t\t\tconst to = html.find(`#${_to}`);\n\n\t\t\tconst element = from.find('option:selected');\n\n\t\t\t// Search for the element to focus next\n\t\t\tlet next_focus = element.next();\n\t\t\tif(next_focus.length == 0)\n\t\t\t\tnext_focus = element.prev();\n\n\t\t\t// Move to the destination list\n\t\t\tto.append(element);\n\n\t\t\t// If the destination was the 'normal', we need to sort it alphabetically\n\t\t\tif(_to == 'modules-normal') {\n\t\t\t\tconst options = to.find('option');\n\t\t\t\toptions.sort((a,b) => { return $(a).val() > $(b).val() ? 1 : -1 });\n\t\t\t\tto.empty().append(options);\n\t\t\t}\n\n\t\t\t// Focus the previous list again\n\t\t\tif(next_focus.length)\n\t\t\t\tfrom.val(next_focus.val());\n\n\t\t\tfrom.focus();\n\t\t});\n\n\t\t// Submit 'Priorities'\n\t\thtml.find('#submit').on('click', function(event) {\n\t\t\t// Collect prioritization order into hidden fields that will be submitted\n\t\t\tfor(let type of ['modules-prioritized', 'modules-deprioritized']) {\n\t\t\t\tconst select = html.find(`#${type}`);\n\n\t\t\t\tconst options = select.find('option');\n\n\t\t\t\tlet arr = [];\n\t\t\t\toptions.each((i, option) => {\n\t\t\t\t\tarr.push($(option).val());\n\t\t\t\t});\n\n\t\t\t\t$('<input>').attr('type', 'hidden').attr('name', `${type}-hidden`).attr('value', arr.join(',')).appendTo(html);\n\t\t\t}\n\n\t\t\thtml.submit();\n\t\t});\n\n\t\t// Reset button\n\t\thtml.find('#reset').on('click', function(event) {\n\t\t\t$('input[type=hidden]').remove();\n\n\t\t\tLibWrapperSettings.showYesNoDialog(\"<p>Resetting the module priorities will move all modules back to 'Unprioritized'. This action cannot be undone. Are you sure you want to continue?</p>\", () => {\n\t\t\t\tfor(let type of ['modules-prioritized', 'modules-deprioritized']) {\n\t\t\t\t\t$('<input>').attr('type', 'hidden').attr('name', `${type}-hidden`).attr('value', '').appendTo(html);\n\t\t\t\t}\n\n\t\t\t\thtml.submit();\n\t\t\t});\n\t\t});\n\t}\n\n\tasync _updateObject(ev, formData) {\n\t\t// Parse priorities\n\t\tconst priorities = game.settings.get(MODULE_ID, 'module-priorities');\n\n\t\tfor(let type of ['prioritized', 'deprioritized']) {\n\t\t\tconst fld = `modules-${type}-hidden`;\n\n\t\t\tif(!(fld in formData))\n\t\t\t\tcontinue;\n\n\t\t\tconst value = formData[fld];\n\t\t\tconst split = (value === '') ? [] : value.split(',');\n\n\t\t\tlet old_prio = priorities[type] ?? {};\n\t\t\tlet new_prio = {};\n\t\t\tlet counter = 0;\n\n\t\t\tsplit.forEach((module_id) => {\n\t\t\t\tif(!module_id)\n\t\t\t\t\treturn;\n\n\t\t\t\tconst old_data = old_prio[old_prio];\n\t\t\t\tconst new_data = this._get_module_data(module_id);\n\n\t\t\t\tnew_prio[module_id] = {\n\t\t\t\t\ttitle: new_data?.title ?? old_data?.title ?? '<Unknown>',\n\t\t\t\t\tindex: counter++\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tpriorities[type] = new_prio;\n\t\t}\n\n\t\t// Sanity check for duplicates\n\t\tObject.keys(priorities.deprioritized).forEach((key) => {\n\t\t\tif(key in priorities.prioritized)\n\t\t\t\tdelete priorities.deprioritized[key];\n\t\t});\n\n\t\t// Save\n\t\tawait game.settings.set(MODULE_ID, 'module-priorities', priorities);\n\n\t\t// Re-render\n\t\tthis.render(true);\n\n\t\t// Ask user to refresh page\n\t\tLibWrapperSettings.showYesNoDialog(\"<p>It is recommended you reload this page to apply the new module priorities. Do you wish to reload?</p>\", () => location.reload());\n\t}\n}\nObject.freeze(LibWrapperSettings);","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright © 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {\n\tMODULE_ID, MAJOR_VERSION, MINOR_VERSION, PATCH_VERSION, SUFFIX_VERSION, META_VERSION, VERSION, parse_manifest_version,\n\tIS_UNITTEST, PROPERTIES_CONFIGURABLE, DEBUG, setDebug,\n\tTYPES, TYPES_REVERSE, TYPES_LIST,\n\tPERF_MODES, PERF_MODES_REVERSE, PERF_MODES_LIST\n} from '../consts.js';\nimport {Wrapper} from './wrapper.js';\nimport {init_error_listeners, LibWrapperError, LibWrapperModuleError, LibWrapperAlreadyOverriddenError, LibWrapperInvalidWrapperChainError, LibWrapperInternalError} from '../utils/errors.js';\nimport {get_global_variable, get_current_module_name, WRAPPERS, decorate_name, decorate_class_function_names} from '../utils/misc.js';\nimport {LibWrapperNotifications} from '../ui/notifications.js'\nimport {LibWrapperStats} from '../ui/stats.js';\nimport {LibWrapperSettings, PRIORITIES} from '../ui/settings.js';\n\n// Internal variables\nlet libwrapper_ready = false;\nlet allow_libwrapper_registrations = true;\n\n\n// Internal Methods\nexport function _create_wrapper_from_object(obj, fn_name, name=undefined, module=undefined) {\n\tconst wrapper = new Wrapper(obj, fn_name, name, module);\n\tWRAPPERS.add(wrapper);\n\treturn wrapper;\n}\n\nfunction _split_target_and_setter(target) {\n\tlet is_setter = target.endsWith('#set');\n\tlet _target = !is_setter ? target : target.slice(0, -4);\n\n\treturn [_target, is_setter];\n}\n\nfunction _valid_identifier(ident) {\n\treturn /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(ident);\n}\n\nfunction _get_target_object(_target, module=undefined) {\n\t// Parse the target\n\tconst target = _split_target_and_setter(_target)[0];\n\n\tconst split = target.split('.');\n\tconst fn_name = split.pop();\n\n\t// Get root object\n\tconst root_nm = split.splice(0,1)[0];\n\tif(!_valid_identifier(root_nm))\n\t\tthrow new LibWrapperModuleError(`Invalid target '${target}.'`, module);\n\tif(root_nm == 'libWrapper')\n\t\tthrow new LibWrapperModuleError(`Not allowed to wrap libWrapper internals.`, module);\n\n\tconst root = get_global_variable(root_nm);\n\tif(!root)\n\t\tthrow new LibWrapperModuleError(`Could not find target '${target}'.`, module);\n\n\t// Get target object\n\tlet obj = root;\n\tfor(let scope of split) {\n\t\tif(!_valid_identifier(scope))\n\t\t\tthrow new LibWrapperModuleError(`Invalid target '${target}'.`, module);\n\n\t\tobj = obj[scope];\n\t\tif(!obj)\n\t\t\tthrow new LibWrapperModuleError(`Could not find target '${target}'.`, module);\n\t}\n\n\treturn [obj, fn_name, target];\n}\n\nfunction _create_wrapper(target, module=null) {\n\t// Create wrapper\n\treturn _create_wrapper_from_object(..._get_target_object(target), module);\n}\n\nfunction _find_wrapper_by_name(_name) {\n\tconst name = _split_target_and_setter(_name)[0];\n\n\tfor(let wrapper of WRAPPERS) {\n\t\tif(wrapper.names.indexOf(name) != -1)\n\t\t\treturn wrapper;\n\t}\n\n\treturn null;\n}\n\nfunction _find_module_data_in_wrapper(module, wrapper, is_setter) {\n\treturn wrapper.get_fn_data(is_setter).find((x) => { return x.module == module; });\n}\n\nfunction _find_module_data_with_target(module, _target) {\n\tconst target_and_setter = _split_target_and_setter(_target);\n\tconst target    = target_and_setter[0];\n\tconst is_setter = target_and_setter[1];\n\n\tconst wrapper = _find_wrapper_by_name(target);\n\tif(!wrapper)\n\t\treturn null;\n\n\treturn _find_module_data_in_wrapper(module, wrapper, is_setter);\n}\n\nfunction _get_default_priority(module, target) {\n\tif(module === MODULE_ID)\n\t\treturn Number.MAX_VALUE;\n\n\tconst priority_cfg = PRIORITIES.get(module);\n\tif(priority_cfg !== undefined)\n\t\treturn priority_cfg;\n\n\treturn 0;\n}\n\n\nfunction _unwrap_if_possible(wrapper) {\n\tif(wrapper.is_empty() && PROPERTIES_CONFIGURABLE) {\n\t\twrapper.unwrap();\n\t\tWRAPPERS.delete(wrapper);\n\t}\n}\n\nexport function _clear(target) {\n\tconst wrapper = _find_wrapper_by_name(target);\n\n\tif(wrapper) {\n\t\twrapper.clear();\n\t\t_unwrap_if_possible(wrapper);\n\n\t\tconsole.info(`libWrapper: Cleared all wrapper functions for '${target}'.`);\n\t}\n}\n\nexport function _unwrap_all() {\n\tfor(let wrapper of WRAPPERS) {\n\t\twrapper.clear();\n\t\twrapper.unwrap();\n\t}\n\n\tWRAPPERS.clear();\n}\n\nfunction _validate_module(module) {\n\tconst real_module = get_current_module_name();\n\n\tif(!module || typeof module !== 'string')\n\t\tthrow new LibWrapperModuleError('Parameter \\'module\\' must be a string.', real_module);\n\n\tif(module == MODULE_ID) {\n\t\tif(!allow_libwrapper_registrations)\n\t\t\tthrow new LibWrapperModuleError(`Not allowed to call libWrapper with module='${module}'.`, real_module);\n\t}\n\telse {\n\t\tif(module != game.data.system.id && !game.modules.get(module)?.active)\n\t\t\tthrow new LibWrapperModuleError(`Module '${module}' is not a valid module.`, real_module);\n\t}\n\n\tif(real_module && module != real_module)\n\t\tthrow new LibWrapperModuleError(`Module '${real_module}' is not allowed to call libWrapper with module='${module}'.`, real_module);\n}\n\nlet FORCE_FAST_MODE = false;\nfunction _force_fast_mode(new_fast_mode) {\n\tFORCE_FAST_MODE = new_fast_mode;\n}\n\n\n\n// Publicly exposed class\nexport class libWrapper {\n\t// Properties\n\t/**\n\t * Get libWrapper version\n\t * @returns {string}  libWrapper version in string form, i.e. \"<MAJOR>.<MINOR>.<PATCH>.<SUFFIX><META>\"\n\t */\n\tstatic get version() { return VERSION; }\n\n\t/**\n\t * Get libWrapper version\n\t * @returns {[number,number,number,number,string]}  libWrapper version in array form, i.e. [<MAJOR>, <MINOR>, <PATCH>, <SUFFIX>, <META>]\n\t */\n\tstatic get versions() { return [MAJOR_VERSION, MINOR_VERSION, PATCH_VERSION, SUFFIX_VERSION, META_VERSION]; }\n\n\t/**\n\t * @returns {boolean}  The real libWrapper module will always return false. Fallback implementations (e.g. poly-fill / shim) should return true.\n\t */\n\tstatic get is_fallback() { return false; }\n\n\t/**\n\t * @returns {boolean}  Whether libWrapper is in debug mode.\n\t */\n\tstatic get debug() { return DEBUG; }\n\t/**\n\t * @param {boolean} value  Whether to enable or disable libWrapper debug mode.\n\t */\n\tstatic set debug(value) { setDebug(value) }\n\n\t// Errors\n\tstatic get LibWrapperError() { return LibWrapperError; };\n\tstatic get Error() { return LibWrapperError; }\n\n\tstatic get LibWrapperInternalError() { return LibWrapperInternalError; };\n\tstatic get InternalError() { return LibWrapperInternalError; }\n\n\tstatic get LibWrapperModuleError() { return LibWrapperModuleError; };\n\tstatic get ModuleError() { return LibWrapperModuleError; };\n\n\tstatic get LibWrapperAlreadyOverriddenError() { return LibWrapperAlreadyOverriddenError; };\n\tstatic get AlreadyOverriddenError() { return LibWrapperAlreadyOverriddenError; };\n\n\tstatic get LibWrapperInvalidWrapperChainError() { return LibWrapperInvalidWrapperChainError; };\n\tstatic get InvalidWrapperChainError() { return LibWrapperInvalidWrapperChainError; };\n\n\n\t// Methods\n\t/**\n\t * Test for a minimum libWrapper version.\n\t * First introduced in v1.4.0.0.\n\t *\n\t * @param {number} major   Minimum major version\n\t * @param {number} minor   [Optional] Minimum minor version. Default is 0.\n\t * @param {number} patch   [Optional] Minimum patch version. Default is 0.\n\t * @param {number} suffix  [Optional] Minimum suffix version. Default is 0.\n\t * @returns {boolean}      Returns true if the libWrapper version is at least the queried version, otherwise false.\n\t */\n\tstatic version_at_least(major, minor=0, patch=0, suffix=0) {\n\t\tif(MAJOR_VERSION == major) {\n\t\t\tif(MINOR_VERSION == minor) {\n\t\t\t\tif(PATCH_VERSION == patch) {\n\t\t\t\t\treturn SUFFIX_VERSION == suffix;\n\t\t\t\t}\n\n\t\t\t\treturn PATCH_VERSION >= patch;\n\t\t\t}\n\n\t\t\treturn MINOR_VERSION > minor;\n\t\t}\n\t\treturn MAJOR_VERSION > major;\n\t}\n\n\t/**\n\t * Register a new wrapper.\n\t * Important: If called before the 'init' hook, this method will fail.\n\t *\n\t * In addition to wrapping class methods, there is also support for wrapping methods on specific object instances, as well as class methods inherited from parent classes.\n\t * However, it is recommended to wrap methods directly in the class that defines them whenever possible, as inheritance/instance wrapping is less thoroughly tested and will incur a performance penalty.\n\t *\n\t * Triggers FVTT hook 'libWrapper.Register' when successful.\n\t *\n\t * @param {string} module  The module identifier, i.e. the 'name' field in your module's manifest.\n\t * @param {string} target  A string containing the path to the function you wish to add the wrapper to, starting at global scope, for example 'SightLayer.prototype.updateToken'.\n\t *                         This works for both normal methods, as well as properties with getters. To wrap a property's setter, append '#set' to the name, for example 'SightLayer.prototype.blurDistance#set'.\n\t * @param {function} fn    Wrapper function. The first argument will be the next function in the chain, except for 'OVERRIDE' wrappers.\n\t *                         The remaining arguments will correspond to the parameters passed to the wrapped method.\n\t * @param {string} type    [Optional] The type of the wrapper. Default is 'MIXED'.\n\t *\n\t *   The possible types are:\n\t *\n\t *   'WRAPPER':\n\t *     Use if your wrapper will *always* call the next function in the chain.\n\t *     This type has priority over every other type. It should be used whenever possible as it massively reduces the likelihood of conflicts.\n\t *     Note that the library will auto-detect if you use this type but do not call the original function, and automatically unregister your wrapper.\n\t *\n\t *   'MIXED':\n\t *     Default type. Your wrapper will be allowed to decide whether it should call the next function in the chain or not.\n\t *     These will always come after 'WRAPPER'-type wrappers. Order is not guaranteed, but conflicts will be auto-detected.\n\t *\n\t *   'OVERRIDE':\n\t *     Use if your wrapper will *never* call the next function in the chain. This type has the lowest priority, and will always be called last.\n\t *     If another module already has an 'OVERRIDE' wrapper registered to the same method, using this type will throw a <libWrapper.LibWrapperAlreadyOverriddenError> exception.\n\t *     Catching this exception should allow you to fail gracefully, and for example warn the user of the conflict.\n\t *     Note that if the GM has explicitly given your module priority over the existing one, no exception will be thrown and your wrapper will take over.\n\t *\n\t * @param {Object} options [Optional] Additional options to libWrapper.\n\t *\n\t * @param {boolean} options.chain [Optional] If 'true', the first parameter to 'fn' will be a function object that can be called to continue the chain.\n\t *   Default is 'false' if type=='OVERRIDE', otherwise 'true'.\n\t *   First introduced in v1.3.6.0.\n\t *\n\t * @param {string} options.perf_mode [OPTIONAL] Selects the preferred performance mode for this wrapper. Default is 'AUTO'.\n\t *   It will be used if all other wrappers registered on the same target also prefer the same mode, otherwise the default will be used instead.\n\t *   This option should only be specified with good reason. In most cases, using 'AUTO' in order to allow the GM to choose is the best option.\n\t *   First introduced in v1.5.0.0.\n\t *\n\t *   The possible modes are:\n\t *\n\t *   'NORMAL':\n\t *     Enables all conflict detection capabilities provided by libWrapper. Slower than 'FAST'.\n\t *     Useful if wrapping a method commonly modified by other modules, to ensure most issues are detected.\n\t *     In most other cases, this mode is not recommended and 'AUTO' should be used instead.\n\t *\n\t *   'FAST':\n\t *     Disables some conflict detection capabilities provided by libWrapper, in exchange for performance. Faster than 'NORMAL'.\n\t *     Will guarantee wrapper call order and per-module prioritization, but fewer conflicts will be detectable.\n\t *     This performance mode will result in comparable performance to traditional non-libWrapper wrapping methods.\n\t *     Useful if wrapping a method called repeatedly in a tight loop, for example 'WallsLayer.testWall'.\n\t *     In most other cases, this mode is not recommended and 'AUTO' should be used instead.\n\t *\n\t *   'AUTO':\n\t *     Default performance mode. If unsure, choose this mode.\n\t *     Will allow the GM to choose which performance mode to use.\n\t *     Equivalent to 'FAST' when the libWrapper 'High-Performance Mode' setting is enabled by the GM, otherwise 'NORMAL'.\n\t */\n\tstatic register(module, target, fn, type='MIXED', options={}) {\n\t\t// Validate module\n\t\t_validate_module(module);\n\n\t\t// Validate we're allowed to register wrappers at this moment\n\t\tif(module != MODULE_ID && !libwrapper_ready)\n\t\t\tthrow new LibWrapperModuleError('Not allowed to register wrappers before the \\'libWrapperReady\\' hook fires', module);\n\n\t\t// Validate other arguments\n\t\tif(!target || typeof target !== 'string')\n\t\t\tthrow new LibWrapperModuleError('Parameter \\'target\\' must be a string.', module);\n\n\t\tif(!fn || !(fn instanceof Function))\n\t\t\tthrow new LibWrapperModuleError('Parameter \\'fn\\' must be a function.', module);\n\n\t\ttype = TYPES[type.toUpperCase()];\n\t\tif(typeof type === 'undefined' || !(type in TYPES_REVERSE))\n\t\t\tthrow new LibWrapperModuleError(`Parameter 'type' must be one of [${TYPES_LIST.join(', ')}].`, module);\n\n\t\tconst chain = options?.chain ?? (type < TYPES.OVERRIDE);\n\t\tif(typeof chain !== 'boolean')\n\t\t\tthrow new LibWrapperModuleError(`Parameter 'chain' must be a boolean.`, module);\n\n\t\tif(IS_UNITTEST && FORCE_FAST_MODE)\n\t\t\toptions.perf_mode = 'FAST';\n\t\tconst perf_mode = PERF_MODES[options?.perf_mode?.toUpperCase() ?? 'AUTO'];\n\t\tif(typeof perf_mode === 'undefined' || !(perf_mode in PERF_MODES_REVERSE))\n\t\t\tthrow new LibWrapperModuleError(`Parameter 'perf_mode' must be one of [${PERF_MODES_LIST.join(', ')}].`, module);\n\n\n\t\t// Split '#set' from the target\n\t\tconst target_and_setter  = _split_target_and_setter(target);\n\t\tconst target_without_set = target_and_setter[0];\n\t\tconst is_setter          = target_and_setter[1];\n\n\t\t// Create wrapper\n\t\tlet wrapper = _create_wrapper(target, module);\n\n\t\t// Only allow '#set' when the wrapper is wrapping a property\n\t\tif(is_setter && !wrapper.is_property)\n\t\t\tthrow new LibWrapperModuleError(`Cannot register a wrapper for '${target}' by '${module}' because '${target_without_set}' is not a property, and therefore has no setter.`, module);\n\n\t\t// Check if this wrapper is already registered\n\t\tif(_find_module_data_in_wrapper(module, wrapper, is_setter))\n\t\t\tthrow new LibWrapperModuleError(`Module '${module}' has already registered a wrapper for '${target}'.`, module);\n\n\t\t// Get priority\n\t\tconst priority = _get_default_priority(module, target);\n\n\t\t// Register this module as having wrapped something\n\t\t// We do this before checking for duplicate OVERRIDEs to ensure users can change this module's priorities regardless\n\t\tif(module != MODULE_ID)\n\t\t\tLibWrapperStats.register_module(module);\n\n\t\t// Only allow one 'OVERRIDE' type\n\t\tif(type >= TYPES.OVERRIDE) {\n\t\t\tconst existing = wrapper.get_fn_data(is_setter).find((x) => { return x.type == TYPES.OVERRIDE });\n\n\t\t\tif(existing) {\n\t\t\t\tif(priority <= existing.priority) {\n\t\t\t\t\tthrow new LibWrapperAlreadyOverriddenError(module, existing.module, wrapper.name);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// We trigger a hook first\n\t\t\t\t\tif(Hooks.call('libWrapper.OverrideLost', existing.module, module, wrapper.name) !== false) {\n\t\t\t\t\t\tLibWrapperStats.register_conflict(module, existing.module, wrapper.name);\n\t\t\t\t\t\tLibWrapperNotifications.conflict(existing.module, module, false,\n\t\t\t\t\t\t\t`Module '${module}' has higher priority, and is replacing the OVERRIDE registered by '${existing.module}' for '${wrapper.name}'.`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Wrap\n\t\tlet data = {\n\t\t\tmodule   : module,\n\t\t\ttarget   : target,\n\t\t\tsetter   : is_setter,\n\t\t\tfn       : fn,\n\t\t\ttype     : type,\n\t\t\twrapper  : wrapper,\n\t\t\tpriority : priority,\n\t\t\tchain    : chain,\n\t\t\tperf_mode: perf_mode\n\t\t};\n\n\t\twrapper.add(data);\n\n\t\t// Done\n\t\tif(DEBUG || (!IS_UNITTEST && module != MODULE_ID)) {\n\t\t\tHooks.callAll('libWrapper.Register', module, target, type, options);\n\t\t\tconsole.info(`libWrapper: Registered a wrapper for '${target}' by '${module}' with type ${TYPES_REVERSE[type]}.`);\n\t\t}\n\t}\n\n\t/**\n\t * Unregister an existing wrapper.\n\t *\n\t * Triggers FVTT hook 'libWrapper.Unregister' when successful.\n\t *\n\t * @param {string} module    The module identifier, i.e. the 'name' field in your module's manifest.\n\t * @param {string} target    A string containing the path to the function you wish to remove the wrapper from, starting at global scope. For example: 'SightLayer.prototype.updateToken'\n\t * @param {function} fail    [Optional] If true, this method will throw an exception if it fails to find the method to unwrap. Default is 'true'.\n\t */\n\tstatic unregister(module, target, fail=true) {\n\t\t// Validate module\n\t\t_validate_module(module);\n\n\t\t// Find wrapper\n\t\tconst data = _find_module_data_with_target(module, target);\n\t\tif(!data) {\n\t\t\tif(fail)\n\t\t\t\tthrow new LibWrapperModuleError(`Cannot unregister '${target}' by '${module}' as no such wrapper has been registered`, module);\n\t\t\treturn;\n\t\t}\n\n\t\tconst wrapper = data.wrapper;\n\n\t\t// Remove from fn_data\n\t\twrapper.remove(data);\n\t\t_unwrap_if_possible(wrapper);\n\n\t\t// Done\n\t\tif(DEBUG || module != MODULE_ID) {\n\t\t\tHooks.callAll('libWrapper.Unregister', module, target);\n\t\t\tconsole.info(`libWrapper: Unregistered the wrapper for '${target}' by '${module}'.`);\n\t\t}\n\t}\n\n\t/**\n\t * Clear all wrappers created by a given module.\n\t *\n\t * Triggers FVTT hook 'libWrapper.ClearModule' when successful.\n\t *\n\t * @param {string} module    The module identifier, i.e. the 'name' field in your module's manifest.\n\t */\n\tstatic clear_module(module) {\n\t\t// Validate module\n\t\t_validate_module(module);\n\n\t\t// Clear module wrappers\n\t\tfor(let wrapper of WRAPPERS) {\n\t\t\tthis.unregister(module, wrapper.name, false);\n\n\t\t\tif(wrapper.is_property)\n\t\t\t\tthis.unregister(module, `${wrapper.name}#set`, false);\n\t\t}\n\n\t\tif(DEBUG || module != MODULE_ID) {\n\t\t\tHooks.callAll('libWrapper.ClearModule', module);\n\t\t\tconsole.info(`libWrapper: Cleared all wrapper functions by module '${module}'.`);\n\t\t}\n\t}\n};\ndecorate_class_function_names(libWrapper);\nif(IS_UNITTEST) {\n\t// Some methods should be exposed during unit tests\n\tlibWrapper._UT_unwrap_all = _unwrap_all;\n\tlibWrapper._UT_create_wrapper_from_object = _create_wrapper_from_object\n\tlibWrapper._UT_clear = _clear;\n\tlibWrapper._UT_force_fast_mode = _force_fast_mode;\n\tlibWrapper._UT_get_force_fast_mode = (() => FORCE_FAST_MODE);\n}\nObject.freeze(libWrapper);\n\n\n\n// Define as property so that it can't be deleted\ndelete globalThis.libWrapper;\nObject.defineProperty(globalThis, 'libWrapper', {\n\tget: () => libWrapper,\n\tset: (value) => { throw `libWrapper: Not allowed to re-assign the global instance of libWrapper` },\n\tconfigurable: false\n});\n\n\n\n// Initialize libWrapper right before the 'init' hook. Unit tests just initialize immediately\n{\n\tconst libWrapperInit = decorate_name('libWrapperInit');\n\tconst obj = {\n\t\t[libWrapperInit]: function(wrapped, ...args) {\n\t\t\t// Initialization steps\n\t\t\tlibwrapper_ready = true;\n\n\t\t\tparse_manifest_version();\n\t\t\tLibWrapperSettings.init();\n\t\t\tLibWrapperStats.init();\n\t\t\tLibWrapperNotifications.init();\n\n\t\t\t// Sanity check\n\t\t\tconst system_id = game.data.system.id;\n\t\t\tif(game.modules.get(system_id)?.active)\n\t\t\t\tLibWrapperNotifications.console_ui(`Module '${system_id}' is active and has same ID as the current system '${system_id}'. This could cause issues, and is not recommended.`, '', 'warn');\n\n\t\t\t// Notify everyone the library has loaded and is ready to start registering wrappers\n\t\t\tconsole.info(`libWrapper ${VERSION}: Ready.`);\n\t\t\tHooks.callAll('libWrapperReady', libWrapper); // Deprecated since v1.4.0.0\n\t\t\tHooks.callAll('libWrapper.Ready', libWrapper);\n\n\t\t\tconst result = wrapped(...args);\n\n\t\t\treturn result;\n\t\t}\n\t};\n\n\tif(!IS_UNITTEST)\n\t\tlibWrapper.register('lib-wrapper', 'Game.prototype.initialize', obj[libWrapperInit], 'WRAPPER', {perf_mode: 'FAST'});\n\telse\n\t\tobj[libWrapperInit](()=>{});\n}\n\n// Setup unhandled error listeners\ninit_error_listeners();\n\n// Lock down registrations using module 'lib-wrapper'\nallow_libwrapper_registrations = false;"],"names":["MODULE_ID","VERSION","MAJOR_VERSION","MINOR_VERSION","PATCH_VERSION","SUFFIX_VERSION","META_VERSION","IS_UNITTEST","Game","PROPERTIES_CONFIGURABLE","DEBUG","TYPES_LIST","Object","freeze","TYPES","WRAPPER","MIXED","OVERRIDE","TYPES_REVERSE","key","PERF_MODES_LIST","PERF_MODES","STANDARD","AUTO","FAST","PERF_MODES_REVERSE","get_current_module_name","stack_trace","undefined","old_stack_limit","Error","stackTraceLimit","Infinity","stack","matches","matchAll","match","type","name","game","modules","has","console","error","globalThis","libWrapper","LibWrapperInternalError","data","system","id","__eval_copy","eval","set_function_name","fn","displayName","defineProperty","value","writable","enumerable","configurable","e","decorate_name","suffix","decorate_class_function_names","klass","props","getOwnPropertyNames","push","getOwnPropertySymbols","prop","descriptor","getOwnPropertyDescriptor","get","set","prototype","WRAPPERS","Set","throw_error","message","game_user_data","return_null","orig_game_user_data","user","userid","userId","user_data","users","find","x","_id","LibWrapperNotifications","[object Object]","ui_notifications_enabled","orig_game_user_isGM","isGM","role","game_user_isGM","settings","msg","this","NOTIFICATION_SET","add","do_notify","is_hook","notify","ui","notifications","call","permanent","ready","Hooks","once","ui_msg","console_msg","vargs","module","other","potential","startsWith","endsWith","Array","isArray","length","join","console_ui","LibWrapperError","notification_fn","args","super","captureStackTrace","constructor","LibWrapperModuleError","possibly","LibWrapperAlreadyOverriddenError","conflicting_module","target","conflicting_module_title","title","onUnhandled","LibWrapperStats","register_conflict","LibWrapperInvalidWrapperChainError","wrapper","_wrapper","wrapper_name","onUnhandledError","reason","apply","warn","action","orig_game_user_can","can","permissions","game_permissions_str","rolePerms","JSON","parse","includes","game_user_can","collect_stats","_collect_stats","MODULES","CONFLICTS","Map","forEach","m","debug","count","targets","conflicts","Wrapper","names","nm","arg1","obj","fn_name","object","_lib_wrapper","indexOf","is_property","_wrapped_getter","_wrapped_setter","_wrapped","_get_inherited_descriptor","getter_data","_getter_data_id","setter_data","_setter_data_id","active","_outstanding_wrappers","_warned_detected_classic_wrapper","_current_handler_id","_pending_wrapped_calls","_pending_wrapped_calls_cnt","update_use_static_dispatch","_wrap","handler_id","_cached_handler_id","_cached_handler","_this","handler_nm","_callstack_name","wrapped","is_static_dispatch","use_static_dispatch","should_skip_wrappers","get_wrapped","get_static_dispatch_chain","call_wrapper","toString","handler","fn_data_id","dispatch_chain","_cached_static_dispatch_chain_id","_cached_static_dispatch_chain_obj","_cached_static_dispatch_chain","_init_dispatch_chain","call_wrapped","bind","fn_data","get_fn_data","i","chain","perf_mode","SAFE","_calc_use_static_dispatch","getter_nm","setter_nm","setter","_get_handler","set_nonproperty","getter","iObj","getPrototypeOf","result","state","_call_wrapper_update_state","is_setter","is_dynamic_dispatch","pend","_cleanup_call_wrapped","then","v","pend_i","splice","index","next_index","is_last","next_state","called","valid","prev_data","next_fn","_cleanup_call_wrapper_thrown","_cleanup_call_wrapper","_invalidate_state","collect_affected","warned_conflict","affectedModules","is_last_wrapper","slice","filter","map","unregister","conflict","skip_existing_handlers","warn_classic_wrapper","module_name","get_affected_modules","trace","detected_classic_wrapper","to_modify","prop_nm","sort","a","b","priority","_post_update_fn_data","PRIORITIES","load_priorities","clear","priority_cfg","current","base_priority","entries","entry","module_id","module_info","LibWrapperSettings","FormApplication","register","default","Boolean","scope","config","hint","registerMenu","label","icon","restricted","onChange","defaultOptions","template","height","width","classes","tabs","navSelector","contentSelector","initial","submitOnClose","closeOnSubmit","options","yes_callback","Dialog","content","buttons","yes","callback","no","render","log","_d","d","prioritized","normal","deprioritized","priorities","cfg_prioritized","cfg_deprioritized","module_data","_get_module_data","about","version","wrappers","getActiveWrappers","getConflicts","getModules","html","activateListeners","on","event","$this","$","parent","toggleClass","select","is","focus","which","up","selected","insertPos","prev","next","before","after","_from","_to","from","to","element","next_focus","append","val","empty","arr","each","option","attr","appendTo","submit","remove","showYesNoDialog","ev","formData","fld","split","old_prio","new_prio","counter","old_data","new_data","keys","location","reload","libwrapper_ready","allow_libwrapper_registrations","_create_wrapper_from_object","_split_target_and_setter","_valid_identifier","ident","test","_get_target_object","_target","pop","root_nm","root","varname","get_global_variable","_find_wrapper_by_name","_name","_find_module_data_in_wrapper","_unwrap_if_possible","is_empty","unwrap","delete","_validate_module","real_module","FORCE_FAST_MODE","versions","is_fallback","InternalError","ModuleError","AlreadyOverriddenError","InvalidWrapperChainError","major","minor","patch","Function","toUpperCase","target_and_setter","target_without_set","_create_wrapper","Number","MAX_VALUE","_get_default_priority","register_module","existing","callAll","info","fail","_find_module_data_with_target","_UT_unwrap_all","_UT_create_wrapper_from_object","_UT_clear","_UT_force_fast_mode","new_fast_mode","_UT_get_force_fast_mode","libWrapperInit","version_str","parseInt","parse_manifest_version","init","system_id","addEventListener","fn_nm","hook_args","_once","off","init_error_listeners"],"mappings":"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"}