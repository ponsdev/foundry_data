{"version":3,"file":"lib-wrapper.js","sources":["../src/libWrapper-consts.js","../src/utils/libWrapper-misc.js","../src/utils/libWrapper-polyfill.js","../src/ui/libWrapper-notifications.js","../src/utils/libWrapper-package_info.js","../src/ui/libWrapper-stats.js","../src/utils/libWrapper-errors.js","../src/lib/libWrapper-wrapper.js","../src/ui/libWrapper-settings.js","../src/lib/libWrapper-api.js"],"sourcesContent":["// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright © 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\n//*********************\n// Package information\nexport const PACKAGE_ID    = 'lib-wrapper';\nexport const PACKAGE_TITLE = 'libWrapper';\n\n\n//*********************\n// Semantic versioning\n\nexport let VERSION        = '';\nexport let MAJOR_VERSION  = -1;\nexport let MINOR_VERSION  = -1;\nexport let PATCH_VERSION  = -1;\nexport let SUFFIX_VERSION = -1;\nexport let META_VERSION   = '';\n\nexport function parse_manifest_version() {\n\tif(VERSION)\n\t\treturn;\n\n\tconst version_str = game.modules?.get(PACKAGE_ID)?.data?.version;\n\tif(!version_str)\n\t\tthrow `libWrapper: Unable to find version string inside 'game.modules'`;\n\n\tconst match = version_str.match(/^([0-9]+)\\.([0-9]+)\\.([0-9]+).([0-9]+)(.*)$/i);\n\tif(!match)\n\t\tthrow `libWrapper: Unable to parse version string '${version_str}'`\n\n\tVERSION        = match[0];\n\tMAJOR_VERSION  = parseInt(match[1]);\n\tMINOR_VERSION  = parseInt(match[2]);\n\tPATCH_VERSION  = parseInt(match[3]);\n\tSUFFIX_VERSION = parseInt(match[4]);\n\tMETA_VERSION   = match[5];\n}\n\n\n//*********************\n// Miscellaneous definitions\nexport const IS_UNITTEST = (typeof Game === 'undefined');\nexport const PROPERTIES_CONFIGURABLE = IS_UNITTEST ? true : false;\n\n\n//*********************\n// Debug\nexport let DEBUG = false;\nexport function setDebug(new_debug) { DEBUG = new_debug; }\n\n\n//*********************\n// TYPES\nexport const TYPES_LIST = ['WRAPPER', 'MIXED', 'OVERRIDE'];\nObject.freeze(TYPES_LIST);\n\nexport const TYPES = {\n\tWRAPPER : 1,\n\tMIXED   : 2,\n\tOVERRIDE: 3\n};\nObject.freeze(TYPES);\n\nexport const TYPES_REVERSE = {};\nfor(let key in TYPES) {\n\tTYPES_REVERSE[TYPES[key]] = key;\n}\nObject.freeze(TYPES_REVERSE);\n\n\n//*********************\n// PERFORMANCE MODES\nexport const PERF_MODES_LIST = ['STANDARD', 'AUTO', 'FAST'];\nObject.freeze(PERF_MODES_LIST);\n\nexport const PERF_MODES = {\n\tSTANDARD: 1,\n\tAUTO    : 2,\n\tFAST    : 3\n};\nObject.freeze(PERF_MODES);\n\nexport const PERF_MODES_REVERSE = {};\nfor(let key in PERF_MODES) {\n\tPERF_MODES_REVERSE[PERF_MODES[key]] = key;\n}\nObject.freeze(PERF_MODES_REVERSE);","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright © 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {IS_UNITTEST, PACKAGE_ID} from '../consts.js';\n\n\n// HACK: The browser doesn't expose all global variables (e.g. 'Game') inside globalThis, but it does to an eval\n// We declare this helper here so that the eval does not have access to the anonymous function scope\nexport const global_eval = eval;\n\nexport function get_global_variable(varname) {\n\ttry {\n\t\treturn globalThis[varname] ?? global_eval(varname);\n\t}\n\tcatch (e) {\n\t\treturn undefined;\n\t}\n}\n\n\n// Change the name of a function object\n// Note: This is extremely hacky, and only works in some browsers, and only sometimes (usually when a function is anonymous)\nexport function set_function_name(fn, name) {\n\ttry {\n\t\t// Only supported by Firefox: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\n\t\tfn.displayName = name;\n\n\t\t// Hack: Try and over-ride the 'name' property\n\t\tObject.defineProperty(fn, 'name', {\n\t\t\tvalue: name,\n\t\t\twritable: false,\n\t\t\tenumerable: false,\n\t\t\tconfigurable: true\n\t\t});\n\t}\n\tcatch (e) {\n\t\t// disregard unless this is a unit test - probably unsupported by browser\n\t\tif(IS_UNITTEST)\n\t\t\tthrow e;\n\t}\n}\n\n// Decorate name\nexport function decorate_name(name, suffix='') {\n\tif(suffix !== '')\n\t\treturn `🎁${name}#${suffix}`;\n\telse\n\t\treturn `🎁${name}`;\n}\n\n// Decorate the name of all functions of a given class\n// Note: This is extremely hacky, and only works in some browsers, and only sometimes (usually when a function is anonymous)\nexport function decorate_class_function_names(klass) {\n\tconst props = Object.getOwnPropertyNames(klass);\n\tprops.push(...Object.getOwnPropertySymbols(klass))\n\n\tfor(const prop of props) {\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(klass, prop);\n\n\t\tif(typeof descriptor.value === 'function')\n\t\t\tset_function_name(descriptor.value, decorate_name(prop));\n\t\tif(typeof descriptor.get === 'function')\n\t\t\tset_function_name(descriptor.get, decorate_name(prop, 'getter'));\n\t\tif(typeof descriptor.set === 'function')\n\t\t\tset_function_name(descriptor.set, decorate_name(prop, 'setter'));\n\t}\n\n\tif(klass.prototype)\n\t\tdecorate_class_function_names(klass.prototype);\n}\n\n\n// Shared list of active wrappers\nexport const WRAPPERS = new Set();","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright © 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\n\n// Helper to throw errors\n// This is so we can avoid importing errors.js, to avoid a import loop\nfunction throw_error(message) {\n    if(globalThis.libWrapper)\n        throw new globalThis.libWrapper.LibWrapperInternalError(message);\n    else\n        throw new Error(message);\n}\n\n\n// game.user.data polyfill, so it can be used before 'ready'\nexport const game_user_data = function(return_null=false) {\n    // Try game.user.data first\n    const orig_game_user_data = game?.user?.data;\n    if(orig_game_user_data)\n        return orig_game_user_data;\n\n    // Grab the user ID\n    const userid = game.userId ?? game.data.userId;\n    if(!userid) {\n        if(return_null)\n            return null;\n        throw_error(\"Unable to obtain the current user ID\");\n    }\n\n    // Find user in game.data.users\n    const user_data = game.data.users.find((x) => { return x._id == userid });\n    if(!user_data) {\n        if(return_null)\n            return null;\n        throw_error(\"Unable to obtain the current user data object\");\n    }\n\n    // Done\n    return user_data;\n}\n\n// game.user.can polyfill, so it can be used before 'ready'\nexport const game_user_can = function(action, return_null=false) {\n    // Try game.user.can first\n    const orig_game_user_can = game?.user?.can;\n    if(orig_game_user_can)\n        return orig_game_user_can(action);\n\n    // Obtain game.user.data\n    const user_data = game_user_data(return_null);\n    if(!user_data)\n        return null;\n\n    // Check if user is GM\n    if(user_data.role === 4)\n        return true;\n\n    // Check if the action is in the per-user permissions\n    if(action in user_data.permissions) return user_data.permissions[action];\n\n    // Otherwise, check the role's permissions\n    const game_permissions_str = game.data.settings.find((x) => { return x.key === 'core.permissions'});\n    if(game_permissions_str?.value) {\n        const game_permissions = JSON.parse(game_permissions_str.value);\n\n        const rolePerms = game_permissions[action];\n        if(rolePerms && rolePerms.includes(user_data.role))\n            return true;\n    }\n\n    return false;\n}\n\n// game.user.isGM polyfill, so it can be used before 'ready'\nexport const game_user_isGM = function(return_null=false) {\n    // Try game.user.isGM first\n    const orig_game_user_isGM = game?.user?.isGM;\n    if(orig_game_user_isGM !== undefined)\n        return orig_game_user_isGM;\n\n    // Obtain game.user.data\n    const user_data = game_user_data(return_null);\n    if(!user_data)\n        return null;\n\n    // Done\n    return user_data.role === 4;\n}","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright © 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {PACKAGE_ID} from '../consts.js';\nimport {decorate_class_function_names} from '../utils/misc.js';\nimport {game_user_isGM} from '../utils/polyfill.js'\n\n\n// Notify user\nexport class LibWrapperNotifications {\n\tstatic init() {\n\t}\n\n\tstatic get ui_notifications_enabled() {\n\t\t// Make sure we don't accidentally throw a second time, while handling what might be another exception\n\t\ttry {\n\t\t\tif(game_user_isGM()) {\n\t\t\t\tif(!game?.settings?.get(PACKAGE_ID, 'notify-issues-gm'))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(!game?.settings?.get(PACKAGE_ID, 'notify-issues-player'))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tcatch(e) {\n\t\t\t// We swallow the new error, and assume we want to display errors\n\t\t\tconsole.error(\"libWrapper: Could not decide whether to show notifications or not. Defaulting to 'yes'.\\n\", e);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tstatic _ui(msg, fn) {\n\t\tif(!this.ui_notifications_enabled)\n\t\t\treturn;\n\n\t\t// Check if we've already notified the user of this\n\t\tif(!this.NOTIFICATION_SET)\n\t\t\tthis.NOTIFICATION_SET = new Set();\n\t\telse if(this.NOTIFICATION_SET.has(msg))\n\t\t\treturn;\n\n\t\tthis.NOTIFICATION_SET.add(msg);\n\n\t\t// Notify - ensure that ui.notifications exists as if an error occurs too early it might not be defined yet\n\t\tlet notify = globalThis?.ui?.notifications;\n\t\tif(notify)\n\t\t\tnotify[fn].call(notify, `libWrapper: ${msg}`, {permanent: fn == 'error'});\n\t}\n\n\tstatic ui(msg, fn='error') {\n\t\t// Wait until 'ready' if the error occurs early during load\n\t\tif(!globalThis.game?.ready)\n\t\t\tHooks.once('ready', this._ui.bind(this, msg, fn));\n\t\telse\n\t\t\tthis._ui(msg, fn);\n\t}\n\n\n\tstatic console_ui(ui_msg, console_msg, fn='error', ...vargs) {\n\t\tconsole[fn].call(console, `libWrapper: ${ui_msg}\\n${console_msg}`, ...vargs);\n\n\t\tthis.ui(`${ui_msg} (See JS console)`, fn);\n\t}\n\n\n\tstatic conflict(package_info, other_info, potential, console_msg) {\n\t\tlet other;\n\t\tif(Array.isArray(other_info))\n\t\t\tother = (other_info.length > 1) ? `[${other_info.map((x) => x.id).join(', ')}]` : other_info[0].logString\n\t\telse\n\t\t\tother = other_info.logString;\n\n\t\tthis.console_ui(\n\t\t\tpotential ? `Potential conflict detected between ${package_info.logString} and ${other}.` : `Conflict detected between ${package_info.logString} and ${other}.`,\n\t\t\tconsole_msg,\n\t\t\tpotential ? 'warn' : 'error'\n\t\t);\n\t}\n}\ndecorate_class_function_names(LibWrapperNotifications);","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright © 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {PACKAGE_ID} from '../consts.js';\n\n//*********************\n// ID types\nexport const PACKAGE_TYPES = {\n    UNKNOWN: 0,\n\tMODULE : 1,\n\tSYSTEM : 2,\n\tWORLD  : 3\n};\nObject.freeze(PACKAGE_TYPES);\n\nexport const PACKAGE_TYPES_REVERSE = {};\nfor(let key in PACKAGE_TYPES) {\n\tPACKAGE_TYPES_REVERSE[PACKAGE_TYPES[key]] = key;\n}\nObject.freeze(PACKAGE_TYPES_REVERSE);\n\n\nconst KEY_SEPARATOR = '~';\n\n\n//*********************\n// Package info class\n// Stores package information. Able to auto-detect the package ID that is calling libWrapper.\nexport class PackageInfo {\n    constructor(id=null, type=null) {\n        this.set(id, type);\n    }\n\n    set(id=null, type=null, freeze=true) {\n        if(!id)\n            return this.detect_id();\n\n        if(typeof id !== 'string')\n            throw `libWrapper: PackageInfo IDs must be strings`;\n\n        if(id.indexOf(KEY_SEPARATOR) >= 0)\n            return this.from_key(id);\n\n        this.id = id;\n        this.type = type;\n\n        if(!type)\n            this.detect_type();\n\n        if(freeze)\n            Object.freeze(this);\n    }\n\n    set_unknown() {\n        this.id = '\\u00ABunknown\\u00BB';\n        this.type = PACKAGE_TYPES.UNKNOWN;\n    }\n\n    equals(obj) {\n        return obj && (obj.constructor === this.constructor) && (obj.id === this.id) && (obj.type === this.type);\n    }\n\n    detect_id(stack_trace=undefined) {\n        this.set_unknown();\n\n        if(stack_trace === undefined) {\n            const old_stack_limit = Error.stackTraceLimit;\n            Error.stackTraceLimit = Infinity;\n            stack_trace = Error().stack;\n            Error.stackTraceLimit = old_stack_limit;\n\n            if(!stack_trace)\n                return;\n        }\n\n        const matches = stack_trace.matchAll(/\\/(worlds|systems|modules)\\/(.+?)(?=\\/)/ig);\n        if(!matches)\n            return;\n\n        for(let match of matches) {\n            const type = match[1];\n            const name = match[2];\n\n            if(type === 'worlds') {\n                if(name == game.data.world.id)\n                    return this.set(name, PACKAGE_TYPES.WORLD);\n            }\n            else if(type === 'systems') {\n                if(name == game.data.system.id)\n                    return this.set(name, PACKAGE_TYPES.SYSTEM);\n            }\n            else if(type === 'modules') {\n                if(!name || name == PACKAGE_ID || !game?.modules?.has(name))\n                    continue;\n\n                return this.set(name, PACKAGE_TYPES.MODULE);\n            }\n            else {\n                throw new Error(`libWrapper: Invalid script type: ${type}`);\n            }\n        }\n    }\n\n    detect_type() {\n        // We need to support this even when 'game.modules' hasn't been initialised yet\n        if(!game?.modules) {\n            if(this.id === PACKAGE_ID)\n                this.type = PACKAGE_TYPES.MODULE;\n            else\n                this.type = PACKAGE_TYPES.UNKNOWN;\n\n            return;\n        }\n\n        if(game.modules.get(this.id)?.active)\n            this.type = PACKAGE_TYPES.MODULE;\n        else if(this.id === game.data.system.id)\n            this.type = PACKAGE_TYPES.SYSTEM;\n        else if(this.id === game.data.world.id)\n            this.type = PACKAGE_TYPES.WORLD;\n        else\n            this.type = PACKAGE_TYPES.UNKNOWN;\n    }\n\n    get known() {\n        return this.type != PACKAGE_TYPES.UNKNOWN;\n    }\n\n    get exists() {\n        switch(this.type) {\n            case PACKAGE_TYPES.MODULE:\n                return game.modules.get(this.id)?.active;\n            case PACKAGE_TYPES.SYSTEM:\n                return game.data.system.id === this.id;\n            case PACKAGE_TYPES.WORLD:\n                return game.data.world.id === this.id;\n            default:\n                return false;\n        }\n    }\n\n    get data() {\n        if(!this.exists)\n            return null;\n\n        switch(this.type) {\n            case PACKAGE_TYPES.MODULE:\n                return game.modules.get(this.id)?.data;\n            case PACKAGE_TYPES.SYSTEM:\n                return game.data.system.data;\n            case PACKAGE_TYPES.WORLD:\n                return game.data.world;\n            default:\n                return null;\n        }\n    }\n\n    get title() {\n        if(!this.exists)\n            return 'Unknown';\n\n        switch(this.type) {\n            case PACKAGE_TYPES.MODULE:\n            case PACKAGE_TYPES.SYSTEM:\n            case PACKAGE_TYPES.WORLD :\n                return this.data.title;\n            default:\n                return 'Unknown';\n        }\n    }\n\n    get key() {\n        return `${PACKAGE_TYPES_REVERSE[this.type].toLowerCase()}${KEY_SEPARATOR}${this.id}`;\n    }\n\n    from_key(key) {\n        const split = key.split(KEY_SEPARATOR);\n        if(split.length !== 2)\n            throw `Error: Invalid key '${key}'`;\n\n        this.set(split[1], PACKAGE_TYPES[split[0]]);\n    }\n\n    get logString() {\n        if(!this.known)\n            return 'an unknown package';\n\n        return `${PACKAGE_TYPES_REVERSE[this.type].toLowerCase()} '${this.id}'`;\n    }\n\n    get logStringCapitalized() {\n        let str = this.logString;\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n\n    get settingsName() {\n        switch(this.type) {\n            case PACKAGE_TYPES.MODULE:\n                return this.id;\n            case PACKAGE_TYPES.SYSTEM:\n                return `${this.id} [System]`;\n            case PACKAGE_TYPES.WORLD:\n                return `${this.id} [World]`;\n            default:\n                return this.id;\n        }\n    }\n}\nObject.freeze(PackageInfo);","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright © 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {PACKAGE_ID, IS_UNITTEST} from '../consts.js';\nimport {LibWrapperNotifications} from './notifications.js';\nimport {game_user_can} from '../utils/polyfill.js'\n\nexport class LibWrapperStats {\n\tstatic _collect_stats() {\n\t\t// We do this in a try-catch in case future Foundry versions break this code, it won't completely break libWrapper\n\t\ttry {\n\t\t\treturn game_user_can('SETTINGS_MODIFY');\n\t\t}\n\t\tcatch(e) {\n\t\t\tif(IS_UNITTEST)\n\t\t\t\tthrow e;\n\n\t\t\tLibWrapperNotifications.console_ui(\n\t\t\t\t\"A non-critical error occurred while initializing libWrapper.\",\n\t\t\t\t\"Could not read user permissions during initialization.\\n\",\n\t\t\t\t'warn',\n\t\t\t\te\n\t\t\t);\n\n\t\t\t// Default to 'true' on error\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tstatic init() {\n\t\tthis.collect_stats = this._collect_stats();\n\n\t\t// If we got this far, we're going to be collecting statistics, so initialize the containers\n\t\tif(!this.collect_stats)\n\t\t\treturn;\n\n\t\tthis.PACKAGES  = new Set();\n\t\tthis.CONFLICTS = new Map();\n\t}\n\n\tstatic register_package(package_info) {\n\t\tif(!this.collect_stats)\n\t\t\treturn;\n\n\t\tif(package_info.id == PACKAGE_ID)\n\t\t\treturn;\n\n\t\tthis.PACKAGES.add(package_info.key);\n\t}\n\n\tstatic register_conflict(package_info, other_info, target) {\n\t\tif(!this.collect_stats)\n\t\t\treturn;\n\n\t\tif(!other_info)\n\t\t\treturn;\n\n\t\tif(Array.isArray(other_info)) {\n\t\t\tlet notify = false;\n\t\t\tother_info.forEach((other) => {\n\t\t\t\tnotify |= LibWrapperStats.register_conflict(package_info, other, target);\n\t\t\t});\n\t\t\treturn notify;\n\t\t}\n\n\t\t// We first notify everyone that an override was just lost. This hook being handled will prevent us from registering the package conflict\n\t\tif(Hooks.call('libWrapper.ConflictDetected', package_info.id, other_info.id, target) === false) {\n\t\t\tconsole.debug(`Conflict between ${package_info.logString} and ${other_info.logString} over '${target}' ignored, as 'libWrapper.ConflictDetected' hook returned false.`);\n\t\t\treturn false;\n\t\t}\n\n\t\t// We now register the conflict\n\t\tconst key = `${package_info.key}/${other_info.key}`;\n\n\t\tlet data = this.CONFLICTS.get(key);\n\t\tif(!data) {\n\t\t\tdata = {\n\t\t\t\tcount: 0,\n\t\t\t\tpackage_info: package_info,\n\t\t\t\tother_info: other_info,\n\t\t\t\ttargets: new Map()\n\t\t\t};\n\t\t\tthis.CONFLICTS.set(key, data);\n\t\t}\n\n\t\tdata.count++;\n\t\tdata.targets.set(target, (data.targets.get(target) ?? 0) + 1);\n\n\t\t// Done\n\t\treturn true;\n\t}\n\n\tstatic get conflicts() {\n\t\treturn this.CONFLICTS;\n\t}\n\n\tstatic get packages() {\n\t\treturn this.PACKAGES;\n\t}\n}","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright © 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {IS_UNITTEST, DEBUG} from '../consts.js';\nimport {global_eval} from './misc.js';\nimport {LibWrapperNotifications} from '../ui/notifications.js';\nimport {PackageInfo} from './package_info.js';\nimport {LibWrapperStats} from '../ui/stats.js';\n\n\n\n// Custom libWrapper Error\nexport class LibWrapperError extends Error {\n\tconstructor(ui_msg, console_msg, notification_fn, ...args) {\n\t\tsuper(`${ui_msg}\\n${console_msg}`, ...args);\n\n\t\t// Maintains proper stack trace for where our error was thrown (only available on V8)\n\t\tif (Error.captureStackTrace)\n\t\t\tError.captureStackTrace(this, this.constructor);\n\t\tthis.name = this.constructor.name;\n\n\t\t// Store arguments\n\t\tthis.ui_msg = ui_msg;\n\t\tthis.console_msg = console_msg;\n\t\tthis.notification_fn = notification_fn ?? 'error';\n\t}\n\n\t/**\n\t * Called if this error is unhandled\n\t */\n\tonUnhandled() {\n\t}\n}\nObject.freeze(LibWrapperError);\n\n\n\n// Internal error\nexport class LibWrapperInternalError extends LibWrapperError {\n\tconstructor(console_msg, ...args) {\n\t\tconst package_info = new PackageInfo();\n\n\t\tsuper(\n\t\t\tpackage_info.known ? `Internal error detected, possibly related to ${package_info.logString}.`\n\t\t\t                   : 'Internal error detected.'\n\t\t\t,\n\t\t\tconsole_msg,\n\t\t\t'error',\n\t\t\t...args\n\t\t);\n\n\t\t// Custom debugging information\n\t\tthis.package_info = package_info;\n\t}\n\n\t/**\n\t * Returns the package ID\n\t */\n\tget package_id() { return this.package_info?.id; }\n\n\t/**\n\t * Deprecated since v1.6.0.0\n\t * Returns the package ID\n\t */\n\tget module() { return this.package_id; }\n}\nObject.freeze(LibWrapperInternalError);\n\n\n\n// Error caused by a package\nexport class LibWrapperPackageError extends LibWrapperError {\n\tconstructor(console_msg, package_info, ...args) {\n\t\tlet possibly = false;\n\n\t\tif(!package_info) {\n\t\t\tpackage_info = new PackageInfo();\n\t\t\tpossibly = true;\n\t\t}\n\t\telse if(package_info?.constructor !== PackageInfo) {\n\t\t\tpackage_info = new PackageInfo(package_info);\n\t\t}\n\n\t\tsuper(\n\t\t\tpossibly ? `Error detected, possibly in ${package_info.logString}.` :\n\t\t\t           `Error detected in ${package_info.logString}.`,\n\t\t\tconsole_msg,\n\t\t\t'error',\n\t\t\t...args\n\t\t);\n\n\t\t// Custom debugging information\n\t\tthis.package_info = package_info;\n\t}\n\n\t/**\n\t * Returns the package ID\n\t */\n\tget package_id() { return this.package_info?.id; }\n\n\t/**\n\t * Deprecated since v1.6.0.0\n\t * Returns the package ID\n\t */\n\tget module() { return this.package_id; }\n}\nObject.freeze(LibWrapperPackageError);\n\n\n\n// Already Overridden Error\nexport class LibWrapperAlreadyOverriddenError extends LibWrapperError {\n\tconstructor(package_info, conflicting_info, target, ...args) {\n\t\tif(package_info?.constructor !== PackageInfo)\n\t\t\tpackage_info = new PackageInfo(package_info);\n\n\t\tif(conflicting_info?.constructor !== PackageInfo)\n\t\t\tconflicting_info = new PackageInfo(conflicting_info);\n\n\t\tsuper(\n\t\t\t`Conflict detected between ${package_info.logString} and ${conflicting_info.logString}.`,\n\t\t\t`Failed to wrap '${target}' for ${package_info.logString} with type OVERRIDE. An OVERRIDE wrapper for the same method has already been registered by ${conflicting_info.logString}.`,\n\t\t\t'error',\n\t\t\t...args\n\t\t);\n\n\t\t// Custom debugging information\n\t\tthis.package_info = package_info;\n\t\tthis.conflicting_info = conflicting_info;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * Returns the package ID\n\t */\n\tget package_id() { return this.package_info?.id; }\n\n\t/**\n\t * Deprecated since v1.6.0.0\n\t * Returns the package ID\n\t */\n\tget module() { return this.package_id; }\n\n\t/**\n\t * Returns the conflicting package ID\n\t */\n\tget conflicting_id() { return this.conflicting_info?.id; }\n\n\t/**\n\t * Deprecated since v1.6.0.0\n\t * Returns the conflicting package ID\n\t */\n\tget conflicting_module() { return this.conflicting_id; }\n\n\t/**\n\t * Called if this error is unhandled\n\t */\n\tonUnhandled() {\n\t\tsuper.onUnhandled();\n\n\t\tLibWrapperStats.register_conflict(this.package_info, this.conflicting_info, this.target);\n\t}\n}\nObject.freeze(LibWrapperAlreadyOverriddenError);\n\n\n\n// Invalid Wrapper Chain Error\nexport class LibWrapperInvalidWrapperChainError extends LibWrapperError {\n\tconstructor(wrapper, package_info, console_msg, ...args) {\n\t\tif(package_info?.constructor !== PackageInfo)\n\t\t\tpackage_info = new PackageInfo(package_info);\n\n\t\tsuper(\n\t\t\t`Error detected in '${package_info.logString}'.`,\n\t\t\tconsole_msg,\n\t\t\t'error',\n\t\t\t...args\n\t\t);\n\n\t\t// Custom debugging information\n\t\tthis._wrapper = wrapper;\n\t\tthis.package_info = package_info;\n\t}\n\n\t/**\n\t * Returns the package ID\n\t */\n\tget package_id() { return this.package_info?.id; }\n\n\t/**\n\t * Deprecated since v1.6.0.0\n\t * Returns the package ID\n\t */\n\tget module() {\n\t\treturn this.package_id;\n\t}\n}\nObject.freeze(LibWrapperInvalidWrapperChainError);\n\n\n\n// Error listeners for unhandled exceptions\nexport const onUnhandledError = function(event) {\n\t// This is a LibWrapperError exception, and we need to handle it\n\ttry {\n\t\t// We first check whether the cause of the event is an instance of LibWrapperError. Otherwise, we do nothing.\n\t\tconst exc = event.reason ?? event.error ?? event;\n\t\tif(!exc || !(exc instanceof LibWrapperError))\n\t\t\treturn;\n\n\t\t// Notify user of the issue\n\t\tif(exc.ui_msg && exc.notification_fn)\n\t\t\tLibWrapperNotifications.ui(`${exc.ui_msg} (See JS console)`, exc.notification_fn);\n\n\t\t// Trigger 'onUnhandled'\n\t\tif(exc.onUnhandled)\n\t\t\texc.onUnhandled.apply(exc);\n\t}\n\tcatch (e) {\n\t\tconsole.warn('libWrapper: Exception thrown while processing an unhandled exception.', e);\n\t}\n}\n\nexport const init_error_listeners = function() {\n\t// Do nothing inside unit tests\n\tif(IS_UNITTEST)\n\t\treturn;\n\n\t// Javascript native unhandled exception listeners\n\tglobalThis.addEventListener('error', onUnhandledError);\n\tglobalThis.addEventListener('unhandledrejection', onUnhandledError);\n\n\t// Wrap Hooks._call to intercept unhandled exceptions during hooks\n\t// We don't use libWrapper itself here as we can guarantee we come first (well, before any libWrapper wrapper) and we want to avoid polluting the callstack of every single hook.\n\t// Otherwise users might think libWrapper is causing failures, when they're actually the fault of another package.\n\t// We try to patch the existing method. If anything fails, we just alert the user and skip this section.\n\ttry {\n\t\t// Patch original method\n\t\tconst orig = '() => function ' + Hooks._call.toString();\n\t\tconst patched = orig.replace(/^( *).*catch\\((.*)\\)\\s*{/img, '$&\\n$1  globalThis.libWrapper.onUnhandledError($2);');\n\t\tif(orig === patched)\n\t\t\tthrow `Could not patch 'Hooks._call' method:\\n${orig}`;\n\t\tif(DEBUG)\n\t\t\tconsole.log(`Patched Hooks._call: ${patched}`);\n\n\t\tconst patched_fn = global_eval(patched)?.();\n\t\tif(typeof patched_fn !== 'function')\n\t\t\tthrow `Evaluation of patched 'Hooks._call' method did not return a function:\\nPatched Method: ${patched}\\nReturned: ${patched_fn}`;\n\n\t\tHooks._call = patched_fn;\n\t}\n\tcatch(e) {\n\t\t// Handle a possible error gracefully\n\t\tLibWrapperNotifications.console_ui(\n\t\t\t\"A non-critical error occurred while initializing libWrapper.\",\n\t\t\t\"Could not setup 'Hooks._call' wrapper.\\n\",\n\t\t\t'warn',\n\t\t\te\n\t\t);\n\t}\n\n\t// Wrap Application.prototype._render to intercept unhandled exceptions when rendering Applications\n\ttry {\n\t\tlibWrapper.register('lib-wrapper', 'Application.prototype._render', function(wrapped, ...args) {\n\t\t\treturn wrapped(...args).catch(err => {\n\t\t\t\tonUnhandledError(err);\n\t\t\t\tthrow err;\n\t\t\t});\n\t\t}, 'WRAPPER', {perf_mode: 'FAST'});\n\t}\n\tcatch(e) {\n\t\t// Handle a possible error gracefully\n\t\tLibWrapperNotifications.console_ui(\n\t\t\t\"A non-critical error occurred while initializing libWrapper.\",\n\t\t\t\"Could not setup 'Application.prototype._render' wrapper.\\n\",\n\t\t\t'warn',\n\t\t\te\n\t\t);\n\t}\n}","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright © 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {PACKAGE_ID, PROPERTIES_CONFIGURABLE, TYPES, DEBUG, PERF_MODES} from '../consts.js';\nimport {decorate_name, set_function_name, decorate_class_function_names} from '../utils/misc.js';\nimport {PackageInfo} from '../utils/package_info.js';\nimport {LibWrapperInternalError, LibWrapperPackageError, LibWrapperInvalidWrapperChainError} from '../utils/errors.js';\nimport {LibWrapperNotifications} from '../ui/notifications.js';\nimport {LibWrapperStats} from '../ui/stats.js';\n\n\n// Wrapper class - this class is responsible for the actual wrapping\nexport class Wrapper {\n\t// Properties\n\tget name() {\n\t\treturn this.names[0];\n\t}\n\n\n\t// Callstack\n\t_callstack_name(nm, arg1=this.name) {\n\t\treturn decorate_name(arg1, nm);\n\t}\n\n\n\n\t// Constructor\n\tconstructor (obj, fn_name, name=undefined, package_info=undefined) {\n\t\t// Basic instance variables\n\t\tthis.fn_name = fn_name;\n\t\tthis.object  = obj;\n\n\t\t// Calidate whether we can wrap this object\n\t\tlet descriptor = Object.getOwnPropertyDescriptor(obj, fn_name);\n\n\t\tif(descriptor) {\n\t\t\tif(descriptor.get?._lib_wrapper) {\n\t\t\t\tlet wrapper = descriptor.get?._lib_wrapper;\n\n\t\t\t\tif(name && !wrapper.names.indexOf(name))\n\t\t\t\t\twrapper.names.push(name);\n\n\t\t\t\tif(wrapper && wrapper instanceof this.constructor)\n\t\t\t\t\treturn wrapper;\n\t\t\t}\n\n\t\t\tif(descriptor.configurable === false) {\n\t\t\t\tthrow new LibWrapperPackageError(`libWrapper: '${name}' cannot be wrapped, the corresponding descriptor has 'configurable=false'.`, package_info);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(descriptor.get) {\n\t\t\t\t\tthis.is_property = true;\n\t\t\t\t\tthis._wrapped_getter = descriptor.get;\n\t\t\t\t\tthis._wrapped_setter = descriptor.set;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.is_property = false;\n\t\t\t\t\tthis._wrapped = descriptor.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdescriptor = this._get_inherited_descriptor();\n\n\t\t\tif(!descriptor)\n\t\t\t\tthrow new LibWrapperPackageError(`libWrapper: Can't wrap '${name}', target does not exist or could not be found.`, package_info);\n\n\t\t\tconst wrapper = descriptor.get?._lib_wrapper;\n\n\t\t\tif(wrapper) {\n\t\t\t\tthis.is_property = wrapper.is_property;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(descriptor.get ?? descriptor.set)\n\t\t\t\t\tthis.is_property = true;\n\t\t\t\telse\n\t\t\t\t\tthis.is_property = false;\n\t\t\t}\n\t\t}\n\n\t\t// Setup instance variables\n\t\tthis.names   = [];\n\n\t\tthis.getter_data = [];\n\t\tthis._getter_data_id = 0;\n\t\tif(this.is_property) {\n\t\t\tthis.setter_data = [];\n\t\t\tthis._setter_data_id = 0;\n\t\t}\n\n\t\tthis.active  = false;\n\n\t\tthis._outstanding_wrappers = 0;\n\t\tthis._current_handler_id = 0;\n\n\t\tif(!this.is_property) {\n\t\t\tthis._pending_wrapped_calls = [];\n\t\t\tthis._pending_wrapped_calls_cnt = 0;\n\t\t}\n\n\t\tthis.update_use_static_dispatch();\n\n\t\t// Add name\n\t\tif(!name)\n\t\t\tname = fn_name;\n\n\t\tif(this.names.indexOf(name) == -1)\n\t\t\tthis.names.push(name);\n\n\t\t// Do actual wrapping\n\t\tthis._wrap();\n\t}\n\n\n\t// Handler\n\t_get_handler() {\n\t\t// Return the cached handler, if it is still valid\n\t\tconst handler_id = this._current_handler_id;\n\t\tif(handler_id === this._cached_handler_id)\n\t\t\treturn this._cached_handler;\n\n\t\t// Create a handler function\n\t\tconst _this = this;\n\t\tconst handler_nm = this._callstack_name(handler_id);\n\t\tconst wrapped = this._wrapped;\n\n\t\t// We use a trick here to be able to convince the browser to name the method the way we want it\n\t\tconst obj = {\n\t\t\t[handler_nm]: function(...args) {\n\t\t\t\tconst is_static_dispatch = _this.use_static_dispatch;\n\n\t\t\t\t// Check if we should skip wrappers\n\t\t\t\tif(_this.should_skip_wrappers(this, handler_id, is_static_dispatch)) {\n\t\t\t\t\treturn _this.get_wrapped(this, false, wrapped).apply(this, args);\n\t\t\t\t}\n\t\t\t\t// Otherwise, trigger the wrapper dispatch chain\n\t\t\t\telse {\n\t\t\t\t\t// Trigger the desired dispatch chain - dynamic or static\n\t\t\t\t\tif(is_static_dispatch)\n\t\t\t\t\t\treturn _this.get_static_dispatch_chain(this).apply(this, args);\n\t\t\t\t\telse\n\t\t\t\t\t\treturn _this.call_wrapper(null, this, ...args);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t['toString']: function () {\n\t\t\t\treturn _this.get_wrapped(this).toString();\n\t\t\t}\n\t\t};\n\t\tconst handler = obj[handler_nm];\n\t\thandler.toString = obj['toString'];\n\n\t\t// Cache handler\n\t\tthis._cached_handler = handler;\n\t\tthis._cached_handler_id = handler_id;\n\n\t\t// Done\n\t\treturn handler;\n\t}\n\n\tget_static_dispatch_chain(obj) {\n\t\tconst fn_data_id = this._getter_data_id;\n\t\tlet dispatch_chain = null;\n\n\t\t// Use the cached dispatch chain, if still valid\n\t\tif(fn_data_id === this._cached_static_dispatch_chain_id && obj === this._cached_static_dispatch_chain_obj) {\n\t\t\tdispatch_chain = this._cached_static_dispatch_chain;\n\t\t}\n\t\t// Otherwise, generate a new static dispatch chain\n\t\telse {\n\t\t\tconst _init_dispatch_chain = () => {\n\t\t\t\tdispatch_chain = this.call_wrapped.bind(this, /*state=*/ null, obj);\n\t\t\t};\n\n\t\t\t// Walk wrappers in reverse order\n\t\t\tconst fn_data = this.get_fn_data(false);\n\t\t\tfor(let i = fn_data.length-1; i >= 0; i--) {\n\t\t\t\tconst data = fn_data[i];\n\t\t\t\tconst fn = data.fn;\n\n\t\t\t\t// OVERRIDE type will usually not continue the chain\n\t\t\t\tif(!data.chain)\n\t\t\t\t\tdispatch_chain = fn.bind(obj);\n\t\t\t\t// Else, bind the wrapper\n\t\t\t\telse {\n\t\t\t\t\tif(!dispatch_chain)\n\t\t\t\t\t\t_init_dispatch_chain();\n\n\t\t\t\t\tdispatch_chain = fn.bind(obj, dispatch_chain);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(!dispatch_chain)\n\t\t\t\t_init_dispatch_chain();\n\n\t\t\t// Cache static dispatch chain\n\t\t\tthis._cached_static_dispatch_chain_obj = obj;\n\t\t\tthis._cached_static_dispatch_chain_id  = fn_data_id;\n\t\t\tthis._cached_static_dispatch_chain     = dispatch_chain;\n\t\t}\n\n\t\t// Done\n\t\treturn dispatch_chain;\n\t}\n\n\tshould_skip_wrappers(obj, handler_id, is_static_dispatch) {\n\t\t// We don't need to skip wrappers if the handler is still valid\n\t\tif(handler_id == this._current_handler_id)\n\t\t\treturn false;\n\n\t\t// Sanity check\n\t\tif(handler_id > this._current_handler_id)\n\t\t\tthrow new LibWrapperInternalError(`Unreachable: handler_id=${handler_id} > this._current_handler_id=${this._current_handler_id}`);\n\n\t\t// Find pending calls that match this object - if any is found, skip wrappers\n\t\tif(!this.is_property) {\n\t\t\t// Check if there's any pending wrapped calls\n\t\t\tif(this._pending_wrapped_calls_cnt <= 0)\n\t\t\t\treturn false;\n\n\t\t\t// Check if our object exists in the pending wrapped calls\n\t\t\tif(!is_static_dispatch) {\n\t\t\t\tconst pend_i = this._pending_wrapped_calls.indexOf(obj);\n\t\t\t\tif(pend_i < 0)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tskip_existing_handlers() {\n\t\tthis._current_handler_id++;\n\t}\n\n\t_calc_use_static_dispatch() {\n\t\t// Do all the wrappers in fn_data specify the same, explicit, performance mode wish?\n\t\tconst fn_data = this.get_fn_data(false);\n\n\t\tlet perf_mode = undefined;\n\t\tfor(const data of fn_data) {\n\t\t\tif(!data.perf_mode)\n\t\t\t\tcontinue;\n\n\t\t\tif(perf_mode === undefined) {\n\t\t\t\tperf_mode = data.perf_mode;\n\t\t\t}\n\t\t\telse if(perf_mode !== data.perf_mode) {\n\t\t\t\tperf_mode = PERF_MODES.AUTO;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif(perf_mode === PERF_MODES.FAST)\n\t\t\treturn true;\n\t\telse if(perf_mode === PERF_MODES.SAFE)\n\t\t\treturn false;\n\t\telse /* PERF_MODES.AUTO */ {\n\t\t\t// Default to static dispatch in user-enabled high performance mode\n\t\t\tif(game?.settings?.get(PACKAGE_ID, 'high-performance-mode'))\n\t\t\t\treturn true;\n\n\t\t\t// Finally, default to false\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tupdate_use_static_dispatch() {\n\t\tthis.use_static_dispatch = this._calc_use_static_dispatch();\n\t}\n\n\n\t// Wrap/unwrap logic\n\t_wrap() {\n\t\tif(this.active)\n\t\t\treturn;\n\n\t\t// Setup setter/getter\n\t\t// We use a trick here to be able to convince the browser to name the method the way we want it\n\t\tconst getter_nm = this._callstack_name('getter');\n\t\tconst setter_nm = this._callstack_name('setter');\n\t\tlet obj;\n\n\t\tif(!this.is_property) {\n\t\t\tconst _this = this;\n\n\t\t\t// Setup setter / getter\n\t\t\tobj = {\n\t\t\t\t[getter_nm]: () => _this._get_handler(),\n\n\t\t\t\t[setter_nm]: function(value) {\n\t\t\t\t\treturn _this.set_nonproperty(value, this);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// Setup setter / getter\n\t\t\tconst _this = this;\n\n\t\t\tobj = {\n\t\t\t\t[getter_nm]: function(...args) {\n\t\t\t\t\treturn _this.call_wrapper(null, this, ...args);\n\t\t\t\t},\n\n\t\t\t\t[setter_nm]: function(...args) {\n\t\t\t\t\treturn _this.call_wrapper({setter: true}, this, ...args);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst getter = obj[getter_nm];\n\t\tconst setter = obj[setter_nm];\n\n\t\t// Store a reference to this in the getter so that we can support 'singleton'-like functionality\n\t\tgetter._lib_wrapper = this;\n\n\t\t// Define a property with a getter/setter\n\t\tObject.defineProperty(this.object, this.fn_name, {\n\t\t\tget: getter,\n\t\t\tset: setter,\n\t\t\tconfigurable: PROPERTIES_CONFIGURABLE\n\t\t});\n\n\t\tthis.active = true;\n\n\t\tconsole.debug(`libWrapper: Wrapped '${this.name}'.`);\n\t}\n\n\tunwrap() {\n\t\tif(!this.active)\n\t\t\treturn;\n\n\t\tif(!PROPERTIES_CONFIGURABLE)\n\t\t\tthrow new LibWrapperInternalError('libWrapper: Cannot unwrap when PROPERTIES_CONFIGURABLE==false');\n\n\n\t\t// Remove the property\n\t\tdelete this.object[this.fn_name];\n\n\t\tif(this.is_property) {\n\t\t\tObject.defineProperty(this.object, this.fn_name, {\n\t\t\t\tget: this._wrapped_getter,\n\t\t\t\tset: this._wrapped_setter,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.object[this.fn_name] = this._wrapped;\n\t\t}\n\n\n\t\t// Done\n\t\tthis.active = false;\n\n\t\tconsole.debug(`libWrapper: Unwrapped '${this.name}'.`);\n\t}\n\n\n\n\t// Utilities related to getting the wrapped value\n\t_get_inherited_descriptor() {\n\t\tlet iObj = Object.getPrototypeOf(this.object);\n\t\tlet descriptor = null;\n\n\t\twhile(iObj) {\n\t\t\tdescriptor = Object.getOwnPropertyDescriptor(iObj, this.fn_name);\n\t\t\tif(descriptor)\n\t\t\t\treturn descriptor;\n\n\t\t\tiObj = Object.getPrototypeOf(iObj);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tget_wrapped(obj, setter=false, wrapped=this._wrapped) {\n\t\tlet result;\n\n\t\t// Properties return the getter or setter, depending on what is requested\n\t\tif(this.is_property)\n\t\t\tresult = setter ? this._wrapped_setter : this._wrapped_getter;\n\t\telse\n\t\t\tresult = wrapped;\n\n\t\t// If this wrapper is 'empty', we need to search up the inheritance hierarchy for the return value\n\t\tif(result === undefined) {\n\t\t\tconst descriptor = this._get_inherited_descriptor();\n\n\t\t\tif(descriptor) {\n\t\t\t\tif(this.is_property) {\n\t\t\t\t\tif(!(descriptor.get ?? descriptor.set))\n\t\t\t\t\t\tthrow new LibWrapperInternalError(`This wrapper is set up to wrap a property, but the inherited descriptor is a method.`);\n\n\t\t\t\t\tif(setter)\n\t\t\t\t\t\tresult = descriptor.set;\n\t\t\t\t\telse\n\t\t\t\t\t\tresult = descriptor.get;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresult = descriptor.value ?? descriptor.get.apply(obj);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Done\n\t\tif(result === undefined)\n\t\t\tconsole.warn(`libWrapper: There is no wrapped method for '${this.name}', returning 'undefined'.`);\n\n\t\treturn result;\n\t}\n\n\n\n\t// Calling the wrapped method\n\tcall_wrapped(state, obj, ...args) {\n\t\t// Keep track of call state\n\t\tif(state)\n\t\t\tthis._call_wrapper_update_state(state);\n\n\t\t// Load necessary state\n\t\tconst is_setter = state?.setter ?? false;\n\t\tconst is_dynamic_dispatch = (!!state);\n\n\t\t// If necessary, set this wrapped call as pending\n\t\tlet pend = undefined;\n\t\tif(!this.is_property) {\n\t\t\tthis._pending_wrapped_calls_cnt++;\n\n\t\t\tif(is_dynamic_dispatch) {\n\t\t\t\tpend = obj;\n\t\t\t\tthis._pending_wrapped_calls.push(pend);\n\t\t\t}\n\t\t}\n\n\t\t// Try-catch block to handle normal exception flow\n\t\tlet result = undefined;\n\t\ttry {\n\t\t\tconst wrapped = this.get_wrapped(this.object, is_setter);\n\t\t\tresult = wrapped?.apply(obj, args);\n\t\t}\n\t\tcatch(e) {\n\t\t\tif(!this.is_property)\n\t\t\t\tthis._cleanup_call_wrapped(pend, is_dynamic_dispatch);\n\n\t\t\tthrow e;\n\t\t}\n\n\t\t// We only need to keep track of pending calls when we're not wrapping a property\n\t\tif(this.is_property)\n\t\t\treturn result;\n\n\t\t// If the result is a Promise, then we must wait until it fulfills before cleaning up.\n\t\t// Per the JS spec, the only way to detect a Promise (since Promises can be polyfilled, extended, wrapped, etc) is to look for the 'then' method.\n\t\t// Anything with a 'then' function is technically a Promise. This leaves a path for false-positives, but I don't see a way to avoid this.\n\t\tif(typeof result?.then === 'function') {\n\t\t\tresult = result.then(\n\t\t\t\t// onResolved\n\t\t\t\tv => {\n\t\t\t\t\tthis._cleanup_call_wrapped(pend, is_dynamic_dispatch);\n\t\t\t\t\treturn v;\n\t\t\t\t},\n\t\t\t\t// onRejected\n\t\t\t\te => {\n\t\t\t\t\tthis._cleanup_call_wrapped(pend, is_dynamic_dispatch);\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\t// Otherwise, we can immediately cleanup.\n\t\telse {\n\t\t\tthis._cleanup_call_wrapped(pend, is_dynamic_dispatch);\n\t\t}\n\n\t\t// Done\n\t\treturn result;\n\t}\n\n\t_cleanup_call_wrapped(pend, is_dynamic_dispatch) {\n\t\tif(!this._pending_wrapped_calls_cnt)\n\t\t\tthrow new LibWrapperInternalError(`this._pending_wrapped_calls_cnt=${this._pending_wrapped_calls_cnt} should be unreachable at this point.`);\n\t\tthis._pending_wrapped_calls_cnt--;\n\n\t\tif(is_dynamic_dispatch) {\n\t\t\tconst pend_i = this._pending_wrapped_calls.indexOf(pend);\n\t\t\tif(pend_i < 0)\n\t\t\t\tthrow new LibWrapperInternalError(`Could not find 'pend' inside 'this._pending_wrapped_calls'.`);\n\n\t\t\tthis._pending_wrapped_calls.splice(pend_i, 1);\n\t\t}\n\t}\n\n\n\n\t// Main call wrapper logic\n\tcall_wrapper(state, obj, ...args) {\n\t\t// Keep track of call state\n\t\tif(state)\n\t\t\tthis._call_wrapper_update_state(state);\n\n\t\t// Set up basic information about this wrapper\n\t\tconst index = state?.index ?? 0;\n\t\tconst is_setter = state?.setter ?? false;\n\t\tconst fn_data = state?.fn_data ?? this.get_fn_data(is_setter);\n\n\t\t// Grab the next function data from the function data array\n\t\tconst data = fn_data[index];\n\n\t\t// If no methods exist, then finish the chain\n\t\tif(!data) {\n\t\t\tif(fn_data.length > 0)\n\t\t\t\tthrow new LibWrapperInternalError(`Must not have 'data===${data}' when 'fn_data.length==${fn_data.length}'.`);\n\n\t\t\t// There are no wrappers, return the wrapped value.\n\t\t\treturn this.call_wrapped(null, obj, ...args);\n\t\t}\n\n\t\t// Grab wrapper function from function data object\n\t\tconst fn = data.fn;\n\n\t\t// OVERRIDE type will usually not continue the chain\n\t\tif(!data.chain) {\n\t\t\t// Call next method in the chain\n\t\t\treturn fn.apply(obj, args);\n\t\t}\n\n\t\t// Get next index\n\t\tconst next_index = index + 1;\n\t\tconst is_last = (next_index >= fn_data.length);\n\n\t\t// Prepare the continuation of the chain\n\t\tconst next_state = {\n\t\t\tindex    : next_index,\n\t\t\tcalled   : false,\n\t\t\tvalid    : true,\n\t\t\tsetter   : is_setter,\n\t\t\tprev_data: data,\n\t\t\tfn_data  : fn_data\n\t\t};\n\n\t\t// Create the next wrapper function\n\t\tconst next_fn = is_last ? this.call_wrapped.bind(this, next_state, obj) : this.call_wrapper.bind(this, next_state, obj);\n\t\tthis._outstanding_wrappers++;\n\n\t\t// Try-catch block to handle normal exception flow\n\t\tlet result = undefined;\n\t\ttry {\n\t\t\t// Call next method in the chain\n\t\t\tresult = fn.call(obj, next_fn, ...args);\n\t\t}\n\t\tcatch(e) {\n\t\t\treturn this._cleanup_call_wrapper_thrown(next_state, e);\n\t\t}\n\n\t\t// If the result is a Promise, then we must wait until it fulfills before cleaning up.\n\t\t// Per the JS spec, the only way to detect a Promise (since Promises can be polyfilled, extended, wrapped, etc) is to look for the 'then' method.\n\t\t// Anything with a 'then' function is technically a Promise. This leaves a path for false-positives, but I don't see a way to avoid this.\n\t\tif(typeof result?.then === 'function') {\n\t\t\tresult = result.then(\n\t\t\t\t// onResolved\n\t\t\t\tv => this._cleanup_call_wrapper(v, next_state, data, fn_data, next_fn, obj, args),\n\t\t\t\t// onRejected\n\t\t\t\te => this._cleanup_call_wrapper_thrown(next_state, e)\n\t\t\t);\n\t\t}\n\t\t// Otherwise, we can immediately cleanup.\n\t\telse {\n\t\t\tresult = this._cleanup_call_wrapper(result, next_state, data, fn_data, next_fn, obj, args);\n\t\t}\n\n\t\t// Done\n\t\treturn result;\n\t}\n\n\t_call_wrapper_update_state(state) {\n\t\t// Keep track of call state\n\t\tif('valid' in state && !state.valid) {\n\t\t\tthrow new LibWrapperInvalidWrapperChainError(\n\t\t\t\tthis,\n\t\t\t\tstate.prev_data?.package_info,\n\t\t\t\t`This wrapper function for '${this.name}' is no longer valid, and must not be called.`\n\t\t\t);\n\t\t}\n\n\t\t// Mark this state object as called\n\t\tstate.called = true;\n\t}\n\n\t_invalidate_state(state) {\n\t\tstate.valid = false;\n\n\t\tthis._outstanding_wrappers--;\n\t\tif(this._outstanding_wrappers < 0)\n\t\t\tthrow new LibWrapperInternalError(`Outstanding wrappers = ${this._outstanding_wrappers}, should never fall below 0.`);\n\t}\n\n\t_cleanup_call_wrapper_thrown(next_state, e) {\n\t\t// An exception/rejection causes invalidation of next_state\n\t\tthis._invalidate_state(next_state);\n\n\t\t// Re-throw\n\t\tthrow e;\n\t}\n\n\t_cleanup_call_wrapper(result, next_state, data, fn_data, next_fn, obj, args) {\n\t\t// Try-finally to ensure we invalidate the wrapper even if this logic fails\n\t\ttry {\n\t\t\t// Check that next_fn was called\n\t\t\tif(!next_state.called) {\n\t\t\t\t// We need to collect affected package information if we're collecting statistics, or we haven't warned the user of this conflict yet.\n\t\t\t\tlet collect_affected = (!data.warned_conflict || LibWrapperStats.collect_stats);\n\t\t\t\tlet affectedPackages = null;\n\t\t\t\tlet is_last_wrapper = false;\n\n\t\t\t\tif(collect_affected) {\n\t\t\t\t\taffectedPackages = fn_data.slice(next_state.index).filter((x) => {\n\t\t\t\t\t\treturn !x.package_info.equals(data.package_info);\n\t\t\t\t\t}).map((x) => {\n\t\t\t\t\t\treturn x.package_info;\n\t\t\t\t\t});\n\n\t\t\t\t\tis_last_wrapper = (affectedPackages.length == 0);\n\n\t\t\t\t\tif(affectedPackages.length > 0)\n\t\t\t\t\t\tLibWrapperStats.register_conflict(data.package_info, affectedPackages, this.name);\n\t\t\t\t}\n\n\t\t\t\t// WRAPPER-type functions that do this are breaking an API requirement, as such we need to be loud about this.\n\t\t\t\t// As a \"punishment\" of sorts, we forcefully unregister them and ignore whatever they did.\n\t\t\t\tif(data.type == TYPES.WRAPPER) {\n\t\t\t\t\tLibWrapperNotifications.console_ui(\n\t\t\t\t\t\t`Error detected in ${data.package_info.logString}.`,\n\t\t\t\t\t\t`The wrapper for '${data.target}' registered by ${data.package_info.logString} with type WRAPPER did not chain the call to the next wrapper, which breaks a libWrapper API requirement. This wrapper will be unregistered.`,\n\t\t\t\t\t\t'error'\n\t\t\t\t\t);\n\n\t\t\t\t\tglobalThis.libWrapper.unregister(data.package_info.id, data.target);\n\n\t\t\t\t\t// Manually chain to the next wrapper if there are more in the chain\n\t\t\t\t\tif(!is_last_wrapper)\n\t\t\t\t\t\tresult = next_fn.apply(obj, args);\n\t\t\t\t}\n\n\t\t\t\t// Other TYPES get a generic 'conflict' message\n\t\t\t\telse if(!data.warned_conflict && !is_last_wrapper) {\n\t\t\t\t\tLibWrapperNotifications.conflict(data.package_info, affectedPackages, true, `${data.package_info.logStringCapitalized} did not chain the wrapper for '${data.target}'.`);\n\t\t\t\t\tdata.warned_conflict = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\t// Invalidate state to avoid asynchronous calls\n\t\t\tthis._invalidate_state(next_state);\n\t\t}\n\n\t\t// Done\n\t\treturn result;\n\t}\n\n\n\n\t// Non-property setter\n\tset_nonproperty(value, obj=null) {\n\t\tif(this.is_property)\n\t\t\tthrow new LibWrapperInternalError('Must not call \\'set_nonproperty\\' for a property wrapper.');\n\n\t\tconst inherited = (obj !== this.object);\n\n\t\t// If assigning to an instance directly, assign directly to instance\n\t\tif(inherited) {\n\t\t\tObject.defineProperty(obj, this.fn_name, {\n\t\t\t\tvalue: value,\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\twritable: true\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap the new value\n\t\tthis._wrapped = value;\n\t\tthis.skip_existing_handlers();\n\n\t\t// Warn user and/or log conflict\n\t\tthis.warn_classic_wrapper();\n\t}\n\n\n\n\t// Conflict logging utilities\n\tget_affected_packages() {\n\t\tconst affectedPackages = this.getter_data.map((x) => {\n\t\t\treturn x.package_info;\n\t\t});\n\n\t\treturn affectedPackages;\n\t}\n\n\twarn_classic_wrapper() {\n\t\tconst package_info = new PackageInfo();\n\t\tconst affectedPackages = this.get_affected_packages();\n\n\t\tif(affectedPackages.length > 0) {\n\t\t\tconst notify = LibWrapperStats.register_conflict(package_info, affectedPackages, this.name);\n\n\t\t\tif(notify) {\n\t\t\t\tLibWrapperNotifications.conflict(package_info, affectedPackages, true, `Detected non-libWrapper wrapping of '${this.name}' by ${package_info.logString}. This will potentially lead to conflicts.`);\n\n\t\t\t\tif(DEBUG && console.trace)\n\t\t\t\t\tconsole.trace();\n\t\t\t}\n\t\t}\n\n\t\tif(!this.detected_classic_wrapper)\n\t\t\tthis.detected_classic_wrapper = []\n\t\tthis.detected_classic_wrapper.push(package_info.key);\n\t}\n\n\n\n\t// Wraper array methods\n\t// NOTE: These should only ever be called from libWrapper, they do not clean up after themselves\n\tget_fn_data(setter, to_modify=false) {\n\t\t// to_modify=true must be used any time the fn_data array will be modified.\n\t\t// If there are any outstanding wrapper calls, this will force the creation of a copy of the array, to avoid affecting said outstanding wrapper calls.\n\n\t\t// Sanity check\n\t\tif(setter && !this.is_property)\n\t\t\tthrow new LibWrapperInternalError(`libWrapper: '${this.name}' does not wrap a property, thus setter=true is illegal.`);\n\n\t\t// Get current fn_data\n\t\tconst prop_nm = setter ? 'setter_data' : 'getter_data';\n\t\tlet result = this[prop_nm];\n\n\t\t// If we are going to modify the return result...\n\t\tif(to_modify) {\n\t\t\t// Duplicate fn_data if we are modifying it and there are outstanding wrappers\n\t\t\tif(this._outstanding_wrappers > 0) {\n\t\t\t\tresult = this[prop_nm].slice(0);\n\t\t\t\tthis[prop_nm] = result;\n\t\t\t}\n\n\t\t\t// Increment unique ID\n\t\t\tthis[`_${prop_nm}_id`]++;\n\t\t}\n\n\t\t// Done\n\t\treturn result;\n\t}\n\n\t_post_update_fn_data() {\n\t\tthis.update_use_static_dispatch();\n\t}\n\n\tsort() {\n\t\tfor(let setter of [false, true]) {\n\t\t\tif(setter && !this.is_property)\n\t\t\t\tcontinue;\n\n\t\t\tlet fn_data = this.get_fn_data(setter);\n\t\t\tfn_data.sort((a,b) => { return a.type - b.type || b.priority - a.priority });\n\t\t}\n\t}\n\n\tadd(data) {\n\t\t// Try to set a function name if there is none already\n\t\tconst fn = data.fn;\n\t\tif(!fn.name || fn.name === 'anonymous')\n\t\t\tset_function_name(fn, this._callstack_name(data.package_info.id ?? '<unknown>'));\n\n\t\t// Add to fn_data\n\t\tconst fn_data = this.get_fn_data(data.setter, true);\n\n\t\tfn_data.splice(0, 0, data);\n\t\tthis.sort(data.setter);\n\n\t\tthis._post_update_fn_data();\n\t}\n\n\tremove(data) {\n\t\tconst fn_data = this.get_fn_data(data.setter, true);\n\n\t\tconst index = fn_data.indexOf(data);\n\t\tfn_data.splice(index, 1);\n\n\t\tthis._post_update_fn_data();\n\t}\n\n\tclear() {\n\t\tthis.getter_data = [];\n\n\t\tif(this.is_property)\n\t\t\tthis.setter_data = [];\n\n\t\tthis._post_update_fn_data();\n\t}\n\n\tis_empty() {\n\t\treturn !this.getter_data.length && !this.setter_data?.length;\n\t}\n};\ndecorate_class_function_names(Wrapper);\n\n// Prevent modifications\nObject.freeze(Wrapper);","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright © 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {PACKAGE_ID, PACKAGE_TITLE, VERSION, TYPES_REVERSE, PERF_MODES_REVERSE} from '../consts.js';\nimport {LibWrapperStats} from './stats.js';\nimport {WRAPPERS} from '../utils/misc.js';\nimport {PackageInfo, PACKAGE_TYPES} from '../utils/package_info.js';\n\n// Map of currently loaded priorities\nexport const PRIORITIES = new Map();\n\nexport const load_priorities = function(value=null) {\n\t// Create existing priorities\n\tPRIORITIES.clear();\n\n\t// Parse config\n\tconst priority_cfg = value ?? game?.settings?.get(PACKAGE_ID, 'module-priorities');\n\tif(!priority_cfg)\n\t\treturn;\n\n\tfor(let type of ['prioritized', 'deprioritized']) {\n\t\tconst current = priority_cfg[type];\n\t\tif(!current)\n\t\t\tcontinue;\n\n\t\tconst base_priority = (type == 'prioritized') ? 10000 : -10000;\n\n\t\tlet new_current = null;\n\t\tObject.entries(current).forEach(entry => {\n\t\t\tlet [key, data] = entry;\n\n\t\t\t// Handle legacy format, if found\n\t\t\tif(!data.id) {\n\t\t\t\tdata = new PackageInfo(key, PACKAGE_TYPES.MODULE);\n\t\t\t\tkey = data.key;\n\t\t\t}\n\n\t\t\t// Add to priorities dictionary\n\t\t\tif(PRIORITIES.has(key))\n\t\t\t\treturn;\n\n\t\t\tPRIORITIES.set(key, base_priority - data.index);\n\t\t});\n\t}\n}\n\n\n\n// Main settings class\nexport class LibWrapperSettings extends FormApplication {\n\tstatic init() {\n\t\tgame.settings.register(PACKAGE_ID, 'notify-issues-gm', {\n\t\t\tname: 'Notify GM of Issues',\n\t\t\tdefault: true,\n\t\t\ttype: Boolean,\n\t\t\tscope: 'world',\n\t\t\tconfig: true,\n\t\t\thint: 'Whether to notify GMs when an issue is detected, for example a conflict.'\n\t\t});\n\n\t\tgame.settings.register(PACKAGE_ID, 'notify-issues-player', {\n\t\t\tname: 'Notify Players of Issues',\n\t\t\tdefault: false,\n\t\t\ttype: Boolean,\n\t\t\tscope: 'world',\n\t\t\tconfig: true,\n\t\t\thint: 'Whether to notify Players when an issue is detected, for example a conflict.'\n\t\t});\n\n\t\tgame.settings.register(PACKAGE_ID, 'high-performance-mode', {\n\t\t\tname: 'High-Performance Mode',\n\t\t\tdefault: false,\n\t\t\ttype: Boolean,\n\t\t\tscope: 'world',\n\t\t\tconfig: true,\n\t\t\thint: 'This disables most dynamic conflict detection capabilities in exchange for performance, especially relevant on low-end systems. Note that this will significantly decrease the chance conflicts are detected. As such, it is recommended to turn this off when installing or updating packages.'\n\t\t});\n\n\t\tgame.settings.registerMenu(PACKAGE_ID, 'menu', {\n\t\t\tname: '',\n\t\t\tlabel: `${PACKAGE_TITLE} Settings Menu`,\n\t\t\ticon: \"fas fa-cog\",\n\t\t\ttype: LibWrapperSettings,\n\t\t\trestricted: true\n\t\t});\n\n\t\tgame.settings.register(PACKAGE_ID, 'module-priorities', {\n\t\t\tname: '',\n\t\t\tdefault: {},\n\t\t\ttype: Object,\n\t\t\tscope: 'world',\n\t\t\tconfig: false,\n\t\t\tonChange: value => load_priorities()\n\t\t});\n\n\t\t// When done, load the priorities\n\t\tload_priorities();\n\t}\n\n\n\t// Settings UI\n\tstatic get defaultOptions() {\n\t\treturn {\n\t\t\t...super.defaultOptions,\n\t\t\ttemplate: `modules/${PACKAGE_ID}/templates/settings.html`,\n\t\t\theight: 700,\n\t\t\ttitle: `${PACKAGE_TITLE} Settings Menu`,\n\t\t\twidth: 600,\n\t\t\tclasses: [PACKAGE_ID, \"settings\"],\n\t\t\ttabs: [\n\t\t\t\t{\n\t\t\t\t\tnavSelector: '.tabs',\n\t\t\t\t\tcontentSelector: 'form',\n\t\t\t\t\tinitial: 'name'\n\t\t\t\t}\n\t\t\t],\n\t\t\tsubmitOnClose: false,\n\t\t\tcloseOnSubmit: false\n\t\t}\n\t}\n\n\tconstructor(object = {}, options) {\n\t\tsuper(object, options);\n\t}\n\n\tstatic showYesNoDialog(msg, yes_callback) {\n\t\tnew Dialog({\n\t\t\tcontent: msg,\n\t\t\tbuttons: {\n\t\t\t\tyes: {\n\t\t\t\t\ticon: '<i class=\"fas fa-check\"></i>',\n\t\t\t\t\tlabel: 'Yes',\n\t\t\t\t\tcallback: yes_callback\n\t\t\t\t},\n\t\t\t\tno: {\n\t\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\t\t\tlabel: 'No'\n\t\t\t\t}\n\t\t\t}\n\t\t}).render(true);\n\t}\n\n\tgetActiveWrappers() {\n\t\tlet data = [];\n\n\t\tWRAPPERS.forEach((wrapper) => {\n\t\t\tfor(let is_setter of [false, true]) {\n\t\t\t\tif(is_setter && !wrapper.is_property)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tlet name = wrapper.name;\n\t\t\t\tif(is_setter)\n\t\t\t\t\tname = `${name}#set`;\n\n\t\t\t\tlet _d = {\n\t\t\t\t\tname  : name,\n\t\t\t\t\tpackages: []\n\t\t\t\t};\n\n\t\t\t\twrapper.get_fn_data(is_setter).forEach((fn_data) => {\n\t\t\t\t\tif(fn_data.package_info.id == PACKAGE_ID)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tconst d = {\n\t\t\t\t\t\tname     : fn_data.package_info.settingsName,\n\t\t\t\t\t\ttype     : TYPES_REVERSE[fn_data.type],\n\t\t\t\t\t\tperf_mode: PERF_MODES_REVERSE[fn_data.perf_mode]\n\t\t\t\t\t};\n\n\t\t\t\t\tif(d.perf_mode == 'AUTO')\n\t\t\t\t\t\td.perf_mode = null;\n\t\t\t\t\telse\n\t\t\t\t\t\td.perf_mode = `, ${d.perf_mode}`;\n\n\t\t\t\t\t_d.packages.push(d);\n\t\t\t\t});\n\n\t\t\t\tif(wrapper.detected_classic_wrapper) {\n\t\t\t\t\twrapper.detected_classic_wrapper.forEach((key) => {\n\t\t\t\t\t\t_d.packages.push({\n\t\t\t\t\t\t\tinfo     : new PackageInfo(key),\n\t\t\t\t\t\t\ttype     : 'MANUAL',\n\t\t\t\t\t\t\tperf_mode: null\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif(_d.packages.length > 0)\n\t\t\t\t\tdata.push(_d);\n\t\t\t}\n\t\t});\n\n\t\tdata.sort((a,b) => b.packages.length - a.packages.length);\n\n\t\treturn data;\n\t}\n\n\tgetConflicts() {\n\t\tif(!LibWrapperStats.collect_stats)\n\t\t\treturn null;\n\n\t\tlet data = [];\n\n\t\tLibWrapperStats.conflicts.forEach((conflict) => {\n\t\t\tlet targets = [];\n\n\t\t\tdata.push({\n\t\t\t\tcount: conflict.count,\n\t\t\t\tpackage_id: conflict.package_info.settingsName,\n\t\t\t\tother_id: conflict.other_info.settingsName,\n\t\t\t\ttargets: targets\n\t\t\t});\n\n\t\t\tconflict.targets.forEach((count, target) => {\n\t\t\t\ttargets.push({target: target, count: count});\n\t\t\t});\n\n\t\t\ttargets.sort((a,b) => a.count - b.count);\n\t\t});\n\n\t\tdata.sort((a,b) => a.count - b.count);\n\n\t\treturn data;\n\t}\n\n\tgetPackages() {\n\t\tlet ret = {\n\t\t\tprioritized: [],\n\t\t\tnormal: [],\n\t\t\tdeprioritized: []\n\t\t};\n\n\t\tconst priorities = game.settings.get(PACKAGE_ID, 'module-priorities');\n\t\tconst cfg_prioritized   = priorities.prioritized   ?? {};\n\t\tconst cfg_deprioritized = priorities.deprioritized ?? {};\n\n\t\t// Normal packages\n\t\tif(LibWrapperStats.collect_stats) {\n\t\t\tLibWrapperStats.packages.forEach((key) => {\n\t\t\t\tconst info = new PackageInfo(key);\n\n\t\t\t\tif(info.key in cfg_prioritized || info.key in cfg_deprioritized)\n\t\t\t\t\treturn;\n\n\t\t\t\tret.normal.push(info);\n\t\t\t});\n\t\t\tret.normal.sort((a,b) => a.id.localeCompare(b.id));\n\t\t}\n\n\t\t// Prioritized packages\n\t\tObject.entries(cfg_prioritized).forEach((entry) => {\n\t\t\tlet [key, data] = entry;\n\n\t\t\t// Handle legacy format, if found\n\t\t\tif(!data.id) {\n\t\t\t\tdata = new PackageInfo(key, PACKAGE_TYPES.MODULE);\n\t\t\t\tkey = data.key;\n\t\t\t}\n\n\t\t\t// Push data\n\t\t\tret.prioritized.push({\n\t\t\t\tkey  : key,\n\t\t\t\tid   : data.id,\n\t\t\t\ttitle: data.title ?? `${data.title} <Inactive>`,\n\t\t\t\tindex: data.index\n\t\t\t});\n\t\t});\n\t\tret.prioritized.sort((a,b) => { return a.index - b.index });\n\n\t\t// Deprioritized packages\n\t\tObject.entries(cfg_deprioritized).forEach((entry) => {\n\t\t\tlet [key, data] = entry;\n\n\t\t\t// In case something went wrong and we have a duplicate package\n\t\t\tif(key in cfg_prioritized)\n\t\t\t\treturn;\n\n\t\t\t// Handle legacy format, if found\n\t\t\tif(!data.id) {\n\t\t\t\tdata = new PackageInfo(key, PACKAGE_TYPES.MODULE);\n\t\t\t\tkey = data.key;\n\t\t\t}\n\n\t\t\t// Push data\n\t\t\tret.deprioritized.push({\n\t\t\t\tkey  : key,\n\t\t\t\tid   : data.id,\n\t\t\t\ttitle: data.title ?? `${data.title} <Inactive>`,\n\t\t\t\tindex: data.index\n\t\t\t});\n\t\t});\n\t\tret.deprioritized.sort((a,b) => { return a.index - b.index });\n\n\t\t// Done\n\t\treturn ret;\n\t}\n\n\tgetData() {\n\t\tlet data = {\n\t\t\tabout: {\n\t\t\t\tname: PACKAGE_TITLE,\n\t\t\t\tversion: VERSION,\n\t\t\t\tcollect_stats: LibWrapperStats.collect_stats\n\t\t\t},\n\n\t\t\twrappers: this.getActiveWrappers(),\n\t\t\tconflicts: this.getConflicts(),\n\t\t\tpackages: this.getPackages()\n\t\t};\n\n\t\treturn data;\n\t}\n\n\tactivateListeners(html) {\n\t\tsuper.activateListeners(html);\n\n\t\tlet _this = this;\n\n\t\t// Tree view\n\t\thtml.find('.caret.has-nested').on('click', function(event) {\n\t\t\tconst $this = $(this);\n\n\t\t\t$this.parent().find('.nested').toggleClass('active');\n\t\t\t$this.toggleClass('caret-down');\n\t\t});\n\n\t\t// Reload button\n\t\thtml.find('button#reload').on('click', function(event) {\n\t\t\t_this.render(true);\n\t\t});\n\n\t\t// Easily focus the priority groups\n\t\thtml.find('.package-priority-group').on('click', function(event) {\n\t\t\tconst $this = $(this);\n\n\t\t\tconst select = $this.find('select');\n\n\t\t\tif(!select.is(':focus'))\n\t\t\t\tselect.focus();\n\t\t});\n\n\t\t// Change priority buttons\n\t\thtml.find('button.change-priority').on('click', function(event) {\n\t\t\tconst $this = $(this);\n\n\t\t\tconst which = $this.data('which');\n\t\t\tconst direction = $this.data('direction');\n\t\t\tconst up = (direction === 'up');\n\n\t\t\tconst list = html.find(`#${which}`);\n\t\t\tconst selected = list.find('option:selected');\n\n\t\t\tconst insertPos = up ? selected.prev() : selected.next();\n\n\t\t\tif(!insertPos.length)\n\t\t\t\treturn;\n\n\t\t\tif(up)\n\t\t\t\tinsertPos.before(selected);\n\t\t\telse\n\t\t\t\tinsertPos.after(selected);\n\t\t});\n\n\t\t// Change category buttons\n\t\thtml.find('button.change-category').on('click', function(event) {\n\t\t\tconst $this = $(this);\n\n\t\t\tconst _from = $this.data('from');\n\t\t\tconst _to = $this.data('to');\n\n\t\t\tconst from = html.find(`#${_from}`);\n\t\t\tconst to = html.find(`#${_to}`);\n\n\t\t\tconst element = from.find('option:selected');\n\n\t\t\t// Search for the element to focus next\n\t\t\tlet next_focus = element.next();\n\t\t\tif(next_focus.length == 0)\n\t\t\t\tnext_focus = element.prev();\n\n\t\t\t// Move to the destination list\n\t\t\tto.append(element);\n\n\t\t\t// If the destination was the 'normal', we need to sort it alphabetically\n\t\t\tif(_to == 'packages-normal') {\n\t\t\t\tconst options = to.find('option');\n\t\t\t\toptions.sort((a,b) => { return $(a).val() > $(b).val() ? 1 : -1 });\n\t\t\t\tto.empty().append(options);\n\t\t\t}\n\n\t\t\t// Focus the previous list again\n\t\t\tif(next_focus.length)\n\t\t\t\tfrom.val(next_focus.val());\n\n\t\t\tfrom.focus();\n\t\t});\n\n\t\t// Submit 'Priorities'\n\t\thtml.find('#submit').on('click', function(event) {\n\t\t\t// Collect prioritization order into hidden fields that will be submitted\n\t\t\tfor(let type of ['packages-prioritized', 'packages-deprioritized']) {\n\t\t\t\tconst select = html.find(`#${type}`);\n\n\t\t\t\tconst options = select.find('option');\n\n\t\t\t\tlet arr = [];\n\t\t\t\toptions.each((i, option) => {\n\t\t\t\t\tarr.push($(option).val());\n\t\t\t\t});\n\n\t\t\t\t$('<input>').attr('type', 'hidden').attr('name', `${type}-hidden`).attr('value', arr.join(',')).appendTo(html);\n\t\t\t}\n\n\t\t\thtml.submit();\n\t\t});\n\n\t\t// Reset button\n\t\thtml.find('#reset').on('click', function(event) {\n\t\t\t$('input[type=hidden]').remove();\n\n\t\t\tLibWrapperSettings.showYesNoDialog(\"<p>Resetting the package priorities will move all packages back to 'Unprioritized'. This action cannot be undone. Are you sure you want to continue?</p>\", () => {\n\t\t\t\tfor(let type of ['packages-prioritized', 'packages-deprioritized']) {\n\t\t\t\t\t$('<input>').attr('type', 'hidden').attr('name', `${type}-hidden`).attr('value', '').appendTo(html);\n\t\t\t\t}\n\n\t\t\t\thtml.submit();\n\t\t\t});\n\t\t});\n\t}\n\n\tasync _updateObject(ev, formData) {\n\t\t// Parse priorities\n\t\tconst priorities = game.settings.get(PACKAGE_ID, 'module-priorities');\n\n\t\tfor(let type of ['prioritized', 'deprioritized']) {\n\t\t\tconst fld = `packages-${type}-hidden`;\n\n\t\t\tif(!(fld in formData))\n\t\t\t\tcontinue;\n\n\t\t\tconst value = formData[fld];\n\t\t\tconst split = (value === '') ? [] : value.split(',');\n\n\t\t\tlet old_prio = priorities[type] ?? {};\n\t\t\tlet new_prio = {};\n\t\t\tlet counter = 0;\n\n\t\t\tsplit.forEach((key) => {\n\t\t\t\tif(!key)\n\t\t\t\t\treturn;\n\n\t\t\t\tconst old_data = old_prio[key];\n\t\t\t\tconst new_data = new PackageInfo(key);\n\n\t\t\t\tnew_prio[key] = {\n\t\t\t\t\tid   : new_data.id,\n\t\t\t\t\ttitle: new_data.exists ? new_data.title : old_data.title,\n\t\t\t\t\tindex: counter++\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tpriorities[type] = new_prio;\n\t\t}\n\n\t\t// Sanity check for duplicates\n\t\tObject.keys(priorities.deprioritized).forEach((key) => {\n\t\t\tif(key in priorities.prioritized)\n\t\t\t\tdelete priorities.deprioritized[key];\n\t\t});\n\n\t\t// Save\n\t\tawait game.settings.set(PACKAGE_ID, 'module-priorities', priorities);\n\n\t\t// Re-render\n\t\tthis.render(true);\n\n\t\t// Ask user to refresh page\n\t\tLibWrapperSettings.showYesNoDialog(\"<p>It is recommended you reload this page to apply the new package priorities. Do you wish to reload?</p>\", () => location.reload());\n\t}\n}\nObject.freeze(LibWrapperSettings);","// SPDX-License-Identifier: LGPL-3.0-or-later\n// Copyright © 2021 fvtt-lib-wrapper Rui Pinheiro\n\n'use strict';\n\nimport {\n\tPACKAGE_ID, MAJOR_VERSION, MINOR_VERSION, PATCH_VERSION, SUFFIX_VERSION, META_VERSION, VERSION, parse_manifest_version,\n\tIS_UNITTEST, PROPERTIES_CONFIGURABLE, DEBUG, setDebug,\n\tTYPES, TYPES_REVERSE, TYPES_LIST,\n\tPERF_MODES, PERF_MODES_REVERSE, PERF_MODES_LIST\n} from '../consts.js';\nimport {Wrapper} from './wrapper.js';\nimport {init_error_listeners, LibWrapperError, LibWrapperPackageError, LibWrapperAlreadyOverriddenError, LibWrapperInvalidWrapperChainError, LibWrapperInternalError, onUnhandledError} from '../utils/errors.js';\nimport {get_global_variable, WRAPPERS, decorate_name, decorate_class_function_names} from '../utils/misc.js';\nimport {PackageInfo} from '../utils/package_info.js';\nimport {LibWrapperNotifications} from '../ui/notifications.js'\nimport {LibWrapperStats} from '../ui/stats.js';\nimport {LibWrapperSettings, PRIORITIES} from '../ui/settings.js';\n\n// Internal variables\nlet libwrapper_ready = false;\nlet allow_libwrapper_registrations = true;\n\n\n// Internal Methods\nexport function _create_wrapper_from_object(obj, fn_name, name=undefined, package_info=undefined) {\n\tconst wrapper = new Wrapper(obj, fn_name, name, package_info);\n\tWRAPPERS.add(wrapper);\n\treturn wrapper;\n}\n\nfunction _split_target_and_setter(target) {\n\tlet is_setter = target.endsWith('#set');\n\tlet _target = !is_setter ? target : target.slice(0, -4);\n\n\treturn [_target, is_setter];\n}\n\nfunction _valid_identifier(ident) {\n\treturn /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(ident);\n}\n\nfunction _get_target_object(_target, package_info=undefined) {\n\t// Parse the target\n\tconst target = _split_target_and_setter(_target)[0];\n\n\tconst split = target.split('.');\n\tconst fn_name = split.pop();\n\n\t// Get root object\n\tconst root_nm = split.splice(0,1)[0];\n\tif(!_valid_identifier(root_nm))\n\t\tthrow new LibWrapperPackageError(`Invalid target '${target}.'`, package_info);\n\tif(root_nm == 'libWrapper')\n\t\tthrow new LibWrapperPackageError(`Not allowed to wrap libWrapper internals.`, package_info);\n\n\tconst root = get_global_variable(root_nm);\n\tif(!root)\n\t\tthrow new LibWrapperPackageError(`Could not find target '${target}'.`, package_info);\n\n\t// Get target object\n\tlet obj = root;\n\tfor(let scope of split) {\n\t\tif(!_valid_identifier(scope))\n\t\t\tthrow new LibWrapperPackageError(`Invalid target '${target}'.`, package_info);\n\n\t\tobj = obj[scope];\n\t\tif(!obj)\n\t\t\tthrow new LibWrapperPackageError(`Could not find target '${target}'.`, package_info);\n\t}\n\n\treturn [obj, fn_name, target];\n}\n\nfunction _create_wrapper(target, package_info=null) {\n\t// Create wrapper\n\treturn _create_wrapper_from_object(..._get_target_object(target), package_info);\n}\n\nfunction _find_wrapper_by_name(_name) {\n\tconst name = _split_target_and_setter(_name)[0];\n\n\tfor(let wrapper of WRAPPERS) {\n\t\tif(wrapper.names.indexOf(name) != -1)\n\t\t\treturn wrapper;\n\t}\n\n\treturn null;\n}\n\nfunction _find_package_data_in_wrapper(package_info, wrapper, is_setter) {\n\treturn wrapper.get_fn_data(is_setter).find((x) => x.package_info?.equals(package_info));\n}\n\nfunction _find_package_data_with_target(package_info, _target) {\n\tconst target_and_setter = _split_target_and_setter(_target);\n\tconst target    = target_and_setter[0];\n\tconst is_setter = target_and_setter[1];\n\n\tconst wrapper = _find_wrapper_by_name(target);\n\tif(!wrapper)\n\t\treturn null;\n\n\treturn _find_package_data_in_wrapper(package_info, wrapper, is_setter);\n}\n\nfunction _get_default_priority(package_info, target) {\n\tif(package_info.id === PACKAGE_ID)\n\t\treturn Number.MAX_VALUE;\n\n\tconst priority_cfg = PRIORITIES.get(package_info.key);\n\tif(priority_cfg !== undefined)\n\t\treturn priority_cfg;\n\n\treturn 0;\n}\n\n\nfunction _unwrap_if_possible(wrapper) {\n\tif(wrapper.is_empty() && PROPERTIES_CONFIGURABLE) {\n\t\twrapper.unwrap();\n\t\tWRAPPERS.delete(wrapper);\n\t}\n}\n\nexport function _clear(target) {\n\tconst wrapper = _find_wrapper_by_name(target);\n\n\tif(wrapper) {\n\t\twrapper.clear();\n\t\t_unwrap_if_possible(wrapper);\n\n\t\tconsole.info(`libWrapper: Cleared all wrapper functions for '${target}'.`);\n\t}\n}\n\nexport function _unwrap_all() {\n\tfor(let wrapper of WRAPPERS) {\n\t\twrapper.clear();\n\t\twrapper.unwrap();\n\t}\n\n\tWRAPPERS.clear();\n}\n\nfunction _get_package_info(package_id) {\n\tlet package_info = new PackageInfo();\n\n\tif(!package_id || typeof package_id !== 'string')\n\t\tthrow new LibWrapperPackageError('Parameter \\'package_id\\' must be a string.', package_info);\n\n\tif(package_info.exists) {\n\t\tif(package_id != package_info.id)\n\t\t\tthrow new LibWrapperPackageError(`${package_info.logStringCapitalized} is not allowed to call libWrapper with package_id='${package_id}'.`, package_info);\n\t}\n\telse {\n\t\tpackage_info = new PackageInfo(package_id);\n\t}\n\n\tif(package_id == PACKAGE_ID) {\n\t\tif(!allow_libwrapper_registrations)\n\t\t\tthrow new LibWrapperPackageError(`Not allowed to call libWrapper with package_id='${package_id}'.`, package_info);\n\t}\n\telse {\n\t\tif(!package_info.exists)\n\t\t\tthrow new LibWrapperPackageError(`Package '${package_id}' is not a valid package.`, package_info);\n\t}\n\n\treturn package_info;\n}\n\nlet FORCE_FAST_MODE = false;\nfunction _force_fast_mode(new_fast_mode) {\n\tFORCE_FAST_MODE = new_fast_mode;\n}\n\n\n\n// Publicly exposed class\nexport class libWrapper {\n\t// Properties\n\t/**\n\t * Get libWrapper version\n\t * @returns {string}  libWrapper version in string form, i.e. \"<MAJOR>.<MINOR>.<PATCH>.<SUFFIX><META>\"\n\t */\n\tstatic get version() { return VERSION; }\n\n\t/**\n\t * Get libWrapper version\n\t * @returns {[number,number,number,number,string]}  libWrapper version in array form, i.e. [<MAJOR>, <MINOR>, <PATCH>, <SUFFIX>, <META>]\n\t */\n\tstatic get versions() { return [MAJOR_VERSION, MINOR_VERSION, PATCH_VERSION, SUFFIX_VERSION, META_VERSION]; }\n\n\t/**\n\t * @returns {boolean}  The real libWrapper module will always return false. Fallback implementations (e.g. poly-fill / shim) should return true.\n\t */\n\tstatic get is_fallback() { return false; }\n\n\t/**\n\t * @returns {boolean}  Whether libWrapper is in debug mode.\n\t */\n\tstatic get debug() { return DEBUG; }\n\t/**\n\t * @param {boolean} value  Whether to enable or disable libWrapper debug mode.\n\t */\n\tstatic set debug(value) { setDebug(value) }\n\n\t// Errors\n\tstatic get LibWrapperError() { return LibWrapperError; };\n\tstatic get Error() { return LibWrapperError; }\n\n\tstatic get LibWrapperInternalError() { return LibWrapperInternalError; };\n\tstatic get InternalError() { return LibWrapperInternalError; }\n\n\tstatic get LibWrapperPackageError() { return LibWrapperPackageError; };\n\tstatic get PackageError() { return LibWrapperPackageError; };\n\n\tstatic get LibWrapperModuleError() { return LibWrapperPackageError; }; // Deprecated since v1.6.0.0\n\tstatic get ModuleError() { return LibWrapperPackageError; }; // Deprecated since v1.6.0.0\n\n\tstatic get LibWrapperAlreadyOverriddenError() { return LibWrapperAlreadyOverriddenError; };\n\tstatic get AlreadyOverriddenError() { return LibWrapperAlreadyOverriddenError; };\n\n\tstatic get LibWrapperInvalidWrapperChainError() { return LibWrapperInvalidWrapperChainError; };\n\tstatic get InvalidWrapperChainError() { return LibWrapperInvalidWrapperChainError; };\n\n\tstatic get onUnhandledError() { return onUnhandledError; };\n\n\n\t// Methods\n\t/**\n\t * Test for a minimum libWrapper version.\n\t * First introduced in v1.4.0.0.\n\t *\n\t * @param {number} major   Minimum major version\n\t * @param {number} minor   [Optional] Minimum minor version. Default is 0.\n\t * @param {number} patch   [Optional] Minimum patch version. Default is 0.\n\t * @param {number} suffix  [Optional] Minimum suffix version. Default is 0.\n\t * @returns {boolean}      Returns true if the libWrapper version is at least the queried version, otherwise false.\n\t */\n\tstatic version_at_least(major, minor=0, patch=0, suffix=0) {\n\t\tif(MAJOR_VERSION == major) {\n\t\t\tif(MINOR_VERSION == minor) {\n\t\t\t\tif(PATCH_VERSION == patch) {\n\t\t\t\t\treturn SUFFIX_VERSION == suffix;\n\t\t\t\t}\n\n\t\t\t\treturn PATCH_VERSION >= patch;\n\t\t\t}\n\n\t\t\treturn MINOR_VERSION > minor;\n\t\t}\n\t\treturn MAJOR_VERSION > major;\n\t}\n\n\t/**\n\t * Register a new wrapper.\n\t * Important: If called before the 'init' hook, this method will fail.\n\t *\n\t * In addition to wrapping class methods, there is also support for wrapping methods on specific object instances, as well as class methods inherited from parent classes.\n\t * However, it is recommended to wrap methods directly in the class that defines them whenever possible, as inheritance/instance wrapping is less thoroughly tested and will incur a performance penalty.\n\t *\n\t * Triggers FVTT hook 'libWrapper.Register' when successful.\n\t *\n\t * @param {string} package_id  The package identifier, i.e. the 'id' field in your module/system/world's manifest.\n\t * @param {string} target      A string containing the path to the function you wish to add the wrapper to, starting at global scope, for example 'SightLayer.prototype.updateToken'.\n\t *                             This works for both normal methods, as well as properties with getters. To wrap a property's setter, append '#set' to the name, for example 'SightLayer.prototype.blurDistance#set'.\n\t * @param {function} fn        Wrapper function. The first argument will be the next function in the chain, except for 'OVERRIDE' wrappers.\n\t *                             The remaining arguments will correspond to the parameters passed to the wrapped method.\n\t * @param {string} type        [Optional] The type of the wrapper. Default is 'MIXED'.\n\t *\n\t *   The possible types are:\n\t *\n\t *   'WRAPPER':\n\t *     Use if your wrapper will *always* call the next function in the chain.\n\t *     This type has priority over every other type. It should be used whenever possible as it massively reduces the likelihood of conflicts.\n\t *     Note that the library will auto-detect if you use this type but do not call the original function, and automatically unregister your wrapper.\n\t *\n\t *   'MIXED':\n\t *     Default type. Your wrapper will be allowed to decide whether it should call the next function in the chain or not.\n\t *     These will always come after 'WRAPPER'-type wrappers. Order is not guaranteed, but conflicts will be auto-detected.\n\t *\n\t *   'OVERRIDE':\n\t *     Use if your wrapper will *never* call the next function in the chain. This type has the lowest priority, and will always be called last.\n\t *     If another package already has an 'OVERRIDE' wrapper registered to the same method, using this type will throw a <libWrapper.LibWrapperAlreadyOverriddenError> exception.\n\t *     Catching this exception should allow you to fail gracefully, and for example warn the user of the conflict.\n\t *     Note that if the GM has explicitly given your package priority over the existing one, no exception will be thrown and your wrapper will take over.\n\t *\n\t * @param {Object} options [Optional] Additional options to libWrapper.\n\t *\n\t * @param {boolean} options.chain [Optional] If 'true', the first parameter to 'fn' will be a function object that can be called to continue the chain.\n\t *   Default is 'false' if type=='OVERRIDE', otherwise 'true'.\n\t *   First introduced in v1.3.6.0.\n\t *\n\t * @param {string} options.perf_mode [OPTIONAL] Selects the preferred performance mode for this wrapper. Default is 'AUTO'.\n\t *   It will be used if all other wrappers registered on the same target also prefer the same mode, otherwise the default will be used instead.\n\t *   This option should only be specified with good reason. In most cases, using 'AUTO' in order to allow the GM to choose is the best option.\n\t *   First introduced in v1.5.0.0.\n\t *\n\t *   The possible modes are:\n\t *\n\t *   'NORMAL':\n\t *     Enables all conflict detection capabilities provided by libWrapper. Slower than 'FAST'.\n\t *     Useful if wrapping a method commonly modified by other packages, to ensure most issues are detected.\n\t *     In most other cases, this mode is not recommended and 'AUTO' should be used instead.\n\t *\n\t *   'FAST':\n\t *     Disables some conflict detection capabilities provided by libWrapper, in exchange for performance. Faster than 'NORMAL'.\n\t *     Will guarantee wrapper call order and per-package prioritization, but fewer conflicts will be detectable.\n\t *     This performance mode will result in comparable performance to traditional non-libWrapper wrapping methods.\n\t *     Useful if wrapping a method called repeatedly in a tight loop, for example 'WallsLayer.testWall'.\n\t *     In most other cases, this mode is not recommended and 'AUTO' should be used instead.\n\t *\n\t *   'AUTO':\n\t *     Default performance mode. If unsure, choose this mode.\n\t *     Will allow the GM to choose which performance mode to use.\n\t *     Equivalent to 'FAST' when the libWrapper 'High-Performance Mode' setting is enabled by the GM, otherwise 'NORMAL'.\n\t */\n\tstatic register(package_id, target, fn, type='MIXED', options={}) {\n\t\t// Get package information\n\t\tconst package_info = _get_package_info(package_id);\n\n\t\t// Validate we're allowed to register wrappers at this moment\n\t\tif(package_id != PACKAGE_ID && !libwrapper_ready)\n\t\t\tthrow new LibWrapperPackageError('Not allowed to register wrappers before the \\'libWrapperReady\\' hook fires', package_info);\n\n\t\t// Validate other arguments\n\t\tif(!target || typeof target !== 'string')\n\t\t\tthrow new LibWrapperPackageError('Parameter \\'target\\' must be a string.', package_info);\n\n\t\tif(!fn || !(fn instanceof Function))\n\t\t\tthrow new LibWrapperPackageError('Parameter \\'fn\\' must be a function.', package_info);\n\n\t\ttype = TYPES[type.toUpperCase()];\n\t\tif(typeof type === 'undefined' || !(type in TYPES_REVERSE))\n\t\t\tthrow new LibWrapperPackageError(`Parameter 'type' must be one of [${TYPES_LIST.join(', ')}].`, package_info);\n\n\t\tconst chain = options?.chain ?? (type < TYPES.OVERRIDE);\n\t\tif(typeof chain !== 'boolean')\n\t\t\tthrow new LibWrapperPackageError(`Parameter 'chain' must be a boolean.`, package_info);\n\n\t\tif(IS_UNITTEST && FORCE_FAST_MODE)\n\t\t\toptions.perf_mode = 'FAST';\n\t\tconst perf_mode = PERF_MODES[options?.perf_mode?.toUpperCase() ?? 'AUTO'];\n\t\tif(typeof perf_mode === 'undefined' || !(perf_mode in PERF_MODES_REVERSE))\n\t\t\tthrow new LibWrapperPackageError(`Parameter 'perf_mode' must be one of [${PERF_MODES_LIST.join(', ')}].`, package_info);\n\n\n\t\t// Split '#set' from the target\n\t\tconst target_and_setter  = _split_target_and_setter(target);\n\t\tconst target_without_set = target_and_setter[0];\n\t\tconst is_setter          = target_and_setter[1];\n\n\t\t// Create wrapper\n\t\tlet wrapper = _create_wrapper(target, package_info);\n\n\t\t// Only allow '#set' when the wrapper is wrapping a property\n\t\tif(is_setter && !wrapper.is_property)\n\t\t\tthrow new LibWrapperPackageError(`Cannot register a wrapper for '${target}' by ${package_info.logString}' because '${target_without_set}' is not a property, and therefore has no setter.`, package_info);\n\n\t\t// Check if this wrapper is already registered\n\t\tif(_find_package_data_in_wrapper(package_info, wrapper, is_setter))\n\t\t\tthrow new LibWrapperPackageError(`A wrapper for '${target}' has already been registered by ${package_info.logString}.`, package_info);\n\n\t\t// Get priority\n\t\tconst priority = _get_default_priority(package_info, target);\n\n\t\t// Register this package as having wrapped something\n\t\t// We do this before checking for duplicate OVERRIDEs to ensure users can change this package's priorities regardless\n\t\tif(package_info.id != PACKAGE_ID)\n\t\t\tLibWrapperStats.register_package(package_info);\n\n\t\t// Only allow one 'OVERRIDE' type\n\t\tif(type >= TYPES.OVERRIDE) {\n\t\t\tconst existing = wrapper.get_fn_data(is_setter).find((x) => { return x.type == TYPES.OVERRIDE });\n\n\t\t\tif(existing) {\n\t\t\t\tif(priority <= existing.priority) {\n\t\t\t\t\tthrow new LibWrapperAlreadyOverriddenError(package_info, existing.package_info, wrapper.name);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// We trigger a hook first\n\t\t\t\t\tif(Hooks.call('libWrapper.OverrideLost', existing.package_info.id, package_info.id, wrapper.name) !== false) {\n\t\t\t\t\t\tLibWrapperStats.register_conflict(package_info, existing.package_info, wrapper.name);\n\t\t\t\t\t\tLibWrapperNotifications.conflict(existing.package_info, package_info, false,\n\t\t\t\t\t\t\t`${package_info.logStringCapitalized} has higher priority, and is replacing the 'OVERRIDE' registered by ${package_info.logString} for '${wrapper.name}'.`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Wrap\n\t\tlet data = {\n\t\t\tpackage_info : package_info,\n\t\t\ttarget       : target,\n\t\t\tsetter       : is_setter,\n\t\t\tfn           : fn,\n\t\t\ttype         : type,\n\t\t\twrapper      : wrapper,\n\t\t\tpriority     : priority,\n\t\t\tchain        : chain,\n\t\t\tperf_mode    : perf_mode\n\t\t};\n\n\t\twrapper.add(data);\n\n\t\t// Done\n\t\tif(DEBUG || (!IS_UNITTEST && package_info.id != PACKAGE_ID)) {\n\t\t\tHooks.callAll('libWrapper.Register', package_info.id, target, type, options);\n\t\t\tconsole.info(`libWrapper: Registered a wrapper for '${target}' by ${package_info.logString} with type ${TYPES_REVERSE[type]}.`);\n\t\t}\n\t}\n\n\t/**\n\t * Unregister an existing wrapper.\n\t *\n\t * Triggers FVTT hook 'libWrapper.Unregister' when successful.\n\t *\n\t * @param {string} package_id  The package identifier, i.e. the 'id' field in your module/system/world's manifest.\n\t * @param {string} target      A string containing the path to the function you wish to remove the wrapper from, starting at global scope. For example: 'SightLayer.prototype.updateToken'\n\t * @param {function} fail      [Optional] If true, this method will throw an exception if it fails to find the method to unwrap. Default is 'true'.\n\t */\n\tstatic unregister(package_id, target, fail=true) {\n\t\t// Get package information\n\t\tconst package_info = _get_package_info(package_id);\n\n\t\t// Find wrapper\n\t\tconst data = _find_package_data_with_target(package_info, target);\n\t\tif(!data) {\n\t\t\tif(fail)\n\t\t\t\tthrow new LibWrapperPackageError(`Cannot unregister '${target}' by ${package_info.logString} as no such wrapper has been registered`, package_info);\n\t\t\treturn;\n\t\t}\n\n\t\tconst wrapper = data.wrapper;\n\n\t\t// Remove from fn_data\n\t\twrapper.remove(data);\n\t\t_unwrap_if_possible(wrapper);\n\n\t\t// Done\n\t\tif(DEBUG || package_info.id != PACKAGE_ID) {\n\t\t\tHooks.callAll('libWrapper.Unregister', package_info.id, target);\n\t\t\tconsole.info(`libWrapper: Unregistered the wrapper for '${target}' by ${package_info.logString}.`);\n\t\t}\n\t}\n\n\t/**\n\t * Clear all wrappers created by a given package.\n\t *\n\t * Triggers FVTT hook 'libWrapper.ClearAll' when successful.\n\t *\n\t * @param {string} package_id  The package identifier, i.e. the 'id' field in your module/system/world's manifest.\n\t */\n\tstatic clear_all(package_id) {\n\t\t// Get package information\n\t\tconst package_info = _get_package_info(package_id);\n\n\t\t// Clear package wrappers\n\t\tfor(let wrapper of WRAPPERS) {\n\t\t\tthis.unregister(package_info.id, wrapper.name, false);\n\n\t\t\tif(wrapper.is_property)\n\t\t\t\tthis.unregister(package_info.id, `${wrapper.name}#set`, false);\n\t\t}\n\n\t\tif(DEBUG || package_info.id != PACKAGE_ID) {\n\t\t\tHooks.callAll('libWrapper.ClearAll', package_info.id);\n\t\t\tHooks.callAll('libWrapper.ClearModule', package_info.id); // Deprecated in v1.6.0.0\n\t\t\tconsole.info(`libWrapper: Cleared all wrapper functions by ${package_info.logString}.`);\n\t\t}\n\t}\n\n\t// Deprecated in v1.6.0.0\n\tstatic get clear_module() { return this.clear_all; }\n};\ndecorate_class_function_names(libWrapper);\nif(IS_UNITTEST) {\n\t// Some methods should be exposed during unit tests\n\tlibWrapper._UT_unwrap_all = _unwrap_all;\n\tlibWrapper._UT_create_wrapper_from_object = _create_wrapper_from_object\n\tlibWrapper._UT_clear = _clear;\n\tlibWrapper._UT_force_fast_mode = _force_fast_mode;\n\tlibWrapper._UT_get_force_fast_mode = (() => FORCE_FAST_MODE);\n}\nObject.freeze(libWrapper);\n\n\n\n// Define as property so that it can't be deleted\ndelete globalThis.libWrapper;\nObject.defineProperty(globalThis, 'libWrapper', {\n\tget: () => libWrapper,\n\tset: (value) => { throw `libWrapper: Not allowed to re-assign the global instance of libWrapper` },\n\tconfigurable: false\n});\n\n\n\n// Setup unhandled error listeners\ninit_error_listeners();\n\n// Initialize libWrapper right before the 'init' hook. Unit tests just initialize immediately\n{\n\tconst libWrapperInit = decorate_name('libWrapperInit');\n\tconst obj = {\n\t\t[libWrapperInit]: function(wrapped, ...args) {\n\t\t\t// Initialization steps\n\t\t\tlibwrapper_ready = true;\n\n\t\t\tparse_manifest_version();\n\t\t\tLibWrapperSettings.init();\n\t\t\tLibWrapperStats.init();\n\t\t\tLibWrapperNotifications.init();\n\n\t\t\t// Notify everyone the library has loaded and is ready to start registering wrappers\n\t\t\tconsole.info(`libWrapper ${VERSION}: Ready.`);\n\t\t\tHooks.callAll('libWrapper.Ready', libWrapper);\n\n\t\t\tconst result = wrapped(...args);\n\n\t\t\treturn result;\n\t\t}\n\t};\n\n\tif(!IS_UNITTEST)\n\t\tlibWrapper.register('lib-wrapper', 'Game.prototype.initialize', obj[libWrapperInit], 'WRAPPER', {perf_mode: 'FAST'});\n\telse\n\t\tobj[libWrapperInit](()=>{});\n}\n\n// Lock down registrations using package ID 'lib-wrapper'\nallow_libwrapper_registrations = false;"],"names":["PACKAGE_ID","VERSION","MAJOR_VERSION","MINOR_VERSION","PATCH_VERSION","SUFFIX_VERSION","META_VERSION","IS_UNITTEST","Game","PROPERTIES_CONFIGURABLE","DEBUG","TYPES_LIST","Object","freeze","TYPES","WRAPPER","MIXED","OVERRIDE","TYPES_REVERSE","key","PERF_MODES_LIST","PERF_MODES","STANDARD","AUTO","FAST","PERF_MODES_REVERSE","global_eval","eval","set_function_name","fn","name","displayName","defineProperty","value","writable","enumerable","configurable","e","decorate_name","suffix","decorate_class_function_names","klass","props","getOwnPropertyNames","push","getOwnPropertySymbols","prop","descriptor","getOwnPropertyDescriptor","get","set","prototype","WRAPPERS","Set","throw_error","message","globalThis","libWrapper","LibWrapperInternalError","Error","game_user_data","return_null","orig_game_user_data","game","user","data","userid","userId","user_data","users","find","x","_id","LibWrapperNotifications","[object Object]","ui_notifications_enabled","orig_game_user_isGM","isGM","undefined","role","game_user_isGM","settings","console","error","msg","this","NOTIFICATION_SET","has","add","notify","ui","notifications","call","permanent","ready","_ui","Hooks","once","bind","ui_msg","console_msg","vargs","package_info","other_info","potential","other","Array","isArray","length","map","id","join","logString","console_ui","PACKAGE_TYPES","UNKNOWN","MODULE","SYSTEM","WORLD","PACKAGE_TYPES_REVERSE","PackageInfo","type","detect_id","indexOf","from_key","detect_type","obj","constructor","stack_trace","set_unknown","old_stack_limit","stackTraceLimit","Infinity","stack","matches","matchAll","match","world","modules","system","active","known","exists","title","toLowerCase","split","logStringCapitalized","str","charAt","toUpperCase","slice","settingsName","LibWrapperStats","action","orig_game_user_can","can","permissions","game_permissions_str","rolePerms","JSON","parse","includes","game_user_can","collect_stats","_collect_stats","PACKAGES","CONFLICTS","Map","target","forEach","register_conflict","debug","count","targets","conflicts","packages","LibWrapperError","notification_fn","args","super","captureStackTrace","package_id","module","LibWrapperPackageError","possibly","LibWrapperAlreadyOverriddenError","conflicting_info","conflicting_id","conflicting_module","onUnhandled","LibWrapperInvalidWrapperChainError","wrapper","_wrapper","onUnhandledError","event","exc","reason","apply","warn","Wrapper","names","nm","arg1","fn_name","object","_lib_wrapper","is_property","_wrapped_getter","_wrapped_setter","_wrapped","_get_inherited_descriptor","getter_data","_getter_data_id","setter_data","_setter_data_id","_outstanding_wrappers","_current_handler_id","_pending_wrapped_calls","_pending_wrapped_calls_cnt","update_use_static_dispatch","_wrap","handler_id","_cached_handler_id","_cached_handler","_this","handler_nm","_callstack_name","wrapped","is_static_dispatch","use_static_dispatch","should_skip_wrappers","get_wrapped","get_static_dispatch_chain","call_wrapper","toString","handler","fn_data_id","dispatch_chain","_cached_static_dispatch_chain_id","_cached_static_dispatch_chain_obj","_cached_static_dispatch_chain","_init_dispatch_chain","call_wrapped","fn_data","get_fn_data","i","chain","perf_mode","SAFE","_calc_use_static_dispatch","getter_nm","setter_nm","setter","_get_handler","set_nonproperty","getter","iObj","getPrototypeOf","result","state","_call_wrapper_update_state","is_setter","is_dynamic_dispatch","pend","_cleanup_call_wrapped","then","v","pend_i","splice","index","next_index","is_last","next_state","called","valid","prev_data","next_fn","_cleanup_call_wrapper_thrown","_cleanup_call_wrapper","_invalidate_state","collect_affected","warned_conflict","affectedPackages","is_last_wrapper","filter","equals","unregister","conflict","skip_existing_handlers","warn_classic_wrapper","get_affected_packages","trace","detected_classic_wrapper","to_modify","prop_nm","sort","a","b","priority","_post_update_fn_data","PRIORITIES","load_priorities","clear","priority_cfg","current","base_priority","entries","entry","LibWrapperSettings","FormApplication","register","default","Boolean","scope","config","hint","registerMenu","label","icon","restricted","onChange","defaultOptions","template","height","width","classes","tabs","navSelector","contentSelector","initial","submitOnClose","closeOnSubmit","options","yes_callback","Dialog","content","buttons","yes","callback","no","render","_d","d","info","other_id","ret","prioritized","normal","deprioritized","priorities","cfg_prioritized","cfg_deprioritized","localeCompare","about","version","wrappers","getActiveWrappers","getConflicts","getPackages","html","activateListeners","on","$this","$","parent","toggleClass","select","is","focus","which","up","selected","insertPos","prev","next","before","after","_from","_to","from","to","element","next_focus","append","val","empty","arr","each","option","attr","appendTo","submit","remove","showYesNoDialog","ev","formData","fld","old_prio","new_prio","counter","old_data","new_data","keys","location","reload","libwrapper_ready","allow_libwrapper_registrations","_create_wrapper_from_object","_split_target_and_setter","endsWith","_valid_identifier","ident","test","_get_target_object","_target","pop","root_nm","root","varname","get_global_variable","_find_wrapper_by_name","_name","_find_package_data_in_wrapper","_unwrap_if_possible","is_empty","unwrap","delete","_get_package_info","FORCE_FAST_MODE","versions","is_fallback","InternalError","PackageError","LibWrapperModuleError","ModuleError","AlreadyOverriddenError","InvalidWrapperChainError","major","minor","patch","Function","target_and_setter","target_without_set","_create_wrapper","Number","MAX_VALUE","_get_default_priority","register_package","existing","callAll","fail","_find_package_data_with_target","clear_module","clear_all","_UT_unwrap_all","_UT_create_wrapper_from_object","_UT_clear","_UT_force_fast_mode","new_fast_mode","_UT_get_force_fast_mode","addEventListener","orig","_call","patched","replace","log","patched_fn","catch","err","init_error_listeners","libWrapperInit","version_str","parseInt","parse_manifest_version","init"],"mappings":"AAOO,MAAMA,EAAgB,cAOtB,IAAIC,EAAiB,GACjBC,GAAkB,EAClBC,GAAkB,EAClBC,GAAkB,EAClBC,GAAkB,EAClBC,EAAiB,GAyBrB,MAAMC,EAA+B,oBAATC,KACtBC,IAA0BF,EAKhC,IAAIG,GAAQ,EAMZ,MAAMC,EAAa,CAAC,UAAW,QAAS,YAC/CC,OAAOC,OAAOF,GAEP,MAAMG,EAAQ,CACpBC,QAAU,EACVC,MAAU,EACVC,SAAU,GAEXL,OAAOC,OAAOC,GAEP,MAAMI,EAAgB,GAC7B,IAAI,IAAIC,KAAOL,EACdI,EAAcJ,EAAMK,IAAQA,EAE7BP,OAAOC,OAAOK,GAKP,MAAME,EAAkB,CAAC,WAAY,OAAQ,QACpDR,OAAOC,OAAOO,GAEP,MAAMC,EAAa,CACzBC,SAAU,EACVC,KAAU,EACVC,KAAU,GAEXZ,OAAOC,OAAOQ,GAEP,MAAMI,EAAqB,GAClC,IAAI,IAAIN,KAAOE,EACdI,EAAmBJ,EAAWF,IAAQA,EAEvCP,OAAOC,OAAOY,GC/EP,MAAMC,EAAcC,KAcpB,SAASC,EAAkBC,EAAIC,GACrC,IAECD,EAAGE,YAAcD,EAGjBlB,OAAOoB,eAAeH,EAAI,OAAQ,CACjCI,MAAOH,EACPI,UAAU,EACVC,YAAY,EACZC,cAAc,IAGhB,MAAOC,GAEN,GAAG9B,EACF,MAAM8B,GAKF,SAASC,EAAcR,EAAMS,EAAO,IAC1C,MAAc,KAAXA,EACK,KAAKT,KAAQS,IAEb,KAAKT,IAKP,SAASU,EAA8BC,GAC7C,MAAMC,EAAQ9B,OAAO+B,oBAAoBF,GACzCC,EAAME,QAAQhC,OAAOiC,sBAAsBJ,IAE3C,IAAI,MAAMK,KAAQJ,EAAO,CACxB,MAAMK,EAAanC,OAAOoC,yBAAyBP,EAAOK,GAE3B,mBAArBC,EAAWd,OACpBL,EAAkBmB,EAAWd,MAAOK,EAAcQ,IACtB,mBAAnBC,EAAWE,KACpBrB,EAAkBmB,EAAWE,IAAKX,EAAcQ,EAAM,WAC1B,mBAAnBC,EAAWG,KACpBtB,EAAkBmB,EAAWG,IAAKZ,EAAcQ,EAAM,WAGrDL,EAAMU,WACRX,EAA8BC,EAAMU,WAK/B,MAAMC,EAAW,IAAIC,ICnE5B,SAASC,EAAYC,GACjB,MAAGC,WAAWC,WACJ,IAAID,WAAWC,WAAWC,wBAAwBH,GAElD,IAAII,MAAMJ,GAKjB,MAAMK,EAAiB,SAASC,GAAY,GAE/C,MAAMC,EAAsBC,MAAMC,MAAMC,KACxC,GAAGH,EACC,OAAOA,EAGX,MAAMI,EAASH,KAAKI,QAAUJ,KAAKE,KAAKE,OACxC,IAAID,EAAQ,CACR,GAAGL,EACC,OAAO,KACXP,EAAY,wCAIhB,MAAMc,EAAYL,KAAKE,KAAKI,MAAMC,MAAMC,GAAeA,EAAEC,KAAON,IAChE,IAAIE,EAAW,CACX,GAAGP,EACC,OAAO,KACXP,EAAY,iDAIhB,OAAOc,GC7BJ,MAAMK,EACZC,eAGAC,sCAEC,IACC,GD0D2B,SAASd,GAAY,GAE/C,MAAMe,EAAsBb,MAAMC,MAAMa,KACxC,QAA2BC,IAAxBF,EACC,OAAOA,EAGX,MAAMR,EAAYR,EAAeC,GACjC,OAAIO,EAIsB,IAAnBA,EAAUW,KAHN,KCnETC,IACF,IAAIjB,MAAMkB,UAAUhC,IAAIjD,EAAY,oBACnC,OAAO,OAGR,IAAI+D,MAAMkB,UAAUhC,IAAIjD,EAAY,wBACnC,OAAO,EAGV,MAAMqC,GAGL,OADA6C,QAAQC,MAAM,4FAA6F9C,IACpG,EAGR,OAAO,EAGRqC,WAAWU,EAAKvD,GACf,IAAIwD,KAAKV,yBACR,OAGD,GAAIU,KAAKC,kBAEJ,GAAGD,KAAKC,iBAAiBC,IAAIH,GACjC,YAFAC,KAAKC,iBAAmB,IAAIjC,IAI7BgC,KAAKC,iBAAiBE,IAAIJ,GAG1B,IAAIK,EAASjC,YAAYkC,IAAIC,cAC1BF,GACFA,EAAO5D,GAAI+D,KAAKH,EAAQ,eAAeL,IAAO,CAACS,UAAiB,SAANhE,IAG5D6C,UAAUU,EAAKvD,EAAG,SAEb2B,WAAWO,MAAM+B,MAGpBT,KAAKU,IAAIX,EAAKvD,GAFdmE,MAAMC,KAAK,QAASZ,KAAKU,IAAIG,KAAKb,KAAMD,EAAKvD,IAM/C6C,kBAAkByB,EAAQC,EAAavE,EAAG,WAAYwE,GACrDnB,QAAQrD,GAAI+D,KAAKV,QAAS,eAAeiB,MAAWC,OAAkBC,GAEtEhB,KAAKK,GAAG,GAAGS,qBAA2BtE,GAIvC6C,gBAAgB4B,EAAcC,EAAYC,EAAWJ,GACpD,IAAIK,EAEHA,EADEC,MAAMC,QAAQJ,GACPA,EAAWK,OAAS,EAAK,IAAIL,EAAWM,KAAKtC,GAAMA,EAAEuC,KAAIC,KAAK,SAAWR,EAAW,GAAGS,UAExFT,EAAWS,UAEpB3B,KAAK4B,WACJT,EAAY,uCAAuCF,EAAaU,iBAAiBP,KAAW,6BAA6BH,EAAaU,iBAAiBP,KACvJL,EACAI,EAAY,OAAS,UAIxBhE,EAA8BiC,GC3EvB,MAAMyC,EAAgB,CACzBC,QAAS,EACZC,OAAS,EACTC,OAAS,EACTC,MAAS,GAEV1G,OAAOC,OAAOqG,GAEP,MAAMK,EAAwB,GACrC,IAAI,IAAIpG,KAAO+F,EACdK,EAAsBL,EAAc/F,IAAQA,EAE7CP,OAAOC,OAAO0G,GASP,MAAMC,EACT9C,YAAYoC,EAAG,KAAMW,EAAK,MACtBpC,KAAKnC,IAAI4D,EAAIW,GAGjB/C,IAAIoC,EAAG,KAAMW,EAAK,KAAM5G,GAAO,GAC3B,IAAIiG,EACA,OAAOzB,KAAKqC,YAEhB,GAAiB,iBAAPZ,EACN,KAAM,8CAEV,GAAGA,EAAGa,QAlBQ,MAkBkB,EAC5B,OAAOtC,KAAKuC,SAASd,GAEzBzB,KAAKyB,GAAKA,EACVzB,KAAKoC,KAAOA,EAERA,GACApC,KAAKwC,cAENhH,GACCD,OAAOC,OAAOwE,MAGtBX,cACIW,KAAKyB,GAAK,YACVzB,KAAKoC,KAAOP,EAAcC,QAG9BzC,OAAOoD,GACH,OAAOA,GAAQA,EAAIC,cAAgB1C,KAAK0C,aAAiBD,EAAIhB,KAAOzB,KAAKyB,IAAQgB,EAAIL,OAASpC,KAAKoC,KAGvG/C,UAAUsD,GAGN,GAFA3C,KAAK4C,mBAEcnD,IAAhBkD,EAA2B,CAC1B,MAAME,EAAkBvE,MAAMwE,gBAK9B,GAJAxE,MAAMwE,gBAAkBC,EAAAA,EACxBJ,EAAcrE,QAAQ0E,MACtB1E,MAAMwE,gBAAkBD,GAEpBF,EACA,OAGR,MAAMM,EAAUN,EAAYO,SAAS,6CACrC,GAAID,EAGJ,IAAI,IAAIE,KAASF,EAAS,CACtB,MAAMb,EAAOe,EAAM,GACb1G,EAAO0G,EAAM,GAEnB,GAAY,WAATf,GACC,GAAG3F,GAAQiC,KAAKE,KAAKwE,MAAM3B,GACvB,OAAOzB,KAAKnC,IAAIpB,EAAMoF,EAAcI,WAEvC,CAAA,GAAY,YAATG,EAIH,CAAA,GAAY,YAATA,EAAoB,CACxB,IAAI3F,GAAQA,GAAQ9B,IAAe+D,MAAM2E,SAASnD,IAAIzD,GAClD,SAEJ,OAAOuD,KAAKnC,IAAIpB,EAAMoF,EAAcE,QAGpC,MAAM,IAAIzD,MAAM,oCAAoC8D,KAVpD,GAAG3F,GAAQiC,KAAKE,KAAK0E,OAAO7B,GACxB,OAAOzB,KAAKnC,IAAIpB,EAAMoF,EAAcG,UAcpD3C,cAEQX,MAAM2E,QASP3E,KAAK2E,QAAQzF,IAAIoC,KAAKyB,KAAK8B,OAC1BvD,KAAKoC,KAAOP,EAAcE,OACtB/B,KAAKyB,KAAO/C,KAAKE,KAAK0E,OAAO7B,GACjCzB,KAAKoC,KAAOP,EAAcG,OACtBhC,KAAKyB,KAAO/C,KAAKE,KAAKwE,MAAM3B,GAChCzB,KAAKoC,KAAOP,EAAcI,MAE1BjC,KAAKoC,KAAOP,EAAcC,QAfvB9B,KAAKyB,KAAO9G,EACXqF,KAAKoC,KAAOP,EAAcE,OAE1B/B,KAAKoC,KAAOP,EAAcC,QAetC0B,YACI,OAAOxD,KAAKoC,MAAQP,EAAcC,QAGtC2B,aACI,OAAOzD,KAAKoC,MACR,KAAKP,EAAcE,OACf,OAAOrD,KAAK2E,QAAQzF,IAAIoC,KAAKyB,KAAK8B,OACtC,KAAK1B,EAAcG,OACf,OAAOtD,KAAKE,KAAK0E,OAAO7B,KAAOzB,KAAKyB,GACxC,KAAKI,EAAcI,MACf,OAAOvD,KAAKE,KAAKwE,MAAM3B,KAAOzB,KAAKyB,GACvC,QACI,OAAO,GAInB7C,WACI,IAAIoB,KAAKyD,OACL,OAAO,KAEX,OAAOzD,KAAKoC,MACR,KAAKP,EAAcE,OACf,OAAOrD,KAAK2E,QAAQzF,IAAIoC,KAAKyB,KAAK7C,KACtC,KAAKiD,EAAcG,OACf,OAAOtD,KAAKE,KAAK0E,OAAO1E,KAC5B,KAAKiD,EAAcI,MACf,OAAOvD,KAAKE,KAAKwE,MACrB,QACI,OAAO,MAInBM,YACI,IAAI1D,KAAKyD,OACL,MAAO,UAEX,OAAOzD,KAAKoC,MACR,KAAKP,EAAcE,OACnB,KAAKF,EAAcG,OACnB,KAAKH,EAAcI,MACf,OAAOjC,KAAKpB,KAAK8E,MACrB,QACI,MAAO,WAInB5H,UACI,MAAO,GAAGoG,EAAsBlC,KAAKoC,MAAMuB,iBAAgC3D,KAAKyB,KAGpFpC,SAASvD,GACL,MAAM8H,EAAQ9H,EAAI8H,MA1JJ,KA2Jd,GAAoB,IAAjBA,EAAMrC,OACL,KAAM,uBAAuBzF,KAEjCkE,KAAKnC,IAAI+F,EAAM,GAAI/B,EAAc+B,EAAM,KAG3CjC,gBACI,OAAI3B,KAAKwD,MAGF,GAAGtB,EAAsBlC,KAAKoC,MAAMuB,kBAAkB3D,KAAKyB,MAFvD,qBAKfoC,2BACI,IAAIC,EAAM9D,KAAK2B,UACf,OAAOmC,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,GAGnDC,mBACI,OAAOlE,KAAKoC,MACR,KAAKP,EAAcE,OACf,OAAO/B,KAAKyB,GAChB,KAAKI,EAAcG,OACf,MAAO,GAAGhC,KAAKyB,cACnB,KAAKI,EAAcI,MACf,MAAO,GAAGjC,KAAKyB,aACnB,QACI,OAAOzB,KAAKyB,KAI5BlG,OAAOC,OAAO2G,GCzMP,MAAMgC,EACZ9E,wBAEC,IACC,OH+B0B,SAAS+E,EAAQ5F,GAAY,GAEtD,MAAM6F,EAAqB3F,MAAMC,MAAM2F,IACvC,GAAGD,EACC,OAAOA,EAAmBD,GAG9B,MAAMrF,EAAYR,EAAeC,GACjC,IAAIO,EACA,OAAO,KAGX,GAAsB,IAAnBA,EAAUW,KACT,OAAO,EAGX,GAAG0E,KAAUrF,EAAUwF,YAAa,OAAOxF,EAAUwF,YAAYH,GAGjE,MAAMI,EAAuB9F,KAAKE,KAAKgB,SAASX,MAAMC,GAAyB,qBAAVA,EAAEpD,MACvE,GAAG0I,GAAsB5H,MAAO,CAC5B,MAEM6H,EAFmBC,KAAKC,MAAMH,EAAqB5H,OAEtBwH,GACnC,GAAGK,GAAaA,EAAUG,SAAS7F,EAAUW,MACzC,OAAO,EAGf,OAAO,EG3DDmF,CAAc,mBAEtB,MAAM7H,GACL,GAAG9B,EACF,MAAM8B,EAUP,OARAoC,EAAwBwC,WACvB,+DACA,2DACA,OACA5E,IAIM,GAITqC,cACCW,KAAK8E,cAAgB9E,KAAK+E,iBAGtB/E,KAAK8E,gBAGT9E,KAAKgF,SAAY,IAAIhH,IACrBgC,KAAKiF,UAAY,IAAIC,KAGtB7F,wBAAwB4B,GACnBjB,KAAK8E,eAGN7D,EAAaQ,IAAM9G,GAGtBqF,KAAKgF,SAAS7E,IAAIc,EAAanF,KAGhCuD,yBAAyB4B,EAAcC,EAAYiE,GAClD,IAAInF,KAAK8E,cACR,OAED,IAAI5D,EACH,OAED,GAAGG,MAAMC,QAAQJ,GAAa,CAC7B,IAAId,GAAS,EAIb,OAHAc,EAAWkE,SAAShE,IACnBhB,GAAU+D,EAAgBkB,kBAAkBpE,EAAcG,EAAO+D,MAE3D/E,EAIR,IAAyF,IAAtFO,MAAMJ,KAAK,8BAA+BU,EAAaQ,GAAIP,EAAWO,GAAI0D,GAE5E,OADAtF,QAAQyF,MAAM,oBAAoBrE,EAAaU,iBAAiBT,EAAWS,mBAAmBwD,sEACvF,EAIR,MAAMrJ,EAAM,GAAGmF,EAAanF,OAAOoF,EAAWpF,MAE9C,IAAI8C,EAAOoB,KAAKiF,UAAUrH,IAAI9B,GAe9B,OAdI8C,IACHA,EAAO,CACN2G,MAAO,EACPtE,aAAcA,EACdC,WAAYA,EACZsE,QAAS,IAAIN,KAEdlF,KAAKiF,UAAUpH,IAAI/B,EAAK8C,IAGzBA,EAAK2G,QACL3G,EAAK4G,QAAQ3H,IAAIsH,GAASvG,EAAK4G,QAAQ5H,IAAIuH,IAAW,GAAK,IAGpD,EAGRM,uBACC,OAAOzF,KAAKiF,UAGbS,sBACC,OAAO1F,KAAKgF,UCrFP,MAAMW,UAAwBrH,MACpCe,YAAYyB,EAAQC,EAAa6E,KAAoBC,GACpDC,MAAM,GAAGhF,MAAWC,OAAkB8E,GAGlCvH,MAAMyH,mBACTzH,MAAMyH,kBAAkB/F,KAAMA,KAAK0C,aACpC1C,KAAKvD,KAAOuD,KAAK0C,YAAYjG,KAG7BuD,KAAKc,OAASA,EACdd,KAAKe,YAAcA,EACnBf,KAAK4F,gBAAkBA,GAAmB,QAM3CvG,gBAGD9D,OAAOC,OAAOmK,GAKP,MAAMtH,UAAgCsH,EAC5CtG,YAAY0B,KAAgB8E,GAC3B,MAAM5E,EAAe,IAAIkB,EAEzB2D,MACC7E,EAAauC,MAAQ,gDAAgDvC,EAAaU,aAC7D,2BAErBZ,EACA,WACG8E,GAIJ7F,KAAKiB,aAAeA,EAMrB+E,iBAAmB,OAAOhG,KAAKiB,cAAcQ,GAM7CwE,aAAe,OAAOjG,KAAKgG,YAE5BzK,OAAOC,OAAO6C,GAKP,MAAM6H,UAA+BP,EAC3CtG,YAAY0B,EAAaE,KAAiB4E,GACzC,IAAIM,GAAW,EAEXlF,EAIIA,GAAcyB,cAAgBP,IACrClB,EAAe,IAAIkB,EAAYlB,KAJ/BA,EAAe,IAAIkB,EACnBgE,GAAW,GAMZL,MACCK,EAAW,+BAA+BlF,EAAaU,aAC5C,qBAAqBV,EAAaU,aAC7CZ,EACA,WACG8E,GAIJ7F,KAAKiB,aAAeA,EAMrB+E,iBAAmB,OAAOhG,KAAKiB,cAAcQ,GAM7CwE,aAAe,OAAOjG,KAAKgG,YAE5BzK,OAAOC,OAAO0K,GAKP,MAAME,UAAyCT,EACrDtG,YAAY4B,EAAcoF,EAAkBlB,KAAWU,GACnD5E,GAAcyB,cAAgBP,IAChClB,EAAe,IAAIkB,EAAYlB,IAE7BoF,GAAkB3D,cAAgBP,IACpCkE,EAAmB,IAAIlE,EAAYkE,IAEpCP,MACC,6BAA6B7E,EAAaU,iBAAiB0E,EAAiB1E,aAC5E,mBAAmBwD,UAAelE,EAAaU,wGAAwG0E,EAAiB1E,aACxK,WACGkE,GAIJ7F,KAAKiB,aAAeA,EACpBjB,KAAKqG,iBAAmBA,EACxBrG,KAAKmF,OAASA,EAMfa,iBAAmB,OAAOhG,KAAKiB,cAAcQ,GAM7CwE,aAAe,OAAOjG,KAAKgG,WAK3BM,qBAAuB,OAAOtG,KAAKqG,kBAAkB5E,GAMrD8E,yBAA2B,OAAOvG,KAAKsG,eAKvCjH,cACCyG,MAAMU,cAENrC,EAAgBkB,kBAAkBrF,KAAKiB,aAAcjB,KAAKqG,iBAAkBrG,KAAKmF,SAGnF5J,OAAOC,OAAO4K,GAKP,MAAMK,UAA2Cd,EACvDtG,YAAYqH,EAASzF,EAAcF,KAAgB8E,GAC/C5E,GAAcyB,cAAgBP,IAChClB,EAAe,IAAIkB,EAAYlB,IAEhC6E,MACC,sBAAsB7E,EAAaU,cACnCZ,EACA,WACG8E,GAIJ7F,KAAK2G,SAAWD,EAChB1G,KAAKiB,aAAeA,EAMrB+E,iBAAmB,OAAOhG,KAAKiB,cAAcQ,GAM7CwE,aACC,OAAOjG,KAAKgG,YAGdzK,OAAOC,OAAOiL,GAKP,MAAMG,EAAmB,SAASC,GAExC,IAEC,MAAMC,EAAMD,EAAME,QAAUF,EAAM/G,OAAS+G,EAC3C,KAAIC,GAASA,aAAenB,GAC3B,OAGEmB,EAAIhG,QAAUgG,EAAIlB,iBACpBxG,EAAwBiB,GAAG,GAAGyG,EAAIhG,0BAA2BgG,EAAIlB,iBAG/DkB,EAAIN,aACNM,EAAIN,YAAYQ,MAAMF,GAExB,MAAO9J,GACN6C,QAAQoH,KAAK,wEAAyEjK,KChNjF,MAAMkK,EAEZzK,WACC,OAAOuD,KAAKmH,MAAM,GAKnB9H,gBAAgB+H,EAAIC,EAAKrH,KAAKvD,MAC7B,OAAOQ,EAAcoK,EAAMD,GAM5B/H,YAAaoD,EAAK6E,EAAS7K,EAAgBwE,GAE1CjB,KAAKsH,QAAUA,EACftH,KAAKuH,OAAU9E,EAGf,IAAI/E,EAAanC,OAAOoC,yBAAyB8E,EAAK6E,GAEtD,GAAG5J,EAAY,CACd,GAAGA,EAAWE,KAAK4J,aAAc,CAChC,IAAId,EAAUhJ,EAAWE,KAAK4J,aAK9B,GAHG/K,IAASiK,EAAQS,MAAM7E,QAAQ7F,IACjCiK,EAAQS,MAAM5J,KAAKd,GAEjBiK,GAAWA,aAAmB1G,KAAK0C,YACrC,OAAOgE,EAGT,IAA+B,IAA5BhJ,EAAWX,aACb,MAAM,IAAImJ,EAAuB,gBAAgBzJ,+EAAmFwE,GAGjIvD,EAAWE,KACboC,KAAKyH,aAAc,EACnBzH,KAAK0H,gBAAkBhK,EAAWE,IAClCoC,KAAK2H,gBAAkBjK,EAAWG,MAGlCmC,KAAKyH,aAAc,EACnBzH,KAAK4H,SAAWlK,EAAWd,WAIzB,CAGJ,GAFAc,EAAasC,KAAK6H,6BAEdnK,EACH,MAAM,IAAIwI,EAAuB,2BAA2BzJ,mDAAuDwE,GAEpH,MAAMyF,EAAUhJ,EAAWE,KAAK4J,aAE7Bd,EACF1G,KAAKyH,YAAcf,EAAQe,YAGxB/J,EAAWE,KAAOF,EAAWG,IAC/BmC,KAAKyH,aAAc,EAEnBzH,KAAKyH,aAAc,EAKtBzH,KAAKmH,MAAU,GAEfnH,KAAK8H,YAAc,GACnB9H,KAAK+H,gBAAkB,EACpB/H,KAAKyH,cACPzH,KAAKgI,YAAc,GACnBhI,KAAKiI,gBAAkB,GAGxBjI,KAAKuD,QAAU,EAEfvD,KAAKkI,sBAAwB,EAC7BlI,KAAKmI,oBAAsB,EAEvBnI,KAAKyH,cACRzH,KAAKoI,uBAAyB,GAC9BpI,KAAKqI,2BAA6B,GAGnCrI,KAAKsI,6BAGD7L,IACHA,EAAO6K,IAEwB,GAA7BtH,KAAKmH,MAAM7E,QAAQ7F,IACrBuD,KAAKmH,MAAM5J,KAAKd,GAGjBuD,KAAKuI,QAKNlJ,eAEC,MAAMmJ,EAAaxI,KAAKmI,oBACxB,GAAGK,IAAexI,KAAKyI,mBACtB,OAAOzI,KAAK0I,gBAGb,MAAMC,EAAQ3I,KACR4I,EAAa5I,KAAK6I,gBAAgBL,GAClCM,EAAU9I,KAAK4H,SAGfnF,EAAM,CACXpD,CAACuJ,GAAa,YAAY/C,GACzB,MAAMkD,EAAqBJ,EAAMK,oBAGjC,OAAGL,EAAMM,qBAAqBjJ,KAAMwI,EAAYO,GACxCJ,EAAMO,YAAYlJ,MAAM,EAAO8I,GAAS9B,MAAMhH,KAAM6F,GAKxDkD,EACKJ,EAAMQ,0BAA0BnJ,MAAMgH,MAAMhH,KAAM6F,GAElD8C,EAAMS,aAAa,KAAMpJ,QAAS6F,IAI5CwD,SAAc,WACb,OAAOV,EAAMO,YAAYlJ,MAAMqJ,aAG3BC,EAAU7G,EAAImG,GAQpB,OAPAU,EAAQD,SAAW5G,EAAc,SAGjCzC,KAAK0I,gBAAkBY,EACvBtJ,KAAKyI,mBAAqBD,EAGnBc,EAGRjK,0BAA0BoD,GACzB,MAAM8G,EAAavJ,KAAK+H,gBACxB,IAAIyB,EAAiB,KAGrB,GAAGD,IAAevJ,KAAKyJ,kCAAoChH,IAAQzC,KAAK0J,kCACvEF,EAAiBxJ,KAAK2J,kCAGlB,CACJ,MAAMC,EAAuB,KAC5BJ,EAAiBxJ,KAAK6J,aAAahJ,KAAKb,KAAiB,KAAMyC,IAI1DqH,EAAU9J,KAAK+J,aAAY,GACjC,IAAI,IAAIC,EAAIF,EAAQvI,OAAO,EAAGyI,GAAK,EAAGA,IAAK,CAC1C,MAAMpL,EAAOkL,EAAQE,GACfxN,EAAKoC,EAAKpC,GAGZoC,EAAKqL,OAIJT,GACHI,IAEDJ,EAAiBhN,EAAGqE,KAAK4B,EAAK+G,IAN9BA,EAAiBhN,EAAGqE,KAAK4B,GAUvB+G,GACHI,IAGD5J,KAAK0J,kCAAoCjH,EACzCzC,KAAKyJ,iCAAoCF,EACzCvJ,KAAK2J,8BAAoCH,EAI1C,OAAOA,EAGRnK,qBAAqBoD,EAAK+F,EAAYO,GAErC,GAAGP,GAAcxI,KAAKmI,oBACrB,OAAO,EAGR,GAAGK,EAAaxI,KAAKmI,oBACpB,MAAM,IAAI9J,EAAwB,2BAA2BmK,gCAAyCxI,KAAKmI,uBAG5G,IAAInI,KAAKyH,YAAa,CAErB,GAAGzH,KAAKqI,4BAA8B,EACrC,OAAO,EAGR,IAAIU,EAAoB,CAEvB,GADe/I,KAAKoI,uBAAuB9F,QAAQG,GACvC,EACX,OAAO,GAIV,OAAO,EAGRpD,yBACCW,KAAKmI,sBAGN9I,4BAEC,MAAMyK,EAAU9J,KAAK+J,aAAY,GAEjC,IAAIG,EACJ,IAAI,MAAMtL,KAAQkL,EACjB,GAAIlL,EAAKsL,UAGT,QAAiBzK,IAAdyK,EACFA,EAAYtL,EAAKsL,eAEb,GAAGA,IAActL,EAAKsL,UAAW,CACrCA,EAAYlO,EAAWE,KACvB,MAIF,OAAGgO,IAAclO,EAAWG,MAEpB+N,IAAclO,EAAWmO,QAI7BzL,MAAMkB,UAAUhC,IAAIjD,EAAY,yBAQrC0E,6BACCW,KAAKgJ,oBAAsBhJ,KAAKoK,4BAKjC/K,QACC,GAAGW,KAAKuD,OACP,OAID,MAAM8G,EAAYrK,KAAK6I,gBAAgB,UACjCyB,EAAYtK,KAAK6I,gBAAgB,UACvC,IAAIpG,EAEJ,GAAIzC,KAAKyH,YAYJ,CAEJ,MAAMkB,EAAQ3I,KAEdyC,EAAM,CACLpD,CAACgL,GAAY,YAAYxE,GACxB,OAAO8C,EAAMS,aAAa,KAAMpJ,QAAS6F,IAG1CxG,CAACiL,GAAY,YAAYzE,GACxB,OAAO8C,EAAMS,aAAa,CAACmB,QAAQ,GAAOvK,QAAS6F,SAtBhC,CACrB,MAAM8C,EAAQ3I,KAGdyC,EAAM,CACLpD,CAACgL,GAAY,IAAM1B,EAAM6B,eAEzBnL,CAACiL,GAAY,SAAS1N,GACrB,OAAO+L,EAAM8B,gBAAgB7N,EAAOoD,QAmBvC,MAAM0K,EAASjI,EAAI4H,GACbE,EAAS9H,EAAI6H,GAGnBI,EAAOlD,aAAexH,KAGtBzE,OAAOoB,eAAeqD,KAAKuH,OAAQvH,KAAKsH,QAAS,CAChD1J,IAAK8M,EACL7M,IAAK0M,EACLxN,aAAc3B,IAGf4E,KAAKuD,QAAS,EAEd1D,QAAQyF,MAAM,wBAAwBtF,KAAKvD,UAG5C4C,SACC,GAAIW,KAAKuD,OAAT,CAGA,IAAInI,EACH,MAAM,IAAIiD,EAAwB,wEAI5B2B,KAAKuH,OAAOvH,KAAKsH,SAErBtH,KAAKyH,YACPlM,OAAOoB,eAAeqD,KAAKuH,OAAQvH,KAAKsH,QAAS,CAChD1J,IAAKoC,KAAK0H,gBACV7J,IAAKmC,KAAK2H,gBACV5K,cAAc,IAIfiD,KAAKuH,OAAOvH,KAAKsH,SAAWtH,KAAK4H,SAKlC5H,KAAKuD,QAAS,EAEd1D,QAAQyF,MAAM,0BAA0BtF,KAAKvD,WAM9C4C,4BACC,IAAIsL,EAAOpP,OAAOqP,eAAe5K,KAAKuH,QAClC7J,EAAa,KAEjB,KAAMiN,GAAM,CAEX,GADAjN,EAAanC,OAAOoC,yBAAyBgN,EAAM3K,KAAKsH,SACrD5J,EACF,OAAOA,EAERiN,EAAOpP,OAAOqP,eAAeD,GAG9B,OAAO,KAGRtL,YAAYoD,EAAK8H,GAAO,EAAOzB,EAAQ9I,KAAK4H,UAC3C,IAAIiD,EASJ,GALCA,EADE7K,KAAKyH,YACE8C,EAASvK,KAAK2H,gBAAkB3H,KAAK0H,gBAErCoB,OAGIrJ,IAAXoL,EAAsB,CACxB,MAAMnN,EAAasC,KAAK6H,4BAExB,GAAGnK,EACF,GAAGsC,KAAKyH,YAAa,CACpB,GAAK/J,EAAWE,MAAOF,EAAWG,IACjC,MAAM,IAAIQ,EAAwB,wFAGlCwM,EADEN,EACO7M,EAAWG,IAEXH,EAAWE,SAGrBiN,EAASnN,EAAWd,OAASc,EAAWE,IAAIoJ,MAAMvE,GASrD,YAHchD,IAAXoL,GACFhL,QAAQoH,KAAK,+CAA+CjH,KAAKvD,iCAE3DoO,EAMRxL,aAAayL,EAAOrI,KAAQoD,GAExBiF,GACF9K,KAAK+K,2BAA2BD,GAGjC,MAAME,EAAYF,GAAOP,SAAU,EAC7BU,IAAyBH,EAG/B,IAAII,EAWAL,EAVA7K,KAAKyH,cACRzH,KAAKqI,6BAEF4C,IACFC,EAAOzI,EACPzC,KAAKoI,uBAAuB7K,KAAK2N,KAMnC,IAECL,EADgB7K,KAAKkJ,YAAYlJ,KAAKuH,OAAQyD,IAC5BhE,MAAMvE,EAAKoD,GAE9B,MAAM7I,GAIL,MAHIgD,KAAKyH,aACRzH,KAAKmL,sBAAsBD,EAAMD,GAE5BjO,EAIP,OAAGgD,KAAKyH,cAMmB,mBAAjBoD,GAAQO,KACjBP,EAASA,EAAOO,MAEfC,IACCrL,KAAKmL,sBAAsBD,EAAMD,GAC1BI,KAGRrO,IAEC,MADAgD,KAAKmL,sBAAsBD,EAAMD,GAC3BjO,KAMRgD,KAAKmL,sBAAsBD,EAAMD,IArB1BJ,EA4BTxL,sBAAsB6L,EAAMD,GAC3B,IAAIjL,KAAKqI,2BACR,MAAM,IAAIhK,EAAwB,mCAAmC2B,KAAKqI,mEAG3E,GAFArI,KAAKqI,6BAEF4C,EAAqB,CACvB,MAAMK,EAAStL,KAAKoI,uBAAuB9F,QAAQ4I,GACnD,GAAGI,EAAS,EACX,MAAM,IAAIjN,EAAwB,+DAEnC2B,KAAKoI,uBAAuBmD,OAAOD,EAAQ,IAO7CjM,aAAayL,EAAOrI,KAAQoD,GAExBiF,GACF9K,KAAK+K,2BAA2BD,GAGjC,MAAMU,EAAQV,GAAOU,OAAS,EACxBR,EAAYF,GAAOP,SAAU,EAC7BT,EAAUgB,GAAOhB,SAAW9J,KAAK+J,YAAYiB,GAG7CpM,EAAOkL,EAAQ0B,GAGrB,IAAI5M,EAAM,CACT,GAAGkL,EAAQvI,OAAS,EACnB,MAAM,IAAIlD,EAAwB,yBAAyBO,4BAA+BkL,EAAQvI,YAGnG,OAAOvB,KAAK6J,aAAa,KAAMpH,KAAQoD,GAIxC,MAAMrJ,EAAKoC,EAAKpC,GAGhB,IAAIoC,EAAKqL,MAER,OAAOzN,EAAGwK,MAAMvE,EAAKoD,GAItB,MAAM4F,EAAaD,EAAQ,EACrBE,EAAWD,GAAc3B,EAAQvI,OAGjCoK,EAAa,CAClBH,MAAWC,EACXG,QAAW,EACXC,OAAW,EACXtB,OAAWS,EACXc,UAAWlN,EACXkL,QAAWA,GAINiC,EAAUL,EAAU1L,KAAK6J,aAAahJ,KAAKb,KAAM2L,EAAYlJ,GAAOzC,KAAKoJ,aAAavI,KAAKb,KAAM2L,EAAYlJ,GAInH,IAAIoI,EAHJ7K,KAAKkI,wBAIL,IAEC2C,EAASrO,EAAG+D,KAAKkC,EAAKsJ,KAAYlG,GAEnC,MAAM7I,GACL,OAAOgD,KAAKgM,6BAA6BL,EAAY3O,GAoBtD,OAbC6N,EAD0B,mBAAjBA,GAAQO,KACRP,EAAOO,MAEfC,GAAKrL,KAAKiM,sBAAsBZ,EAAGM,EAAY/M,EAAMkL,EAASiC,EAAStJ,EAAKoD,KAE5E7I,GAAKgD,KAAKgM,6BAA6BL,EAAY3O,KAK3CgD,KAAKiM,sBAAsBpB,EAAQc,EAAY/M,EAAMkL,EAASiC,EAAStJ,EAAKoD,GAI/EgF,EAGRxL,2BAA2ByL,GAE1B,GAAG,UAAWA,IAAUA,EAAMe,MAC7B,MAAM,IAAIpF,EACTzG,KACA8K,EAAMgB,WAAW7K,aACjB,8BAA8BjB,KAAKvD,qDAKrCqO,EAAMc,QAAS,EAGhBvM,kBAAkByL,GAIjB,GAHAA,EAAMe,OAAQ,EAEd7L,KAAKkI,wBACFlI,KAAKkI,sBAAwB,EAC/B,MAAM,IAAI7J,EAAwB,0BAA0B2B,KAAKkI,qDAGnE7I,6BAA6BsM,EAAY3O,GAKxC,MAHAgD,KAAKkM,kBAAkBP,GAGjB3O,EAGPqC,sBAAsBwL,EAAQc,EAAY/M,EAAMkL,EAASiC,EAAStJ,EAAKoD,GAEtE,IAEC,IAAI8F,EAAWC,OAAQ,CAEtB,IAAIO,GAAqBvN,EAAKwN,iBAAmBjI,EAAgBW,cAC7DuH,EAAmB,KACnBC,GAAkB,EAEnBH,IACFE,EAAmBvC,EAAQ7F,MAAM0H,EAAWH,OAAOe,QAAQrN,IAClDA,EAAE+B,aAAauL,OAAO5N,EAAKqC,gBACjCO,KAAKtC,GACAA,EAAE+B,eAGVqL,EAA8C,GAA3BD,EAAiB9K,OAEjC8K,EAAiB9K,OAAS,GAC5B4C,EAAgBkB,kBAAkBzG,EAAKqC,aAAcoL,EAAkBrM,KAAKvD,OAK3EmC,EAAKwD,MAAQ3G,EAAMC,SACrB0D,EAAwBwC,WACvB,qBAAqBhD,EAAKqC,aAAaU,aACvC,oBAAoB/C,EAAKuG,yBAAyBvG,EAAKqC,aAAaU,wJACpE,SAGDxD,WAAWC,WAAWqO,WAAW7N,EAAKqC,aAAaQ,GAAI7C,EAAKuG,QAGxDmH,IACHzB,EAASkB,EAAQ/E,MAAMvE,EAAKoD,KAIrBjH,EAAKwN,iBAAoBE,IACjClN,EAAwBsN,SAAS9N,EAAKqC,aAAcoL,GAAkB,EAAM,GAAGzN,EAAKqC,aAAa4C,uDAAuDjF,EAAKuG,YAC7JvG,EAAKwN,iBAAkB,YAMzBpM,KAAKkM,kBAAkBP,GAIxB,OAAOd,EAMRxL,gBAAgBzC,EAAO6F,EAAI,MAC1B,GAAGzC,KAAKyH,YACP,MAAM,IAAIpJ,EAAwB,2DAEhBoE,IAAQzC,KAAKuH,OAI/BhM,OAAOoB,eAAe8F,EAAKzC,KAAKsH,QAAS,CACxC1K,MAAOA,EACPG,cAAc,EACdD,YAAY,EACZD,UAAU,KAOZmD,KAAK4H,SAAWhL,EAChBoD,KAAK2M,yBAGL3M,KAAK4M,wBAMNvN,wBAKC,OAJyBW,KAAK8H,YAAYtG,KAAKtC,GACvCA,EAAE+B,eAMX5B,uBACC,MAAM4B,EAAe,IAAIkB,EACnBkK,EAAmBrM,KAAK6M,wBAE9B,GAAGR,EAAiB9K,OAAS,EAAG,CAChB4C,EAAgBkB,kBAAkBpE,EAAcoL,EAAkBrM,KAAKvD,QAGrF2C,EAAwBsN,SAASzL,EAAcoL,GAAkB,EAAM,wCAAwCrM,KAAKvD,YAAYwE,EAAaU,uDAE1ItG,GAASwE,QAAQiN,OACnBjN,QAAQiN,SAIP9M,KAAK+M,2BACR/M,KAAK+M,yBAA2B,IACjC/M,KAAK+M,yBAAyBxP,KAAK0D,EAAanF,KAOjDuD,YAAYkL,EAAQyC,GAAU,GAK7B,GAAGzC,IAAWvK,KAAKyH,YAClB,MAAM,IAAIpJ,EAAwB,gBAAgB2B,KAAKvD,gEAGxD,MAAMwQ,EAAU1C,EAAS,cAAgB,cACzC,IAAIM,EAAS7K,KAAKiN,GAelB,OAZGD,IAEChN,KAAKkI,sBAAwB,IAC/B2C,EAAS7K,KAAKiN,GAAShJ,MAAM,GAC7BjE,KAAKiN,GAAWpC,GAIjB7K,KAAK,IAAIiN,WAIHpC,EAGRxL,uBACCW,KAAKsI,6BAGNjJ,OACC,IAAI,IAAIkL,IAAU,EAAC,GAAO,GAAO,CAChC,GAAGA,IAAWvK,KAAKyH,YAClB,SAEazH,KAAK+J,YAAYQ,GACvB2C,MAAK,CAACC,EAAEC,IAAeD,EAAE/K,KAAOgL,EAAEhL,MAAQgL,EAAEC,SAAWF,EAAEE,YAInEhO,IAAIT,GAEH,MAAMpC,EAAKoC,EAAKpC,GACZA,EAAGC,MAAoB,cAAZD,EAAGC,MACjBF,EAAkBC,EAAIwD,KAAK6I,gBAAgBjK,EAAKqC,aAAaQ,IAAM,cAGpDzB,KAAK+J,YAAYnL,EAAK2L,QAAQ,GAEtCgB,OAAO,EAAG,EAAG3M,GACrBoB,KAAKkN,KAAKtO,EAAK2L,QAEfvK,KAAKsN,uBAGNjO,OAAOT,GACN,MAAMkL,EAAU9J,KAAK+J,YAAYnL,EAAK2L,QAAQ,GAExCiB,EAAQ1B,EAAQxH,QAAQ1D,GAC9BkL,EAAQyB,OAAOC,EAAO,GAEtBxL,KAAKsN,uBAGNjO,QACCW,KAAK8H,YAAc,GAEhB9H,KAAKyH,cACPzH,KAAKgI,YAAc,IAEpBhI,KAAKsN,uBAGNjO,WACC,OAAQW,KAAK8H,YAAYvG,SAAWvB,KAAKgI,aAAazG,QAGxDpE,EAA8B+J,GAG9B3L,OAAOC,OAAO0L,GC3xBP,MAAMqG,EAAa,IAAIrI,IAEjBsI,EAAkB,SAAS5Q,EAAM,MAE7C2Q,EAAWE,QAGX,MAAMC,EAAe9Q,GAAS8B,MAAMkB,UAAUhC,IAAIjD,EAAY,qBAC9D,GAAI+S,EAGJ,IAAI,IAAItL,IAAQ,CAAC,cAAe,iBAAkB,CACjD,MAAMuL,EAAUD,EAAatL,GAC7B,IAAIuL,EACH,SAED,MAAMC,EAAyB,eAARxL,EAAyB,KAAS,IAGzD7G,OAAOsS,QAAQF,GAASvI,SAAQ0I,IAC/B,IAAKhS,EAAK8C,GAAQkP,EAGdlP,EAAK6C,KACR7C,EAAO,IAAIuD,EAAYrG,EAAK+F,EAAcE,QAC1CjG,EAAM8C,EAAK9C,KAITyR,EAAWrN,IAAIpE,IAGlByR,EAAW1P,IAAI/B,EAAK8R,EAAgBhP,EAAK4M,YAQrC,MAAMuC,UAA2BC,gBACvC3O,cACCX,KAAKkB,SAASqO,SAAStT,EAAY,mBAAoB,CACtD8B,KAAM,sBACNyR,SAAS,EACT9L,KAAM+L,QACNC,MAAO,QACPC,QAAQ,EACRC,KAAM,6EAGP5P,KAAKkB,SAASqO,SAAStT,EAAY,uBAAwB,CAC1D8B,KAAM,2BACNyR,SAAS,EACT9L,KAAM+L,QACNC,MAAO,QACPC,QAAQ,EACRC,KAAM,iFAGP5P,KAAKkB,SAASqO,SAAStT,EAAY,wBAAyB,CAC3D8B,KAAM,wBACNyR,SAAS,EACT9L,KAAM+L,QACNC,MAAO,QACPC,QAAQ,EACRC,KAAM,oSAGP5P,KAAKkB,SAAS2O,aAAa5T,EAAY,OAAQ,CAC9C8B,KAAM,GACN+R,MAAO,2BACPC,KAAM,aACNrM,KAAM2L,EACNW,YAAY,IAGbhQ,KAAKkB,SAASqO,SAAStT,EAAY,oBAAqB,CACvD8B,KAAM,GACNyR,QAAS,GACT9L,KAAM7G,OACN6S,MAAO,QACPC,QAAQ,EACRM,SAAU/R,GAAS4Q,MAIpBA,IAKDoB,4BACC,MAAO,IACH9I,MAAM8I,eACTC,SAAU,8CACVC,OAAQ,IACRpL,MAAO,2BACPqL,MAAO,IACPC,QAAS,CAACrU,EAAY,YACtBsU,KAAM,CACL,CACCC,YAAa,QACbC,gBAAiB,OACjBC,QAAS,SAGXC,eAAe,EACfC,eAAe,GAIjBjQ,YAAYkI,EAAS,GAAIgI,GACxBzJ,MAAMyB,EAAQgI,GAGflQ,uBAAuBU,EAAKyP,GAC3B,IAAIC,OAAO,CACVC,QAAS3P,EACT4P,QAAS,CACRC,IAAK,CACJnB,KAAM,+BACND,MAAO,MACPqB,SAAUL,GAEXM,GAAI,CACHrB,KAAM,+BACND,MAAO,SAGPuB,QAAO,GAGX1Q,oBACC,IAAIT,EAAO,GAmDX,OAjDAb,EAASqH,SAASsB,IACjB,IAAI,IAAIsE,IAAa,EAAC,GAAO,GAAO,CACnC,GAAGA,IAActE,EAAQe,YACxB,SAED,IAAIhL,EAAOiK,EAAQjK,KAChBuO,IACFvO,EAAO,GAAGA,SAEX,IAAIuT,EAAK,CACRvT,KAAQA,EACRiJ,SAAU,IAGXgB,EAAQqD,YAAYiB,GAAW5F,SAAS0E,IACvC,GAAGA,EAAQ7I,aAAaQ,IAAM9G,EAC7B,OAED,MAAMsV,EAAI,CACTxT,KAAWqN,EAAQ7I,aAAaiD,aAChC9B,KAAWvG,EAAciO,EAAQ1H,MACjC8H,UAAW9N,EAAmB0N,EAAQI,YAGrB,QAAf+F,EAAE/F,UACJ+F,EAAE/F,UAAY,KAEd+F,EAAE/F,UAAY,KAAK+F,EAAE/F,YAEtB8F,EAAGtK,SAASnI,KAAK0S,MAGfvJ,EAAQqG,0BACVrG,EAAQqG,yBAAyB3H,SAAStJ,IACzCkU,EAAGtK,SAASnI,KAAK,CAChB2S,KAAW,IAAI/N,EAAYrG,GAC3BsG,KAAW,SACX8H,UAAW,UAKX8F,EAAGtK,SAASnE,OAAS,GACvB3C,EAAKrB,KAAKyS,OAIbpR,EAAKsO,MAAK,CAACC,EAAEC,IAAMA,EAAE1H,SAASnE,OAAS4L,EAAEzH,SAASnE,SAE3C3C,EAGRS,eACC,IAAI8E,EAAgBW,cACnB,OAAO,KAER,IAAIlG,EAAO,GAqBX,OAnBAuF,EAAgBsB,UAAUL,SAASsH,IAClC,IAAIlH,EAAU,GAEd5G,EAAKrB,KAAK,CACTgI,MAAOmH,EAASnH,MAChBS,WAAY0G,EAASzL,aAAaiD,aAClCiM,SAAUzD,EAASxL,WAAWgD,aAC9BsB,QAASA,IAGVkH,EAASlH,QAAQJ,SAAQ,CAACG,EAAOJ,KAChCK,EAAQjI,KAAK,CAAC4H,OAAQA,EAAQI,MAAOA,OAGtCC,EAAQ0H,MAAK,CAACC,EAAEC,IAAMD,EAAE5H,MAAQ6H,EAAE7H,WAGnC3G,EAAKsO,MAAK,CAACC,EAAEC,IAAMD,EAAE5H,MAAQ6H,EAAE7H,QAExB3G,EAGRS,cACC,IAAI+Q,EAAM,CACTC,YAAa,GACbC,OAAQ,GACRC,cAAe,IAGhB,MAAMC,EAAa9R,KAAKkB,SAAShC,IAAIjD,EAAY,qBAC3C8V,EAAoBD,EAAWH,aAAiB,GAChDK,EAAoBF,EAAWD,eAAiB,GA4DtD,OAzDGpM,EAAgBW,gBAClBX,EAAgBuB,SAASN,SAAStJ,IACjC,MAAMoU,EAAO,IAAI/N,EAAYrG,GAE1BoU,EAAKpU,OAAO2U,GAAmBP,EAAKpU,OAAO4U,GAG9CN,EAAIE,OAAO/S,KAAK2S,MAEjBE,EAAIE,OAAOpD,MAAK,CAACC,EAAEC,IAAMD,EAAE1L,GAAGkP,cAAcvD,EAAE3L,OAI/ClG,OAAOsS,QAAQ4C,GAAiBrL,SAAS0I,IACxC,IAAKhS,EAAK8C,GAAQkP,EAGdlP,EAAK6C,KACR7C,EAAO,IAAIuD,EAAYrG,EAAK+F,EAAcE,QAC1CjG,EAAM8C,EAAK9C,KAIZsU,EAAIC,YAAY9S,KAAK,CACpBzB,IAAOA,EACP2F,GAAO7C,EAAK6C,GACZiC,MAAO9E,EAAK8E,OAAS,GAAG9E,EAAK8E,mBAC7B8H,MAAO5M,EAAK4M,WAGd4E,EAAIC,YAAYnD,MAAK,CAACC,EAAEC,IAAeD,EAAE3B,MAAQ4B,EAAE5B,QAGnDjQ,OAAOsS,QAAQ6C,GAAmBtL,SAAS0I,IAC1C,IAAKhS,EAAK8C,GAAQkP,EAGfhS,KAAO2U,IAIN7R,EAAK6C,KACR7C,EAAO,IAAIuD,EAAYrG,EAAK+F,EAAcE,QAC1CjG,EAAM8C,EAAK9C,KAIZsU,EAAIG,cAAchT,KAAK,CACtBzB,IAAOA,EACP2F,GAAO7C,EAAK6C,GACZiC,MAAO9E,EAAK8E,OAAS,GAAG9E,EAAK8E,mBAC7B8H,MAAO5M,EAAK4M,YAGd4E,EAAIG,cAAcrD,MAAK,CAACC,EAAEC,IAAeD,EAAE3B,MAAQ4B,EAAE5B,QAG9C4E,EAGR/Q,UAaC,MAZW,CACVuR,MAAO,CACNnU,KRtSyB,aQuSzBoU,QAASjW,EACTkK,cAAeX,EAAgBW,eAGhCgM,SAAU9Q,KAAK+Q,oBACftL,UAAWzF,KAAKgR,eAChBtL,SAAU1F,KAAKiR,eAMjB5R,kBAAkB6R,GACjBpL,MAAMqL,kBAAkBD,GAExB,IAAIvI,EAAQ3I,KAGZkR,EAAKjS,KAAK,qBAAqBmS,GAAG,SAAS,SAASvK,GACnD,MAAMwK,EAAQC,EAAEtR,MAEhBqR,EAAME,SAAStS,KAAK,WAAWuS,YAAY,UAC3CH,EAAMG,YAAY,iBAInBN,EAAKjS,KAAK,iBAAiBmS,GAAG,SAAS,SAASvK,GAC/C8B,EAAMoH,QAAO,MAIdmB,EAAKjS,KAAK,2BAA2BmS,GAAG,SAAS,SAASvK,GACzD,MAEM4K,EAFQH,EAAEtR,MAEKf,KAAK,UAEtBwS,EAAOC,GAAG,WACbD,EAAOE,WAITT,EAAKjS,KAAK,0BAA0BmS,GAAG,SAAS,SAASvK,GACxD,MAAMwK,EAAQC,EAAEtR,MAEV4R,EAAQP,EAAMzS,KAAK,SAEnBiT,EAAoB,OADRR,EAAMzS,KAAK,aAIvBkT,EADOZ,EAAKjS,KAAK,IAAI2S,KACL3S,KAAK,mBAErB8S,EAAYF,EAAKC,EAASE,OAASF,EAASG,OAE9CF,EAAUxQ,SAGXsQ,EACFE,EAAUG,OAAOJ,GAEjBC,EAAUI,MAAML,OAIlBZ,EAAKjS,KAAK,0BAA0BmS,GAAG,SAAS,SAASvK,GACxD,MAAMwK,EAAQC,EAAEtR,MAEVoS,EAAQf,EAAMzS,KAAK,QACnByT,EAAMhB,EAAMzS,KAAK,MAEjB0T,EAAOpB,EAAKjS,KAAK,IAAImT,KACrBG,EAAKrB,EAAKjS,KAAK,IAAIoT,KAEnBG,EAAUF,EAAKrT,KAAK,mBAG1B,IAAIwT,EAAaD,EAAQP,OAQzB,GAPwB,GAArBQ,EAAWlR,SACbkR,EAAaD,EAAQR,QAGtBO,EAAGG,OAAOF,GAGA,mBAAPH,EAA0B,CAC5B,MAAM9C,EAAUgD,EAAGtT,KAAK,UACxBsQ,EAAQrC,MAAK,CAACC,EAAEC,IAAekE,EAAEnE,GAAGwF,MAAQrB,EAAElE,GAAGuF,MAAQ,GAAK,IAC9DJ,EAAGK,QAAQF,OAAOnD,GAIhBkD,EAAWlR,QACb+Q,EAAKK,IAAIF,EAAWE,OAErBL,EAAKX,WAINT,EAAKjS,KAAK,WAAWmS,GAAG,SAAS,SAASvK,GAEzC,IAAI,IAAIzE,IAAQ,CAAC,uBAAwB,0BAA2B,CACnE,MAEMmN,EAFS2B,EAAKjS,KAAK,IAAImD,KAENnD,KAAK,UAE5B,IAAI4T,EAAM,GACVtD,EAAQuD,MAAK,CAAC9I,EAAG+I,KAChBF,EAAItV,KAAK+T,EAAEyB,GAAQJ,UAGpBrB,EAAE,WAAW0B,KAAK,OAAQ,UAAUA,KAAK,OAAQ,GAAG5Q,YAAe4Q,KAAK,QAASH,EAAInR,KAAK,MAAMuR,SAAS/B,GAG1GA,EAAKgC,YAINhC,EAAKjS,KAAK,UAAUmS,GAAG,SAAS,SAASvK,GACxCyK,EAAE,sBAAsB6B,SAExBpF,EAAmBqF,gBAAgB,4JAA4J,KAC9L,IAAI,IAAIhR,IAAQ,CAAC,uBAAwB,0BACxCkP,EAAE,WAAW0B,KAAK,OAAQ,UAAUA,KAAK,OAAQ,GAAG5Q,YAAe4Q,KAAK,QAAS,IAAIC,SAAS/B,GAG/FA,EAAKgC,eAKR7T,oBAAoBgU,EAAIC,GAEvB,MAAM9C,EAAa9R,KAAKkB,SAAShC,IAAIjD,EAAY,qBAEjD,IAAI,IAAIyH,IAAQ,CAAC,cAAe,iBAAkB,CACjD,MAAMmR,EAAM,YAAYnR,WAExB,KAAKmR,KAAOD,GACX,SAED,MAAM1W,EAAQ0W,EAASC,GACjB3P,EAAmB,KAAVhH,EAAgB,GAAKA,EAAMgH,MAAM,KAEhD,IAAI4P,EAAWhD,EAAWpO,IAAS,GAC/BqR,EAAW,GACXC,EAAU,EAEd9P,EAAMwB,SAAStJ,IACd,IAAIA,EACH,OAED,MAAM6X,EAAWH,EAAS1X,GACpB8X,EAAW,IAAIzR,EAAYrG,GAEjC2X,EAAS3X,GAAO,CACf2F,GAAOmS,EAASnS,GAChBiC,MAAOkQ,EAASnQ,OAASmQ,EAASlQ,MAAQiQ,EAASjQ,MACnD8H,MAAOkI,QAITlD,EAAWpO,GAAQqR,EAIpBlY,OAAOsY,KAAKrD,EAAWD,eAAenL,SAAStJ,IAC3CA,KAAO0U,EAAWH,oBACbG,EAAWD,cAAczU,YAI5B4C,KAAKkB,SAAS/B,IAAIlD,EAAY,oBAAqB6V,GAGzDxQ,KAAK+P,QAAO,GAGZhC,EAAmBqF,gBAAgB,6GAA6G,IAAMU,SAASC,YAGjKxY,OAAOC,OAAOuS,GC9cd,IAAIiG,GAAmB,EACnBC,GAAiC,EAI9B,SAASC,EAA4BzR,EAAK6E,EAAS7K,EAAgBwE,GACzE,MAAMyF,EAAU,IAAIQ,EAAQzE,EAAK6E,EAAS7K,EAAMwE,GAEhD,OADAlD,EAASoC,IAAIuG,GACNA,EAGR,SAASyN,EAAyBhP,GACjC,IAAI6F,EAAY7F,EAAOiP,SAAS,QAGhC,MAAO,CAFQpJ,EAAqB7F,EAAOlB,MAAM,GAAI,GAA1BkB,EAEV6F,GAGlB,SAASqJ,EAAkBC,GAC1B,MAAO,6BAA6BC,KAAKD,GAG1C,SAASE,EAAmBC,EAASxT,GAEpC,MAAMkE,EAASgP,EAAyBM,GAAS,GAE3C7Q,EAAQuB,EAAOvB,MAAM,KACrB0D,EAAU1D,EAAM8Q,MAGhBC,EAAU/Q,EAAM2H,OAAO,EAAE,GAAG,GAClC,IAAI8I,EAAkBM,GACrB,MAAM,IAAIzO,EAAuB,mBAAmBf,MAAYlE,GACjE,GAAc,cAAX0T,EACF,MAAM,IAAIzO,EAAuB,4CAA6CjF,GAE/E,MAAM2T,ER5CA,SAA6BC,GACnC,IACC,OAAO1W,WAAW0W,IAAYxY,EAAYwY,GAE3C,MAAO7X,GACN,QQuCY8X,CAAoBH,GACjC,IAAIC,EACH,MAAM,IAAI1O,EAAuB,0BAA0Bf,MAAYlE,GAGxE,IAAIwB,EAAMmS,EACV,IAAI,IAAIxG,KAASxK,EAAO,CACvB,IAAIyQ,EAAkBjG,GACrB,MAAM,IAAIlI,EAAuB,mBAAmBf,MAAYlE,GAGjE,GADAwB,EAAMA,EAAI2L,IACN3L,EACH,MAAM,IAAIyD,EAAuB,0BAA0Bf,MAAYlE,GAGzE,MAAO,CAACwB,EAAK6E,EAASnC,GAQvB,SAAS4P,EAAsBC,GAC9B,MAAMvY,EAAO0X,EAAyBa,GAAO,GAE7C,IAAI,IAAItO,KAAW3I,EAClB,IAAmC,GAAhC2I,EAAQS,MAAM7E,QAAQ7F,GACxB,OAAOiK,EAGT,OAAO,KAGR,SAASuO,EAA8BhU,EAAcyF,EAASsE,GAC7D,OAAOtE,EAAQqD,YAAYiB,GAAW/L,MAAMC,GAAMA,EAAE+B,cAAcuL,OAAOvL,KA2B1E,SAASiU,EAAoBxO,GACzBA,EAAQyO,YAAc/Z,IACxBsL,EAAQ0O,SACRrX,EAASsX,OAAO3O,IAwBlB,SAAS4O,EAAkBtP,GAC1B,IAAI/E,EAAe,IAAIkB,EAEvB,IAAI6D,GAAoC,iBAAfA,EACxB,MAAM,IAAIE,EAAuB,2CAA8CjF,GAEhF,GAAGA,EAAawC,QACf,GAAGuC,GAAc/E,EAAaQ,GAC7B,MAAM,IAAIyE,EAAuB,GAAGjF,EAAa4C,2EAA2EmC,MAAgB/E,QAG7IA,EAAe,IAAIkB,EAAY6D,GAGhC,GAAGA,GAAcrL,GAChB,IAAIsZ,EACH,MAAM,IAAI/N,EAAuB,mDAAmDF,MAAgB/E,QAGrG,IAAIA,EAAawC,OAChB,MAAM,IAAIyC,EAAuB,YAAYF,6BAAuC/E,GAGtF,OAAOA,EAGR,IAAIsU,GAAkB,EAQf,MAAMnX,EAMZyS,qBAAuB,OAAOjW,EAM9B4a,sBAAwB,MAAO,CAAC3a,EAAeC,EAAeC,EAAeC,EAAgBC,GAK7Fwa,yBAA2B,OAAO,EAKlCnQ,mBAAqB,OAAOjK,EAI5BiK,iBAAiB1I,GT1JoBvB,ES0JFuB,EAGnC+I,6BAA+B,OAAOA,EACtCrH,mBAAqB,OAAOqH,EAE5BtH,qCAAuC,OAAOA,EAC9CqX,2BAA6B,OAAOrX,EAEpC6H,oCAAsC,OAAOA,EAC7CyP,0BAA4B,OAAOzP,EAEnC0P,mCAAqC,OAAO1P,EAC5C2P,yBAA2B,OAAO3P,EAElCE,8CAAgD,OAAOA,EACvD0P,oCAAsC,OAAO1P,EAE7CK,gDAAkD,OAAOA,EACzDsP,sCAAwC,OAAOtP,EAE/CG,8BAAgC,OAAOA,EAcvCvH,wBAAwB2W,EAAOC,EAAM,EAAGC,EAAM,EAAGhZ,EAAO,GACvD,OAAGrC,GAAiBmb,EAChBlb,GAAiBmb,EAChBlb,GAAiBmb,EACZlb,GAAkBkC,EAGnBnC,GAAiBmb,EAGlBpb,EAAgBmb,EAEjBpb,EAAgBmb,EAkExB3W,gBAAgB2G,EAAYb,EAAQ3I,EAAI4F,EAAK,QAASmN,EAAQ,IAE7D,MAAMtO,EAAeqU,EAAkBtP,GAGvC,GAAGA,GAAcrL,IAAeqZ,EAC/B,MAAM,IAAI9N,EAAuB,2EAA8EjF,GAGhH,IAAIkE,GAA4B,iBAAXA,EACpB,MAAM,IAAIe,EAAuB,uCAA0CjF,GAE5E,KAAIzE,GAAQA,aAAc2Z,UACzB,MAAM,IAAIjQ,EAAuB,qCAAwCjF,GAG1E,QAAmB,KADnBmB,EAAO3G,EAAM2G,EAAK4B,mBACkB5B,KAAQvG,GAC3C,MAAM,IAAIqK,EAAuB,oCAAoC5K,EAAWoG,KAAK,UAAWT,GAEjG,MAAMgJ,EAAQsF,GAAStF,OAAU7H,EAAO3G,EAAMG,SAC9C,GAAoB,kBAAVqO,EACT,MAAM,IAAI/D,EAAuB,uCAAwCjF,GAEvE/F,GAAeqa,IACjBhG,EAAQrF,UAAY,QACrB,MAAMA,EAAYlO,EAAWuT,GAASrF,WAAWlG,eAAiB,QAClE,QAAwB,IAAdkG,KAA+BA,KAAa9N,GACrD,MAAM,IAAI8J,EAAuB,yCAAyCnK,EAAgB2F,KAAK,UAAWT,GAI3G,MAAMmV,EAAqBjC,EAAyBhP,GAC9CkR,EAAqBD,EAAkB,GACvCpL,EAAqBoL,EAAkB,GAG7C,IAAI1P,EAxRN,SAAyBvB,EAAQlE,EAAa,MAE7C,OAAOiT,KAA+BM,EAAmBrP,GAASlE,GAsRnDqV,CAAgBnR,EAAQlE,GAGtC,GAAG+J,IAActE,EAAQe,YACxB,MAAM,IAAIvB,EAAuB,kCAAkCf,SAAclE,EAAaU,uBAAuB0U,qDAAuEpV,GAG7L,GAAGgU,EAA8BhU,EAAcyF,EAASsE,GACvD,MAAM,IAAI9E,EAAuB,kBAAkBf,qCAA0ClE,EAAaU,aAAcV,GAGzH,MAAMoM,EAnQR,SAA+BpM,EAAckE,GAC5C,GAAGlE,EAAaQ,KAAO9G,EACtB,OAAO4b,OAAOC,UAEf,MAAM9I,EAAeH,EAAW3P,IAAIqD,EAAanF,KACjD,YAAoB2D,IAAjBiO,EACKA,EAED,EA2PW+I,CAAsBxV,GAQvC,GAJGA,EAAaQ,IAAM9G,GACrBwJ,EAAgBuS,iBAAiBzV,GAG/BmB,GAAQ3G,EAAMG,SAAU,CAC1B,MAAM+a,EAAWjQ,EAAQqD,YAAYiB,GAAW/L,MAAMC,GAAeA,EAAEkD,MAAQ3G,EAAMG,WAErF,GAAG+a,EAAU,CACZ,GAAGtJ,GAAYsJ,EAAStJ,SACvB,MAAM,IAAIjH,EAAiCnF,EAAc0V,EAAS1V,aAAcyF,EAAQjK,OAIc,IAAnGkE,MAAMJ,KAAK,0BAA2BoW,EAAS1V,aAAaQ,GAAIR,EAAaQ,GAAIiF,EAAQjK,QAC3F0H,EAAgBkB,kBAAkBpE,EAAc0V,EAAS1V,aAAcyF,EAAQjK,MAC/E2C,EAAwBsN,SAASiK,EAAS1V,aAAcA,GAAc,EACrE,GAAGA,EAAa4C,2FAA2F5C,EAAaU,kBAAkB+E,EAAQjK,YAQvJ,IAAImC,EAAO,CACVqC,aAAeA,EACfkE,OAAeA,EACfoF,OAAeS,EACfxO,GAAeA,EACf4F,KAAeA,EACfsE,QAAeA,EACf2G,SAAeA,EACfpD,MAAeA,EACfC,UAAeA,GAGhBxD,EAAQvG,IAAIvB,IAGTvD,IAAWH,GAAe+F,EAAaQ,IAAM9G,KAC/CgG,MAAMiW,QAAQ,sBAAuB3V,EAAaQ,GAAI0D,EAAQ/C,EAAMmN,GACpE1P,QAAQqQ,KAAK,yCAAyC/K,SAAclE,EAAaU,uBAAuB9F,EAAcuG,QAaxH/C,kBAAkB2G,EAAYb,EAAQ0R,GAAK,GAE1C,MAAM5V,EAAeqU,EAAkBtP,GAGjCpH,EA9UR,SAAwCqC,EAAcwT,GACrD,MAAM2B,EAAoBjC,EAAyBM,GAC7CtP,EAAYiR,EAAkB,GAC9BpL,EAAYoL,EAAkB,GAE9B1P,EAAUqO,EAAsB5P,GACtC,OAAIuB,EAGGuO,EAA8BhU,EAAcyF,EAASsE,GAFpD,KAuUM8L,CAA+B7V,EAAckE,GAC1D,IAAIvG,EAAM,CACT,GAAGiY,EACF,MAAM,IAAI3Q,EAAuB,sBAAsBf,SAAclE,EAAaU,mDAAoDV,GACvI,OAGD,MAAMyF,EAAU9H,EAAK8H,QAGrBA,EAAQyM,OAAOvU,GACfsW,EAAoBxO,IAGjBrL,GAAS4F,EAAaQ,IAAM9G,KAC9BgG,MAAMiW,QAAQ,wBAAyB3V,EAAaQ,GAAI0D,GACxDtF,QAAQqQ,KAAK,6CAA6C/K,SAAclE,EAAaU,eAWvFtC,iBAAiB2G,GAEhB,MAAM/E,EAAeqU,EAAkBtP,GAGvC,IAAI,IAAIU,KAAW3I,EAClBiC,KAAKyM,WAAWxL,EAAaQ,GAAIiF,EAAQjK,MAAM,GAE5CiK,EAAQe,aACVzH,KAAKyM,WAAWxL,EAAaQ,GAAI,GAAGiF,EAAQjK,YAAY,IAGvDpB,GAAS4F,EAAaQ,IAAM9G,KAC9BgG,MAAMiW,QAAQ,sBAAuB3V,EAAaQ,IAClDd,MAAMiW,QAAQ,yBAA0B3V,EAAaQ,IACrD5B,QAAQqQ,KAAK,gDAAgDjP,EAAaU,eAK5EoV,0BAA4B,OAAO/W,KAAKgX,WAEzC7Z,EAA8BiB,GAC3BlD,IAEFkD,EAAW6Y,eAxVL,WACN,IAAI,IAAIvQ,KAAW3I,EAClB2I,EAAQ+G,QACR/G,EAAQ0O,SAGTrX,EAAS0P,SAmVTrP,EAAW8Y,+BAAiChD,EAC5C9V,EAAW+Y,UArWL,SAAgBhS,GACtB,MAAMuB,EAAUqO,EAAsB5P,GAEnCuB,IACFA,EAAQ+G,QACRyH,EAAoBxO,GAEpB7G,QAAQqQ,KAAK,kDAAkD/K,SA+VhE/G,EAAWgZ,oBAvTZ,SAA0BC,GACzB9B,EAAkB8B,GAuTlBjZ,EAAWkZ,4BAAiC/B,GAE7Cha,OAAOC,OAAO4C,UAKPD,WAAWC,WAClB7C,OAAOoB,eAAewB,WAAY,aAAc,CAC/CP,IAAK,IAAMQ,EACXP,IAAMjB,IAAY,KAAM,0EACxBG,cAAc,IH7QqB,WAEnC,IAAG7B,EAAH,CAIAiD,WAAWoZ,iBAAiB,QAAS3Q,GACrCzI,WAAWoZ,iBAAiB,qBAAsB3Q,GAMlD,IAEC,MAAM4Q,EAAO,kBAAoB7W,MAAM8W,MAAMpO,WACvCqO,EAAUF,EAAKG,QAAQ,8BAA+B,uDAC5D,GAAGH,IAASE,EACX,KAAM,0CAA0CF,IAC9Cnc,GACFwE,QAAQ+X,IAAI,wBAAwBF,KAErC,MAAMG,EAAaxb,EAAYqb,EAAZrb,KACnB,GAAyB,mBAAfwb,EACT,KAAM,0FAA0FH,gBAAsBG,IAEvHlX,MAAM8W,MAAQI,EAEf,MAAM7a,GAELoC,EAAwBwC,WACvB,+DACA,2CACA,OACA5E,GAKF,IACCoB,WAAW6P,SAAS,cAAe,iCAAiC,SAASnF,KAAYjD,GACxF,OAAOiD,KAAWjD,GAAMiS,OAAMC,IAE7B,MADAnR,EAAiBmR,GACXA,OAEL,UAAW,CAAC7N,UAAW,SAE3B,MAAMlN,GAELoC,EAAwBwC,WACvB,+DACA,6DACA,OACA5E,KG8NHgb,GAGA,CACC,MAAMC,EAAiBhb,EAAc,kBAC/BwF,EAAM,CACXpD,CAAC4Y,GAAiB,SAASnP,KAAYjD,GAEtCmO,GAAmB,ETxef,WACN,GAAGpZ,EACF,OAED,MAAMsd,EAAcxZ,KAAK2E,SAASzF,IAAIjD,IAAaiE,MAAMiS,QACzD,IAAIqH,EACH,KAAM,kEAEP,MAAM/U,EAAQ+U,EAAY/U,MAAM,gDAChC,IAAIA,EACH,KAAM,+CAA+C+U,KAEtDtd,EAAiBuI,EAAM,GACvBtI,EAAiBsd,SAAShV,EAAM,IAChCrI,EAAiBqd,SAAShV,EAAM,IAChCpI,EAAiBod,SAAShV,EAAM,IAChCnI,EAAiBmd,SAAShV,EAAM,IAChClI,EAAiBkI,EAAM,GSydrBiV,GACArK,EAAmBsK,OACnBlU,EAAgBkU,OAChBjZ,EAAwBiZ,OAGxBxY,QAAQqQ,KAAK,cAActV,aAC3B+F,MAAMiW,QAAQ,mBAAoBxY,GAIlC,OAFe0K,KAAWjD,KAMxB3K,EAGHuH,EAAIwV,IAAgB,SAFpB7Z,EAAW6P,SAAS,cAAe,4BAA6BxL,EAAIwV,GAAiB,UAAW,CAAC/N,UAAW,SAM9G+J,GAAiC"}