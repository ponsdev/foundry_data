function CheckFeat(slug){return!!token.actor.items.find((i=>i.data.data.slug===slug&&"feat"===i.type))}const rollTreatWounds=async({DC,bonus,med,riskysurgery,mortalhealing})=>{const options=actor.getRollOptions(["all","skill-check","medicine"]);options.push("treat wounds"),options.push("action:treat-wounds");const dc={value:DC};(riskysurgery||mortalhealing)&&(dc.modifiers={success:"one-degree-better"}),riskysurgery&&options.push("risky-surgery"),med.roll({dc,event,options,callback:roll=>{let healFormula,successLabel;const magicHands=CheckFeat("magic-hands"),bonusString=bonus>0?`+ ${bonus}`:"";if(3===roll.data.degreeOfSuccess?(healFormula=magicHands?`32${bonusString}`:`4d8${bonusString}`,successLabel="Critical Success"):2===roll.data.degreeOfSuccess?(healFormula=magicHands?`16${bonusString}`:`2d8${bonusString}`,successLabel="Success"):1===roll.data.degreeOfSuccess?successLabel="Failure":0===roll.data.degreeOfSuccess&&(healFormula="1d8",successLabel="Critical Failure"),riskysurgery&&(healFormula=roll.data.degreeOfSuccess>1?`${healFormula}-1d8`:healFormula?"2d8":"1d8"),void 0!==healFormula){const healRoll=new Roll(healFormula).roll(),rollType=roll.data.degreeOfSuccess>1?"Healing":"Damage";ChatMessage.create({user:game.user.id,type:CHAT_MESSAGE_TYPES.ROLL,flavor:`<strong>${rollType} Roll: Treat Wounds</strong> (${successLabel})`,roll:healRoll,speaker:ChatMessage.getSpeaker()},{})}}})};async function applyChanges($html){for(const token of canvas.tokens.controlled){var{med}=token.actor.data.data.skills;const{name}=token,mod=parseInt($html.find('[name="modifier"]').val())||0,requestedProf=parseInt($html.find('[name="dc-type"]')[0].value)||1,riskysurgery=$html.find('[name="risky_surgery_bool"]')[0]?.checked,mortalhealing=$html.find('[name="mortal_healing_bool"]')[0]?.checked,skill=$html.find('[name="skill"]')[0]?.value;game.user.isGM&&await game.settings.set("pf2e","RAI.TreatWoundsAltSkills",$html.find('[name="strict_rules"]')[0]?.checked);var usedProf=0;game.settings.get("pf2e","RAI.TreatWoundsAltSkills")?("cra"===skill&&(med=token.actor.data.data.skills.cra),"nat"===skill&&(med=token.actor.data.data.skills.nat),usedProf=requestedProf<=med.rank?requestedProf:med.rank):(usedProf=requestedProf<=med.rank?requestedProf:med.rank,"cra"===skill&&(med=token.actor.data.data.skills.cra),"nat"===skill&&(med=token.actor.data.data.skills.nat,0===usedProf&&(usedProf=1)));const medicBonus=CheckFeat("medic-dedication")?5*(usedProf-1):0;(0,[()=>ui.notifications.warn(`${name} is not trained in Medicine and doesn't know how to treat wounds.`),()=>rollTreatWounds({DC:15+mod,bonus:0+medicBonus,med,riskysurgery,mortalhealing}),()=>rollTreatWounds({DC:20+mod,bonus:10+medicBonus,med,riskysurgery,mortalhealing}),()=>rollTreatWounds({DC:30+mod,bonus:30+medicBonus,med,riskysurgery,mortalhealing}),()=>rollTreatWounds({DC:40+mod,bonus:50+medicBonus,med,riskysurgery,mortalhealing})][usedProf])()}}if(void 0===token)ui.notifications.warn("No token is selected.");else{const chirurgeon=CheckFeat("chirurgeon"),naturalMedicine=CheckFeat("natural-medicine");new Dialog({title:"Treat Wounds",content:`\n<div>Select a target DC. Remember that you can't attempt a heal above your proficiency. Attempting to do so will downgrade the DC and amount healed to the highest you're capable of.</div>\n<hr/>\n${chirurgeon||naturalMedicine?`\n<form>\n<div class="form-group">\n<label>Treat Wounds Skill:</label>\n\n<select id="skill" name="skill">\n<option value="med">Medicine</option>\n\n${chirurgeon?'<option value="cra">Crafting</option>':""}\n${naturalMedicine?'<option value="nat">Nature</option>':""}\n</select>\n</div>\n</form>\n`:""}\n<form>\n<div class="form-group">\n<label>Medicine DC:</label>\n<select id="dc-type" name="dc-type">\n<option value="1">Trained DC 15</option>\n<option value="2">Expert DC 20, +10 Healing</option>\n<option value="3">Master DC 30, +30 Healing</option>\n<option value="4">Legendary DC 40, +50 Healing</option>\n</select>\n</div>\n</form>\n<form>\n<div class="form-group">\n<label>DC Modifier:</label>\n<input id="modifier" name="modifier" type="number"/>\n</div>\n</form>\n${CheckFeat("risky-surgery")?'<form><div class="form-group">\n<label>Risky Surgery</label>\n<input type="checkbox" id="risky_surgery_bool" name="risky_surgery_bool"></input>\n</div></form>':""}\n${CheckFeat("mortal-healing")?'<form><div class="form-group">\n<label>Mortal Healing</label>\n<input type="checkbox" id="mortal_healing_bool" name="mortal_healing_bool" checked></input>\n</div></form>':""}\n${game.user.isGM?'<form><div class="form-group">\n<label>Allow higher DC from alternate skills?</label>\n<input type="checkbox" id="strict_rules" name="strict_rules"'+(game.settings.get("pf2e","RAI.TreatWoundsAltSkills")?" checked":"")+"></input>\n</div></form>":""}\n</form>\n`,buttons:{yes:{icon:'<i class="fas fa-hand-holding-medical"></i>',label:"Treat Wounds",callback:applyChanges},no:{icon:'<i class="fas fa-times"></i>',label:"Cancel"}},default:"yes"}).render(!0)}