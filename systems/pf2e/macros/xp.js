function getHazardLevels(actors,type){return actors.filter((a=>a.data.type===type)).map((a=>({level:parseInt(a.data.data.details.level??1,10),isComplex:a.data.data.details.isComplex??!1})))}function getLevels(actors,type){return actors.filter((a=>a.data.type===type)).map((a=>parseInt(a.data.data.details.level.value??"1",10)))}function dialogTemplate(xp){return`\n<h2>XP</h2>\n<table>\n    <tr>\n        <th>Party</th>\n        <td>PCs: ${xp.partySize} (Lv ${xp.partyLevel})</td>\n    </tr>\n    <tr>\n        <th>Rating</th>\n        <td>${xp.rating} (${xp.xpPerPlayer} XP)</td>\n    </tr>\n    <tr>\n        <th>Total XP</th>\n        <td>PCs: ${xp.encounterBudgets.moderate} XP, NPCs & Hazards: ${xp.totalXP} XP</td>\n    </tr>\n</table>\n<h2>Budgets</h2>\n<table>\n    <tr>\n        <th>Trivial</th>\n        <td>${xp.encounterBudgets.trivial} XP</td>\n    </tr>\n    <tr>\n        <th>Low</th>\n        <td>${xp.encounterBudgets.low} XP</td>\n    </tr>\n    <tr>\n        <th>Moderate</th>\n        <td>${xp.encounterBudgets.moderate} XP</td>\n    </tr>\n    <tr>\n        <th>Severe</th>\n        <td>${xp.encounterBudgets.severe} XP</td>\n    </tr>\n    <tr>\n        <th>Extreme</th>\n        <td>${xp.encounterBudgets.extreme} XP</td>\n    </tr>\n</table>`}const askLevelPopupTemplate=()=>`\n    <form>\n    <div class="form-group">\n        <label>Party Size</label>\n        <input id="party-size" name="party-size" type="number" value="${parseInt(localStorage.getItem("xpMacroPartySize")??4,10)}">\n    </div>\n    <div class="form-group">\n        <label>Party level</label>\n        <input id="party-level" name="party-level" type="number" value="${parseInt(localStorage.getItem("xpMacroPartyLevel")??1,10)}">\n    </div>\n    </form>\n    `;function showXP(partyLevel,partySize,npcLevels,hazardLevels){const xp=game.pf2e.gm.calculateXP(partyLevel,partySize,npcLevels,hazardLevels,{proficiencyWithoutLevel:"ProficiencyWithoutLevel"===game.settings.get("pf2e","proficiencyVariant")});new Dialog({title:"XP",content:dialogTemplate(xp),buttons:{}}).render(!0)}function askPartyLevelAndSize(npcLevels,hazardLevels){new Dialog({title:"Party Information",content:askLevelPopupTemplate,buttons:{no:{icon:'<i class="fas fa-times"></i>',label:"Cancel"},yes:{icon:'<i class="fas fa-calculator"></i>',label:"Calculate XP",callback:$html=>{const partySize=parseInt($html[0].querySelector('[name="party-size"]').value,10)??1,partyLevel=parseInt($html[0].querySelector('[name="party-level"]').value,10)??1;localStorage.setItem("xpMacroPartySize",partySize),localStorage.setItem("xpMacroPartyLevel",partyLevel),showXP(partyLevel,partySize,npcLevels,hazardLevels)}}},default:"yes"}).render(!0)}function main(){const actors=canvas.tokens.controlled.map((a=>a.actor)),npcLevels=getLevels(actors,"npc"),pcLevels=getLevels(actors,"character"),hazardLevels=getHazardLevels(actors,"hazard");0!==npcLevels.length||0!==hazardLevels.length?0===pcLevels.length?askPartyLevelAndSize(npcLevels,hazardLevels):showXP(pcLevels[0],pcLevels.length,npcLevels,hazardLevels):ui.notifications.error("You must select at least one npc and/or hazard token and optionally all PC tokens")}main();