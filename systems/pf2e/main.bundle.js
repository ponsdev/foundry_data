(()=>{var deferred,__webpack_modules__={1854:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__)},6700:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActiveEffectPF2e=void 0;const base_1=__webpack_require__(9978),base_2=__webpack_require__(5180);class ActiveEffectPF2e extends ActiveEffect{get isEnabled(){return!this.data.disabled}get applyOnCast(){var _a;return null!==(_a=this.getFlag("pf2e","applyOnCast"))&&void 0!==_a&&_a}async enable(){this.update({disabled:!1})}prepareData(){for(const change of this.data.changes)if(change.mode===CONST.ACTIVE_EFFECT_MODES.CUSTOM)switch(change.key){case"grant":{const lookupData=this.valueIsLookupData(change.value)?change.value:null;this.parent instanceof base_1.ActorPF2e&&null!==lookupData&&(this.isEnabled?this.grantItem(this.parent,lookupData):this.revokeItem(this.parent,lookupData));break}}}valueIsLookupData(value){return value instanceof Object&&"pack"in value&&"id"in value}async grantItem(owner,lookupData){var _a;const toGrant=null===lookupData.pack?game.items.get(lookupData.id):await(null===(_a=game.packs.get(lookupData.pack))||void 0===_a?void 0:_a.getEntity(lookupData.id));var item;toGrant instanceof base_2.ItemPF2e&&(item=toGrant,!owner.items.entries.some((ownedItem=>ownedItem.sourceId===item.sourceId)))&&(toGrant.data.flags.pf2e={grantedBy:this.data.origin},await owner.createEmbeddedEntity("OwnedItem",toGrant.data))}async revokeItem(owner,lookupData){const toRevoke=owner.items.find((item=>{var _a;return!(item.getFlag("pf2e","grantedBy")!==this.id||!(null===(_a=item.sourceId)||void 0===_a?void 0:_a.endsWith(lookupData.id)))}));await(null==toRevoke?void 0:toRevoke.delete())}}exports.ActiveEffectPF2e=ActiveEffectPF2e},2952:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AnimalCompanionPF2e=void 0;const character_1=__webpack_require__(3919),npc_1=__webpack_require__(5975),creature_1=__webpack_require__(2542);class AnimalCompanionPF2e extends creature_1.CreaturePF2e{static get defaultImg(){return CONST.DEFAULT_TOKEN}prepareDerivedData(){super.prepareDerivedData();const actorData=this.data,{data}=actorData;this._getDataFromMaster(data)}_getDataFromMaster(data){const master=(game.actors instanceof Actors?game.actors:new Map).get(data.master.id);master instanceof character_1.CharacterPF2e||master instanceof npc_1.NPCPF2e?(data.master.name=master.name,data.master.level=master.data.data.details.level,data.details.level=data.master.level):(data.master.level={value:1,min:1},data.details.level=data.master.level)}}exports.AnimalCompanionPF2e=AnimalCompanionPF2e,AnimalCompanionPF2e.type="animalCompanion"},9978:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.HazardPF2e=exports.ActorPF2e=exports.SKILL_EXPANDED=exports.SKILL_DICTIONARY=void 0;const modifiers_1=__webpack_require__(6243),conditions_1=__webpack_require__(5330),container_1=__webpack_require__(1482),dice_1=__webpack_require__(1459),data_definitions_1=__webpack_require__(6508),data_definitions_2=__webpack_require__(5558),rules_1=__webpack_require__(8094),physical_1=__webpack_require__(315),utils_1=__webpack_require__(4930),localize_1=__webpack_require__(1608),item_transfer_1=__webpack_require__(4494),automatic_bonus_1=__webpack_require__(2650),rule_element_1=__webpack_require__(9950);exports.SKILL_DICTIONARY=Object.freeze({acr:"acrobatics",arc:"arcana",ath:"athletics",cra:"crafting",dec:"deception",dip:"diplomacy",itm:"intimidation",med:"medicine",nat:"nature",occ:"occultism",prf:"performance",rel:"religion",soc:"society",ste:"stealth",sur:"survival",thi:"thievery"}),exports.SKILL_EXPANDED=Object.freeze({acrobatics:{ability:"dex",shortform:"acr"},arcana:{ability:"int",shortform:"arc"},athletics:{ability:"str",shortform:"ath"},crafting:{ability:"int",shortform:"cra"},deception:{ability:"cha",shortform:"dec"},diplomacy:{ability:"cha",shortform:"dip"},intimidation:{ability:"cha",shortform:"itm"},medicine:{ability:"wis",shortform:"med"},nature:{ability:"wis",shortform:"nat"},occultism:{ability:"int",shortform:"occ"},performance:{ability:"cha",shortform:"prf"},religion:{ability:"wis",shortform:"rel"},society:{ability:"int",shortform:"soc"},stealth:{ability:"dex",shortform:"ste"},survival:{ability:"wis",shortform:"sur"},thievery:{ability:"dex",shortform:"thi"}});const SUPPORTED_ROLL_OPTIONS=Object.freeze(["all","attack-roll","damage-roll","saving-throw","fortitude","reflex","will","perception","initiative","skill-check","counteract-check"]);class ActorPF2e extends Actor{constructor(data,options={}){var _a;if(null===(_a=options.pf2e)||void 0===_a?void 0:_a.ready)delete options.pf2e.ready,super(data,options);else try{const ready={pf2e:{ready:!0}};return new CONFIG.PF2E.Actor.entityClasses[data.type](data,Object.assign(Object.assign({},ready),options))}catch(_error){super(data,options),console.warn(`Unrecognized Actor type (${data.type}): falling back to ActorPF2e`)}}get type(){return this.data.type}get traits(){return new Set(this.data.data.traits.traits.value)}get level(){return this.data.data.details.level.value}get temporaryEffects(){const conditionTokenIcons=this.itemTypes.condition.filter((condition=>condition.fromSystem)).map((condition=>{return data=condition.data,`${CONFIG.PF2E.statusEffects.effectsIconFolder}${data.data.hud.statusName}.webp`;var data})),conditionTokenEffects=Array.from(new Set(conditionTokenIcons)).map((icon=>new rule_element_1.TokenEffect(icon))),effectTokenEffects=this.itemTypes.effect.filter((effect=>{var _a;return null===(_a=effect.data.data.tokenIcon)||void 0===_a?void 0:_a.show})).map((effect=>new rule_element_1.TokenEffect(effect.img)));return super.temporaryEffects.concat(this.data.data.tokenEffects).concat(conditionTokenEffects).concat(effectTokenEffects)}static get defaultImg(){const match=Object.entries(CONFIG.PF2E.Actor.entityClasses).find((([_key,cls])=>cls.name===this.name));return`systems/pf2e/icons/default-icons/${match?`${match[0]}.svg`:"mystery-man.svg"}`}get defaultImg(){return this.constructor.defaultImg}get heldShield(){return null}static async create(data,options={}){var _a,_b,_c,_d,_e,_f,_g;const createData=Array.isArray(data)?data:[data];for(const datum of createData)if(null!==(_a=datum.img)&&void 0!==_a||(datum.img=CONFIG.PF2E.Actor.entityClasses[datum.type].defaultImg),game.settings.get("pf2e","defaultTokenSettings")){const nameMode=game.settings.get("pf2e","defaultTokenSettingsName"),barMode=game.settings.get("pf2e","defaultTokenSettingsBar"),merged=mergeObject(datum,{permission:null!==(_b=datum.permission)&&void 0!==_b?_b:{default:CONST.ENTITY_PERMISSIONS.NONE},token:{bar1:{attribute:"attributes.hp"},displayName:nameMode,displayBars:barMode,name:datum.name}}),dimensionMap={familiar:.5,vehicle:2};switch(null!==(_c=(_f=merged.token).height)&&void 0!==_c||(_f.height=null!==(_d=dimensionMap[datum.type])&&void 0!==_d?_d:1),null!==(_e=(_g=merged.token).width)&&void 0!==_e||(_g.width=merged.token.height),merged.type){case"animalCompanion":case"character":case"familiar":merged.token.actorLink=!0,merged.token.disposition=CONST.TOKEN_DISPOSITIONS.FRIENDLY,merged.token.vision=!0;break;case"loot":merged.permission.default=CONST.ENTITY_PERMISSIONS.LIMITED,merged.token.disposition=CONST.TOKEN_DISPOSITIONS.NEUTRAL;break;case"npc":merged.token.disposition=CONST.TOKEN_DISPOSITIONS.HOSTILE;break;default:merged.token.disposition=CONST.TOKEN_DISPOSITIONS.NEUTRAL}const index=createData.indexOf(datum);createData[index]=merged}return super.create(data,options)}prepareBaseData(){super.prepareBaseData(),this.data.data.tokenEffects=[]}prepareDerivedData(){super.prepareDerivedData(),this._prepareTokenImg()}_prepareTokenImg(){game.settings.get("pf2e","defaultTokenSettings")&&this.data.token.img===this.defaultImg&&this.data.token.img!==this.img&&(this.data.token.img=this.img)}_applyInitiativeRollToCombatTracker(roll){if(null==roll?void 0:roll.total){if(!game.combat)return void ui.notifications.error("No active encounters in the Combat Tracker.");const combatant=game.combat.turns.find((c=>c.actor.id===this._id));if(void 0===combatant)return void ui.notifications.error(`No combatant found for ${this.name} in the Combat Tracker.`);game.combat.setInitiative(combatant._id,roll.total)}else console.log("PF2e System | _applyInitiativeRollToCombatTracker | invalid roll object or roll.value mising: ",roll)}getFirstWornArmor(){return this.data.items.filter((item=>"armor"===item.type)).filter((armor=>"shield"!==armor.data.armorType.value)).find((armor=>armor.data.equipped.value))}getFirstEquippedShield(){return this.data.items.filter((item=>"armor"===item.type)).filter((armor=>"shield"===armor.data.armorType.value)).find((shield=>shield.data.equipped.value))}onCreateOwnedItem(child,_options,_userId){var _a,_b;if(!data_definitions_2.isCreatureData(this.data)||!this.can(game.user,"update"))return;const rules=rules_1.RuleElements.fromRuleElementData(null!==(_b=null===(_a=child.data)||void 0===_a?void 0:_a.rules)&&void 0!==_b?_b:[],child),tokens=this._getTokenData(),actorUpdates={};for(const rule of rules)rule.onCreate(this.data,child,actorUpdates,Object.values(tokens));this._updateAllTokens(actorUpdates,tokens)}onDeleteOwnedItem(child,_options,_userId){var _a,_b;if(!data_definitions_2.isCreatureData(this.data)||!this.can(game.user,"update"))return;const rules=rules_1.RuleElements.fromRuleElementData(null!==(_b=null===(_a=child.data)||void 0===_a?void 0:_a.rules)&&void 0!==_b?_b:[],child),tokens=this._getTokenData(),actorUpdates={};for(const rule of rules)rule.onDelete(this.data,child,actorUpdates,Object.values(tokens));this._updateAllTokens(actorUpdates,tokens)}_getTokenData(){var _a,_b,_c;const tokens={};if(this.isToken){const id=null===(_b=null===(_a=null==this?void 0:this.token)||void 0===_a?void 0:_a.data)||void 0===_b?void 0:_b._id;id&&(tokens[id]=duplicate(null===(_c=canvas.tokens.get(id))||void 0===_c?void 0:_c.data))}else for(const scene of game.scenes.values())scene.getEmbeddedCollection("Token").filter((token=>token.actorLink&&token.actorId===this.id)).map((token=>duplicate(token))).forEach((token=>{tokens[token._id]=token}));return tokens}async _updateAllTokens(actorUpdates,tokens){const promises=[];actorUpdates&&!isObjectEmpty(actorUpdates)&&promises.push(this.update(actorUpdates));for(const scene of game.scenes.values()){const local=scene.getEmbeddedCollection("Token").filter((token=>{var _a,_b;return this.isToken&&(null==token?void 0:token._id)===(null===(_b=null===(_a=this.token)||void 0===_a?void 0:_a.data)||void 0===_b?void 0:_b._id)||token.actorLink&&token.actorId===this.id})).map((token=>tokens[token._id])).filter((token=>!!token)).map((token=>{var _a;return token.actorLink||(token.actorData=null!==(_a=token.actorData)&&void 0!==_a?_a:{},mergeObject(token.actorData,actorUpdates)),token}));promises.push(scene.updateEmbeddedEntity("Token",local))}return Promise.all(promises)}_prepareCustomModifiers(actorData,rules){var _a,_b;const statisticsModifiers={},damageDice={},strikes=[],rollNotes={},weaponPotency={},striking={},multipleAttackPenalties={},synthetics={damageDice,statisticsModifiers,strikes,rollNotes,weaponPotency,striking,multipleAttackPenalties};automatic_bonus_1.AutomaticBonusProgression.concatModifiers(actorData.data.details.level.value,synthetics),rules.forEach((rule=>{try{rule.onBeforePrepareData(actorData,synthetics)}catch(error){console.error(`PF2e | Failed to execute onBeforePrepareData on rule element ${rule}.`,error)}}));const conditions=actorData.items.filter((i=>{var _a;return(null===(_a=i.flags.pf2e)||void 0===_a?void 0:_a.condition)&&"condition"===i.type&&i.data.active}));for(const[key,value]of conditions_1.ConditionManager.getModifiersFromConditions(conditions.values()))statisticsModifiers[key]=(statisticsModifiers[key]||[]).concat(value);if(["character","familiar","npc"].includes(actorData.type)){const{data}=actorData;data.customModifiers=null!==(_a=data.customModifiers)&&void 0!==_a?_a:{};for(const[statistic,modifiers]of Object.entries(data.customModifiers))statisticsModifiers[statistic]=(statisticsModifiers[statistic]||[]).concat(modifiers);data.damageDice=null!==(_b=data.damageDice)&&void 0!==_b?_b:{};for(const[attack,dice]of Object.entries(data.damageDice))damageDice[attack]=(damageDice[attack]||[]).concat(dice)}return{statisticsModifiers,damageDice,strikes,rollNotes,weaponPotency,striking,multipleAttackPenalties}}getStrikeDescription(weaponData){var _a,_b;const flavor={description:"PF2E.Strike.Default.Description",criticalSuccess:"PF2E.Strike.Default.CriticalSuccess",success:"PF2E.Strike.Default.Success"},traits=weaponData.data.traits.value;return traits.includes("unarmed")?(flavor.description="PF2E.Strike.Unarmed.Description",flavor.success="PF2E.Strike.Unarmed.Success"):traits.find((trait=>trait.startsWith("thrown")))?(flavor.description="PF2E.Strike.Combined.Description",flavor.success="PF2E.Strike.Combined.Success"):"melee"===(null===(_a=weaponData.data.range)||void 0===_a?void 0:_a.value)?(flavor.description="PF2E.Strike.Melee.Description",flavor.success="PF2E.Strike.Melee.Success"):(parseInt(null===(_b=weaponData.data.range)||void 0===_b?void 0:_b.value,10)||0)>0&&(flavor.description="PF2E.Strike.Ranged.Description",flavor.success="PF2E.Strike.Ranged.Success"),flavor}rollSkill(event,skillName){const skl=this.data.data.skills[skillName],flavor=`${CONFIG.PF2E.proficiencyLevels[skl.rank]} ${CONFIG.PF2E.skills[skillName]} Skill Check`;dice_1.DicePF2e.d20Roll({event,parts:["@mod","@itemBonus"],data:{mod:skl.value-skl.item,itemBonus:skl.item},title:flavor,speaker:ChatMessage.getSpeaker({actor:this})})}rollLoreSkill(event,item){var _a;const{data}=item;if("lore"!==data.type)throw Error("Can only roll lore skills using lore items");const flavor=`${item.name} Skill Check`;let rollMod=0,itemBonus=0;if("character"===item.actor.data.type){const rank=(null===(_a=data.data.proficient)||void 0===_a?void 0:_a.value)||0,proficiency=modifiers_1.ProficiencyModifier.fromLevelAndRank(this.data.data.details.level.value,rank).modifier,modifier=this.data.data.abilities.int.mod;itemBonus=Number((data.data.item||{}).value||0),rollMod=modifier+proficiency}else"npc"===item.actor.data.type&&(rollMod=data.data.mod.value);dice_1.DicePF2e.d20Roll({event,parts:["@mod","@itemBonus"],data:{mod:rollMod,itemBonus},title:flavor,speaker:ChatMessage.getSpeaker({actor:this})})}rollSave(event,saveName){var _a,_b;const save=this.data.data.saves[saveName],flavor=`${game.i18n.localize(CONFIG.PF2E.saves[saveName])} Save Check`;dice_1.DicePF2e.d20Roll({event,parts:["@mod","@itemBonus"],data:{mod:save.value-(null!==(_a=save.item)&&void 0!==_a?_a:0),itemBonus:null!==(_b=save.item)&&void 0!==_b?_b:0},title:flavor,speaker:ChatMessage.getSpeaker({actor:this})})}rollAbility(event,abilityName){const skl=this.data.data.abilities[abilityName],flavor=`${game.i18n.localize(CONFIG.PF2E.abilities[abilityName])} Check`;dice_1.DicePF2e.d20Roll({event,parts:["@mod"],data:{mod:skl.mod},title:flavor,speaker:ChatMessage.getSpeaker({actor:this})})}rollAttribute(event,attributeName){var _a;const skl=this.data.data.attributes[attributeName],parts=["@mod","@itemBonus"],configAttributes=CONFIG.PF2E.attributes;if(utils_1.objectHasKey(configAttributes,attributeName)){const flavor=`${game.i18n.localize(configAttributes[attributeName])} Check`;dice_1.DicePF2e.d20Roll({event,parts,data:{mod:skl.value-(null!==(_a=skl.item)&&void 0!==_a?_a:0),itemBonus:skl.item},title:flavor,speaker:ChatMessage.getSpeaker({actor:this})})}}static async applyDamage(roll,multiplier,attribute="attributes.hp",modifier=0,{shieldID}={}){var _a;const tokens=canvas.tokens.controlled.filter((token=>token.actor));if(0===tokens.length)return ui.notifications.error(game.i18n.localize("PF2E.UI.errorTargetToken")),!1;const value=Math.floor(parseFloat(roll.find(".dice-total").text())*multiplier)+modifier,messageSender=roll.find(".message-sender").text(),flavorText=roll.find(".flavor-text").text();for(const token of tokens){const actor=token.actor,shield="attributes.shield"===attribute?shieldID?null!==(_a=actor.itemTypes.armor.find((armor=>armor.isShield&&armor.id===shieldID)))&&void 0!==_a?_a:null:actor.heldShield:null;if("attributes.shield"===attribute&&(null==shield?void 0:shield.isBroken)){const warnings=localize_1.LocalizePF2e.translations.PF2E.Actions.RaiseAShield;ui.notifications.warn(game.i18n.format(warnings.ShieldIsBroken,{actor:token.name,shield:shield.name}))}const shieldFlavor="attributes.shield"===attribute&&!1===(null==shield?void 0:shield.isBroken)?game.i18n.format("PF2E.UI.applyDamage.shieldActive",{shield:shield.name}):game.i18n.localize("PF2E.UI.applyDamage.shieldInActive"),shieldDamage="attributes.shield"===attribute&&!1===(null==shield?void 0:shield.isBroken)&&value>0?`(${Math.max(0,value-shield.hardness)})`:"",appliedResult=value>0?game.i18n.localize("PF2E.UI.applyDamage.damaged")+value+shieldDamage:game.i18n.localize("PF2E.UI.applyDamage.healed")+-1*value,modifiedByGM=0!==modifier?`Modified by GM: ${modifier<0?"-":"+"}${modifier}`:"",by=game.i18n.localize("PF2E.UI.applyDamage.by"),hitpoints=game.i18n.localize("PF2E.HitPointsHeader").toLowerCase(),message=await renderTemplate("systems/pf2e/templates/chat/damage/result-message.html",{flavorText,by,messageSender,modifiedByGM,actor:token.name,shieldFlavor,appliedResult,hitpoints});actor.modifyTokenAttribute(attribute,-1*value,!0,!0,shield).then((()=>{ChatMessage.create({user:game.user._id,speaker:{alias:token.name},content:message,type:CONST.CHAT_MESSAGE_TYPES.EMOTE})}))}return!0}static async rollSave(ev,item){var _a;if(!(canvas.tokens.controlled.length>0))throw utils_1.ErrorPF2e(game.i18n.localize("PF2E.UI.errorTargetToken"));for(const t of canvas.tokens.controlled){const actor=t.actor,save=$(ev.currentTarget).attr("data-save"),itemTraits=item.data.data.traits.value;if(!actor)return;if(null===(_a=actor.data.data.saves[save])||void 0===_a?void 0:_a.roll){const options=actor.getRollOptions(["all","saving-throw",save]);options.push("magical","spell"),itemTraits&&options.push(...itemTraits),actor.data.data.saves[save].roll({event:ev,options})}else actor.rollSave(ev,save)}}static async setCombatantInitiative(roll){const skillRolled=roll.find(".flavor-text").text(),valueRolled=parseFloat(roll.find(".dice-total").text()),promises=[];for(const t of canvas.tokens.controlled){if(!game.combat)return void ui.notifications.error("No active encounters in the Combat Tracker.");const combatant=game.combat.getCombatantByToken(t.id);if(void 0===combatant)return void ui.notifications.error("You haven't added this token to the Combat Tracker.");let value=valueRolled;combatant.actor.hasPlayerOwner||(value+=.5);const message=`\n      <div class="dice-roll">\n      <div class="dice-result">\n        <div class="dice-tooltip" style="display: none;">\n            <div class="dice-formula" style="background: 0;">\n              <span style="font-size: 10px;">${skillRolled} <span style="font-weight: bold;">${valueRolled}</span></span>\n            </div>\n        </div>\n        <div class="dice-total" style="padding: 0 10px; word-break: normal;">\n          <span style="font-size: 12px; font-style:oblique; font-weight: 400;">${combatant.name}'s Initiative is now ${value}!</span>\n        </div>\n      </div>\n      </div>\n      `;ChatMessage.create({user:game.user._id,speaker:{alias:t.name},content:message,whisper:ChatMessage.getWhisperRecipients("GM"),type:CONST.CHAT_MESSAGE_TYPES.OTHER}),promises.push(game.combat.setInitiative(combatant._id,value))}await Promise.all(promises)}async _setShowUnpreparedSpells(entryId,spellLevel){var _a,_b,_c,_d;if(!entryId||!spellLevel)return;const spellcastingEntry=this.getOwnedItem(entryId);if(null!==spellcastingEntry&&"spellcastingEntry"===spellcastingEntry.data.type&&"prepared"===(null===(_b=null===(_a=spellcastingEntry.data.data)||void 0===_a?void 0:_a.prepared)||void 0===_b?void 0:_b.value)&&!1===(null===(_d=null===(_c=spellcastingEntry.data.data)||void 0===_c?void 0:_c.showUnpreparedSpells)||void 0===_d?void 0:_d.value)){!0===CONFIG.debug.hooks&&console.log(`PF2e DEBUG | Updating spellcasting entry ${entryId} set showUnpreparedSpells to true.`);const currentLvlToDisplay={};currentLvlToDisplay[spellLevel]=!0,await this.updateEmbeddedEntity("OwnedItem",{_id:entryId,"data.showUnpreparedSpells.value":!0,"data.displayLevels":currentLvlToDisplay})}}async updateEmbeddedEntity(embeddedName,data,options={}){const updateData=Array.isArray(data)?data:[data];for(const datum of updateData){const item=this.items.get(datum._id);item instanceof physical_1.PhysicalItemPF2e&&await physical_1.PhysicalItemPF2e.updateIdentificationData(item.data,datum)}return super.updateEmbeddedEntity(embeddedName,updateData,options)}isLootableBy(user){return this.can(user,"update")}async modifyTokenAttribute(attribute,value,isDelta=!1,isBar=!0,selectedShield=null){if(!Number.isInteger(value))return Promise.reject();if(["attributes.shield","attributes.hp"].includes(attribute)){const updateActorData={},updateShieldData={_id:"",data:{hp:{value:0}}};if("attributes.shield"===attribute){const shield=null!=selectedShield?selectedShield:this.heldShield;if(!1===(null==shield?void 0:shield.isBroken)){let shieldHitPoints=shield.hitPoints.current;isDelta&&value<0?(value=Math.min(shield.hardness+value,0))<0&&(attribute="attributes.hp",shieldHitPoints=Math.clamped(shield.hitPoints.current+value,0,shield.hitPoints.max)):shieldHitPoints=Math.clamped(value,0,shield.hitPoints.max),shield.data.data.hp.value=shieldHitPoints,updateActorData["data.attributes.shield.value"]=shieldHitPoints,updateShieldData._id=shield._id,updateShieldData.data.hp.value=shieldHitPoints}else if(this.data.data.attributes.shield.max){const shieldData=this.data.data.attributes.shield,currentHitPoints=Number(shieldData.value),maxHitPoints=Number(shieldData.max);let shieldHitPoints=currentHitPoints;isDelta&&value<0?(value=Math.min(Number(shieldData.hardness)+value,0))<0&&(attribute="attributes.hp",shieldHitPoints=Math.clamped(currentHitPoints+value,0,maxHitPoints)):shieldHitPoints=Math.clamped(value,0,maxHitPoints),updateActorData["data.attributes.shield.value"]=shieldHitPoints}else isDelta&&(attribute="attributes.hp")}if("attributes.hp"===attribute){const{hp,sp}=this.data.data.attributes;if(isDelta){if(value<0){const{update,delta}=this._calculateHealthDelta({hp,sp,delta:value});value=delta;for(const[k,v]of Object.entries(update))updateActorData[k]=v}value=Math.clamped(Number(hp.value)+value,0,hp.max)}value=Math.clamped(value,0,hp.max),updateActorData["data.attributes.hp.value"]=value}return this.update(updateActorData).then((()=>(""!==updateShieldData._id&&this.updateOwnedItem(updateShieldData),this)))}return super.modifyTokenAttribute(attribute,value,isDelta,isBar)}async transferItemToActor(targetActor,item,quantity,containerId){var _a,_b;if(!(item instanceof physical_1.PhysicalItemPF2e))return Promise.reject(new Error("Only physical items (with quantities) can be transfered between actors"));if(((source,target)=>{const bothAreOwned=source.hasPerm(game.user,"owner")&&target.hasPerm(game.user,"owner"),sourceIsOwnedOrLoot=source.isLootableBy(game.user),targetIsOwnedOrLoot=target.isLootableBy(game.user);return!bothAreOwned&&sourceIsOwnedOrLoot&&targetIsOwnedOrLoot})(this,targetActor)){const source={tokenId:null===(_a=this.token)||void 0===_a?void 0:_a.id,actorId:this.id,itemId:item.id},target={tokenId:null===(_b=targetActor.token)||void 0===_b?void 0:_b.id,actorId:targetActor.id};return await new item_transfer_1.ItemTransfer(source,target,quantity,containerId).request(),null}if(!this.can(game.user,"update"))return ui.notifications.error(game.i18n.localize("PF2E.ErrorMessage.CantMoveItemSource")),null;if(!targetActor.can(game.user,"update"))return ui.notifications.error(game.i18n.localize("PF2E.ErrorMessage.CantMoveItemDestination")),null;const sourceItemQuantity=Number(item.data.data.quantity.value),newItemQuantity=sourceItemQuantity-(quantity=Math.min(quantity,sourceItemQuantity));if(newItemQuantity<1)await this.deleteEmbeddedEntity("OwnedItem",item._id);else{const update={_id:item._id,"data.quantity.value":newItemQuantity};await this.updateEmbeddedEntity("OwnedItem",update)}const newItemData=duplicate(item._data);newItemData.data.quantity.value=quantity,newItemData.data.equipped.value=!1,data_definitions_1.isMagicDetailsData(newItemData.data)&&(newItemData.data.invested.value=!1);const result=await targetActor.createEmbeddedEntity("OwnedItem",newItemData);if(null===result)return null;const movedItem=targetActor.items.get(result._id);return movedItem instanceof physical_1.PhysicalItemPF2e?(await targetActor.stashOrUnstash(movedItem,containerId),item):null}async stashOrUnstash(item,containerId){containerId?container_1.isCycle(item.id,containerId,[item.data])||await item.update({"data.containerId.value":containerId,"data.equipped.value":!1}):await item.update({"data.containerId.value":""})}_calculateHealthDelta(args){const update={},{hp,sp}=args;let{delta}=args;return hp.temp+delta>=0?(update["data.attributes.hp.temp"]=hp.temp+delta,delta=0):(update["data.attributes.hp.temp"]=0,delta=hp.temp+delta),game.settings.get("pf2e","staminaVariant")>0&&delta<0&&(sp.value+delta>=0?(update["data.attributes.sp.value"]=sp.value+delta,delta=0):(update["data.attributes.sp.value"]=0,delta=sp.value+delta)),{update,delta}}static getActionGraphics(actionType,actionCount){let actionImg=0;"action"===actionType?actionImg=null!=actionCount?actionCount:1:"reaction"===actionType?actionImg="reaction":"free"===actionType?actionImg="free":"passive"===actionType&&(actionImg="passive");const graphics={1:{imageUrl:"systems/pf2e/icons/actions/OneAction.webp",actionGlyph:"A"},2:{imageUrl:"systems/pf2e/icons/actions/TwoActions.webp",actionGlyph:"D"},3:{imageUrl:"systems/pf2e/icons/actions/ThreeActions.webp",actionGlyph:"T"},free:{imageUrl:"systems/pf2e/icons/actions/FreeAction.webp",actionGlyph:"F"},reaction:{imageUrl:"systems/pf2e/icons/actions/Reaction.webp",actionGlyph:"R"},passive:{imageUrl:"systems/pf2e/icons/actions/Passive.webp",actionGlyph:""}};return utils_1.objectHasKey(graphics,actionImg)?{imageUrl:graphics[actionImg].imageUrl,actionGlyph:graphics[actionImg].actionGlyph}:{imageUrl:"systems/pf2e/icons/actions/OneAction.webp",actionGlyph:""}}async addCustomModifier(stat,name,value,type,predicate,damageType,damageCategory){var _a,_b,_c;if(!data_definitions_2.isCreatureData(this.data))throw Error("Custom modifiers only work for characters, NPCs, and familiars");const customModifiers=duplicate(null!==(_a=this.data.data.customModifiers)&&void 0!==_a?_a:{});if(!(null!==(_b=customModifiers[stat])&&void 0!==_b?_b:[]).find((m=>m.name===name))){const modifier=new modifiers_1.ModifierPF2e(name,value,type);damageType&&(modifier.damageType=damageType),damageCategory&&(modifier.damageCategory=damageCategory),modifier.custom=!0,modifier.predicate=predicate instanceof modifiers_1.ModifierPredicate?predicate:new modifiers_1.ModifierPredicate(predicate),modifier.ignored=!modifier.predicate.test(),customModifiers[stat]=(null!==(_c=customModifiers[stat])&&void 0!==_c?_c:[]).concat([modifier]),await this.update({"data.customModifiers":customModifiers})}}async removeCustomModifier(stat,modifier){var _a;if(!data_definitions_2.isCreatureData(this.data))throw Error("Custom modifiers only work for characters, NPCs, and familiars");const customModifiers=duplicate(null!==(_a=this.data.data.customModifiers)&&void 0!==_a?_a:{});if("number"==typeof modifier&&customModifiers[stat]&&customModifiers[stat].length>modifier)customModifiers[stat].splice(modifier,1),await this.update({"data.customModifiers":customModifiers});else{if("string"!=typeof modifier||!customModifiers[stat])throw Error("Custom modifiers can only be removed by name (string) or index (number)");customModifiers[stat]=customModifiers[stat].filter((m=>m.name!==modifier)),await this.update({"data.customModifiers":customModifiers})}}async addDamageDice(param){var _a,_b,_c,_d;if(!data_definitions_2.isCreatureData(this.data))throw Error("Custom damage dice only work for characters, NPCs, and familiars");const damageDice=duplicate(null!==(_a=this.data.data.damageDice)&&void 0!==_a?_a:{});if(!(null!==(_b=damageDice[param.selector])&&void 0!==_b?_b:[]).find((d=>d.name===param.name))){param.selector=null!==(_c=null==param?void 0:param.selector)&&void 0!==_c?_c:"damage",param.custom=!0;const dice=new modifiers_1.DamageDicePF2e(param);damageDice[param.selector]=(null!==(_d=damageDice[param.selector])&&void 0!==_d?_d:[]).concat([dice]),await this.update({"data.damageDice":damageDice})}}async removeDamageDice(selector,dice){var _a;if(!data_definitions_2.isCreatureData(this.data))throw Error("Custom damage dice only work for characters, NPCs, and familiars");const damageDice=duplicate(null!==(_a=this.data.data.damageDice)&&void 0!==_a?_a:{});if("number"==typeof dice&&damageDice[selector]&&damageDice[selector].length>dice)damageDice[selector].splice(dice,1),await this.update({"data.damageDice":damageDice});else{if("string"!=typeof dice||!damageDice[selector])throw Error("Dice can only be removed by name (string) or index (number)");damageDice[selector]=damageDice[selector].filter((d=>d.name!==dice)),await this.update({"data.damageDice":damageDice})}}async toggleRollOption(rollName,optionName){if(!SUPPORTED_ROLL_OPTIONS.includes(rollName)&&!this.data.data.skills[rollName])throw new Error(`${rollName} is not a supported roll`);const flag=`rollOptions.${rollName}.${optionName}`;return this.setFlag(game.system.id,flag,!this.getFlag(game.system.id,flag))}async setRollOption(rollName,optionName,enabled){if(!SUPPORTED_ROLL_OPTIONS.includes(rollName)&&!this.data.data.skills[rollName])throw new Error(`${rollName} is not a supported roll`);const flag=`rollOptions.${rollName}.${optionName}`;return this.setFlag(game.system.id,flag,!!enabled)}async unsetRollOption(rollName,optionName){const flag=`rollOptions.${rollName}.${optionName}`;return this.unsetFlag(game.system.id,flag)}async enableRollOption(rollName,optionName){return this.setRollOption(rollName,optionName,!0)}async disableRollOption(rollName,optionName){return this.setRollOption(rollName,optionName,!1)}getRollOptions(rollNames){return ActorPF2e.getRollOptions(this.data.flags,rollNames)}static getRollOptions(flags,rollNames){var _a,_b;const flag=null!==(_b=null===(_a=flags[game.system.id])||void 0===_a?void 0:_a.rollOptions)&&void 0!==_b?_b:{};return rollNames.flatMap((rollName=>{var _a;return Object.entries(null!==(_a=flag[rollName])&&void 0!==_a?_a:{}).reduce(((opts,[key,value])=>opts.concat(value?key:[])),[])})).reduce(((unique,option)=>unique.includes(option)?unique:unique.concat(option)),[])}getAbilityMod(ability){return this.data.data.abilities[ability].mod}async removeOrReduceCondition(condition,{forceRemove=!1}={forceRemove:!1}){var e_1,_a,e_2,_b;if(!condition.fromSystem)return;const details=condition.data.data,conditionList=forceRemove?[condition].concat(this.itemTypes.condition.filter((maybeLinked=>maybeLinked.fromSystem&&maybeLinked.data.data.base===details.base&&maybeLinked.data.data.value.value===details.value.value))):[condition],tokens=this.token?[this.token]:this.getActiveTokens();if(0!==tokens.length)try{for(var conditionList_1_1,conditionList_1=__asyncValues(conditionList);!(conditionList_1_1=await conditionList_1.next()).done;){const condition=conditionList_1_1.value,data=condition.data.data,value=data.value.isValued?Math.max(data.value.value-1,0):null;try{for(var tokens_1_1,tokens_1=(e_2=void 0,__asyncValues(tokens));!(tokens_1_1=await tokens_1.next()).done;){const token=tokens_1_1.value;null===value||forceRemove?await game.pf2e.ConditionManager.removeConditionFromToken(condition.id,token):await game.pf2e.ConditionManager.updateConditionValue(condition.id,token,value)}}catch(e_2_1){e_2={error:e_2_1}}finally{try{tokens_1_1&&!tokens_1_1.done&&(_b=tokens_1.return)&&await _b.call(tokens_1)}finally{if(e_2)throw e_2.error}}}}catch(e_1_1){e_1={error:e_1_1}}finally{try{conditionList_1_1&&!conditionList_1_1.done&&(_a=conditionList_1.return)&&await _a.call(conditionList_1)}finally{if(e_1)throw e_1.error}}else{const idList=conditionList.map((condition=>condition.id));await this.deleteEmbeddedEntity("OwnedItem",idList)}}}exports.ActorPF2e=ActorPF2e;exports.HazardPF2e=class extends ActorPF2e{}},3919:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CharacterPF2e=void 0;const base_1=__webpack_require__(5180),runes_1=__webpack_require__(8468),modifiers_1=__webpack_require__(6243),rules_1=__webpack_require__(8094),weapon_1=__webpack_require__(7370),rolls_1=__webpack_require__(7540),base_2=__webpack_require__(9978),utils_1=__webpack_require__(4930),rolls_2=__webpack_require__(7540),ancestry_1=__webpack_require__(939),background_1=__webpack_require__(1899),class_1=__webpack_require__(2769),creature_1=__webpack_require__(2542),localize_1=__webpack_require__(1608);class CharacterPF2e extends creature_1.CreaturePF2e{get ancestry(){var _a;return null!==(_a=this.itemTypes.ancestry[0])&&void 0!==_a?_a:null}get background(){var _a;return null!==(_a=this.itemTypes.background[0])&&void 0!==_a?_a:null}get class(){var _a;return null!==(_a=this.itemTypes.class[0])&&void 0!==_a?_a:null}get heritage(){var _a;return null!==(_a=this.itemTypes.feat.find((feat=>"heritage"===feat.featType.value)))&&void 0!==_a?_a:null}static get defaultImg(){return CONST.DEFAULT_TOKEN}prepareEmbeddedEntities(){super.prepareEmbeddedEntities(),this.prepareAncestry(),this.prepareBackground(),this.prepareClass()}prepareDerivedData(){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u,_v;super.prepareDerivedData();const actorData=this.data,rules=actorData.items.reduce(((accumulated,current)=>accumulated.concat(rules_1.RuleElements.fromOwnedItem(current))),[]),{data}=actorData;for(const abl of Object.values(data.abilities))abl.mod=Math.floor((abl.value-10)/2);data.toggles={actions:[{label:"PF2E.TargetFlatFootedLabel",inputName:`flags.${game.system.id}.rollOptions.all.target:flatFooted`,checked:this.getFlag(game.system.id,"rollOptions.all.target:flatFooted")}]};const synthetics=this._prepareCustomModifiers(actorData,rules),{damageDice,statisticsModifiers,strikes,rollNotes}=synthetics;data.details.xp.pct=Math.min(Math.round(100*data.details.xp.value/data.details.xp.max),99.5),(null===(_a=data.pfs)||void 0===_a?void 0:_a.levelBump)&&(statisticsModifiers.all=(statisticsModifiers.all||[]).concat(new modifiers_1.ModifierPF2e("PF2E.PFS.LevelBump",1,modifiers_1.MODIFIER_TYPE.UNTYPED)));{const ancestryHP=null!==(_b=data.attributes.ancestryhp)&&void 0!==_b?_b:0,classHP=null!==(_c=data.attributes.classhp)&&void 0!==_c?_c:0,modifiers=data.attributes.hp.modifiers.concat(new modifiers_1.ModifierPF2e("PF2E.AncestryHP",ancestryHP,modifiers_1.MODIFIER_TYPE.UNTYPED));if(game.settings.get("pf2e","staminaVariant")){const bonusSpPerLevel=data.attributes.levelbonussp*data.details.level.value,halfClassHp=Math.floor(classHP/2);data.attributes.sp.max=(halfClassHp+data.abilities.con.mod)*data.details.level.value+bonusSpPerLevel+data.attributes.flatbonussp,modifiers.push(new modifiers_1.ModifierPF2e("PF2E.ClassHP",halfClassHp*data.details.level.value,modifiers_1.MODIFIER_TYPE.UNTYPED))}else modifiers.push(new modifiers_1.ModifierPF2e("PF2E.ClassHP",classHP*data.details.level.value,modifiers_1.MODIFIER_TYPE.UNTYPED)),modifiers.push(new modifiers_1.ModifierPF2e("PF2E.AbilityCon",data.abilities.con.mod*data.details.level.value,modifiers_1.MODIFIER_TYPE.ABILITY));data.attributes.flatbonushp&&modifiers.push(new modifiers_1.ModifierPF2e("PF2E.FlatBonusHP",data.attributes.flatbonushp,modifiers_1.MODIFIER_TYPE.UNTYPED)),data.attributes.levelbonushp&&modifiers.push(new modifiers_1.ModifierPF2e("PF2E.BonusHPperLevel",data.attributes.levelbonushp*data.details.level.value,modifiers_1.MODIFIER_TYPE.UNTYPED)),(statisticsModifiers.hp||[]).map((m=>duplicate(m))).forEach((m=>modifiers.push(m))),(statisticsModifiers["hp-per-level"]||[]).map((m=>duplicate(m))).forEach((m=>{m.modifier*=data.details.level.value,modifiers.push(m)}));const stat=mergeObject(new modifiers_1.StatisticModifier("hp",modifiers),data.attributes.hp,{overwrite:!1});if(null===(_d=data.pfs)||void 0===_d?void 0:_d.levelBump){const hitPointsBump=Math.max(10,.1*stat.totalModifier);stat.push(new modifiers_1.ModifierPF2e("PF2E.PFS.LevelBump",hitPointsBump,modifiers_1.MODIFIER_TYPE.UNTYPED))}stat.max=stat.totalModifier,stat.value=Math.min(stat.value,stat.max),stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),data.attributes.hp=stat}const worn=this.getFirstWornArmor();for(const[saveName,save]of Object.entries(data.saves)){const ability=null!==(_e=save.ability)&&void 0!==_e?_e:CONFIG.PF2E.savingThrowDefaultAbilities[saveName],modifiers=[modifiers_1.AbilityModifier.fromAbilityScore(ability,data.abilities[ability].value),modifiers_1.ProficiencyModifier.fromLevelAndRank(data.details.level.value,save.rank)],notes=[];if(worn){const resiliencyBonus=runes_1.getResiliencyBonus(worn.data);resiliencyBonus>0&&modifiers.push(new modifiers_1.ModifierPF2e(worn.name,resiliencyBonus,modifiers_1.MODIFIER_TYPE.ITEM))}save.item&&modifiers.push(new modifiers_1.ModifierPF2e("PF2E.ItemBonusLabel",Number(save.item),modifiers_1.MODIFIER_TYPE.ITEM)),[saveName,`${ability}-based`,"saving-throw","all"].forEach((key=>{var _a;(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>modifiers.push(m))),(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[]).map((n=>duplicate(n))).forEach((n=>notes.push(n)))}));const stat=mergeObject(new modifiers_1.StatisticModifier(saveName,modifiers),save,{overwrite:!1});stat.value=stat.totalModifier,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),stat.roll=rolls_2.adaptRoll((args=>{var _a;const label=game.i18n.format("PF2E.SavingThrowWithName",{saveName:game.i18n.localize(CONFIG.PF2E.saves[saveName])}),options=null!==(_a=args.options)&&void 0!==_a?_a:[];modifiers_1.ensureProficiencyOption(options,save.rank),rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"saving-throw",options,dc:args.dc,notes},args.event,args.callback)})),data.saves[saveName]=stat}for(const skl of Object.values(data.martial)){const proficiency=modifiers_1.ProficiencyModifier.fromLevelAndRank(data.details.level.value,skl.rank||0);skl.value=proficiency.modifier,skl.breakdown=`${game.i18n.localize(proficiency.name)} ${proficiency.modifier<0?"":"+"}${proficiency.modifier}`}{const proficiencyRank=data.attributes.perception.rank||0,modifiers=[modifiers_1.WISDOM.withScore(data.abilities.wis.value),modifiers_1.ProficiencyModifier.fromLevelAndRank(data.details.level.value,proficiencyRank)],activeEffects=this.effects.entries.filter((effect=>effect.data.changes.some((change=>change.key.startsWith("data.attributes.perception.rank")))));modifiers[1].automation.key=activeEffects.length>0?"data.attributes.perception.rank":null,modifiers[1].automation.enabled=activeEffects.some((effect=>!effect.data.disabled));const notes=[];data.attributes.perception.item&&modifiers.push(new modifiers_1.ModifierPF2e("PF2E.ItemBonusLabel",Number(data.attributes.perception.item),modifiers_1.MODIFIER_TYPE.ITEM)),["perception","wis-based","all"].forEach((key=>{var _a;(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>modifiers.push(m))),(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[]).map((n=>duplicate(n))).forEach((n=>notes.push(n)))}));const stat=mergeObject(new modifiers_1.StatisticModifier("perception",modifiers),data.attributes.perception,{overwrite:!1});stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),stat.value=stat.totalModifier,stat.roll=rolls_2.adaptRoll((args=>{var _a;const label=game.i18n.localize("PF2E.PerceptionCheck"),options=null!==(_a=args.options)&&void 0!==_a?_a:[];modifiers_1.ensureProficiencyOption(options,proficiencyRank),rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"perception-check",options,dc:args.dc,notes},args.event,args.callback)})),data.attributes.perception=stat}{const modifiers=[modifiers_1.AbilityModifier.fromAbilityScore(data.details.keyability.value,data.abilities[data.details.keyability.value].value),modifiers_1.ProficiencyModifier.fromLevelAndRank(data.details.level.value,null!==(_f=data.attributes.classDC.rank)&&void 0!==_f?_f:0)],notes=[];["class",`${data.details.keyability.value}-based`,"all"].forEach((key=>{var _a;(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>modifiers.push(m))),(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[]).map((n=>duplicate(n))).forEach((n=>notes.push(n)))}));const stat=mergeObject(new modifiers_1.StatisticModifier("PF2E.ClassDCLabel",modifiers),data.attributes.classDC,{overwrite:!1});stat.value=10+stat.totalModifier,stat.ability=data.details.keyability.value,stat.breakdown=[game.i18n.localize("PF2E.ClassDCBase")].concat(stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`))).join(", "),data.attributes.classDC=stat}{const modifiers=[],dexCap=duplicate(null!==(_g=data.attributes.dexCap)&&void 0!==_g?_g:[]);let armorCheckPenalty=0,proficiency="unarmored";worn&&(dexCap.push({value:Number(null!==(_h=worn.data.dex.value)&&void 0!==_h?_h:0),source:worn.name}),proficiency=null===(_j=worn.data.armorType)||void 0===_j?void 0:_j.value,data.abilities.str.value<Number(null!==(_k=worn.data.strength.value)&&void 0!==_k?_k:0)&&(armorCheckPenalty=Number(null!==(_l=worn.data.check.value)&&void 0!==_l?_l:0)),modifiers.push(new modifiers_1.ModifierPF2e(worn.name,runes_1.getArmorBonus(worn.data),modifiers_1.MODIFIER_TYPE.ITEM))),modifiers.unshift(modifiers_1.ProficiencyModifier.fromLevelAndRank(data.details.level.value,null!==(_o=null===(_m=data.martial[proficiency])||void 0===_m?void 0:_m.rank)&&void 0!==_o?_o:0));const dexterity=modifiers_1.DEXTERITY.withScore(data.abilities.dex.value);dexterity.modifier=Math.min(dexterity.modifier,...dexCap.map((cap=>cap.value))),modifiers.unshift(dexterity),["ac","dex-based","all"].forEach((key=>{(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>modifiers.push(m)))}));const stat=mergeObject(new modifiers_1.StatisticModifier("ac",modifiers),data.attributes.ac,{overwrite:!1});stat.value=10+stat.totalModifier,stat.check=armorCheckPenalty,stat.dexCap=dexCap.reduce(((result,current)=>result?result.value>current.value?current:result:current),null),stat.breakdown=[game.i18n.localize("PF2E.ArmorClassBase")].concat(stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`))).join(", "),data.attributes.ac=stat}const shield=this.getFirstEquippedShield();shield&&(data.attributes.shield.value=shield.data.hp.value,data.attributes.shield.max=shield.data.maxHp.value);const skills={};for(const[skillName,skill]of Object.entries(data.skills).filter((([shortform,_])=>Object.keys(base_2.SKILL_DICTIONARY).includes(shortform)))){const modifiers=[modifiers_1.AbilityModifier.fromAbilityScore(skill.ability,data.abilities[skill.ability].value),modifiers_1.ProficiencyModifier.fromLevelAndRank(data.details.level.value,skill.rank)],notes=[];skill.item&&modifiers.push(new modifiers_1.ModifierPF2e("PF2E.ItemBonusLabel",skill.item,modifiers_1.MODIFIER_TYPE.ITEM));const ignoreArmorCheckPenalty=!(worn&&worn.data.traits.value.includes("flexible")&&["acr","ath"].includes(skillName));skill.armor&&data.attributes.ac.check&&data.attributes.ac.check<0&&ignoreArmorCheckPenalty&&modifiers.push(new modifiers_1.ModifierPF2e("PF2E.ArmorCheckPenalty",data.attributes.ac.check,modifiers_1.MODIFIER_TYPE.UNTYPED));const expandedName=base_2.SKILL_DICTIONARY[skillName];[expandedName,`${skill.ability}-based`,"skill-check","all"].forEach((key=>{var _a;(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>modifiers.push(m))),(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[]).map((n=>duplicate(n))).forEach((n=>notes.push(n)))}));const stat=mergeObject(new modifiers_1.StatisticModifier(expandedName,modifiers),skill,{overwrite:!1});stat.breakdown=stat.modifiers.filter((modifier=>modifier.enabled)).map((modifier=>{const prefix=modifier.modifier<0?"":"+";return`${game.i18n.localize(modifier.name)} ${prefix}${modifier.modifier}`})).join(", "),stat.value=stat.totalModifier,stat.notes=notes,stat.roll=rolls_2.adaptRoll((args=>{var _a;const label=game.i18n.format("PF2E.SkillCheckWithName",{skillName:game.i18n.localize(CONFIG.PF2E.skills[skillName])}),options=null!==(_a=args.options)&&void 0!==_a?_a:[];modifiers_1.ensureProficiencyOption(options,skill.rank),rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"skill-check",options,dc:args.dc,notes},args.event,args.callback)})),skills[skillName]=stat}actorData.items.filter((i=>"lore"===i.type)).forEach((skill=>{const shortform=skill.name.toLowerCase().replace(/\s+/g,"-"),rank=skill.data.proficient.value,modifiers=[modifiers_1.AbilityModifier.fromAbilityScore("int",data.abilities.int.value),modifiers_1.ProficiencyModifier.fromLevelAndRank(data.details.level.value,rank)],notes=[];[shortform,"int-based","skill-check","all"].forEach((key=>{var _a;(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>modifiers.push(m))),(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[]).map((n=>duplicate(n))).forEach((n=>notes.push(n)))}));const loreSkill=data.skills[shortform],stat=mergeObject(new modifiers_1.StatisticModifier(skill.name,modifiers),loreSkill,{overwrite:!1});stat.itemID=skill._id,stat.rank=null!=rank?rank:0,stat.shortform=shortform,stat.expanded=skill,stat.value=stat.totalModifier,stat.lore=!0,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),stat.roll=rolls_2.adaptRoll((args=>{var _a;const label=game.i18n.format("PF2E.SkillCheckWithName",{skillName:skill.name}),options=null!==(_a=args.options)&&void 0!==_a?_a:[];modifiers_1.ensureProficiencyOption(options,rank),rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"skill-check",options,dc:args.dc,notes},args.event,args.callback)})),skills[shortform]=stat})),data.skills=skills;{const label=game.i18n.localize("PF2E.SpeedTypesLand"),base=Number(null!==(_p=data.attributes.speed.value)&&void 0!==_p?_p:0),modifiers=[];["land-speed","speed"].forEach((key=>{(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>modifiers.push(m)))}));const stat=mergeObject(new modifiers_1.StatisticModifier(game.i18n.format("PF2E.SpeedLabel",{type:label}),modifiers),data.attributes.speed,{overwrite:!1});stat.total=base+stat.totalModifier,stat.type="land",stat.breakdown=[`${game.i18n.format("PF2E.SpeedBaseLabel",{type:label})} ${base}`].concat(stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`))).join(", "),data.attributes.speed=stat}for(let idx=0;idx<data.attributes.speed.otherSpeeds.length;idx++){const speed=data.attributes.speed.otherSpeeds[idx],base=Number(null!==(_q=speed.value)&&void 0!==_q?_q:0),modifiers=[];[`${speed.type}-speed`,"speed"].forEach((key=>{(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>modifiers.push(m)))}));const stat=mergeObject(new modifiers_1.StatisticModifier(game.i18n.format("PF2E.SpeedLabel",{type:speed.label}),modifiers),speed,{overwrite:!1});stat.total=base+stat.totalModifier,stat.breakdown=[`${game.i18n.format("PF2E.SpeedBaseLabel",{type:speed.label})} ${base}`].concat(stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`))).join(", "),data.attributes.speed.otherSpeeds[idx]=stat}{const modifiers=[];(statisticsModifiers["familiar-abilities"]||[]).map((m=>duplicate(m))).forEach((m=>modifiers.push(m)));const stat=mergeObject(new modifiers_1.StatisticModifier("familiar-abilities",modifiers),data.attributes.familiarAbilities,{overwrite:!1});stat.value=stat.totalModifier,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),data.attributes.familiarAbilities=stat}data.actions=[];const getProficiencies=(translationMap,combatProficiencies,prefix)=>Object.keys(combatProficiencies).filter((key=>key.startsWith(prefix)&&key.replace(prefix,"")in translationMap)).map((key=>({key,data:combatProficiencies[key]}))).reduce(((accumulated,proficiency)=>Number.isInteger(proficiency.data.rank)?Object.assign(Object.assign({},accumulated),{[proficiency.key]:{rank:proficiency.data.rank,name:game.i18n.localize(translationMap[proficiency.key.replace(prefix,"")])}}):accumulated),{}),weaponProficiencies=getProficiencies(localize_1.LocalizePF2e.translations.PF2E.Weapon.Base,data.martial,"weapon-base-"),groupProficiencies=getProficiencies(CONFIG.PF2E.weaponGroups,data.martial,"weapon-group-"),homebrewCategoryKeys=Object.keys(CONFIG.PF2E.weaponCategories).filter((category=>!["simple","martial","advanced","unarmed"].includes(category)));for(const key of homebrewCategoryKeys)key in data.martial||(data.martial[key]={rank:0,value:0,breakdown:""});const homebrewCategories=homebrewCategoryKeys.reduce(((categories,category)=>{var _a,_b;return mergeObject(categories,{[category]:{name:CONFIG.PF2E.weaponCategories[category],rank:null!==(_b=null===(_a=data.martial[category])||void 0===_a?void 0:_a.rank)&&void 0!==_b?_b:0}})}),{}),proficiencies=Object.assign(Object.assign(Object.assign({simple:{name:game.i18n.localize(CONFIG.PF2E.martialSkills.simple),rank:null!==(_r=data.martial.simple.rank)&&void 0!==_r?_r:0},martial:{name:game.i18n.localize(CONFIG.PF2E.martialSkills.martial),rank:null!==(_s=data.martial.martial.rank)&&void 0!==_s?_s:0},advanced:{name:game.i18n.localize(CONFIG.PF2E.martialSkills.advanced),rank:null!==(_t=data.martial.advanced.rank)&&void 0!==_t?_t:0},unarmed:{name:game.i18n.localize(CONFIG.PF2E.martialSkills.unarmed),rank:null!==(_u=data.martial.unarmed.rank)&&void 0!==_u?_u:0}},homebrewCategories),weaponProficiencies),groupProficiencies),unarmed={_id:"fist",name:game.i18n.localize("PF2E.WeaponTypeUnarmed"),type:"weapon",img:"systems/pf2e/icons/features/classes/powerful-fist.webp",data:{baseItem:null,ability:{value:"str"},weaponType:{value:"unarmed"},bonus:{value:0},damage:{dice:1,die:"d4",damageType:"bludgeoning"},group:{value:"brawling"},range:{value:"melee"},strikingRune:{value:""},traits:{value:["agile","finesse","nonlethal","unarmed"]},equipped:{value:!0}}},fistFeat=this.itemTypes.feat.find((feat=>"powerful-fist"===feat.slug));fistFeat&&(unarmed.name=fistFeat.name,unarmed.data.baseItem="fist",unarmed.data.damage.die="d6");const ammo=(null!==(_v=actorData.items)&&void 0!==_v?_v:[]).filter((item=>"consumable"===item.type)).filter((item=>{var _a;return"ammo"===(null===(_a=item.data.consumableType)||void 0===_a?void 0:_a.value)}));actorData.items.filter((item=>"weapon"===item.type)).concat([unarmed]).concat(strikes).forEach((item=>{var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u,_v,_w,_x;const modifiers=[];let ability;{ability=(null===(_a=item.data.ability)||void 0===_a?void 0:_a.value)||"str";let score=null!==(_c=null===(_b=data.abilities[ability])||void 0===_b?void 0:_b.value)&&void 0!==_c?_c:0;item.data.traits.value.includes("finesse")&&data.abilities.dex.mod>data.abilities[ability].mod&&(ability="dex",score=data.abilities.dex.value),modifiers.push(modifiers_1.AbilityModifier.fromAbilityScore(ability,score))}const baseWeapon=null!==(_d=item.data.baseItem)&&void 0!==_d?_d:item.data.slug,baseWeaponRank=null===(_e=proficiencies[`weapon-base-${baseWeapon}`])||void 0===_e?void 0:_e.rank,groupRank=null===(_f=proficiencies[`weapon-group-${item.data.group.value}`])||void 0===_f?void 0:_f.rank,proficiencyRank=Math.max(null!==(_j=null===(_h=proficiencies[null!==(_g=item.data.weaponType.value)&&void 0!==_g?_g:""])||void 0===_h?void 0:_h.rank)&&void 0!==_j?_j:0,null!=baseWeaponRank?baseWeaponRank:0,null!=groupRank?groupRank:0);modifiers.push(modifiers_1.ProficiencyModifier.fromLevelAndRank(data.details.level.value,proficiencyRank));const selectors=["attack","mundane-attack",`${ability}-attack`,`${ability}-based`,`${item._id}-attack`,`${item.name.slugify("-",!0)}-attack`,"attack-roll","all"],itemGroup=null!==(_k=item.data.group.value)&&void 0!==_k?_k:"";itemGroup&&selectors.push(`${itemGroup.toLowerCase()}-weapon-group-attack`);const traits=item.data.traits.value,melee=["melee","reach",""].includes(null===(_m=null===(_l=item.data.range)||void 0===_l?void 0:_l.value)||void 0===_m?void 0:_m.trim())||traits.some((t=>t.startsWith("thrown"))),defaultOptions=this.getRollOptions(["all","attack-roll"]).concat(...traits).concat(melee?"melee":"ranged").concat(`${ability}-attack`);modifiers_1.ensureProficiencyOption(defaultOptions,proficiencyRank);const notes=[];if("bomb"===(null===(_o=item.data.group)||void 0===_o?void 0:_o.value)){const attackBonus=null!==(_r=utils_1.toNumber(null===(_q=null===(_p=item.data)||void 0===_p?void 0:_p.bonus)||void 0===_q?void 0:_q.value))&&void 0!==_r?_r:0;0!==attackBonus&&modifiers.push(new modifiers_1.ModifierPF2e("PF2E.ItemBonusLabel",attackBonus,modifiers_1.MODIFIER_TYPE.ITEM))}let weaponPotency;const multipleAttackPenalty=base_1.ItemPF2e.calculateMap(item);{const potency=[],multipleAttackPenalties=[];selectors.forEach((key=>{var _a,_b,_c,_d;(null!==(_a=statisticsModifiers[key])&&void 0!==_a?_a:[]).map((m=>duplicate(m))).forEach((m=>{m.ignored=!modifiers_1.ModifierPredicate.test(m.predicate,defaultOptions),modifiers.push(m)})),(null!==(_b=synthetics.weaponPotency[key])&&void 0!==_b?_b:[]).filter((wp=>modifiers_1.ModifierPredicate.test(wp.predicate,defaultOptions))).forEach((wp=>potency.push(wp))),(null!==(_c=synthetics.multipleAttackPenalties[key])&&void 0!==_c?_c:[]).filter((map=>modifiers_1.ModifierPredicate.test(map.predicate,defaultOptions))).forEach((map=>multipleAttackPenalties.push(map))),(null!==(_d=rollNotes[key])&&void 0!==_d?_d:[]).map((n=>duplicate(n))).forEach((n=>notes.push(n)))}));const potencyRune=null!==(_u=utils_1.toNumber(null===(_t=null===(_s=item.data)||void 0===_s?void 0:_s.potencyRune)||void 0===_t?void 0:_t.value))&&void 0!==_u?_u:0;potencyRune&&potency.push({label:"PF2E.PotencyRuneLabel",bonus:potencyRune}),potency.length>0&&(weaponPotency=potency.reduce(((highest,current)=>highest.bonus>current.bonus?highest:current),potency[0]),modifiers.push(new modifiers_1.ModifierPF2e(weaponPotency.label,weaponPotency.bonus,modifiers_1.MODIFIER_TYPE.ITEM))),multipleAttackPenalties.push({label:"PF2E.MultipleAttackPenalty",penalty:multipleAttackPenalty.map2});const{label,penalty}=multipleAttackPenalties.reduce(((lowest,current)=>lowest.penalty>current.penalty?lowest:current),multipleAttackPenalties[0]);multipleAttackPenalty.label=label,multipleAttackPenalty.map2=penalty,multipleAttackPenalty.map3=2*penalty}const flavor=this.getStrikeDescription(item),action=mergeObject(new modifiers_1.StatisticModifier(item.name,modifiers),{imageUrl:item.img,item:item._id,ready:null!==(_v=item.data.equipped.value)&&void 0!==_v&&_v,glyph:"A",type:"strike",description:flavor.description,criticalSuccess:flavor.criticalSuccess,success:flavor.success,options:null!==(_x=null===(_w=item.data.options)||void 0===_w?void 0:_w.value)&&void 0!==_x?_x:[],traits:[],variants:[],selectedAmmoId:item.data.selectedAmmoId});["bow","sling","dart"].includes(itemGroup)&&(action.ammo=ammo),action.traits=[{name:"attack",label:game.i18n.localize("PF2E.TraitAttack"),toggle:!1}].concat(item.data.traits.value.map((trait=>{var _a,_b;const key=null!==(_a=CONFIG.PF2E.weaponTraits[trait])&&void 0!==_a?_a:trait,option={name:trait,label:game.i18n.localize(key),toggle:!1,description:null!==(_b=CONFIG.PF2E.traitsDescriptions[trait])&&void 0!==_b?_b:""};return trait.startsWith("two-hand-")?(option.rollName="damage-roll",option.rollOption="two-handed"):trait.startsWith("versatile-")&&(option.rollName="damage-roll",option.rollOption=trait),option.rollName&&option.rollOption&&(option.toggle=!0,option.cssClass=this.getRollOptions([option.rollName]).includes(option.rollOption)?"toggled-on":"toggled-off"),option}))),action.breakdown=action.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", ");const strikeLabel=game.i18n.localize("PF2E.WeaponStrikeLabel");action.attack=rolls_2.adaptRoll((args=>{var _a;const options=(null!==(_a=args.options)&&void 0!==_a?_a:[]).concat(defaultOptions);rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(`${strikeLabel}: ${action.name}`,action),{actor:this,type:"attack-roll",options,notes,dc:args.dc},args.event,args.callback)})),action.roll=action.attack,action.variants=[{label:`${game.i18n.localize("PF2E.RuleElement.Strike")}\n                            ${action.totalModifier<0?"":"+"}${action.totalModifier}`,roll:rolls_2.adaptRoll((args=>{var _a;const options=(null!==(_a=args.options)&&void 0!==_a?_a:[]).concat(defaultOptions);rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(`${strikeLabel}: ${action.name}`,action),{actor:this,type:"attack-roll",options,notes,dc:args.dc},args.event,args.callback)}))},{label:`${game.i18n.localize("PF2E.MAPAbbreviationLabel")} ${multipleAttackPenalty.map2}`,roll:rolls_2.adaptRoll((args=>{var _a;const options=(null!==(_a=args.options)&&void 0!==_a?_a:[]).concat(defaultOptions);rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(`Strike: ${action.name}`,action,[new modifiers_1.ModifierPF2e(multipleAttackPenalty.label,multipleAttackPenalty.map2,modifiers_1.MODIFIER_TYPE.UNTYPED)]),{actor:this,type:"attack-roll",options,notes,dc:args.dc},args.event,args.callback)}))},{label:`${game.i18n.localize("PF2E.MAPAbbreviationLabel")} ${multipleAttackPenalty.map3}`,roll:rolls_2.adaptRoll((args=>{var _a;const options=(null!==(_a=args.options)&&void 0!==_a?_a:[]).concat(defaultOptions);rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(`Strike: ${action.name}`,action,[new modifiers_1.ModifierPF2e(multipleAttackPenalty.label,multipleAttackPenalty.map3,modifiers_1.MODIFIER_TYPE.UNTYPED)]),{actor:this,type:"attack-roll",options,notes,dc:args.dc},args.event,args.callback)}))}],action.damage=rolls_2.adaptRoll((args=>{var _a,_b,_c,_d;const options=(null!==(_a=args.options)&&void 0!==_a?_a:[]).concat(action.options),damage=weapon_1.PF2WeaponDamage.calculate(item,actorData,action.traits,statisticsModifiers,damageDice,null!==(_d=null===(_c=proficiencies[null!==(_b=item.data.weaponType.value)&&void 0!==_b?_b:""])||void 0===_c?void 0:_c.rank)&&void 0!==_d?_d:0,options,rollNotes,weaponPotency,synthetics.striking);rolls_1.PF2DamageRoll.roll(damage,{type:"damage-roll",outcome:"success",options},args.event,args.callback)})),action.critical=rolls_2.adaptRoll((args=>{var _a,_b,_c,_d;const options=(null!==(_a=args.options)&&void 0!==_a?_a:[]).concat(action.options),damage=weapon_1.PF2WeaponDamage.calculate(item,actorData,action.traits,statisticsModifiers,damageDice,null!==(_d=null===(_c=proficiencies[null!==(_b=item.data.weaponType.value)&&void 0!==_b?_b:""])||void 0===_c?void 0:_c.rank)&&void 0!==_d?_d:0,options,rollNotes,weaponPotency,synthetics.striking);rolls_1.PF2DamageRoll.roll(damage,{type:"damage-roll",outcome:"criticalSuccess",options},args.event,args.callback)})),data.actions.push(action)})),this.itemTypes.spellcastingEntry.forEach((item=>{const spellcastingEntry=item.data,tradition=spellcastingEntry.data.tradition.value,rank=spellcastingEntry.data.proficiency.value,ability=spellcastingEntry.data.ability.value||"int",baseModifiers=[modifiers_1.AbilityModifier.fromAbilityScore(ability,data.abilities[ability].value),modifiers_1.ProficiencyModifier.fromLevelAndRank(data.details.level.value,rank)],baseNotes=[];[`${ability}-based`,"all"].forEach((key=>{var _a;(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>baseModifiers.push(m))),(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[]).map((n=>duplicate(n))).forEach((n=>baseNotes.push(n)))}));{const modifiers=[...baseModifiers],notes=[...baseNotes];[`${tradition}-spell-attack`,"spell-attack","attack","attack-roll"].forEach((key=>{var _a;(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>modifiers.push(m))),(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[]).map((n=>duplicate(n))).forEach((n=>notes.push(n)))}));const attack=new modifiers_1.StatisticModifier(spellcastingEntry.name,modifiers);attack.notes=notes,attack.value=attack.totalModifier,attack.breakdown=attack.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),attack.roll=rolls_2.adaptRoll((args=>{var _a,_b;const label=game.i18n.format(`PF2E.SpellAttack.${tradition}`),options=null!==(_a=args.options)&&void 0!==_a?_a:[];modifiers_1.ensureProficiencyOption(options,rank),rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,attack,null!==(_b=args.modifiers)&&void 0!==_b?_b:[]),{actor:this,type:"spell-attack-roll",options,dc:args.dc,notes},args.event,args.callback)})),spellcastingEntry.data.attack=attack}{const modifiers=[...baseModifiers],notes=[...baseNotes];[`${tradition}-spell-dc`,"spell-dc"].forEach((key=>{var _a;(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>modifiers.push(m))),(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[]).map((n=>duplicate(n))).forEach((n=>notes.push(n)))}));const dc=new modifiers_1.StatisticModifier(spellcastingEntry.name,modifiers);dc.notes=notes,dc.value=10+dc.totalModifier,dc.breakdown=[game.i18n.localize("PF2E.SpellDCBase")].concat(dc.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`))).join(", "),spellcastingEntry.data.dc=dc}})),this.prepareInitiative(actorData,statisticsModifiers,rollNotes),rules.forEach((rule=>{try{rule.onAfterPrepareData(actorData,synthetics)}catch(error){console.error(`PF2e | Failed to execute onAfterPrepareData on rule element ${rule}.`,error)}}))}prepareInitiative(actorData,statisticsModifiers,rollNotes){var _a,_b;const{data}=actorData,initSkill=(null===(_b=null===(_a=data.attributes)||void 0===_a?void 0:_a.initiative)||void 0===_b?void 0:_b.ability)||"perception",modifiers=[],notes=[];["initiative"].forEach((key=>{var _a,_b;const skillFullName=null!==(_a=base_2.SKILL_DICTIONARY[initSkill])&&void 0!==_a?_a:initSkill;(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>{m.predicate&&modifiers_1.ModifierPredicate.test(m.predicate,[skillFullName])&&(m.enabled=!0,m.ignored=!1),modifiers.push(m)})),(null!==(_b=rollNotes[key])&&void 0!==_b?_b:[]).map((n=>duplicate(n))).forEach((n=>notes.push(n)))}));const initStat="perception"===initSkill?data.attributes.perception:data.skills[initSkill],skillName=game.i18n.localize("perception"===initSkill?"PF2E.PerceptionLabel":CONFIG.PF2E.skills[initSkill]),stat=new modifiers_1.CheckModifier("initiative",initStat,modifiers);stat.ability=initSkill,stat.label=game.i18n.format("PF2E.InitiativeWithSkill",{skillName}),stat.roll=rolls_2.adaptRoll((args=>{var _a,_b,_c;const skillFullName=null!==(_a=base_2.SKILL_DICTIONARY[stat.ability])&&void 0!==_a?_a:"perception",options=null!==(_b=args.options)&&void 0!==_b?_b:[];options.includes(skillFullName)||options.push(skillFullName),modifiers_1.ensureProficiencyOption(options,null!==(_c=initStat.rank)&&void 0!==_c?_c:-1),rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(data.attributes.initiative.label,data.attributes.initiative),{actor:this,type:"initiative",options,notes,dc:args.dc},args.event,(roll=>{this._applyInitiativeRollToCombatTracker(roll)}))})),data.attributes.initiative=stat}prepareAncestry(){var _a,_b,_c;const ancestry=this.ancestry;if(ancestry){const actorData=this.data;actorData.data.details.ancestry.value=ancestry.name,actorData.data.attributes.ancestryhp=ancestry.hitPoints,actorData.data.attributes.speed.value=String(ancestry.speed),actorData.data.traits.size.value=ancestry.size;const ancestryTraits=null!==(_a=null==ancestry?void 0:ancestry.traits)&&void 0!==_a?_a:new Set,heritageTraits=null!==(_c=null===(_b=this.heritage)||void 0===_b?void 0:_b.traits)&&void 0!==_c?_c:new Set,traitSet=new Set([...ancestryTraits,...heritageTraits].filter((trait=>!["common","versatile heritage"].includes(trait))));for(const trait of Array.from(traitSet).sort())this.data.data.traits.traits.value.push(trait)}}prepareBackground(){var _a,_b;this.data.data.details.background.value=null!==(_b=null===(_a=this.background)||void 0===_a?void 0:_a.name)&&void 0!==_b?_b:""}prepareClass(){const classItem=this.class;classItem&&(this.data.data.details.class.value=classItem.name,this.data.data.attributes.classhp=classItem.hpPerLevel)}async addCombatProficiency(key){if(key in this.data.data.martial)return;await this.update({[`data.martial.${key}`]:{rank:0,value:0,breakdown:"",custom:!0}})}async removeCombatProficiency(key){await this.update({[`data.martial.-=${key}`]:null})}_onCreateEmbeddedEntity(embeddedName,child,options,userId){if(super._onCreateEmbeddedEntity(embeddedName,child,options,userId),game.user.id===userId){const item=this.items.get(child._id);(item instanceof ancestry_1.AncestryPF2e||item instanceof background_1.BackgroundPF2e||item instanceof class_1.ClassPF2e)&&item.addFeatures(this)}}}exports.CharacterPF2e=CharacterPF2e},2542:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CreaturePF2e=void 0;const base_1=__webpack_require__(9978),armor_1=__webpack_require__(8425),modifiers_1=__webpack_require__(6243),base_2=__webpack_require__(5180),utils_1=__webpack_require__(4930);class CreaturePF2e extends base_1.ActorPF2e{constructor(){super(...arguments),this.redrawingTokenEffects=!1}get hitPoints(){return{current:this.data.data.attributes.hp.value,max:this.data.data.attributes.hp.max}}get attributes(){return this.data.data.attributes}hasAttribute(key){const attributes=this.data.data.attributes;return attributes instanceof Object&&"string"==typeof key&&key in attributes}get wornArmor(){var _a;return null!==(_a=this.itemTypes.armor.find((armor=>armor.isEquipped&&armor.isArmor)))&&void 0!==_a?_a:null}get heldShield(){const heldShields=this.itemTypes.armor.filter((armor=>armor.isEquipped&&armor.isShield));return 0===heldShields.length?null:heldShields.slice(0,-1).reduce(((bestShield,shield)=>{var _a,_b;if(bestShield===shield)return bestShield;const withBetterAC=bestShield.acBonus>shield.acBonus?bestShield:shield.acBonus>bestShield.acBonus?shield:null,withMoreHP=bestShield.hitPoints.current>shield.hitPoints.current?bestShield:shield.hitPoints.current>bestShield.hitPoints.current?shield:null,withBetterHardness=bestShield.hardness>shield.hardness?bestShield:shield.hardness>bestShield.hardness?shield:null;return null!==(_b=null!==(_a=null!=withBetterAC?withBetterAC:withMoreHP)&&void 0!==_a?_a:withBetterHardness)&&void 0!==_b?_b:bestShield}),heldShields.slice(-1)[0])}prepareBaseData(){super.prepareBaseData();this.data.data.attributes.hp.modifiers=[]}async updateEmbeddedEntity(embeddedName,data,options={}){const updateData=Array.isArray(data)?data:[data],alreadyEquipped=this.itemTypes.armor.find((armor=>armor.isArmor&&armor.isEquipped)),modifiedUpdate=(()=>updateData.filter((datum=>"data.equipped.value"in datum&&datum["data.equipped.value"])).map((datum=>this.items.get(datum._id))).find((item=>item instanceof armor_1.ArmorPF2e&&item.isArmor&&item.id!==(null==alreadyEquipped?void 0:alreadyEquipped.id))))()&&alreadyEquipped?updateData.concat({_id:alreadyEquipped.id,"data.equipped.value":!1}):updateData;return super.updateEmbeddedEntity(embeddedName,modifiedUpdate,options)}_onModifyEmbeddedEntity(embeddedName,changes,options,userId,context={}){super._onModifyEmbeddedEntity(embeddedName,changes,options,userId,context),this.redrawTokenEffects()}_prepareActiveEffects(effectsData){for(const effectData of effectsData)for(const change of effectData.changes)if("string"==typeof change.value&&change.value.startsWith("{")){const parsedValue=(()=>{try{return JSON.parse(change.value)}catch(_a){const parenthetical=`(item ${effectData.origin} on actor ${this.uuid})`;return ui.notifications.error(`Failed to parse ActiveEffect change value ${parenthetical}`),effectData.disabled=!0,{name:game.i18n.localize("Error"),type:"untyped",modifier:0}}})(),originItem=this.items.find((item=>item.uuid===effectData.origin));if(parsedValue.name=originItem instanceof base_2.ItemPF2e?originItem.name:effectData.label,"string"==typeof parsedValue.modifier&&parsedValue.modifier.includes("@")){const parsedModifier=new Roll(parsedValue.modifier,this.data).evaluate().total;if(null!==parsedModifier)parsedValue.modifier=parsedModifier;else{const parenthetical=`(item ${effectData.origin} on actor ${this.uuid})`;ui.notifications.error(`Failed to parse ActiveEffect change value ${parenthetical}`),effectData.disabled=!0,parsedValue.modifier=0}}"number"==typeof parsedValue.modifier&&(change.value=new modifiers_1.ModifierPF2e(parsedValue.name,parsedValue.modifier,parsedValue.type))}return super._prepareActiveEffects(effectsData)}rollRecovery(){var _a;if("character"!==this.data.type)throw Error("Recovery rolls are only applicable to characters");const dying=this.data.data.attributes.dying.value,recoveryDc=10+(getProperty(this.data.data.attributes,"dying.recoveryMod")||0),flatCheck=new Roll("1d20").roll(),total=null!==(_a=flatCheck.total)&&void 0!==_a?_a:0,dc=recoveryDc+dying;let result="";result=20===total||total>=dc+10?`${game.i18n.localize("PF2E.CritSuccess")} ${game.i18n.localize("PF2E.Recovery.critSuccess")}`:1===total||total<=dc-10?`${game.i18n.localize("PF2E.CritFailure")} ${game.i18n.localize("PF2E.Recovery.critFailure")}`:total>=dc?`${game.i18n.localize("PF2E.Success")} ${game.i18n.localize("PF2E.Recovery.success")}`:`${game.i18n.localize("PF2E.Failure")} ${game.i18n.localize("PF2E.Recovery.failure")}`;const message=`\n      ${game.i18n.format("PF2E.Recovery.rollingDescription",{dc,dying})}.\n      <div class="dice-roll">\n        <div class="dice-formula" style="padding: 0 10px; word-break: normal;">\n          <span style="font-size: 12px; font-weight: 400;">\n            ${result}\n          </span>\n        </div>\n      </div>\n      `;flatCheck.toMessage({speaker:ChatMessage.getSpeaker({actor:this}),flavor:message},{rollMode:game.settings.get("core","rollMode")})}async addDexterityModifierCap(dexCap){var _a;if(console.warn("This method is deprecated and may be removed by June, 2021. Please use rule elements instead."),"character"!==this.data.type&&"npc"!==this.data.type)throw utils_1.ErrorPF2e("Custom dexterity caps only work on characters and NPCs");if(void 0===dexCap.value||"number"!=typeof dexCap.value)throw new Error("numeric value is mandatory");if(void 0===dexCap.source||"string"!=typeof dexCap.source)throw new Error("source of cap is mandatory");await this.update({"data.attributes.dexCap":(null!==(_a=this.data.data.attributes.dexCap)&&void 0!==_a?_a:[]).concat(dexCap)})}async removeDexterityModifierCap(source){if(console.warn("This method is deprecated and may be removed by June, 2021. Please use rule elements instead."),"character"!==this.data.type&&"npc"!==this.data.type)throw utils_1.ErrorPF2e("Custom dexterity caps only work on characters and NPCs");if(!source)throw utils_1.ErrorPF2e("Source of cap is mandatory");if(this.data.data.attributes.dexCap){const updated=this.data.data.attributes.dexCap.filter((cap=>cap.source!==source));await this.update({"data.attributes.dexCap":updated})}}redrawTokenEffects(){if(!game.ready||!canvas.scene||this.redrawingTokenEffects)return;this.redrawingTokenEffects=!0;const tokens=this.token?[this.token]:this.getActiveTokens();for(const token of tokens)token.scene.id===canvas.scene.id&&token.parent&&token.drawEffects();this.redrawingTokenEffects=!1}}exports.CreaturePF2e=CreaturePF2e},5558:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.isCreatureData=void 0,exports.isCreatureData=function(actorData){return["character","npc","animalCompanion","familiar"].includes(actorData.type)}},3283:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FamiliarPF2e=void 0;const base_1=__webpack_require__(9978),character_1=__webpack_require__(3919),npc_1=__webpack_require__(5975),modifiers_1=__webpack_require__(6243),rolls_1=__webpack_require__(7540),rules_1=__webpack_require__(8094),rolls_2=__webpack_require__(7540),creature_1=__webpack_require__(2542),utils_1=__webpack_require__(4930);class FamiliarPF2e extends creature_1.CreaturePF2e{get master(){var _a,_b;return null!==(_b=game.actors.get(null!==(_a=this.data.data.master.id)&&void 0!==_a?_a:""))&&void 0!==_b?_b:null}prepareDerivedData(){var _a,_b,_c,_d;super.prepareDerivedData();const data=this.data.data,rules=this.data.items.reduce(((accumulated,current)=>accumulated.concat(rules_1.RuleElements.fromOwnedItem(current))),[]),master=(game.actors instanceof Actors?game.actors:new Map).get(null===(_a=data.master)||void 0===_a?void 0:_a.id);if(data.traits.traits.value=data.traits.traits.value.concat("minion").filter(((trait,index,self)=>self.indexOf(trait)===index)),master instanceof character_1.CharacterPF2e||master instanceof npc_1.NPCPF2e){(_d=data.master).ability||(_d.ability="cha"),data.details.level.value=master.level;const spellcastingAbilityModifier=master.data.data.abilities[data.master.ability].mod;data.traits.size.value="tiny",data.traits.senses=[{type:"lowLightVision",label:"PF2E.SensesLowLightVision",value:""}];const{statisticsModifiers}=this._prepareCustomModifiers(this.data,rules),modifierTypes=[modifiers_1.MODIFIER_TYPE.ABILITY,modifiers_1.MODIFIER_TYPE.PROFICIENCY,modifiers_1.MODIFIER_TYPE.ITEM],filter_modifier=modifier=>!modifierTypes.includes(modifier.type);0===Object.keys(data.attributes.speed.otherSpeeds).length&&data.attributes.speed.otherSpeeds.push({label:"Land",type:"land",value:25});for(let idx=0;idx<data.attributes.speed.otherSpeeds.length;idx++){const speed=data.attributes.speed.otherSpeeds[idx],base=Number(null!==(_b=speed.value)&&void 0!==_b?_b:0),modifiers=[];[`${speed.type}-speed`,"speed"].forEach((key=>{(statisticsModifiers[key]||[]).filter(filter_modifier).map((m=>duplicate(m))).forEach((m=>modifiers.push(m)))}));const stat=mergeObject(new modifiers_1.StatisticModifier(game.i18n.format("PF2E.SpeedLabel",{type:speed.label}),modifiers),speed,{overwrite:!1});stat.total=base+stat.totalModifier,stat.breakdown=[`${game.i18n.format("PF2E.SpeedBaseLabel",{type:speed.label})} ${base}`].concat(stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`))).join(", "),data.attributes.speed.otherSpeeds[idx]=stat}{const modifiers=[new modifiers_1.ModifierPF2e("PF2E.MasterLevelHP",5*this.level,modifiers_1.MODIFIER_TYPE.UNTYPED)];(statisticsModifiers.hp||[]).filter(filter_modifier).map((m=>duplicate(m))).forEach((m=>modifiers.push(m))),(statisticsModifiers["hp-per-level"]||[]).filter(filter_modifier).map((m=>duplicate(m))).forEach((m=>{m.modifier*=data.details.level.value,modifiers.push(m)}));const stat=mergeObject(new modifiers_1.StatisticModifier("hp",modifiers),data.attributes.hp,{overwrite:!1});stat.max=stat.totalModifier,stat.value=Math.min(stat.value,stat.max),stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),data.attributes.hp=stat}{const source=master.data.data.attributes.ac.modifiers.filter((modifier=>!["status","circumstance"].includes(modifier.type))),base=10+new modifiers_1.StatisticModifier("base",source).totalModifier,modifiers=[];["ac","dex-based","all"].forEach((key=>(statisticsModifiers[key]||[]).filter(filter_modifier).map((m=>duplicate(m))).forEach((m=>modifiers.push(m)))));const stat=mergeObject(new modifiers_1.StatisticModifier("ac",modifiers),data.attributes.ac,{overwrite:!1});stat.value=base+stat.totalModifier,stat.breakdown=[game.i18n.format("PF2E.MasterArmorClass",{base})].concat(stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`))).join(", "),data.attributes.ac=stat}for(const[saveName,save]of Object.entries(master.data.data.saves)){const source=save.modifiers.filter((modifier=>!["status","circumstance"].includes(modifier.type))),modifiers=[new modifiers_1.ModifierPF2e(`PF2E.MasterSavingThrow.${saveName}`,new modifiers_1.StatisticModifier("base",source).totalModifier,modifiers_1.MODIFIER_TYPE.UNTYPED)],ability=null!==(_c=save.ability)&&void 0!==_c?_c:CONFIG.PF2E.savingThrowDefaultAbilities[saveName];[save.name,`${ability}-based`,"saving-throw","all"].forEach((key=>(statisticsModifiers[key]||[]).filter(filter_modifier).map((m=>duplicate(m))).forEach((m=>modifiers.push(m)))));const stat=new modifiers_1.StatisticModifier(CONFIG.PF2E.saves[saveName],modifiers);stat.value=stat.totalModifier,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),stat.roll=(event,options=[],callback)=>{const label=game.i18n.format("PF2E.SavingThrowWithName",{saveName:game.i18n.localize(CONFIG.PF2E.saves[save.name])});rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"saving-throw",options},event,callback)},data.saves[saveName]=stat}{const modifiers=[new modifiers_1.ModifierPF2e("PF2E.MasterLevel",data.details.level.value,modifiers_1.MODIFIER_TYPE.UNTYPED)];["attack","mundane-attack","attack-roll","all"].forEach((key=>(statisticsModifiers[key]||[]).filter(filter_modifier).map((m=>duplicate(m))).forEach((m=>modifiers.push(m)))));const stat=new modifiers_1.StatisticModifier("attack",modifiers);stat.value=stat.totalModifier,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),stat.roll=(event,options=[],callback)=>{rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier("Attack Roll",stat),{actor:this,type:"attack-roll",options},event,callback)},data.attack=stat}{const modifiers=[new modifiers_1.ModifierPF2e("PF2E.MasterLevel",data.details.level.value,modifiers_1.MODIFIER_TYPE.UNTYPED),new modifiers_1.ModifierPF2e(`PF2E.MasterAbility.${data.master.ability}`,spellcastingAbilityModifier,modifiers_1.MODIFIER_TYPE.UNTYPED)];["perception","wis-based","all"].forEach((key=>(statisticsModifiers[key]||[]).filter(filter_modifier).map((m=>duplicate(m))).forEach((m=>modifiers.push(m)))));const stat=mergeObject(new modifiers_1.StatisticModifier("perception",modifiers),data.attributes.perception,{overwrite:!1});stat.value=stat.totalModifier,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),stat.roll=rolls_2.adaptRoll((args=>{var _a;const label=game.i18n.localize("PF2E.PerceptionCheck");rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"perception-check",options:null!==(_a=args.options)&&void 0!==_a?_a:[],dc:args.dc},args.event,args.callback)})),data.attributes.perception=stat}for(const[shortform,skillName]of Object.entries(CONFIG.PF2E.skills)){const modifiers=[new modifiers_1.ModifierPF2e("PF2E.MasterLevel",data.details.level.value,modifiers_1.MODIFIER_TYPE.UNTYPED)];["acr","ste"].includes(shortform)&&modifiers.push(new modifiers_1.ModifierPF2e(`PF2E.MasterAbility.${data.master.ability}`,spellcastingAbilityModifier,modifiers_1.MODIFIER_TYPE.UNTYPED));const expanded=base_1.SKILL_DICTIONARY[shortform],ability=base_1.SKILL_EXPANDED[expanded].ability;[expanded,`${ability}-based`,"skill-check","all"].forEach((key=>(statisticsModifiers[key]||[]).filter(filter_modifier).map((m=>duplicate(m))).forEach((m=>modifiers.push(m)))));const label=utils_1.objectHasKey(CONFIG.PF2E.skills,skillName)?CONFIG.PF2E.skills[skillName]:skillName,stat=new modifiers_1.StatisticModifier(label,modifiers);stat.value=stat.totalModifier,stat.ability=ability,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),stat.roll=rolls_2.adaptRoll((args=>{var _a;const label=game.i18n.format("PF2E.SkillCheckWithName",{skillName:game.i18n.localize(CONFIG.PF2E.skills[shortform])});rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"skill-check",options:null!==(_a=args.options)&&void 0!==_a?_a:[],dc:args.dc},args.event,args.callback)})),data.skills[shortform]=stat}}}async createEmbeddedEntity(embeddedName,data,options={}){const createData=Array.isArray(data)?data:[data];for(const datum of createData)if(!["condition","effect"].includes(datum.type))return ui.notifications.error(game.i18n.localize("PF2E.FamiliarItemTypeError")),null;return super.createEmbeddedEntity(embeddedName,createData,options)}}exports.FamiliarPF2e=FamiliarPF2e},4494:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ItemTransfer=void 0;const physical_1=__webpack_require__(315),localize_1=__webpack_require__(1608),utils_1=__webpack_require__(4930),base_1=__webpack_require__(9978);class ItemTransfer{constructor(source,target,quantity,containerId){this.source=source,this.target=target,this.quantity=quantity,this.containerId=containerId,this.templatePaths={flavor:"./systems/pf2e/templates/chat/action/flavor.html",content:"./systems/pf2e/templates/chat/action/content.html"}}async request(){const gamemaster=game.users.find((user=>user.isGM&&user.active));if(null===gamemaster){const loot=[this.getSource(),this.getTarget()].find((actor=>actor instanceof base_1.ActorPF2e&&actor.isLootableBy(game.user)&&!actor.owner));if(!(loot instanceof base_1.ActorPF2e))throw utils_1.ErrorPF2e("Unexpected missing actor");const translations=localize_1.LocalizePF2e.translations.PF2E.loot;return ui.notifications.error(game.i18n.format(translations.GMSupervisionError,{loot:ItemTransfer.tokenName(loot)})),Promise.reject()}console.debug(`PF2e System | Requesting item transfer from GM ${gamemaster.name}`),game.socket.emit("system.pf2e",{request:"itemTransfer",data:this})}async enact(requester){var _a;if(!game.user.isGM)throw utils_1.ErrorPF2e("Unauthorized item transfer");console.debug("PF2e System | Enacting item transfer");const sourceActor=this.getSource(),sourceItem=null===(_a=null==sourceActor?void 0:sourceActor.items)||void 0===_a?void 0:_a.find((item=>item.id===this.source.itemId)),targetActor=this.getTarget();if(!(sourceActor instanceof base_1.ActorPF2e&&sourceItem instanceof physical_1.PhysicalItemPF2e&&targetActor instanceof base_1.ActorPF2e&&sourceActor.isLootableBy(game.user)&&targetActor.isLootableBy(game.user)))throw utils_1.ErrorPF2e("Failed sanity check during item transfer");const targetItem=await sourceActor.transferItemToActor(targetActor,sourceItem,this.quantity,this.containerId),sourceIsLoot="loot"===sourceActor.data.type&&"Loot"===sourceActor.data.data.lootSheetType;!sourceItem&&sourceIsLoot||this.sendMessage(requester,sourceActor,targetActor,targetItem)}getActor(tokenId,actorId){var _a;if("string"==typeof tokenId){const token=canvas.tokens.placeables.find((canvasToken=>canvasToken.id===tokenId));return null!==(_a=null==token?void 0:token.actor)&&void 0!==_a?_a:null}return game.actors.find((actor=>actor.id===actorId))}getSource(){return this.getActor(this.source.tokenId,this.source.actorId)}getTarget(){return this.getActor(this.target.tokenId,this.target.actorId)}static tokenName(entity){var _a,_b,_c,_d;if(entity instanceof base_1.ActorPF2e)return entity.isToken&&entity.token instanceof Token?entity.token.name:null!==(_b=null===(_a=entity.data.token)||void 0===_a?void 0:_a.name)&&void 0!==_b?_b:entity.name;if(entity.character instanceof base_1.ActorPF2e){const token=canvas.tokens.placeables.find((canvasToken=>{var _a;return(null===(_a=canvasToken.actor)||void 0===_a?void 0:_a.id)===entity.id}));return null!==(_c=null==token?void 0:token.name)&&void 0!==_c?_c:null===(_d=entity.character)||void 0===_d?void 0:_d.name}return entity.name}async sendMessage(requester,sourceActor,targetActor,item){const translations=localize_1.LocalizePF2e.translations.PF2E.loot;if(!item){if("loot"===sourceActor.data.type&&"Merchant"===sourceActor.data.data.lootSheetType){const message=translations.InsufficientFundsMessage,content=await renderTemplate(this.templatePaths.content,{imgPath:targetActor.img,message:game.i18n.format(message,{buyer:targetActor.name})}),flavor=await this.messageFlavor(sourceActor,targetActor,translations.BuySubtitle);return void await ChatMessage.create({user:requester.id,speaker:{alias:ItemTransfer.tokenName(targetActor)},type:CONST.CHAT_MESSAGE_TYPES.EMOTE,flavor,content})}throw utils_1.ErrorPF2e("Unexpected item-transfer failure")}const[speaker,subtitle,formatArgs]=(()=>{var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m;const isMerchant=actor=>"loot"===actor.data.type&&"Merchant"===actor.data.data.lootSheetType,isWhat=actor=>({isCharacter:actor.hasPerm(requester,"OWNER")&&"character"===actor.data.type,isMerchant:isMerchant(actor),isNPC:"npc"===actor.data.type&&actor.isLootableBy(requester)&&!actor.hasPerm(requester,"OWNER"),isLoot:"loot"===actor.data.type&&actor.isLootableBy(requester)&&!actor.hasPerm(requester,"OWNER")&&!isMerchant(actor)}),source=isWhat(sourceActor),target=isWhat(targetActor);if(source.isCharacter&&target.isLoot)return[ItemTransfer.tokenName(sourceActor),translations.DepositSubtitle,[translations.DepositMessage,{depositor:ItemTransfer.tokenName(sourceActor),container:ItemTransfer.tokenName(targetActor)}]];if(source.isCharacter&&target.isMerchant)return[ItemTransfer.tokenName(sourceActor),translations.GiveSubtitle,[translations.GiveMessage,{giver:ItemTransfer.tokenName(sourceActor),recipient:ItemTransfer.tokenName(targetActor)}]];if(source.isCharacter&&target.isNPC)return[ItemTransfer.tokenName(sourceActor),translations.PlantSubtitle,[translations.PlantMessage,{planter:ItemTransfer.tokenName(sourceActor),corpse:ItemTransfer.tokenName(targetActor)}]];if(source.isLoot&&target.isCharacter)return[ItemTransfer.tokenName(targetActor),translations.TakeSubtitle,[translations.TakeMessage,{taker:ItemTransfer.tokenName(targetActor),container:ItemTransfer.tokenName(sourceActor)}]];if(source.isNPC&&target.isCharacter)return[ItemTransfer.tokenName(targetActor),translations.LootSubtitle,[translations.LootMessage,{looter:ItemTransfer.tokenName(targetActor),corpse:ItemTransfer.tokenName(sourceActor)}]];if([source,target].every((actor=>actor.isLoot||actor.isNPC)))return[null!==(_b=null===(_a=requester.character)||void 0===_a?void 0:_a.name)&&void 0!==_b?_b:requester.name,translations.TransferSubtitle,[translations.TransferMessage,{transferrer:null!==(_d=null===(_c=requester.character)||void 0===_c?void 0:_c.name)&&void 0!==_d?_d:requester.name,fromContainer:ItemTransfer.tokenName(sourceActor),toContainer:ItemTransfer.tokenName(targetActor)}]];if(source.isLoot&&target.isMerchant)return[null!==(_f=null===(_e=requester.character)||void 0===_e?void 0:_e.name)&&void 0!==_f?_f:requester.name,translations.GiveSubtitle,[translations.GiveMessage,{seller:null!==(_h=null===(_g=requester.character)||void 0===_g?void 0:_g.name)&&void 0!==_h?_h:requester.name,buyer:ItemTransfer.tokenName(targetActor)}]];if(source.isMerchant&&target.isCharacter)return[ItemTransfer.tokenName(sourceActor),translations.SellSubtitle,[translations.SellMessage,{seller:ItemTransfer.tokenName(sourceActor),buyer:ItemTransfer.tokenName(targetActor)}]];if(source.isMerchant&&target.isLoot)return[null!==(_k=null===(_j=requester.character)||void 0===_j?void 0:_j.name)&&void 0!==_k?_k:requester.name,translations.SellSubtitle,[translations.SellMessage,{seller:ItemTransfer.tokenName(sourceActor),buyer:null!==(_m=null===(_l=requester.character)||void 0===_l?void 0:_l.name)&&void 0!==_m?_m:requester.name}]];throw utils_1.ErrorPF2e("Unexpected item-transfer failure")})(),formatProperties=formatArgs[1];if(!formatProperties)throw utils_1.ErrorPF2e("Unexpected item-transfer failure");formatProperties.quantity=this.quantity,formatProperties.item=item.name;const content=await renderTemplate(this.templatePaths.content,{imgPath:item.img,message:game.i18n.format(...formatArgs).replace(/\b1 × /,"")}),flavor=await this.messageFlavor(sourceActor,targetActor,subtitle);await ChatMessage.create({user:requester.id,speaker:{alias:speaker},type:CONST.CHAT_MESSAGE_TYPES.EMOTE,flavor,content})}async messageFlavor(sourceActor,targetActor,subtitle){return await renderTemplate(this.templatePaths.flavor,{action:{title:CONFIG.PF2E.featTraits.interact,subtitle,tooltip:CONFIG.PF2E.featTraits.interact,typeNumber:"loot"===sourceActor.data.type&&"loot"===targetActor.data.type?2:1},traits:[{name:CONFIG.PF2E.featTraits.manipulate,description:CONFIG.PF2E.traitsDescriptions.manipulate}]})}}exports.ItemTransfer=ItemTransfer},4436:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LootPF2e=void 0;const base_1=__webpack_require__(9978),physical_1=__webpack_require__(315),treasure_1=__webpack_require__(4562),utils_1=__webpack_require__(4930);class LootPF2e extends base_1.ActorPF2e{get isLoot(){return"Loot"===this.data.data.lootSheetType}get isMerchant(){return"Merchant"===this.data.data.lootSheetType}static can(user,action,target){return"update"===action?target.permission>=CONST.ENTITY_PERMISSIONS.LIMITED:super.can(user,action,target)}get visible(){return this.permission>=CONST.ENTITY_PERMISSIONS.OBSERVER}async transferItemToActor(targetActor,item,quantity,containerId){var _a;if(!this.owner||!targetActor.owner)return super.transferItemToActor(targetActor,item,quantity,containerId);if(this.isMerchant&&!(null===(_a=this.sheet)||void 0===_a?void 0:_a.inEditMode)&&item instanceof physical_1.PhysicalItemPF2e){const itemValue=treasure_1.extractPriceFromItem(item.data,quantity);if(await treasure_1.attemptToRemoveCoinsByValue({actor:targetActor,coinsToRemove:itemValue}))return await treasure_1.addCoins(item.actor,{coins:itemValue,combineStacks:!0}),super.transferItemToActor(targetActor,item,quantity,containerId);if(this.isLoot)throw utils_1.ErrorPF2e("Loot transfer failed");return null}return super.transferItemToActor(targetActor,item,quantity,containerId)}}exports.LootPF2e=LootPF2e},5975:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.NPCPF2e=void 0;const base_1=__webpack_require__(9978),base_2=__webpack_require__(5180),modifiers_1=__webpack_require__(6243),weapon_1=__webpack_require__(7370),rolls_1=__webpack_require__(7540),rules_1=__webpack_require__(8094),notes_1=__webpack_require__(1239),rolls_2=__webpack_require__(7540),creature_1=__webpack_require__(2542),utils_1=__webpack_require__(4930);class NPCPF2e extends creature_1.CreaturePF2e{get rarity(){return this.data.data.traits.rarity.value}get isElite(){return this.traits.has("elite")}get isWeak(){return this.traits.has("weak")}static can(user,action,target){const npcsAreLootable=game.settings.get("pf2e","automation.lootableNPCs");return"update"===action&&0===target.hitPoints.current&&npcsAreLootable?target.permission>=CONST.ENTITY_PERMISSIONS.LIMITED:super.can(user,action,target)}get visible(){return this.permission>=CONST.ENTITY_PERMISSIONS.OBSERVER}get permission(){const npcsAreLootable=game.settings.get("pf2e","automation.lootableNPCs");return game.user.isGM||this.hitPoints.current>0||!npcsAreLootable?super.permission:Math.max(super.permission,1)}hasPerm(user,permission,exact=!1){const npcsAreLootable=game.settings.get("pf2e","automation.lootableNPCs");return game.user.isGM||this.hitPoints.current>0||!npcsAreLootable?super.hasPerm(user,permission,exact):[1,"LIMITED"].includes(permission)&&!exact?this.permission>=CONST.ENTITY_PERMISSIONS.LIMITED:super.hasPerm(user,permission,exact)}prepareDerivedData(){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u,_v,_w,_x,_y,_z,_0,_1,_2,_3,_4;super.prepareDerivedData();const actorData=this.data,{data}=actorData,traits=this.data.data.traits,rarity=traits.rarity.value,customTraits=traits.traits.custom.split(/\s*[,;|]\s*/).filter((trait=>trait)),traitSet=new Set(traits.traits.value.concat(rarity).concat(customTraits));traits.traits.value=Array.from(traitSet).sort();const rules=this.items.reduce(((accumulated,current)=>accumulated.concat(rules_1.RuleElements.fromOwnedItem(current.data))),[]);data.toggles={actions:[{label:"PF2E.TargetFlatFootedLabel",inputName:`flags.${game.system.id}.rollOptions.all.target:flatFooted`,checked:this.getFlag(game.system.id,"rollOptions.all.target:flatFooted")}]};const synthetics=this._prepareCustomModifiers(actorData,rules),{damageDice,statisticsModifiers,strikes,rollNotes}=synthetics;this.isElite?(statisticsModifiers.all=null!==(_a=statisticsModifiers.all)&&void 0!==_a?_a:[],statisticsModifiers.all.push(new modifiers_1.ModifierPF2e("PF2E.NPC.Adjustment.EliteLabel",2,modifiers_1.MODIFIER_TYPE.UNTYPED)),statisticsModifiers.damage=null!==(_b=statisticsModifiers.damage)&&void 0!==_b?_b:[],statisticsModifiers.damage.push(new modifiers_1.ModifierPF2e("PF2E.NPC.Adjustment.EliteLabel",2,modifiers_1.MODIFIER_TYPE.UNTYPED)),statisticsModifiers.hp=null!==(_c=statisticsModifiers.hp)&&void 0!==_c?_c:[],statisticsModifiers.hp.push(new modifiers_1.ModifierPF2e("PF2E.NPC.Adjustment.EliteLabel",this.getHpAdjustment(data.details.level.value),modifiers_1.MODIFIER_TYPE.UNTYPED))):this.isWeak&&(statisticsModifiers.all=null!==(_d=statisticsModifiers.all)&&void 0!==_d?_d:[],statisticsModifiers.all.push(new modifiers_1.ModifierPF2e("PF2E.NPC.Adjustment.WeakLabel",-2,modifiers_1.MODIFIER_TYPE.UNTYPED)),statisticsModifiers.damage=null!==(_e=statisticsModifiers.damage)&&void 0!==_e?_e:[],statisticsModifiers.damage.push(new modifiers_1.ModifierPF2e("PF2E.NPC.Adjustment.WeakLabel",-2,modifiers_1.MODIFIER_TYPE.UNTYPED)),statisticsModifiers.hp=null!==(_f=statisticsModifiers.hp)&&void 0!==_f?_f:[],statisticsModifiers.hp.push(new modifiers_1.ModifierPF2e("PF2E.NPC.Adjustment.WeakLabel",-1*this.getHpAdjustment(data.details.level.value),modifiers_1.MODIFIER_TYPE.UNTYPED)));for(const abl of Object.values(actorData.data.abilities))abl.mod=Number(null!==(_g=abl.mod)&&void 0!==_g?_g:0),abl.value=2*abl.mod+10;{const base=null!==(_h=data.attributes.hp.base)&&void 0!==_h?_h:data.attributes.hp.value,modifiers=[];(statisticsModifiers.hp||[]).map((m=>duplicate(m))).forEach((m=>modifiers.push(m))),(statisticsModifiers["hp-per-level"]||[]).map((m=>duplicate(m))).forEach((m=>{m.modifier*=data.details.level.value,modifiers.push(m)}));const stat=mergeObject(new modifiers_1.StatisticModifier("hp",modifiers),data.attributes.hp,{overwrite:!1});stat.base=base,stat.max=stat.max+stat.totalModifier,stat.value=Math.min(stat.value,stat.max),stat.breakdown=[game.i18n.format("PF2E.MaxHitPointsBaseLabel",{base}),...stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`))].join(", "),data.attributes.hp=stat}{const label=game.i18n.localize("PF2E.SpeedTypesLand"),base=parseInt(data.attributes.speed.value,10)||0,modifiers=[];["land-speed","speed"].forEach((key=>{(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>modifiers.push(m)))}));const stat=mergeObject(new modifiers_1.StatisticModifier(game.i18n.format("PF2E.SpeedLabel",{type:label}),modifiers),data.attributes.speed,{overwrite:!1});stat.total=base+stat.totalModifier,stat.type="land",stat.breakdown=[`${game.i18n.format("PF2E.SpeedBaseLabel",{type:label})} ${base}`].concat(stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`))).join(", "),data.attributes.speed=stat}for(let idx=0;idx<data.attributes.speed.otherSpeeds.length;idx++){const speed=data.attributes.speed.otherSpeeds[idx],base="string"==typeof speed.value&&parseInt(speed.value,10)||0,modifiers=[];[`${speed.type.toLowerCase()}-speed`,"speed"].forEach((key=>{(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>modifiers.push(m)))}));const stat=mergeObject(new modifiers_1.StatisticModifier(game.i18n.format("PF2E.SpeedLabel",{type:speed.type}),modifiers),speed,{overwrite:!1});stat.total=base+stat.totalModifier,stat.breakdown=[`${game.i18n.format("PF2E.SpeedBaseLabel",{type:speed.type})} ${base}`].concat(stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`))).join(", "),data.attributes.speed.otherSpeeds[idx]=stat}{const base=null!==(_j=data.attributes.ac.base)&&void 0!==_j?_j:Number(data.attributes.ac.value),dexterity=Math.min(data.abilities.dex.mod,...(null!==(_k=data.attributes.dexCap)&&void 0!==_k?_k:[]).map((cap=>cap.value))),modifiers=[new modifiers_1.ModifierPF2e("PF2E.BaseModifier",base-10-dexterity,modifiers_1.MODIFIER_TYPE.UNTYPED),new modifiers_1.ModifierPF2e(CONFIG.PF2E.abilities.dex,dexterity,modifiers_1.MODIFIER_TYPE.ABILITY)];["ac","dex-based","all"].forEach((key=>{(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>modifiers.push(m)))}));const stat=mergeObject(new modifiers_1.StatisticModifier("ac",modifiers),data.attributes.ac,{overwrite:!1});stat.base=base,stat.value=10+stat.totalModifier,stat.breakdown=[game.i18n.localize("PF2E.ArmorClassBase")].concat(stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`))).join(", "),data.attributes.ac=stat}{const shield=this.getFirstEquippedShield();if(shield){const isBroken=shield.data.hp.value<=shield.data.brokenThreshold.value,shieldData={value:shield.data.hp.value,max:shield.data.maxHp.value,ac:isBroken?0:shield.data.armor.value,hardness:shield.data.hardness.value,brokenThreshold:shield.data.brokenThreshold.value};data.attributes.shield=shieldData}else if(data.attributes.shield.max){Number(data.attributes.shield.value)<=Number(data.attributes.shield.brokenThreshold)&&(data.attributes.shield.ac=0)}else{const shieldData={value:0,max:0,ac:0,hardness:0,brokenThreshold:0};data.attributes.shield=shieldData}}for(const saveName of["fortitude","reflex","will"]){const save=data.saves[saveName],base=null!==(_l=save.base)&&void 0!==_l?_l:Number(save.value),ability=null!==(_m=save.ability)&&void 0!==_m?_m:CONFIG.PF2E.savingThrowDefaultAbilities[saveName],modifiers=[new modifiers_1.ModifierPF2e("PF2E.BaseModifier",base-data.abilities[ability].mod,modifiers_1.MODIFIER_TYPE.UNTYPED),new modifiers_1.ModifierPF2e(CONFIG.PF2E.abilities[ability],data.abilities[ability].mod,modifiers_1.MODIFIER_TYPE.ABILITY)],notes=[];[saveName,`${ability}-based`,"saving-throw","all"].forEach((key=>{var _a;(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>modifiers.push(m))),(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[]).map((n=>duplicate(n))).forEach((n=>notes.push(n)))}));const stat=mergeObject(new modifiers_1.StatisticModifier(saveName,modifiers),save,{overwrite:!1});stat.base=base,stat.value=stat.totalModifier,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),stat.roll=rolls_2.adaptRoll((args=>{const label=game.i18n.format("PF2E.SavingThrowWithName",{saveName:game.i18n.localize(CONFIG.PF2E.saves[saveName])});rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"saving-throw",options:args.options,notes},args.event,args.callback)})),data.saves[saveName]=stat}{const base=null!==(_o=data.attributes.perception.base)&&void 0!==_o?_o:Number(data.attributes.perception.value),modifiers=[new modifiers_1.ModifierPF2e("PF2E.BaseModifier",base-data.abilities.wis.mod,modifiers_1.MODIFIER_TYPE.UNTYPED),new modifiers_1.ModifierPF2e(CONFIG.PF2E.abilities.wis,data.abilities.wis.mod,modifiers_1.MODIFIER_TYPE.ABILITY)],notes=[];["perception","wis-based","all"].forEach((key=>{var _a;(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>modifiers.push(m))),(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[]).map((n=>duplicate(n))).forEach((n=>notes.push(n)))}));const stat=mergeObject(new modifiers_1.StatisticModifier("perception",modifiers),data.attributes.perception,{overwrite:!1});stat.base=base,stat.value=stat.totalModifier,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),stat.roll=rolls_2.adaptRoll((args=>{var _a;const label=game.i18n.localize("PF2E.PerceptionCheck");rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"perception-check",options:null!==(_a=args.options)&&void 0!==_a?_a:[],notes},args.event,args.callback)})),data.attributes.perception=stat}data.skills={};for(const[skill,{ability,shortform}]of Object.entries(base_1.SKILL_EXPANDED)){const modifiers=[new modifiers_1.ModifierPF2e("PF2E.BaseModifier",0,modifiers_1.MODIFIER_TYPE.UNTYPED),new modifiers_1.ModifierPF2e(CONFIG.PF2E.abilities[ability],data.abilities[ability].mod,modifiers_1.MODIFIER_TYPE.ABILITY)],notes=[];[skill,`${ability}-based`,"skill-check","all"].forEach((key=>{var _a;(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>modifiers.push(m))),(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[]).map((n=>duplicate(n))).forEach((n=>notes.push(n)))}));const name=game.i18n.localize(`PF2E.Skill${base_1.SKILL_DICTIONARY[shortform].capitalize()}`),stat=mergeObject(new modifiers_1.StatisticModifier(name,modifiers),{ability,expanded:skill,label:name,visible:!1,roll:rolls_2.adaptRoll((args=>{const label=game.i18n.format("PF2E.SkillCheckWithName",{skillName:name});rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"skill-check",options:args.options,notes},args.event,args.callback)})),lore:!1,rank:0},{overwrite:!1});stat.value=stat.totalModifier,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),data.skills[shortform]=stat}data.actions=[];const items=this.items.map((item=>item.data)).concat(strikes);for(const item of items)if("lore"===item.type){const skill=item.name.slugify(),{ability,shortform}=null!==(_p=base_1.SKILL_EXPANDED[skill])&&void 0!==_p?_p:{ability:"int",shortform:skill},base=null!==(_q=item.data.mod.base)&&void 0!==_q?_q:Number(item.data.mod.value),modifiers=[new modifiers_1.ModifierPF2e("PF2E.BaseModifier",base-data.abilities[ability].mod,modifiers_1.MODIFIER_TYPE.UNTYPED),new modifiers_1.ModifierPF2e(CONFIG.PF2E.abilities[ability],data.abilities[ability].mod,modifiers_1.MODIFIER_TYPE.ABILITY)],notes=[];[skill,`${ability}-based`,"skill-check","all"].forEach((key=>{var _a;(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>modifiers.push(m))),(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[]).map((n=>duplicate(n))).forEach((n=>notes.push(n)))}));const stat=mergeObject(new modifiers_1.StatisticModifier(item.name,modifiers),data.skills[shortform],{overwrite:!1});stat.itemID=item._id,stat.base=base,stat.expanded=skill,stat.label=item.name,stat.lore=!base_1.SKILL_EXPANDED[skill],stat.rank=1,stat.value=stat.totalModifier,stat.visible=!0,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),stat.roll=rolls_2.adaptRoll((args=>{var _a;const label=game.i18n.format("PF2E.SkillCheckWithName",{skillName:item.name});rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"skill-check",options:null!==(_a=args.options)&&void 0!==_a?_a:[],dc:args.dc,notes},args.event,args.callback)}));const variants=item.data.variants;if(variants&&Object.keys(variants).length){stat.variants=[];for(const[,variant]of Object.entries(variants))stat.variants.push(variant)}data.skills[shortform]=stat}else if("melee"===item.type){const modifiers=[],notes=[],traits=item.data.traits.value;let ability;{ability="ranged"===(null===(_r=item.data.weaponType)||void 0===_r?void 0:_r.value)?"dex":"str";const bonus=Number(null!==(_u=null===(_t=null===(_s=item.data)||void 0===_s?void 0:_s.bonus)||void 0===_t?void 0:_t.value)&&void 0!==_u?_u:0);traits.includes("finesse")?ability="dex":traits.includes("brutal")&&(ability="str"),modifiers.push(new modifiers_1.ModifierPF2e("PF2E.BaseModifier",bonus-data.abilities[ability].mod,modifiers_1.MODIFIER_TYPE.UNTYPED),new modifiers_1.ModifierPF2e(CONFIG.PF2E.abilities[ability],data.abilities[ability].mod,modifiers_1.MODIFIER_TYPE.ABILITY))}{const stats=[];stats.push(`${item.name.replace(/\s+/g,"-").toLowerCase()}-attack`),stats.concat(["attack","mundane-attack",`${ability}-attack`,`${ability}-based`,`${item._id}-attack`,"attack-roll","all"]).forEach((key=>{var _a;(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>modifiers.push(m))),(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[]).map((n=>duplicate(n))).forEach((n=>notes.push(n)))}))}const{imageUrl,actionGlyph}=base_1.ActorPF2e.getActionGraphics((null===(_w=null===(_v=item.data)||void 0===_v?void 0:_v.actionType)||void 0===_w?void 0:_w.value)||"action",parseInt(((null===(_x=item.data)||void 0===_x?void 0:_x.actions)||{}).value,10)||1),action=new modifiers_1.StatisticModifier(item.name,modifiers);action.glyph=actionGlyph,action.imageUrl=imageUrl,action.sourceId=item._id,action.type="strike",action.description=item.data.description.value||"",action.attackRollType="ranged"===(null===(_y=item.data.weaponType)||void 0===_y?void 0:_y.value)?"PF2E.NPCAttackRanged":"PF2E.NPCAttackMelee",action.breakdown=action.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),action.traits=[{name:"attack",label:game.i18n.localize("PF2E.TraitAttack"),toggle:!1}].concat(traits.map((trait=>{var _a;const key=null!==(_a=CONFIG.PF2E.weaponTraits[trait])&&void 0!==_a?_a:trait;return{name:trait,label:game.i18n.localize(key),toggle:!1}}))),"PF2E.NPCAttackRanged"!==action.attackRollType||action.traits.some((trait=>"range"===trait.name))||action.traits.splice(1,0,{name:"range",label:game.i18n.localize("PF2E.TraitRange"),toggle:!1}),action.damageBreakdown=Object.values(item.data.damageRolls).flatMap((roll=>{const damageType=game.i18n.localize(CONFIG.PF2E.damageTypes[roll.damageType]);return[`${roll.damage} ${damageType}`]})),action.damageBreakdown.length>0&&(this.isElite?action.damageBreakdown[0]=action.damageBreakdown[0]+` +2 ${game.i18n.localize("PF2E.NPC.Adjustment.EliteLabel")}`:this.isWeak&&(action.damageBreakdown[0]=action.damageBreakdown[0]+` -2 ${game.i18n.localize("PF2E.NPC.Adjustment.WeakLabel")}`));const attackTraits=item.data.attackEffects.value.map((attackEffect=>({name:attackEffect.toLowerCase(),label:game.i18n.localize(attackEffect),toggle:!1})));action.traits.push(...attackTraits);const strikeLabel=game.i18n.localize("PF2E.WeaponStrikeLabel");action.attack=rolls_2.adaptRoll((async args=>{var _a;const attackEffects=await this.getAttackEffects(item),rollNotes=notes.concat(attackEffects),options=(null!==(_a=args.options)&&void 0!==_a?_a:[]).concat(item.data.traits.value);rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(`${strikeLabel}: ${action.name}`,action),{actor:this,type:"attack-roll",options,notes:rollNotes,dc:args.dc},args.event)})),action.roll=action.attack;const map=base_2.ItemPF2e.calculateMap(item);action.variants=[{label:`${strikeLabel} ${action.totalModifier<0?"":"+"}${action.totalModifier}`,roll:rolls_2.adaptRoll((async args=>{var _a;const attackEffects=await this.getAttackEffects(item),rollNotes=notes.concat(attackEffects),options=(null!==(_a=args.options)&&void 0!==_a?_a:[]).concat(item.data.traits.value);options.push("constrict"),rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(`Strike: ${action.name}`,action),{actor:this,type:"attack-roll",options,notes:rollNotes,dc:args.dc},args.event)}))},{label:`MAP ${map.map2}`,roll:rolls_2.adaptRoll((async args=>{var _a;const attackEffects=await this.getAttackEffects(item),rollNotes=notes.concat(attackEffects),options=(null!==(_a=args.options)&&void 0!==_a?_a:[]).concat(item.data.traits.value);rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(`Strike: ${action.name}`,action,[new modifiers_1.ModifierPF2e("PF2E.MultipleAttackPenalty",map.map2,modifiers_1.MODIFIER_TYPE.UNTYPED)]),{actor:this,type:"attack-roll",options,notes:rollNotes,dc:args.dc},args.event)}))},{label:`MAP ${map.map3}`,roll:rolls_2.adaptRoll((async args=>{var _a;const attackEffects=await this.getAttackEffects(item),rollNotes=notes.concat(attackEffects),options=(null!==(_a=args.options)&&void 0!==_a?_a:[]).concat(item.data.traits.value);rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(`Strike: ${action.name}`,action,[new modifiers_1.ModifierPF2e("PF2E.MultipleAttackPenalty",map.map3,modifiers_1.MODIFIER_TYPE.UNTYPED)]),{actor:this,type:"attack-roll",options,notes:rollNotes,dc:args.dc},args.event)}))}],action.damage=rolls_2.adaptRoll((args=>{var _a;const options=(null!==(_a=args.options)&&void 0!==_a?_a:[]).concat(item.data.traits.value),damage=weapon_1.PF2WeaponDamage.calculateStrikeNPC(item,actorData,action.traits,statisticsModifiers,damageDice,1,options,rollNotes);rolls_1.PF2DamageRoll.roll(damage,{type:"damage-roll",outcome:"success",options},args.event,args.callback)})),action.critical=rolls_2.adaptRoll((args=>{var _a;const options=(null!==(_a=args.options)&&void 0!==_a?_a:[]).concat(item.data.traits.value),damage=weapon_1.PF2WeaponDamage.calculateStrikeNPC(item,actorData,action.traits,statisticsModifiers,damageDice,1,options,rollNotes);rolls_1.PF2DamageRoll.roll(damage,{type:"damage-roll",outcome:"criticalSuccess",options},args.event,args.callback)})),data.actions.push(action)}else if("spellcastingEntry"===item.type){const tradition=item.data.tradition.value,rank=item.data.proficiency.value,ability=item.data.ability.value||"int",base=Number(null!==(_1=null===(_0=null===(_z=item.data)||void 0===_z?void 0:_z.spelldc)||void 0===_0?void 0:_0.value)&&void 0!==_1?_1:0),baseModifiers=[new modifiers_1.ModifierPF2e("PF2E.BaseModifier",base-data.abilities[ability].mod,modifiers_1.MODIFIER_TYPE.UNTYPED),new modifiers_1.ModifierPF2e(CONFIG.PF2E.abilities[ability],data.abilities[ability].mod,modifiers_1.MODIFIER_TYPE.ABILITY)],baseNotes=[];[`${ability}-based`,"all"].forEach((key=>{var _a;(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>baseModifiers.push(m))),(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[]).map((n=>duplicate(n))).forEach((n=>baseNotes.push(n)))}));{const modifiers=[...baseModifiers],notes=[...baseNotes];[`${tradition}-spell-attack`,"spell-attack","attack","attack-roll"].forEach((key=>{var _a;(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>modifiers.push(m))),(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[]).map((n=>duplicate(n))).forEach((n=>notes.push(n)))}));const attack=new modifiers_1.StatisticModifier(item.name,modifiers);attack.notes=notes,attack.value=attack.totalModifier,attack.breakdown=attack.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),attack.roll=rolls_2.adaptRoll((args=>{var _a,_b;const label=game.i18n.format(`PF2E.SpellAttack.${tradition}`),options=null!==(_a=args.options)&&void 0!==_a?_a:[];modifiers_1.ensureProficiencyOption(options,rank),rolls_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,attack,null!==(_b=args.modifiers)&&void 0!==_b?_b:[]),{actor:this,type:"spell-attack-roll",options,dc:args.dc,notes},args.event,args.callback)})),item.data.attack=attack}{const base=Number(null!==(_4=null===(_3=null===(_2=item.data)||void 0===_2?void 0:_2.spelldc)||void 0===_3?void 0:_3.dc)&&void 0!==_4?_4:0),modifiers=[new modifiers_1.ModifierPF2e("PF2E.BaseModifier",base-10-data.abilities[ability].mod,modifiers_1.MODIFIER_TYPE.UNTYPED),new modifiers_1.ModifierPF2e(CONFIG.PF2E.abilities[ability],data.abilities[ability].mod,modifiers_1.MODIFIER_TYPE.ABILITY)],notes=[...baseNotes];[`${tradition}-spell-dc`,"spell-dc",`${ability}-based`,"all"].forEach((key=>{var _a;(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>modifiers.push(m))),(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[]).map((n=>duplicate(n))).forEach((n=>notes.push(n)))}));const dc=new modifiers_1.StatisticModifier(item.name,modifiers);dc.notes=notes,dc.value=10+dc.totalModifier,dc.breakdown=[game.i18n.localize("PF2E.SpellDCBase")].concat(dc.modifiers.filter((m=>m.enabled)).map((m=>`${game.i18n.localize(m.name)} ${m.modifier<0?"":"+"}${m.modifier}`))).join(", "),item.data.dc=dc}}rules.forEach((rule=>{try{rule.onAfterPrepareData(actorData,synthetics)}catch(error){console.error(`PF2e | Failed to execute onAfterPrepareData on rule element ${rule}.`,error)}}))}updateTokenAttitude(attitude){const disposition=NPCPF2e.mapNPCAttitudeToTokenDisposition(attitude),tokens=this._getTokenData();for(const key of Object.keys(tokens)){tokens[key].disposition=disposition}const dispositionActorUpdate={"token.disposition":disposition,attitude};this._updateAllTokens(dispositionActorUpdate,tokens)}static mapNPCAttitudeToTokenDisposition(attitude){return null===attitude||"hostile"===attitude?CONST.TOKEN_DISPOSITIONS.HOSTILE:"unfriendly"===attitude||"indifferent"===attitude?CONST.TOKEN_DISPOSITIONS.NEUTRAL:CONST.TOKEN_DISPOSITIONS.FRIENDLY}static mapTokenDispositionToNPCAttitude(disposition){return disposition===CONST.TOKEN_DISPOSITIONS.FRIENDLY?"friendly":disposition===CONST.TOKEN_DISPOSITIONS.NEUTRAL?"indifferent":"hostile"}async getAttackEffects(item){var _a,_b,_c,_d;const notes=[],description=item.data.description.value;description&&notes.push(new notes_1.PF2RollNote("all",`<div style="display: inline-block; font-weight: normal; line-height: 1.3em;" data-visibility="gm">${description}</div>`));for(const attackEffect of item.data.attackEffects.value){const item=null===(_a=this.items.find((item=>{var _a;return(null!==(_a=item.slug)&&void 0!==_a?_a:utils_1.sluggify(item.name))===utils_1.sluggify(attackEffect)})))||void 0===_a?void 0:_a.data,note=new notes_1.PF2RollNote("all","");if(item){const description=item.data.description.value;note.text=`<div style="display: inline-block; font-weight: normal; line-height: 1.3em;" data-visibility="gm"><p><strong>${attackEffect}</strong></p>${description}</div>`,notes.push(note)}else{const compendium=game.packs.get("pf2e.bestiary-ability-glossary-srd");if(compendium){const itemId=null!==(_d=null===(_c=null===(_b=await compendium.getIndex())||void 0===_b?void 0:_b.find((entry=>entry.name===attackEffect)))||void 0===_c?void 0:_c._id)&&void 0!==_d?_d:"",packItem=await compendium.getEntry(itemId);if(packItem){const description=packItem.data.description.value;note.text=`<div style="display: inline-block; font-weight: normal; line-height: 1.3em;" data-visibility="gm"><strong>${attackEffect}</strong> ${description}</div>`,notes.push(note)}else console.warn(game.i18n.format("PF2E.NPC.AttackEffectMissing",{attackEffect}))}}}return notes}getHpAdjustment(level){return level>=20?30:level<=19&&level>=5?20:level<=4&&level>=2?15:level<=1?10:0}_onUpdate(data,options,userId,context){var _a,_b,_c;super._onUpdate(data,options,userId,context);const attitude=null===(_c=null===(_b=null===(_a=null==data?void 0:data.data)||void 0===_a?void 0:_a.traits)||void 0===_b?void 0:_b.attitude)||void 0===_c?void 0:_c.value;attitude&&game.userId===userId&&this.updateTokenAttitude(attitude)}async applyAdjustment(adjustment){if(this.isElite&&"elite"===adjustment||this.isWeak&&"weak"===adjustment||!this.isElite&&!this.isWeak&&"normal"===adjustment)return;const extraHP=this.getHpAdjustment(this.level),currentHP=this.data.data.attributes.hp.value,newHP=(()=>{switch(adjustment){case"elite":return this.isWeak?currentHP+2*extraHP:currentHP+extraHP;case"weak":return this.isElite?currentHP-2*extraHP:currentHP-extraHP;default:return this.isElite?currentHP-extraHP:currentHP+extraHP}})(),toAdd="normal"===adjustment?[]:[adjustment],toRemove="weak"===adjustment?["elite"]:"elite"===adjustment?["weak"]:["elite","weak"],newTraits=this._data.data.traits.traits.value.filter((trait=>!toRemove.includes(trait))).concat(toAdd);await this.update({"data.attributes.hp.value":Math.max(0,newHP),"data.traits.traits.value":newTraits})}updateNPCAttitudeFromDisposition(disposition){this.data.data.traits.attitude.value=NPCPF2e.mapTokenDispositionToNPCAttitude(disposition)}}exports.NPCPF2e=NPCPF2e},7027:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AnimalCompanionSheetPF2e=void 0;const creature_1=__webpack_require__(4498);class AnimalCompanionSheetPF2e extends creature_1.CreatureSheetPF2e{static get defaultOptions(){return mergeObject(super.defaultOptions,{classes:["default"],width:700,height:800,tabs:[{navSelector:".sheet-navigation",contentSelector:".sheet-content",initial:"attributes"}],showUnpreparedSpells:!1})}get template(){return"systems/pf2e/templates/actors/animal-companion-sheet.html"}prepareItems(){}}exports.AnimalCompanionSheetPF2e=AnimalCompanionSheetPF2e},5435:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActorSheetPF2e=void 0;const remove_coins_popup_1=__webpack_require__(3073),treasure_1=__webpack_require__(4562),add_coins_popup_1=__webpack_require__(1441),kits_1=__webpack_require__(5785),compendium_browser_1=__webpack_require__(4610),move_loot_popup_1=__webpack_require__(4534),base_1=__webpack_require__(9978),base_2=__webpack_require__(5180),data_definitions_1=__webpack_require__(6508),conditions_1=__webpack_require__(5330),identify_popup_1=__webpack_require__(173),physical_1=__webpack_require__(315),scroll_wand_popup_1=__webpack_require__(1364),spell_consumables_1=__webpack_require__(9795),spell_1=__webpack_require__(802),spell_facade_1=__webpack_require__(4715),spellcasting_entry_1=__webpack_require__(1337),others_1=__webpack_require__(5079),localize_1=__webpack_require__(1608),trait_selector_1=__webpack_require__(8477),utils_1=__webpack_require__(4930),trait_selector_2=__webpack_require__(8477);class ActorSheetPF2e extends ActorSheet{static get defaultOptions(){const options=super.defaultOptions;return mergeObject(options,{classes:options.classes.concat(["pf2e","actor"]),scrollY:[".sheet-sidebar",".spellcastingEntry-list",".actions-list",".skills-pane",".feats-pane",".inventory-pane",".actions-pane",".spellbook-pane",".skillstab-pane",".pfs-pane"]})}get type(){return this.actor.data.type}get isEditable(){return this.actor.can(game.user,"update")}get isLootSheet(){return!1}getData(){var _a,_b,_c;const actorData=duplicate(this.actor.data),items=duplicate(this.actor.items.map((item=>item.data)).sort(((a,b)=>(a.sort||0)-(b.sort||0))));actorData.items=items;const inventoryItems=items.filter((itemData=>data_definitions_1.isPhysicalItem(itemData)));for(const itemData of inventoryItems){itemData.isEquipped=itemData.data.equipped.value,itemData.isIdentified="identified"===itemData.data.identification.status,itemData.isContainer="backpack"===itemData.type;const realName=null!==(_c=null===(_b=null===(_a=itemData.data.identification)||void 0===_a?void 0:_a.identified)||void 0===_b?void 0:_b.name)&&void 0!==_c?_c:"";!itemData.isIdentified&&realName&&game.user.isGM&&(itemData.name=`${itemData.name} (${realName})`)}const sheetData={cssClass:this.actor.owner?"editable":"locked",editable:this.isEditable,entity:actorData,limited:this.actor.limited,options:this.options,owner:this.actor.owner,title:this.title,actor:actorData,data:actorData.data,items,user:{isGM:game.user.isGM},isTargetFlatFooted:this.actor.getFlag(game.system.id,"rollOptions.all.target:flatFooted"),isProficiencyLocked:this.actor.getFlag(game.system.id,"proficiencyLock")};return this.prepareTraits(sheetData.data.traits),this.prepareItems(sheetData),sheetData}findActiveList(){return this.element.find(".tab.active .directory-list")}prepareTraits(traits){if(void 0===traits)return;const map={languages:CONFIG.PF2E.languages,dr:CONFIG.PF2E.resistanceTypes,di:CONFIG.PF2E.immunityTypes,dv:CONFIG.PF2E.weaknessTypes,ci:CONFIG.PF2E.immunityTypes,traits:CONFIG.PF2E.creatureTraits};for(const[t,choices]of Object.entries(map)){const trait=traits[t]||{value:[],selected:[]};if(Array.isArray(trait)){trait.selected={};for(const entry of trait)if("object"==typeof entry){const entryType=game.i18n.localize(choices[entry.type]);if("exceptions"in entry&&""!==entry.exceptions){const exceptions=entry.exceptions;trait.selected[entry.type]=`${entryType} (${entry.value}) [${exceptions}]`}else{let text=entryType;""!==entry.value&&(text=`${text} (${entry.value})`),trait.selected[entry.type]=text}}else trait.selected[entry]=choices[entry]||String(entry)}else trait.value&&(trait.selected=Object.fromEntries(trait.value.filter((key=>utils_1.objectHasKey(choices,key))).map((key=>[key,choices[key]]))));trait.custom&&(trait.selected.custom=trait.custom)}}prepareSpell(actorData,spellbook,spell){var _a,_b,_c,_d,_e,_f,_g,_h;const heightenedLevel=null===(_a=spell.data.heightenedLevel)||void 0===_a?void 0:_a.value,spellLvl=null!=heightenedLevel?heightenedLevel:Number(spell.data.level.value)<11?Number(spell.data.level.value):10,spellcastingEntry=null!==(_c=null===(_b=this.actor.getOwnedItem(spell.data.location.value))||void 0===_b?void 0:_b.data)&&void 0!==_c?_c:null;if("spellcastingEntry"!==(null==spellcastingEntry?void 0:spellcastingEntry.type))return void console.debug(`PF2e System | Prepare Spell | Spellcasting entry not found for spell ${spell.name}`);const tradition=null===(_d=spellcastingEntry.data.tradition)||void 0===_d?void 0:_d.value,isNotLevelBasedSpellcasting="ritual"===tradition||"focus"===tradition,slots=spellcastingEntry.data.slots,spellsSlotsWhereThisIsPrepared=null===(_e=Object.entries(null!=slots?slots:{}))||void 0===_e?void 0:_e.filter((slotArr=>!!Object.values(slotArr[1].prepared).find((slotSpell=>(null==slotSpell?void 0:slotSpell.id)===spell._id)))),highestSlotPrepared=null!==(_f=null==spellsSlotsWhereThisIsPrepared?void 0:spellsSlotsWhereThisIsPrepared.map((slot=>parseInt(slot[0].match(/slot(\d+)/)[1],10))).reduce(((acc,cur)=>cur>acc?cur:acc),0))&&void 0!==_f?_f:spellLvl,normalHighestSpellLevel=Math.ceil(actorData.data.details.level.value/2),maxSpellLevelToShow=Math.min(10,Math.max(spellLvl,highestSlotPrepared,normalHighestSpellLevel));for(let i=maxSpellLevelToShow;i>=0;i--)if(!isNotLevelBasedSpellcasting||i===spellLvl){const slotKey=`slot${i}`;spellbook[i]=spellbook[i]||{isCantrip:0===i,isFocus:11===i,label:CONFIG.PF2E.spellLevels[i],spells:[],prepared:[],uses:spellcastingEntry&&Number(slots[slotKey].value)||0,slots:spellcastingEntry&&Number(slots[slotKey].max)||0,displayPrepared:!spellcastingEntry||!spellcastingEntry.data.displayLevels||void 0===spellcastingEntry.data.displayLevels[i]||spellcastingEntry.data.displayLevels[i],unpreparedSpellsLabel:spellcastingEntry&&"arcane"===spellcastingEntry.data.tradition.value&&"prepared"===spellcastingEntry.data.prepared.value?game.i18n.localize("PF2E.UnpreparedSpellsLabelArcanePrepared"):game.i18n.localize("PF2E.UnpreparedSpellsLabel")}}spell.data.school.str=CONFIG.PF2E.magicSchools[spell.data.school.value];try{const item=this.actor.getOwnedItem(spell._id);item instanceof spell_1.SpellPF2e&&(spell.spellInfo=item.getChatData())}catch(err){console.debug(`PF2e System | Character Sheet | Could not load chat data for spell ${spell._id}`,spell)}const isSpontaneous="spontaneous"===spellcastingEntry.data.prepared.value,signatureSpells=null!==(_h=null===(_g=spellcastingEntry.data.signatureSpells)||void 0===_g?void 0:_g.value)&&void 0!==_h?_h:[],isCantrip=0===spell.data.level.value,isFocusSpell=spell.data.traditions.value.includes("focus"),isRitual=spell.data.traditions.value.includes("ritual");if(!isSpontaneous||!signatureSpells.includes(spell._id)||isCantrip||isFocusSpell||isRitual)spellbook[spellLvl].spells.push(spell);else{spell.data.isSignatureSpell=!0;for(let i=spell.data.level.value;i<=maxSpellLevelToShow;i++)spellbook[i].spells.push(spell)}}preparedSpellSlots(spellcastingEntry,spellbook){for(const[key,spl]of Object.entries(spellbook))if(spl.slots>0)for(let i=0;i<spl.slots;i++){const entrySlot=((spellcastingEntry.data.slots[`slot${key}`]||{}).prepared||{})[i]||null;if(entrySlot&&entrySlot.id){const item=this.actor.getOwnedItem(entrySlot.id);if(item){const itemCopy=duplicate(item);if(entrySlot.expended?itemCopy.expended=!0:itemCopy.expended=!1,spl.prepared[i]=itemCopy,spl.prepared[i]){const school=spl.prepared[i].data.school.value;spl.prepared[i].data&&spl.prepared[i].data.school&&spl.prepared[i].data.school.str&&utils_1.objectHasKey(CONFIG.PF2E.magicSchools,school)&&(spl.prepared[i].data.school.str=CONFIG.PF2E.magicSchools[school]);try{spl.prepared[i].spellInfo=item.getChatData()}catch(err){console.debug(`PF2e System | Character Sheet | Could not load prepared spell ${entrySlot.id}`,item)}spl.prepared[i].prepared=!0}else spl.prepared[i]={name:localize_1.LocalizePF2e.translations.PF2E.SpellSlotEmpty,id:null,prepared:!1}}else spl.prepared[i]={name:localize_1.LocalizePF2e.translations.PF2E.SpellSlotEmpty,id:null,prepared:!1}}else spl.prepared[i]={name:localize_1.LocalizePF2e.translations.PF2E.SpellSlotEmpty,id:null,prepared:!1}}}async allocatePreparedSpellSlot(spellLevel,spellSlot,spell,entryId){if(spell.data.level.value>spellLevel)return void console.warn(`Attempted to add level ${spell.data.level.value} spell to level ${spellLevel} spell slot.`);!0===CONFIG.debug.hooks&&console.debug(`PF2e System | Updating location for spell ${spell.name} to match spellcasting entry ${entryId}`);const key=`data.slots.slot${spellLevel}.prepared.${spellSlot}`,entry=this.actor.getOwnedItem(entryId);if(entry){const updates={_id:entryId,[key]:{id:spell._id}},slot=getProperty(entry,`data.data.slots.slot${spellLevel}.prepared`);void 0!==slot[spellSlot]&&(void 0!==slot[spellSlot].prepared&&(updates[key]["-=prepared"]=null),void 0!==slot[spellSlot].name&&(updates[key]["-=name"]=null),void 0!==slot[spellSlot].expended&&(updates[key]["-=expended"]=null)),this.actor.updateEmbeddedEntity("OwnedItem",updates)}}async removePreparedSpellSlot(spellLevel,spellSlot,entryId){!0===CONFIG.debug.hooks&&console.debug(`PF2e System | Updating spellcasting entry ${entryId} to remove spellslot ${spellSlot} for spell level ${spellLevel}`);const updates={_id:entryId,[`data.slots.slot${spellLevel}.prepared.${spellSlot}`]:{name:"Empty Slot (drag spell here)",id:null,prepared:!1}};this.actor.updateEmbeddedEntity("OwnedItem",updates)}async setExpendedPreparedSpellSlot(spellLevel,spellSlot,entryId,isExpended){const updates={_id:entryId,[`data.slots.slot${spellLevel}.prepared.${spellSlot}.expended`]:isExpended};this.actor.updateEmbeddedEntity("OwnedItem",updates)}activateListeners(html){if(super.activateListeners(html),html.find("[data-wpad]").each(((_i,e)=>{const w=("INPUT"===e.tagName?e.value:e.innerText).length*parseInt(e.getAttribute("data-wpad"),10)/2;e.setAttribute("style",`flex: 0 0 ${w}px`)})),html.find(".item .item-name h4").on("click",(event=>{this.onItemSummary(event)})),!this.options.editable)return;html.find(".save-name").on("click",(event=>{var _a;event.preventDefault();const save=$(event.currentTarget).parents("[data-save]")[0].getAttribute("data-save");if(null===(_a=this.actor.data.data.saves[save])||void 0===_a?void 0:_a.roll){const options=this.actor.getRollOptions(["all","saving-throw",save]);this.actor.data.data.saves[save].roll({event,options})}else this.actor.rollSave(event,save)})),html.find(".roll-init").on("click",(event=>{var _a;event.preventDefault();const checkType=this.actor.data.data.attributes.initiative.ability,options=this.actor.getRollOptions(["all","initiative"].concat(null!==(_a=base_1.SKILL_DICTIONARY[checkType])&&void 0!==_a?_a:checkType));this.actor.data.data.attributes.initiative.roll({event,options})})),html.find(".attribute-name").on("click",(event=>{var _a,_b;event.preventDefault();const attribute=(null===(_a=event.currentTarget.parentElement)||void 0===_a?void 0:_a.getAttribute("data-attribute"))||"",isSecret=event.currentTarget.getAttribute("data-secret");if(null===(_b=this.actor.data.data.attributes[attribute])||void 0===_b?void 0:_b.roll){const options=this.actor.getRollOptions(["all",attribute]);isSecret&&options.push("secret"),this.actor.data.data.attributes[attribute].roll({event,options})}else this.actor.rollAttribute(event,attribute)})),html.find(".ability-name").on("click",(event=>{var _a;event.preventDefault();const ability=null===(_a=event.currentTarget.parentElement)||void 0===_a?void 0:_a.getAttribute("data-ability");ability&&this.actor.rollAbility(event,ability)})),html.find(".skill-name.rollable, .skill-score.rollable").on("click",(event=>{var _a,_b,_c;const skill=null===(_a=event.currentTarget.parentElement)||void 0===_a?void 0:_a.getAttribute("data-skill");if(skill)if(null===(_b=this.actor.data.data.skills[skill])||void 0===_b?void 0:_b.roll){const options=this.actor.getRollOptions(["all","skill-check",null!==(_c=base_1.SKILL_DICTIONARY[skill])&&void 0!==_c?_c:skill]);this.actor.data.data.skills[skill].roll({event,options})}else this.actor.rollSkill(event,skill)})),html.find(".click-stat-level").on("click contextmenu",this.onClickStatLevel.bind(this)),html.find(".item-unprepare").on("click",(event=>{var _a,_b,_c;const spellLvl=Number(null!==(_a=$(event.currentTarget).parents(".item").attr("data-spell-lvl"))&&void 0!==_a?_a:0),slotId=Number(null!==(_b=$(event.currentTarget).parents(".item").attr("data-slot-id"))&&void 0!==_b?_b:0),entryId=null!==(_c=$(event.currentTarget).parents(".item").attr("data-entry-id"))&&void 0!==_c?_c:"";this.removePreparedSpellSlot(spellLvl,slotId,entryId)})),html.find(".item-toggle-prepare").on("click",(event=>{var _a,_b,_c;const slotId=Number(null!==(_a=$(event.currentTarget).parents(".item").attr("data-slot-id"))&&void 0!==_a?_a:0),spellLvl=Number(null!==(_b=$(event.currentTarget).parents(".item").attr("data-spell-lvl"))&&void 0!==_b?_b:0),entryId=null!==(_c=$(event.currentTarget).parents(".item").attr("data-entry-id"))&&void 0!==_c?_c:"",expendedState=(()=>{var _a;return"true"!==(null!==(_a=$(event.currentTarget).parents(".item").attr("data-expended-state"))&&void 0!==_a?_a:"")})();this.setExpendedPreparedSpellSlot(spellLvl,slotId,entryId,expendedState)})),html.find(".item-toggle-equip").on("click",(event=>{var _a;const f=$(event.currentTarget),itemId=null!==(_a=f.parents(".item").attr("data-item-id"))&&void 0!==_a?_a:"",active=f.hasClass("active");this.actor.updateEmbeddedEntity("OwnedItem",{_id:itemId,"data.equipped.value":!active})})),html.find(".item-toggle-invest").on("click",(event=>{var _a;const f=$(event.currentTarget),itemId=null!==(_a=f.parents(".item").attr("data-item-id"))&&void 0!==_a?_a:"",active=f.hasClass("active");this.actor.updateEmbeddedEntity("OwnedItem",{_id:itemId,"data.invested.value":!active})})),html.find(".trait-selector").on("click",(event=>this.onTraitSelector(event))),html.find(".add-coins-popup button").on("click",(event=>this.onAddCoinsPopup(event))),html.find(".remove-coins-popup button").on("click",(event=>this.onRemoveCoinsPopup(event))),html.find(".sell-all-treasure button").on("click",(event=>this.onSellAllTreasure(event))),html.find(".feat-browse").on("click",(()=>compendium_browser_1.compendiumBrowser.openTab("feat"))),html.find(".action-browse").on("click",(()=>compendium_browser_1.compendiumBrowser.openTab("action"))),html.find(".spell-browse").on("click",(()=>compendium_browser_1.compendiumBrowser.openTab("spell"))),html.find(".inventory-browse").on("click",(()=>compendium_browser_1.compendiumBrowser.openTab("equipment"))),html.find(".spell-create").on("click",(event=>this.onItemCreate(event))),html.find(".spellcasting-create").on("click",(event=>this.createSpellcastingEntry(event))),html.find(".spellcasting-remove").on("click",(event=>this.removeSpellcastingEntry(event))),html.find(".hide-container-toggle").on("click",(event=>{$(event.target).parent().siblings().toggle(100,(()=>{}))})),html.find(".item-create").on("click",(event=>this.onItemCreate(event))),html.find(".item-toggle-container").on("click",(event=>this.toggleContainer(event))),html.find(".item-sell-treasure").on("click",(event=>{const itemId=$(event.currentTarget).parents(".item").attr("data-item-id");treasure_1.sellTreasure(this.actor,itemId)})),html.find(".item-edit").on("click",(event=>{const itemId=$(event.currentTarget).parents(".item").attr("data-item-id"),item=this.actor.items.get(null!=itemId?itemId:"");item&&item.sheet.render(!0)})),html.find(".item-toggle-identified").on("click",(event=>{var _a;const f=$(event.currentTarget),itemId=null!==(_a=f.parents(".item").attr("data-item-id"))&&void 0!==_a?_a:"";if(f.hasClass("identified")){const item=this.actor.getOwnedItem(itemId);if(!(item instanceof physical_1.PhysicalItemPF2e))throw Error(`PF2e | ${item.name} is not a physical item.`);item.setIdentifiedState("unidentified")}else new identify_popup_1.IdentifyItemPopup(this.actor,{itemId}).render(!0)})),html.find(".item-delete").on("click",(event=>this.onClickDeleteItem(event))),html.find(".item-increase-quantity").on("click",(event=>{var _a;const itemId=null!==(_a=$(event.currentTarget).parents(".item").attr("data-item-id"))&&void 0!==_a?_a:"",item=this.actor.getOwnedItem(itemId);if(!(item instanceof physical_1.PhysicalItemPF2e))throw new Error("PF2e System | Tried to update quantity on item that does not have quantity");this.actor.updateEmbeddedEntity("OwnedItem",{_id:itemId,"data.quantity.value":Number(item.data.data.quantity.value)+1})})),html.find(".item-decrease-quantity").on("click",(event=>{var _a;const itemId=null!==(_a=$(event.currentTarget).parents(".item").attr("data-item-id"))&&void 0!==_a?_a:"",item=this.actor.getOwnedItem(itemId);if(!(item instanceof physical_1.PhysicalItemPF2e))throw new Error("Tried to update quantity on item that does not have quantity");Number(item.data.data.quantity.value)>0&&this.actor.updateEmbeddedEntity("OwnedItem",{_id:itemId,"data.quantity.value":Number(item.data.data.quantity.value)-1})})),html.find(".item-prepare").on("click",(event=>{const itemId=$(event.currentTarget).parents(".item").attr("data-item-id"),item=this.actor.getOwnedItem(null!=itemId?itemId:"");if(!(item instanceof spell_1.SpellPF2e))throw new Error("Tried to update prepared on item that does not have prepared");this.actor.updateEmbeddedEntity("OwnedItem",{_id:item.id,"data.prepared.value":!item.data.data.prepared.value})}));const handler=event=>this.onDragItemStart(event);html.find(".item").each(((_i,li)=>{li.setAttribute("draggable","true"),li.addEventListener("dragstart",handler,!1)}));const skillHandler=event=>this.onDragSkillStart(event);html.find(".skill").each(((_i,li)=>{li.setAttribute("draggable","true"),li.addEventListener("dragstart",skillHandler,!1)})),html.find("[data-toggle-property][data-toggle-label]").each(((_i,li)=>{li.setAttribute("draggable","true"),li.addEventListener("dragstart",(event=>this.onDragToggleStart(event)),!1)}));const containerItems=Array.from(html[0].querySelectorAll('[data-item-is-container="true"]'));containerItems.forEach((elem=>elem.addEventListener("dragenter",(()=>elem.classList.add("hover-container")),!1))),containerItems.forEach((elem=>elem.addEventListener("dragleave",(()=>elem.classList.remove("hover-container")),!1))),html.find("[data-item-id].item .item-image").on("click",(event=>this.onItemRoll(event))),html.find(".focus-pool-input").on("change",(async event=>{var _a;event.preventDefault();const itemId=null!==(_a=$(event.currentTarget).parents(".item-container").attr("data-container-id"))&&void 0!==_a?_a:"",focusPool=Math.clamped(Number(event.target.value),0,3),item=this.actor.getOwnedItem(itemId);let focusPoints=getProperty(item.data,"data.focus.points")||0;focusPoints=Math.clamped(focusPoints,0,focusPool),await this.actor.updateEmbeddedEntity("OwnedItem",{_id:itemId,"data.focus.points":focusPoints,"data.focus.pool":focusPool})})),html.find(".item-value-input").on("change",(async event=>{event.preventDefault();let itemId=$(event.currentTarget).parents(".item").attr("data-item-id");itemId||(itemId=$(event.currentTarget).parents(".item-container").attr("data-container-id")),await this.actor.updateEmbeddedEntity("OwnedItem",{_id:null!=itemId?itemId:"","data.item.value":Number(event.target.value)})})),html.find(".item-name-input").on("change",(async event=>{var _a;const itemId=null===(_a=event.target.attributes["data-item-id"])||void 0===_a?void 0:_a.value;await this.actor.updateEmbeddedEntity("OwnedItem",{_id:null!=itemId?itemId:"",name:event.target.value})})),html.find(".spell-slots-input").on("change",(async event=>{var _a,_b;event.preventDefault();const options={_id:null!==(_a=$(event.currentTarget).parents(".item, .section").attr("data-item-id"))&&void 0!==_a?_a:""};options[`data.slots.slot${Number(null!==(_b=$(event.currentTarget).parents(".item, .section").attr("data-level"))&&void 0!==_b?_b:0)}.value`]=Number(event.target.value),await this.actor.updateEmbeddedEntity("OwnedItem",options)})),html.find(".spell-max-input").on("change",(async event=>{var _a;event.preventDefault();const itemId=null!==(_a=$(event.currentTarget).parents(".item, .section").attr("data-item-id"))&&void 0!==_a?_a:"",key=`data.slots.slot${Number($(event.currentTarget).parents(".item, .section").attr("data-level"))||0}.max`;await this.actor.updateEmbeddedEntity("OwnedItem",{_id:itemId,[key]:Number(event.target.value)})})),html.find(".ability-select").on("change",(async event=>{var _a;event.preventDefault();const itemId=null!==(_a=$(event.currentTarget).parents(".item-container").attr("data-container-id"))&&void 0!==_a?_a:"";await this.actor.updateEmbeddedEntity("OwnedItem",{_id:itemId,"data.ability.value":event.target.value})})),html.find(".prepared-toggle").on("click",(async event=>{var _a,_b;event.preventDefault();const itemId=null!==(_a=$(event.currentTarget).parents(".item-container").attr("data-container-id"))&&void 0!==_a?_a:"",itemToEdit=null===(_b=this.actor.getOwnedItem(itemId))||void 0===_b?void 0:_b.data;if("spellcastingEntry"!==(null==itemToEdit?void 0:itemToEdit.type))throw new Error("Tried to toggle prepared spells on a non-spellcasting entry");const bool=!(itemToEdit.data.showUnpreparedSpells||{}).value;await this.actor.updateEmbeddedEntity("OwnedItem",{_id:null!=itemId?itemId:"","data.showUnpreparedSpells.value":bool})})),html.find(".level-prepared-toggle").on("click",(async event=>{var _a,_b,_c;event.preventDefault();const parentNode=$(event.currentTarget).parents(".spellbook-header"),itemId=null!==(_a=parentNode.attr("data-item-id"))&&void 0!==_a?_a:"",lvl=Number(null!==(_b=parentNode.attr("data-level"))&&void 0!==_b?_b:"");if(!Number.isInteger(lvl))return;const itemToEdit=null===(_c=this.actor.getOwnedItem(itemId))||void 0===_c?void 0:_c.data;if("spellcastingEntry"!==(null==itemToEdit?void 0:itemToEdit.type))throw new Error("Tried to toggle prepared spells on a non-spellcasting entry");const currentDisplayLevels=itemToEdit.data.displayLevels||{};currentDisplayLevels[lvl]=void 0!==currentDisplayLevels[lvl]&&!currentDisplayLevels[lvl],await this.actor.updateEmbeddedEntity("OwnedItem",{_id:itemId,"data.displayLevels":currentDisplayLevels}),this.render()})),html.find("input[type=text], input[type=number]").on("focus",(event=>{event.currentTarget.select()}))}onClickStatLevel(event){var _a,_b,_c;event.preventDefault();const field=$(event.currentTarget).siblings('input[type="hidden"]'),max=null!==(_a=field.data("max"))&&void 0!==_a?_a:4,{statType,category}=field.data();if(this.actor.getFlag("pf2e","proficiencyLock")&&"proficiency"===category)return;const level=parseFloat(`${field.val()}`);let newLevel="click"===event.type?Math.clamped(level+1,0,max):Math.clamped(level-1,0,max);if("item"!==statType)field.val(newLevel),this._onSubmit(event.originalEvent);else{let itemId=$(event.currentTarget).parents(".item").attr("data-item-id");if(void 0===itemId)if(itemId=null!==(_b=$(event.currentTarget).parents(".item-container").attr("data-container-id"))&&void 0!==_b?_b:"","focus"===category){const item=this.actor.getOwnedItem(itemId),focusPoolSize=getProperty(null!==(_c=null==item?void 0:item.data)&&void 0!==_c?_c:{},"data.focus.pool")||1;newLevel=Math.clamped(newLevel,0,focusPoolSize),this.actor.updateEmbeddedEntity("OwnedItem",{_id:itemId,"data.focus.points":newLevel})}else this.actor.updateEmbeddedEntity("OwnedItem",{_id:itemId,"data.proficiency.value":newLevel});else this.actor.updateEmbeddedEntity("OwnedItem",{_id:itemId,"data.proficient.value":newLevel})}}async onClickDeleteItem(event){var _a;const li=$(event.currentTarget).closest(".item"),itemId=null!==(_a=li.attr("data-item-id"))&&void 0!==_a?_a:"",item=this.actor.getOwnedItem(itemId);if(item instanceof others_1.ConditionPF2e&&item.fromSystem){const references=li.find(".condition-references"),deleteCondition=async()=>{this.actor.removeOrReduceCondition(item,{forceRemove:!0})};if(event.ctrlKey)return void deleteCondition();const content=await renderTemplate("systems/pf2e/templates/actors/delete-condition-dialog.html",{question:game.i18n.format("PF2E.DeleteConditionQuestion",{condition:item.name}),ref:references.html()});new Dialog({title:game.i18n.localize("PF2E.DeleteConditionTitle"),content,buttons:{Yes:{icon:'<i class="fa fa-check"></i>',label:"Yes",callback:deleteCondition},cancel:{icon:'<i class="fas fa-times"></i>',label:"Cancel"}},default:"Yes"}).render(!0)}else{if(!(item instanceof base_2.ItemPF2e))throw utils_1.ErrorPF2e("Item not found");{const deleteItem=async()=>{if(await this.actor.deleteOwnedItem(itemId),"lore"===item.type){const skill=item.name.toLowerCase().replace(/\s+/g,"-");await this.actor.update({[`data.skills.-=${skill}`]:null})}else await this.actor.update({[`data.customModifiers.-=${itemId}-attack`]:null,[`data.customModifiers.-=${itemId}-damage`]:null});li.slideUp(200,(()=>this.render(!1)))};if(event.ctrlKey)return void deleteItem();const content=await renderTemplate("systems/pf2e/templates/actors/delete-item-dialog.html",{name:item.name});new Dialog({title:"Delete Confirmation",content,buttons:{Yes:{icon:'<i class="fa fa-check"></i>',label:"Yes",callback:deleteItem},cancel:{icon:'<i class="fas fa-times"></i>',label:"Cancel"}},default:"Yes"}).render(!0)}}}_canDragStart(selector){return!!this.isLootSheet||super._canDragStart(selector)}_canDragDrop(selector){return!!this.isLootSheet||super._canDragDrop(selector)}onDragItemStart(event){var _a,_b;event.stopImmediatePropagation();const itemId=event.currentTarget.getAttribute("data-item-id"),containerId=event.currentTarget.getAttribute("data-container-id"),actionIndex=event.currentTarget.getAttribute("data-action-index"),id=null!==(_a=null!=itemId?itemId:containerId)&&void 0!==_a?_a:"",item=this.actor.getOwnedItem(id);return item?(event.dataTransfer.setData("text/plain",JSON.stringify({type:"Item",data:item.data,actorId:this.actor._id,tokenId:null===(_b=this.actor.token)||void 0===_b?void 0:_b.id,id:itemId})),!0):!(!actionIndex||!event)&&(event.dataTransfer.setData("text/plain",JSON.stringify({type:"Action",index:actionIndex,actorId:this.actor._id})),!0)}onDragSkillStart(event){const skill=event.currentTarget.getAttribute("data-skill");if(skill){const skillName=$(event.currentTarget).find(".skill-name").text();return event.dataTransfer.setData("text/plain",JSON.stringify({type:"Skill",skill,skillName,actorId:this.actor._id})),!0}return!1}onDragToggleStart(event){const property=event.currentTarget.getAttribute("data-toggle-property"),label=event.currentTarget.getAttribute("data-toggle-label");return!!property&&(event.dataTransfer.setData("text/plain",JSON.stringify({type:"Toggle",property,label,actorId:this.actor._id})),!0)}async _onSortItem(event,itemData){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k;const dropSlotType=$(event.target).parents(".item").attr("data-item-type"),dropContainerType=$(event.target).parents(".item-container").attr("data-container-type");if("spell"===itemData.type)if("spellLevel"===dropSlotType){const{itemId,level}=$(event.target).closest(".item").data();if("string"==typeof itemId&&"number"==typeof level&&this._moveSpell(itemData,itemId,level))return this.actor.updateOwnedItem(itemData)}else if("spell"===dropSlotType){const sourceId=itemData._id,dropId=null!==(_a=$(event.target).parents(".item").attr("data-item-id"))&&void 0!==_a?_a:"",target=this.actor.getOwnedItem(dropId);if(target instanceof spell_1.SpellPF2e&&sourceId!==dropId){const source=this.actor.getOwnedItem(sourceId),sourceLevel=null!==(_c=null===(_b=source.data.data.heightenedLevel)||void 0===_b?void 0:_b.value)&&void 0!==_c?_c:source.data.data.level.value,sourceLocation=source.data.data.location.value,targetLevel=null!==(_e=null===(_d=target.data.data.heightenedLevel)||void 0===_d?void 0:_d.value)&&void 0!==_e?_e:target.data.data.level.value,targetLocation=target.data.data.location.value;if(sourceLevel===targetLevel&&sourceLocation===targetLocation){const siblings=this.actor.items.entries.filter((i=>"spell"===i.data.type&&i.data.data.level.value===sourceLevel&&i.data.data.location.value===sourceLocation)),sortBefore=source.data.sort>=target.data.sort;source.sortRelative({target,siblings,sortBefore})}else if(this._moveSpell(itemData,targetLocation,targetLevel))return this.actor.updateOwnedItem(itemData)}}else{if("spellSlot"===dropSlotType){!0===CONFIG.debug.hooks&&console.debug("PF2e System | ***** spell dropped on a spellSlot *****");const dropID=Number($(event.target).parents(".item").attr("data-item-id")),spellLvl=Number($(event.target).parents(".item").attr("data-spell-lvl")),entryId=null!==(_f=$(event.target).parents(".item").attr("data-entry-id"))&&void 0!==_f?_f:"";return Number.isInteger(dropID)&&Number.isInteger(spellLvl)&&entryId&&this.allocatePreparedSpellSlot(spellLvl,dropID,itemData,entryId),itemData}if("spellcastingEntry"===dropContainerType){!0===CONFIG.debug.hooks&&console.debug("PF2e System | ***** spell from same actor dropped on a spellcasting entry *****");const dropID=$(event.target).parents(".item-container").attr("data-container-id");if(dropID)return itemData.data.location={value:dropID},this.actor.updateEmbeddedEntity("OwnedItem",itemData)}}else if("spellcastingEntry"===itemData.type&&"spellcastingEntry"===dropContainerType){const sourceId=itemData._id,dropId=null!==(_g=$(event.target).parents(".item-container").attr("data-container-id"))&&void 0!==_g?_g:"",source=this.actor.getOwnedItem(sourceId),target=this.actor.getOwnedItem(dropId);if(source&&target&&source.id!==target.id){const siblings=this.actor.itemTypes.spellcastingEntry,sortBefore=source.data.sort>=target.data.sort;return source.sortRelative({target,siblings,sortBefore}),target.data}}const containerId=null===(_k=null===(_j=null===(_h=$(event.target).closest('[data-item-is-container="true"]')[0])||void 0===_h?void 0:_h.dataset)||void 0===_j?void 0:_j.itemId)||void 0===_k?void 0:_k.trim(),item=this.actor.items.get(itemData._id);return item instanceof physical_1.PhysicalItemPF2e&&(containerId||item.isInContainer&&!containerId)?(await this.actor.stashOrUnstash(item,containerId),item.data):super._onSortItem(event,itemData)}async _onDropItemCreate(itemData){return"ancestry"===itemData.type||"background"===itemData.type||"class"===itemData.type?(ui.notifications.error(game.i18n.localize("PF2E.ItemNotSupportedOnActor")),null):super._onDropItemCreate(itemData)}async onDropItem(data){return await this._onDropItem({preventDefault(){}},data)}async _onDropItem(event,data){var _a,_b,_c,_d,_e,_f,_g;event.preventDefault();const item=await base_2.ItemPF2e.fromDropData(data),itemData=duplicate(item._data),actor=this.actor;if(data.actorId===actor.id||actor.isToken&&data.tokenId===(null===(_a=actor.token)||void 0===_a?void 0:_a.id))return this._onSortItem(event,itemData);if(data.actorId&&data_definitions_1.isPhysicalItem(itemData))return this.moveItemBetweenActors(event,data.actorId,null!==(_b=data.tokenId)&&void 0!==_b?_b:"",actor.id,null!==(_d=null===(_c=actor.token)||void 0===_c?void 0:_c.id)&&void 0!==_d?_d:"",data.id),itemData;const dropSlotType=$(event.target).closest(".item").attr("data-item-type"),dropContainerType=$(event.target).parents(".item-container").attr("data-container-type");if("spell"===itemData.type){if("spellSlot"===dropSlotType||"spellcastingEntry"===dropContainerType){const dropID=$(event.target).parents(".item-container").attr("data-container-id");if("string"!=typeof dropID)throw Error("PF2e System | Unexpected error while adding spell to spellcastingEntry");return itemData.data.location={value:dropID},this.actor._setShowUnpreparedSpells(dropID,null===(_e=itemData.data.level)||void 0===_e?void 0:_e.value),this.actor.createEmbeddedEntity("OwnedItem",itemData)}if("spellLevel"===dropSlotType){const{itemId,level}=$(event.target).closest(".item").data();if("string"==typeof itemId&&"number"==typeof level)return this._moveSpell(itemData,itemId,level),this.actor.createEmbeddedEntity("OwnedItem",itemData)}else{if("spell"!==dropSlotType){if("actorInventory"===dropContainerType&&itemData.data.level.value>0){return new scroll_wand_popup_1.ScrollWandPopup(this.actor,{},(async(heightenedLevel,itemType,spellData)=>{const consumableType="wand"==itemType?spell_consumables_1.SpellConsumableTypes.Wand:spell_consumables_1.SpellConsumableTypes.Scroll,item=await spell_consumables_1.createConsumableFromSpell(consumableType,spellData,heightenedLevel);return this._onDropItemCreate(item)}),itemData).render(!0),itemData}return null}{const{containerId}=$(event.target).closest(".item-container").data(),{spellLvl}=$(event.target).closest(".item").data();if("string"==typeof containerId&&"number"==typeof spellLvl)return this._moveSpell(itemData,containerId,spellLvl),this.actor.createEmbeddedEntity("OwnedItem",itemData)}}}else{if("spellcastingEntry"===itemData.type)return null;if("kit"===itemData.type)return await kits_1.addKit(itemData,(async newItems=>{const items=await actor.createEmbeddedEntity("OwnedItem",newItems);return Array.isArray(items)?items.flatMap((i=>null===i?[]:i._id)):null===items?[]:[items._id]})),itemData;if("condition"===itemData.type&&(null===(_f=itemData.flags.pf2e)||void 0===_f?void 0:_f.condition)){const condition=itemData,value=data.value;value&&condition.data.value.isValued&&(condition.data.value.value=value);const token=actor.token?actor.token:canvas.tokens.controlled.find((canvasToken=>canvasToken.actor.id===actor.id));if(token)return await conditions_1.ConditionManager.addConditionToToken(condition,token),itemData;{const translations=localize_1.LocalizePF2e.translations.PF2E,message=actor.can(game.user,"update")?translations.ErrorMessage.ActorMustHaveToken:translations.ErrorMessage.NoUpdatePermission;return ui.notifications.error(message),null}}}if(data_definitions_1.isPhysicalItem(itemData)){const container=$(event.target).parents('[data-item-is-container="true"]');let containerId=null;void 0!==container[0]&&(containerId=null===(_g=container[0].dataset.itemId)||void 0===_g?void 0:_g.trim()),itemData.data.containerId.value=containerId||""}return this._onDropItemCreate(itemData)}async moveItemBetweenActors(event,sourceActorId,sourceTokenId,targetActorId,targetTokenId,itemId){var _a;const sourceActor=sourceTokenId?game.actors.tokens[sourceTokenId]:game.actors.get(sourceActorId),targetActor=targetTokenId?game.actors.tokens[targetTokenId]:game.actors.get(targetActorId),item=null==sourceActor?void 0:sourceActor.getOwnedItem(itemId);if(null===sourceActor||null===targetActor)return Promise.reject(new Error("PF2e System | Unexpected missing actor(s)"));if(!(item instanceof physical_1.PhysicalItemPF2e))return Promise.reject(new Error("PF2e System | Missing or invalid item"));const container=$(event.target).parents('[data-item-is-container="true"]'),containerId=void 0!==container[0]?null===(_a=container[0].dataset.itemId)||void 0===_a?void 0:_a.trim():void 0,sourceItemQuantity=Number(item.data.data.quantity.value);if(sourceItemQuantity>1){new move_loot_popup_1.MoveLootPopup(sourceActor,{maxQuantity:sourceItemQuantity},(quantity=>{sourceActor.transferItemToActor(targetActor,item,quantity,containerId)})).render(!0)}else sourceActor.transferItemToActor(targetActor,item,1,containerId)}async _moveSpell(spellData,targetLocation,targetLevel){const spell=new spell_facade_1.SpellFacade(spellData);if(spell.spellcastingEntryId===targetLocation&&spell.heightenedLevel===targetLevel)return!1;const spellcastingEntry=this.actor.getOwnedItem(targetLocation);if(!(spellcastingEntry instanceof spellcasting_entry_1.SpellcastingEntryPF2e))throw new Error(`PF2e System | SpellcastingEntry ${targetLocation} not found in actor ${this.actor._id}`);return spellData.data.location={value:targetLocation},spell.isCantrip||spell.isFocusSpell||spell.isRitual||(spellcastingEntry.isSpontaneous||spellcastingEntry.isInnate)&&(spellData.data.heightenedLevel={value:Math.max(spell.spellLevel,targetLevel)}),!0}onItemRoll(event){event.preventDefault();const itemId=$(event.currentTarget).parents(".item").attr("data-item-id"),item=this.actor.getOwnedItem(null!=itemId?itemId:"");item instanceof physical_1.PhysicalItemPF2e&&!item.isIdentified||null==item||item.roll(event)}onItemSummary(event){event.preventDefault();const li=$(event.currentTarget).parent().parent(),itemId=li.attr("data-item-id");if("spellSlot"===li.attr("data-item-type"))return;const item=this.actor.getOwnedItem(null!=itemId?itemId:"");if(!item)return;if("spellcastingEntry"===item.data.type||"condition"===item.data.type)return;const chatData=item.getChatData({secrets:this.actor.owner});!game.user.isGM&&item instanceof physical_1.PhysicalItemPF2e&&!item.hasShowableMystifiedState||this.renderItemSummary(li,item,chatData)}renderItemSummary(li,_item,chatData){const localize=game.i18n.localize.bind(game.i18n);if(li.hasClass("expanded")){const summary=li.children(".item-summary");summary.slideUp(200,(()=>summary.remove()))}else{const div=$(`<div class="item-summary"><div class="item-description">${chatData.description.value}</div></div>`),props=$('<div class="item-properties tags"></div>');chatData.properties&&chatData.properties.filter((property=>"string"==typeof property)).forEach((property=>{props.append(`<span class="tag tag_secondary">${localize(property)}</span>`)})),chatData.critSpecialization&&props.append(`<span class="tag" title="${localize(chatData.critSpecialization.description)}" style="background: rgb(69,74,124); color: white;">${localize(chatData.critSpecialization.label)}</span>`),chatData.traits&&chatData.traits.length&&chatData.traits.forEach((property=>{property.description?props.append(`<span class="tag tag_alt" title="${localize(property.description)}">${localize(property.label)}</span>`):props.append(`<span class="tag">${localize(property.label)}</span>`)})),div.append(props),li.append(div.hide()),div.slideDown(200)}li.toggleClass("expanded")}toggleContainer(event){var _a,_b,_c,_d;const itemId=$(event.currentTarget).parents(".item").data("item-id"),item=this.actor.getOwnedItem(itemId);if(null===item||"backpack"!==item.data.type)return;const isCollapsed=null!==(_d=null===(_c=null===(_b=null===(_a=null==item?void 0:item.data)||void 0===_a?void 0:_a.data)||void 0===_b?void 0:_b.collapsed)||void 0===_c?void 0:_c.value)&&void 0!==_d&&_d;item.update({"data.collapsed.value":!isCollapsed})}onItemCreate(event){event.preventDefault();const header=event.currentTarget,data=duplicate(header.dataset);if(data.img=`systems/pf2e/icons/default-icons/${data.type}.svg`,"feat"===data.type){const featTypeString=game.i18n.localize(`PF2E.FeatType${data.featType.capitalize()}`);data.name=`${game.i18n.localize("PF2E.NewLabel")} ${featTypeString}`,mergeObject(data,{"data.featType.value":data.featType})}else if("action"===data.type){const newLabel=game.i18n.localize("PF2E.NewLabel"),actionTypeLabel=game.i18n.localize(`PF2E.ActionType${data.actionType.capitalize()}`);data.name=`${newLabel} ${actionTypeLabel}`,mergeObject(data,{"data.actionType.value":data.actionType})}else if("melee"===data.type)data.name=game.i18n.localize(`PF2E.NewPlaceholders.${data.type.capitalize()}`),mergeObject(data,{"data.weaponType.value":data.actionType});else if("spell"===data.type){this.actor._setShowUnpreparedSpells(data.location,data.level);const newLabel=game.i18n.localize("PF2E.NewLabel"),spellLevel=game.i18n.localize(`PF2E.SpellLevel${data.level}`),spellLabel=data.level>0?game.i18n.localize("PF2E.SpellLabel"):"";data.name=`${newLabel} ${spellLevel} ${spellLabel}`,mergeObject(data,{"data.level.value":data.level,"data.location.value":data.location});const currentLvlToDisplay={};currentLvlToDisplay[data.level]=!0,this.actor.updateEmbeddedEntity("OwnedItem",{_id:data.location,"data.showUnpreparedSpells.value":!0,"data.displayLevels":currentLvlToDisplay})}else"lore"===data.type?"npc"===this.type?(data.name=game.i18n.localize("PF2E.SkillLabel"),data.img="/icons/svg/d20-black.svg"):data.name=game.i18n.localize("PF2E.NewPlaceholders.Lore"):data.name=game.i18n.localize(`PF2E.NewPlaceholders.${data.type.capitalize()}`);this.actor.createEmbeddedEntity("OwnedItem",data)}createSpellcastingEntry(event){event.preventDefault();let magicTradition="arcane",spellcastingType="innate";const title=game.i18n.localize("PF2E.SpellcastingTypeLabel"),dialogOptions={width:300,top:event.clientY-80,left:window.innerWidth-710},dialogData={magicTradition,magicTraditions:CONFIG.PF2E.magicTraditions,spellcastingType,spellcastingTypes:CONFIG.PF2E.preparationType};renderTemplate("systems/pf2e/templates/actors/spellcasting-dialog.html",dialogData).then((dlg=>{new Dialog({title,content:dlg,buttons:{create:{label:game.i18n.localize("PF2E.CreateLabelUniversal"),callback:html=>{let name="";if(magicTradition=`${html.find('[name="magicTradition"]').val()}`,"ritual"===magicTradition)spellcastingType="",name=game.i18n.localize(CONFIG.PF2E.magicTraditions[magicTradition]);else if("focus"===magicTradition)spellcastingType="",name=[game.i18n.localize(CONFIG.PF2E.magicTraditions[magicTradition]),game.i18n.localize("PF2E.SpellLabelPlural")].join(" ");else{spellcastingType=`${html.find('[name="spellcastingType"]').val()}`;const preparationType=game.i18n.localize(CONFIG.PF2E.preparationType[spellcastingType]),tradition=game.i18n.localize(CONFIG.PF2E.magicTraditions[magicTradition]);name=game.i18n.format("PF2E.SpellCastingFormat",{preparationType,tradition})}const data={name,type:"spellcastingEntry",data:{ability:{type:"String",label:"Spellcasting Ability",value:""},spelldc:{type:"String",label:"Class DC",item:0},tradition:{type:"String",label:"Magic Tradition",value:magicTradition},prepared:{type:"String",label:"Spellcasting Type",value:spellcastingType},showUnpreparedSpells:{value:!0}}};this.actor.createEmbeddedEntity("OwnedItem",data)}}},default:"create"},dialogOptions).render(!0)}))}removeSpellcastingEntry(event){var _a;event.preventDefault();const li=$(event.currentTarget).parents(".item"),itemId=null!==(_a=li.attr("data-container-id"))&&void 0!==_a?_a:"",item=this.actor.getOwnedItem(itemId);item&&renderTemplate("systems/pf2e/templates/actors/delete-spellcasting-dialog.html").then((html=>{new Dialog({title:"Delete Confirmation",content:html,buttons:{Yes:{icon:'<i class="fa fa-check"></i>',label:"Yes",callback:async()=>{console.debug("PF2e System | Deleting Spell Container: ",item.name);const itemsToDelete=[];for(const item of this.actor.itemTypes.spell)item.data.data.location.value===itemId&&itemsToDelete.push(item.id);await this.actor.deleteOwnedItem(itemsToDelete),await this.actor.deleteOwnedItem(item.id),li.slideUp(200,(()=>this.render(!1)))}},cancel:{icon:'<i class="fas fa-times"></i>',label:"Cancel"}},default:"Yes"}).render(!0)}))}onAddCoinsPopup(event){event.preventDefault(),new add_coins_popup_1.AddCoinsPopup(this.actor,{}).render(!0)}onRemoveCoinsPopup(event){event.preventDefault(),new remove_coins_popup_1.RemoveCoinsPopup(this.actor,{}).render(!0)}onSellAllTreasure(event){event.preventDefault(),renderTemplate("systems/pf2e/templates/actors/sell-all-treasure-dialog.html").then((html=>{new Dialog({title:game.i18n.localize("PF2E.SellAllTreasureTitle"),content:html,buttons:{Yes:{icon:'<i class="fa fa-check"></i>',label:"Yes",callback:async()=>{console.debug("PF2e System | Selling all treasure: ",this.actor),treasure_1.sellAllTreasure(this.actor)}},cancel:{icon:'<i class="fas fa-times"></i>',label:"Cancel"}},default:"Yes"}).render(!0)}))}onTraitSelector(event){var _a,_b,_c;event.preventDefault();const $anchor=$(event.currentTarget),selectorType=null!==(_a=$anchor.attr("data-trait-selector"))&&void 0!==_a?_a:"";if(!utils_1.tupleHasValue(trait_selector_1.TAG_SELECTOR_TYPES,selectorType))throw utils_1.ErrorPF2e(`Unrecognized trait selector type "${selectorType}"`);if("basic"===selectorType){const objectProperty=null!==(_b=$anchor.attr("data-property"))&&void 0!==_b?_b:"",configTypes=(null!==(_c=$anchor.attr("data-config-types"))&&void 0!==_c?_c:"").split(",").map((type=>type.trim())).filter((tag=>utils_1.tupleHasValue(trait_selector_1.SELECTABLE_TAG_FIELDS,tag)));this.tagSelector("basic",{objectProperty,configTypes})}else this.tagSelector(selectorType)}tagSelector(selectorType,options={}){if("basic"===selectorType&&"objectProperty"in options)new trait_selector_2.TraitSelectorBasic(this.object,options).render(!0);else{if("basic"===selectorType)throw utils_1.ErrorPF2e("Insufficient options provided to render basic tag selector");new(0,{resistances:trait_selector_2.TraitSelectorResistances,senses:trait_selector_2.TraitSelectorSenses,"speed-types":trait_selector_2.TraitSelectorSpeeds,weaknesses:trait_selector_2.TraitSelectorWeaknesses}[selectorType])(this.object,options).render(!0)}}async _onSubmit(event,options={}){var _a,_b,_c,_d;if(!(event.currentTarget instanceof HTMLInputElement))return super._onSubmit(event,options);const $target=$(null!==(_a=event.currentTarget)&&void 0!==_a?_a:{});return"data.attributes.hp.value"===$target.attr("name")&&$target.attr({value:Math.clamped(parseInt(null!==(_b=$target.attr("value"))&&void 0!==_b?_b:"0",10),0,null!==(_d=null===(_c=this.actor.data.data.attributes.hp)||void 0===_c?void 0:_c.max)&&void 0!==_d?_d:0)}),super._onSubmit(event,options)}_getHeaderButtons(){const buttons=super._getHeaderButtons(),sheetButton=buttons.find((button=>"configure-sheet"===button.class));return!(Object.keys(CONFIG.Actor.sheetClasses[this.actor.type]).length>1)&&sheetButton&&buttons.splice(buttons.indexOf(sheetButton),1),buttons}}exports.ActorSheetPF2e=ActorSheetPF2e},1726:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.CharacterSheetPF2e=void 0;const creature_1=__webpack_require__(4498),bulk_1=__webpack_require__(6272),encumbrance_1=__webpack_require__(3866),container_1=__webpack_require__(1482),modifiers_1=__webpack_require__(6243),conditions_1=__webpack_require__(5330),character_1=__webpack_require__(3919),data_definitions_1=__webpack_require__(6508),base_1=__webpack_require__(5180),spell_1=__webpack_require__(802),spellcasting_entry_1=__webpack_require__(1337),manage_combat_proficiencies_1=__webpack_require__(2823);class CharacterSheetPF2e extends creature_1.CreatureSheetPF2e{static get defaultOptions(){return mergeObject(super.defaultOptions,{classes:["default","sheet","actor","pc"],width:700,height:800,tabs:[{navSelector:".sheet-navigation",contentSelector:".sheet-content",initial:"character"}],showUnpreparedSpells:!1})}get template(){let style="crb-style";return!game.user.isGM&&this.actor.limited&&(style="limited"),`systems/pf2e/templates/actors/${style}/actor-sheet.html`}async _updateObject(event,formData){var e_1,_a,_b;const equippedShieldId=null===(_b=this.getEquippedShield(this.actor.data.items))||void 0===_b?void 0:_b._id;if(void 0!==equippedShieldId){const shieldEntity=this.actor.getOwnedItem(equippedShieldId);shieldEntity&&await shieldEntity.update({"data.hp.value":formData["data.attributes.shield.hp.value"]})}const previousLevel=this.actor.data.data.details.level.value;await super._updateObject(event,formData);const updatedLevel=this.actor.data.data.details.level.value,actorClasses=this.actor.itemTypes.class;if(updatedLevel!=previousLevel&&actorClasses.length>0)try{for(var actorClasses_1_1,actorClasses_1=__asyncValues(actorClasses);!(actorClasses_1_1=await actorClasses_1.next()).done;){const actorClass=actorClasses_1_1.value;await actorClass.ensureClassFeaturesForLevel(this.actor)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{actorClasses_1_1&&!actorClasses_1_1.done&&(_a=actorClasses_1.return)&&await _a.call(actorClasses_1)}finally{if(e_1)throw e_1.error}}}getData(){var _a,_b,_c,_d,_e,_f;const sheetData=super.getData(),{hp}=sheetData.data.attributes;0===hp.temp&&delete hp.temp,sheetData.ancestryItemId=null!==(_b=null===(_a=sheetData.items.find((x=>"ancestry"===x.type)))||void 0===_a?void 0:_a._id)&&void 0!==_b?_b:"",sheetData.backgroundItemId=null!==(_d=null===(_c=sheetData.items.find((x=>"background"===x.type)))||void 0===_c?void 0:_c._id)&&void 0!==_d?_d:"",sheetData.classItemId=null!==(_f=null===(_e=sheetData.items.find((x=>"class"===x.type)))||void 0===_e?void 0:_e._id)&&void 0!==_f?_f:"",sheetData.data.attributes.heroPoints.icon=this.getHeroPointsIcon(sheetData.data.attributes.heroPoints.rank),sheetData.data.attributes.heroPoints.hover=CONFIG.PF2E.heroPointLevels[sheetData.data.attributes.heroPoints.rank],sheetData.data.attributes.classDC.icon=this.getProficiencyIcon(sheetData.data.attributes.classDC.rank),sheetData.data.attributes.classDC.hover=CONFIG.PF2E.proficiencyLevels[sheetData.data.attributes.classDC.rank],sheetData.magicTraditions=CONFIG.PF2E.magicTraditions,sheetData.preparationType=CONFIG.PF2E.preparationType,sheetData.showUnpreparedSpells=sheetData.options.showUnpreparedSpells,sheetData.data.attributes.dying.containerWidth=`width: ${13*sheetData.data.attributes.dying.max}px;`,sheetData.data.attributes.dying.icon=this.getDyingIcon(sheetData.data.attributes.dying.value),sheetData.data.attributes.wounded.icon=this.getWoundedIcon(sheetData.data.attributes.wounded.value),sheetData.data.attributes.wounded.max=sheetData.data.attributes.dying.max-1,sheetData.data.attributes.doomed.icon=this.getDoomedIcon(sheetData.data.attributes.doomed.value),sheetData.data.attributes.doomed.max=sheetData.data.attributes.dying.max-1,sheetData.uid=this.id,sheetData.data.attributes.perception.rankName=game.i18n.format(`PF2E.ProficiencyLevel${sheetData.data.attributes.perception.rank}`);for(const save of Object.values(sheetData.data.saves))save.rankName=game.i18n.format(`PF2E.ProficiencyLevel${save.rank}`);sheetData.data.attributes.classDC.rankName=game.i18n.format(`PF2E.ProficiencyLevel${sheetData.data.attributes.classDC.rank}`);for(const save of Object.values(sheetData.data.saves))save.short=game.i18n.format(`PF2E.Saves${save.label}Short`);return sheetData.data.details.keyability.aeOverride=this.actor.data.effects.some((effect=>!effect.disabled&&effect.changes.some((change=>"data.details.keyability.value"===change.key)))),sheetData.data.effects={},sheetData.data.effects.conditions=conditions_1.ConditionManager.getFlattenedConditions(sheetData.actor.items.filter((i=>{var _a;return(null===(_a=i.flags.pf2e)||void 0===_a?void 0:_a.condition)&&"condition"===i.type}))),sheetData.showPFSTab=game.settings.get("pf2e","pfsSheetTab"),sheetData.hasStamina=game.settings.get("pf2e","staminaVariant")>0,sheetData}prepareItems(sheetData){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t;const actorData=sheetData.actor,inventory={weapon:{label:game.i18n.localize("PF2E.InventoryWeaponsHeader"),items:[]},armor:{label:game.i18n.localize("PF2E.InventoryArmorHeader"),items:[]},equipment:{label:game.i18n.localize("PF2E.InventoryEquipmentHeader"),items:[],investedItemCount:0},consumable:{label:game.i18n.localize("PF2E.InventoryConsumablesHeader"),items:[]},treasure:{label:game.i18n.localize("PF2E.InventoryTreasureHeader"),items:[]},backpack:{label:game.i18n.localize("PF2E.InventoryBackpackHeader"),items:[]}},tempSpellbook=[],spellcastingEntriesList=[],spellbooks=[];spellbooks.unassigned={};const spellcastingEntries=[];let backgroundItemId;const tempFeats=[],featSlots={ancestryfeature:{label:"PF2E.FeaturesAncestryHeader",feats:[],bonusFeats:[]},classfeature:{label:"PF2E.FeaturesClassHeader",feats:[],bonusFeats:[]},ancestry:{label:"PF2E.FeatAncestryHeader",feats:[],bonusFeats:[]},class:{label:"PF2E.FeatClassHeader",feats:[],bonusFeats:[]},archetype:{label:"PF2E.FeatArchetypeHeader",feats:[],bonusFeats:[]},skill:{label:"PF2E.FeatSkillHeader",feats:[],bonusFeats:[]},general:{label:"PF2E.FeatGeneralHeader",feats:[],bonusFeats:[]},bonus:{label:"PF2E.FeatBonusHeader",feats:[],bonusFeats:[]}};if(game.settings.get("pf2e","freeArchetypeVariant"))for(let level=2;level<=actorData.data.details.level.value;level+=2)featSlots.archetype.feats.push({id:`archetype-${level}`,level:`${level}`});else delete featSlots.archetype;const pfsBoons=[],deityBoonsCurses=[],actions={action:{label:game.i18n.localize("PF2E.ActionsActionsHeader"),actions:[]},reaction:{label:game.i18n.localize("PF2E.ActionsReactionsHeader"),actions:[]},free:{label:game.i18n.localize("PF2E.ActionsFreeActionsHeader"),actions:[]}},readonlyActions={interaction:{label:"Interaction Actions",actions:[]},defensive:{label:"Defensive Actions",actions:[]},offensive:{label:"Offensive Actions",actions:[]}},readonlyEquipment=[],attacks={weapon:{label:"Compendium Weapon",items:[],type:"weapon"}},lores=[],bulkConfig={ignoreCoinBulk:game.settings.get("pf2e","ignoreCoinBulk"),ignoreContainerOverflow:game.settings.get("pf2e","ignoreContainerOverflow")},bulkItems=bulk_1.itemsFromActorData(actorData),bulkItemsById=bulk_1.indexBulkItemsById(bulkItems),containers=container_1.getContainerMap({items:actorData.items,bulkItemsById,bulkConfig});let investedCount=0;for(const itemData of sheetData.items){const i=itemData;if(data_definitions_1.isPhysicalItem(itemData)){i.showEdit=sheetData.user.isGM||i.isIdentified,i.img||(i.img=CONST.DEFAULT_TOKEN);const containerData=containers.get(i._id);if(i.containerData=containerData,i.isInContainer=containerData.isInContainer,"armor"!==i.type&&"equipment"!==i.type&&"consumable"!==i.type&&"backpack"!==i.type||(readonlyEquipment.push(i),actorData.hasEquipment=!0),i.canBeEquipped=!containerData.isInContainer,i.isSellableTreasure="treasure"===i.type&&"coins"!==(null===(_b=null===(_a=i.data)||void 0===_a?void 0:_a.stackGroup)||void 0===_b?void 0:_b.value),i.hasInvestedTrait=itemData.data.traits.value.includes("invested"),i.isInvested="invested"in itemData.data&&itemData.data.invested.value,i.isInvested&&(investedCount+=1),Object.keys(inventory).includes(i.type)){i.data.quantity.value=i.data.quantity.value||0,i.data.weight.value=i.data.weight.value||0;const bulkItem=bulkItemsById.get(i._id),[approximatedBulk]=bulk_1.calculateBulk({items:void 0===bulkItem?[]:[bulkItem],bulkConfig,actorSize:this.actor.data.data.traits.size.value});i.totalWeight=bulk_1.formatBulk(approximatedBulk),i.hasCharges="consumable"===i.type&&i.data.charges.max>0,"weapon"===i.type&&(i.isTwoHanded=i.data.traits.value.some((trait=>trait.startsWith("two-hand"))),i.wieldedTwoHanded=i.data.hands.value,attacks.weapon.items.push(i)),inventory[i.type].items.push(i)}}else if("spell"===itemData.type){try{const item=this.actor.items.get(itemData._id);i.spellInfo=item.getChatData()}catch(err){console.log(`PF2e System | Character Sheet | Could not load item ${i.name}`)}tempSpellbook.push(itemData)}else if("spellcastingEntry"===itemData.type){spellcastingEntriesList.push(i._id);const spellRank=(null===(_c=i.data.proficiency)||void 0===_c?void 0:_c.value)||0,spellProficiency=modifiers_1.ProficiencyModifier.fromLevelAndRank(actorData.data.details.level.value,spellRank).modifier,spellAbl=itemData.data.ability.value||"int",spellAttack=actorData.data.abilities[spellAbl].mod+spellProficiency;if(itemData.data.spelldc.value!==spellAttack){const updatedItem={_id:i._id,data:{spelldc:{value:spellAttack,dc:spellAttack+10,mod:actorData.data.abilities[spellAbl].mod}}};this.actor.updateEmbeddedEntity("OwnedItem",updatedItem)}i.data.spelldc.mod=actorData.data.abilities[spellAbl].mod,i.data.spelldc.breakdown=`10 + ${spellAbl} modifier(${actorData.data.abilities[spellAbl].mod}) + proficiency(${spellProficiency})`,i.data.spelldc.icon=this.getProficiencyIcon(i.data.proficiency.value),i.data.spelldc.hover=game.i18n.localize(CONFIG.PF2E.proficiencyLevels[i.data.proficiency.value]),i.data.tradition.title=game.i18n.localize(CONFIG.PF2E.magicTraditions[i.data.tradition.value]),i.data.prepared.title=game.i18n.localize(CONFIG.PF2E.preparationType[i.data.prepared.value]),"prepared"===(i.data.prepared||{}).value?i.data.prepared.preparedSpells=!0:i.data.prepared.preparedSpells=!1,"ritual"===(i.data.tradition||{}).value?i.data.tradition.ritual=!0:i.data.tradition.ritual=!1,"focus"===(i.data.tradition||{}).value?(i.data.tradition.focus=!0,void 0===i.data.focus&&(i.data.focus={points:1,pool:1}),i.data.focus.icon=this.getFocusIcon(i.data.focus)):i.data.tradition.focus=!1,spellcastingEntries.push(i)}else if("feat"===i.type){const actionType=i.data.actionType.value||"passive";if(tempFeats.push(i),Object.keys(actions).includes(actionType))if(i.feat=!0,i.img=character_1.CharacterPF2e.getActionGraphics(actionType,parseInt((i.data.actions||{}).value,10)||1).imageUrl,actions[actionType].actions.push(i),i.data.actionCategory&&i.data.actionCategory.value)switch(i.data.actionCategory.value){case"interaction":readonlyActions.interaction.actions.push(i),actorData.hasInteractionActions=!0;break;case"defensive":readonlyActions.defensive.actions.push(i),actorData.hasDefensiveActions=!0;break;default:readonlyActions.offensive.actions.push(i),actorData.hasOffensiveActions=!0}else readonlyActions.offensive.actions.push(i),actorData.hasOffensiveActions=!0}else if("lore"===i.type){i.data.icon=this.getProficiencyIcon((i.data.proficient||{}).value),i.data.hover=CONFIG.PF2E.proficiencyLevels[(i.data.proficient||{}).value];const rank=(null===(_d=i.data.proficient)||void 0===_d?void 0:_d.value)||0,proficiency=modifiers_1.ProficiencyModifier.fromLevelAndRank(actorData.data.details.level.value,rank).modifier,modifier=actorData.data.abilities.int.mod,itemBonus=Number((i.data.item||{}).value||0);i.data.itemBonus=itemBonus,i.data.value=modifier+proficiency+itemBonus,i.data.breakdown=`int modifier(${modifier}) + proficiency(${proficiency}) + item bonus(${itemBonus})`,lores.push(i)}else if("action"===i.type){const actionType=["free","reaction","passive"].includes(i.data.actionType.value)?i.data.actionType.value:"action";if(i.img=character_1.CharacterPF2e.getActionGraphics(actionType,parseInt((i.data.actions||{}).value,10)||1).imageUrl,"passive"===actionType?actions.free.actions.push(i):actions[actionType].actions.push(i),i.data.actionCategory&&i.data.actionCategory.value)switch(i.data.actionCategory.value){case"interaction":readonlyActions.interaction.actions.push(i),actorData.hasInteractionActions=!0;break;case"defensive":readonlyActions.defensive.actions.push(i),actorData.hasDefensiveActions=!0;break;case"offensive":readonlyActions.offensive.actions.push(i),actorData.hasOffensiveActions=!0;break;default:readonlyActions.offensive.actions.push(i),actorData.hasOffensiveActions=!0}else readonlyActions.offensive.actions.push(i),actorData.hasOffensiveActions=!0}else if("background"===i.type)backgroundItemId=i._id;else if("class"===i.type){const classItem=i,mapFeatLevels=(featLevels,prefix)=>featLevels?featLevels.filter((featSlotLevel=>actorData.data.details.level.value>=featSlotLevel)).map((level=>({id:`${prefix}-${level}`,level:`${level}`}))):[];featSlots.ancestry.feats=mapFeatLevels(null===(_e=classItem.data.ancestryFeatLevels)||void 0===_e?void 0:_e.value,"ancestry"),featSlots.class.feats=mapFeatLevels(null===(_f=classItem.data.classFeatLevels)||void 0===_f?void 0:_f.value,"class"),featSlots.skill.feats=mapFeatLevels(null===(_g=classItem.data.skillFeatLevels)||void 0===_g?void 0:_g.value,"skill"),featSlots.general.feats=mapFeatLevels(null===(_h=classItem.data.generalFeatLevels)||void 0===_h?void 0:_h.value,"general")}}if(game.settings.get("pf2e","ancestryParagonVariant")){featSlots.ancestry.feats.unshift({id:"ancestry-bonus",level:"1"});for(let level=3;level<=actorData.data.details.level.value;level+=4){const index=(level+1)/2;featSlots.ancestry.feats.splice(index,0,{id:`ancestry-${level}`,level:`${level}`})}}void 0!==backgroundItemId&&featSlots.skill.feats.unshift({id:backgroundItemId,level:game.i18n.localize("PF2E.FeatBackgroundShort")}),inventory.equipment.investedItemCount=investedCount;const embeddedEntityUpdate=[];for(const i of tempSpellbook)if(spellcastingEntriesList.includes(i.data.location.value)){const location=i.data.location.value;spellbooks[location]=spellbooks[location]||{},this.prepareSpell(actorData,spellbooks[location],i)}else if(1===spellcastingEntriesList.length){const location=spellcastingEntriesList[0];spellbooks[location]=spellbooks[location]||{},embeddedEntityUpdate.push({_id:i._id,"data.location.value":spellcastingEntriesList[0]}),this.prepareSpell(actorData,spellbooks[location],i)}else this.prepareSpell(actorData,spellbooks.unassigned,i);embeddedEntityUpdate.length&&(console.log("PF2e System | Prepare Actor Data | Updating location for the following embedded entities: ",embeddedEntityUpdate),this.actor.updateEmbeddedEntity("OwnedItem",embeddedEntityUpdate));const allFeatSlots=Object.values(featSlots).flatMap((x=>x.feats));for(const feat of tempFeats){let slotIndex=allFeatSlots.findIndex((x=>x.id===feat.data.location));if(-1!==slotIndex&&void 0!==allFeatSlots[slotIndex].feat&&(console.error(`Foundry VTT | Duplicate feats in same index! ${feat.name}`),slotIndex=-1),-1!==slotIndex)allFeatSlots[slotIndex].feat=feat;else{let featType=feat.data.featType.value||"bonus";if("heritage"===featType&&(featType="ancestryfeature"),"pfsboon"===featType)pfsBoons.push(feat);else if(["deityboon","curse"].includes(featType))deityBoonsCurses.push(feat);else if(["ancestryfeature","classfeature"].includes(featType)||(featType="bonus"),featType in featSlots){featSlots[featType].bonusFeats.push(feat)}}}Object.values(actions).flatMap((section=>section.actions)).forEach((action=>{action.downtime=action.data.traits.value.includes("downtime"),action.exploration=action.data.traits.value.includes("exploration"),action.encounter=!(action.downtime||action.exploration)})),actorData.inventory=inventory,Object.keys(spellbooks.unassigned).length&&(actorData.orphanedSpells=!0,actorData.orphanedSpellbook=spellbooks.unassigned),actorData.featSlots=featSlots,actorData.pfsBoons=pfsBoons,actorData.deityBoonsCurses=deityBoonsCurses,actorData.attacks=attacks,actorData.actions=actions,actorData.readonlyActions=readonlyActions,actorData.readonlyEquipment=readonlyEquipment,actorData.lores=lores;for(const entry of spellcastingEntries)entry.data.prepared.preparedSpells&&spellbooks[entry._id]&&this.preparedSpellSlots(entry,spellbooks[entry._id]),entry.spellbook=spellbooks[entry._id];actorData.spellcastingEntries=spellcastingEntries;const equippedShield=this.getEquippedShield(actorData.items);void 0===equippedShield?(actorData.data.attributes.shield={hp:{value:0},maxHp:{value:0},armor:{value:0},hardness:{value:0},brokenThreshold:{value:0}},actorData.data.attributes.shieldBroken=!1):(actorData.data.attributes.shield=duplicate(equippedShield.data),actorData.data.attributes.shieldBroken=(null===(_k=null===(_j=null==equippedShield?void 0:equippedShield.data)||void 0===_j?void 0:_j.hp)||void 0===_k?void 0:_k.value)<=(null===(_m=null===(_l=null==equippedShield?void 0:equippedShield.data)||void 0===_l?void 0:_l.brokenThreshold)||void 0===_m?void 0:_m.value));const featSlugs=new Set(actorData.items.filter((item=>"feat"===item.type)).map((item=>item.data.slug)));let bonusEncumbranceBulk=null!==(_o=actorData.data.attributes.bonusEncumbranceBulk)&&void 0!==_o?_o:0,bonusLimitBulk=null!==(_p=actorData.data.attributes.bonusLimitBulk)&&void 0!==_p?_p:0;featSlugs.has("hefty-hauler")&&(bonusEncumbranceBulk+=2,bonusLimitBulk+=2);actorData.items.some((item=>"equipment"===item.type&&"lifting-belt"===item.data.slug&&item.data.equipped.value&&item.data.invested.value))&&(bonusEncumbranceBulk+=1,bonusLimitBulk+=1);const[bulk]=bulk_1.calculateBulk({items:bulkItems,bulkConfig,actorSize:this.actor.data.data.traits.size.value});actorData.data.attributes.encumbrance=encumbrance_1.calculateEncumbrance(actorData.data.abilities.str.mod,bonusEncumbranceBulk,bonusLimitBulk,bulk,null!==(_t=null===(_s=null===(_r=null===(_q=actorData.data)||void 0===_q?void 0:_q.traits)||void 0===_r?void 0:_r.size)||void 0===_s?void 0:_s.value)&&void 0!==_t?_t:"med")}getEquippedShield(items){return items.find((itemData=>"armor"===itemData.type&&itemData.data.equipped.value&&"shield"===itemData.data.armorType.value))}activateListeners(html){super.activateListeners(html),html.find('[name="ammo-used"]').on("change",(event=>{var _a;event.stopPropagation();const actionIndex=$(event.currentTarget).parents(".item").attr("data-action-index"),action=this.actor.data.data.actions[Number(actionIndex)],weapon=this.actor.getOwnedItem(action.item),ammo=this.actor.getOwnedItem($(event.currentTarget).val());weapon&&weapon.update({data:{selectedAmmoId:null!==(_a=null==ammo?void 0:ammo.id)&&void 0!==_a?_a:null}})}));{const title=$(".sheet-navigation .active").data("tabTitle");title&&html.find(".navigation-title").text(title)}html.find(".sheet-navigation").on("mouseover",".item",(event=>{const title=event.currentTarget.dataset.tabTitle;title&&$(event.currentTarget).parents(".sheet-navigation").find(".navigation-title").text(title)})),html.find(".sheet-navigation").on("mouseout",".item",(event=>{const parent=$(event.currentTarget).parents(".sheet-navigation"),title=parent.find(".item.active").data("tabTitle");title&&parent.find(".navigation-title").text(title)})),html.find(".open-compendium").on("click",(event=>{if(event.currentTarget.dataset.compendium){const compendium=game.packs.get(event.currentTarget.dataset.compendium);compendium&&compendium.render(!0)}})),html.find(".toggle-unready-strikes").on("click",(()=>{this.actor.setFlag(game.system.id,"showUnreadyStrikes",!this.actor.getFlag(game.system.id,"showUnreadyStrikes"))})),html.find(".actions-nav").on("click",".tab:not(.tab-active)",(event=>{const target=$(event.currentTarget),nav=target.parents(".actions-nav");nav.children(".tab-active").removeClass("tab-active"),nav.siblings(".actions-panels").children(".actions-panel.active").removeClass("active"),target.addClass("tab-active"),nav.siblings(".actions-panels").children(`#${target.data("panel")}`).addClass("active")})),html.find(".crb-trait-selector").on("click",(event=>this.onTraitSelector(event))),html.find(".actions-list").on("click",'[data-roll-option]:not([data-roll-option=""])',(event=>{this.actor.toggleRollOption(event.currentTarget.dataset.rollName,event.currentTarget.dataset.rollOption)})),html.find(".add-modifier").on("click",".fas.fa-plus-circle",(event=>this.onIncrementModifierValue(event))),html.find(".add-modifier").on("click",".fas.fa-minus-circle",(event=>this.onDecrementModifierValue(event))),html.find(".add-modifier").on("click",".add-modifier-submit",(event=>this.onAddCustomModifier(event))),html.find(".modifier-list").on("click",".remove-modifier",(event=>this.onRemoveCustomModifier(event))),html.find(".modifier-list").on("click",".toggle-automation",(event=>this.onToggleAutomation(event)));{const $tab=html.find(".tab.skills");$tab.find("ol.inventory-header.combat-proficiencies").find("a.add").on("click",(event=>{manage_combat_proficiencies_1.ManageCombatProficiencies.add(this.actor,event)}));$tab.find("ol.combat-list").find("li.skill.custom a.delete").on("click",(event=>{manage_combat_proficiencies_1.ManageCombatProficiencies.remove(this.actor,event)}))}html.find(".hover").tooltipster({animation:"fade",delay:200,trigger:"click",arrow:!1,contentAsHTML:!0,debug:!1,interactive:!0,side:["right","bottom"],theme:"crb-hover",minWidth:120}),html.find(".dying-click").on("click contextmenu",this.onClickDying.bind(this)),html.find(".spell-slots-increment-down").on("click",(event=>{const target=$(event.currentTarget),itemId=target.data().itemId,itemLevel=target.data().level,item=this.actor.getOwnedItem(itemId);if(null==item||"spellcastingEntry"!==item.data.type)return;const data=duplicate(item.data);if("focus"===data.data.tradition.value)data.data.focus.points>0?data.data.focus.points-=1:ui.notifications.warn(game.i18n.localize("PF2E.Focus.NotEnoughFocusPointsError"));else{if(null===item.data.data.slots)return;data.data.slots["slot"+itemLevel].value-=1,data.data.slots["slot"+itemLevel].value<0&&(data.data.slots["slot"+itemLevel].value=0)}item.update(data)})),html.find(".spell-slots-increment-reset").on("click",(event=>{const target=$(event.currentTarget),itemId=target.data().itemId,itemLevel=target.data().level,item=this.actor.getOwnedItem(itemId);if(null==item)return;if("spellcastingEntry"!==item.data.type)return;const data=duplicate(item.data);null!=data.data.slots&&(data.data.slots["slot"+itemLevel].value=data.data.slots["slot"+itemLevel].max,item.update(data))})),html.find(".toggle-signature-spell").on("click",(event=>{this.onToggleSignatureSpell(event)}))}getFocusIcon(focus){const icons={};for(let i=0;i<=focus.pool;i++){let iconHtml="";for(let iconColumn=1;iconColumn<=focus.pool;iconColumn++)iconHtml+=iconColumn<=i?'<i class="fas fa-dot-circle"></i>':'<i class="far fa-circle"></i>';icons[i]=iconHtml}return icons[focus.points]}onIncrementModifierValue(event){$(event.currentTarget).parents(".add-modifier").find(".add-modifier-value input[type=number]")[0].stepUp()}onDecrementModifierValue(event){$(event.currentTarget).parents(".add-modifier").find(".add-modifier-value input[type=number]")[0].stepDown()}onAddCustomModifier(event){const parent=$(event.currentTarget).parents(".add-modifier"),stat=$(event.currentTarget).attr("data-stat"),modifier=Number(parent.find(".add-modifier-value input[type=number]").val())||1,name=`${parent.find(".add-modifier-name").val()}`,type=`${parent.find(".add-modifier-type").val()}`,errors=[];stat&&stat.trim()||errors.push("Statistic is required."),name&&name.trim()||errors.push("Name is required."),type&&type.trim().length||errors.push("Type is required."),errors.length>0?ui.notifications.error(errors.join(" ")):this.actor.addCustomModifier(stat,name,modifier,type)}onRemoveCustomModifier(event){const stat=$(event.currentTarget).attr("data-stat"),name=$(event.currentTarget).attr("data-name"),errors=[];stat&&stat.trim()||errors.push("Statistic is required."),name&&name.trim()||errors.push("Name is required."),errors.length>0?ui.notifications.error(errors.join(" ")):this.actor.removeCustomModifier(stat,name)}onToggleAutomation(event){const $checkbox=$(event.target),toggleOff=!$checkbox.hasClass("disabled"),effectUpdates=this.actor.effects.entries.filter((effect=>effect.data.changes.some((change=>change.key===$checkbox.data("automation-key"))))).map((effect=>({_id:effect.id,disabled:toggleOff})));this.actor.updateEmbeddedEntity("ActiveEffect",effectUpdates)}async _onDropItemCreate(itemData){return["ancestry","background","class"].includes(itemData.type)?await this.actor.createEmbeddedEntity("OwnedItem",itemData):super._onDropItemCreate(itemData)}isFeatValidInFeatSlot(_slotId,featSlotType,feat){var _a,_b;let featType=null===(_b=null===(_a=feat.data)||void 0===_a?void 0:_a.featType)||void 0===_b?void 0:_b.value;return"archetype"===featType&&(featType=feat.data.traits.value.includes("skill")?"skill":"class"),"archetype"===featSlotType&&(featSlotType="class"),"ancestryfeature"===featSlotType?["ancestryfeature","heritage"].includes(featType):"general"===featSlotType?["general","skill"].includes(featType):featSlotType===featType}onClickDying(event){event.preventDefault();const field=$(event.currentTarget).siblings('input[type="hidden"]'),maxDying=this.object.data.data.attributes.dying.max,doomed=this.object.data.data.attributes.doomed.value,level=parseFloat(`${field.val()}`);let newLevel=level;"click"===event.type?(newLevel=Math.clamped(level+1+0,0,maxDying),newLevel+doomed>=maxDying&&(newLevel=maxDying)):(newLevel=Math.clamped(level-1,0,maxDying),newLevel+doomed>=maxDying&&(newLevel-=doomed)),field.val(newLevel),this._onSubmit(event.originalEvent)}getNearestSlotId(event){const data=$(event.target).closest(".item").data();return data||{slotId:void 0,featType:void 0}}onToggleSignatureSpell(event){var _a,_b;const{containerId}=event.target.closest(".item-container").dataset,{itemId}=event.target.closest(".item").dataset;if(!containerId||!itemId)return;const spellcastingEntry=this.actor.getOwnedItem(containerId),spell=this.actor.getOwnedItem(itemId);if(!(spellcastingEntry instanceof spellcasting_entry_1.SpellcastingEntryPF2e&&spell instanceof spell_1.SpellPF2e))return;const signatureSpells=null!==(_b=null===(_a=spellcastingEntry.data.data.signatureSpells)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:[];if(signatureSpells.includes(spell.id)){const updatedSignatureSpells=signatureSpells.filter((id=>id!==spell.id));this.actor.updateOwnedItem({_id:spellcastingEntry.id,"data.signatureSpells.value":updatedSignatureSpells})}else{const isCantrip=0===spell.data.data.level.value,isFocusSpell=spell.data.data.traditions.value.includes("focus"),isRitual=spell.data.data.traditions.value.includes("ritual");if(isCantrip||isFocusSpell||isRitual)return;const updatedSignatureSpells=signatureSpells.concat([spell.id]);this.actor.updateOwnedItem({_id:spellcastingEntry.id,"data.signatureSpells.value":updatedSignatureSpells})}}async _onDropItem(event,data){var _a;const actor=this.actor;if(data.actorId===actor._id||actor.isToken&&data.tokenId===(null===(_a=actor.token)||void 0===_a?void 0:_a.id))return super._onDropItem(event,data);event.preventDefault();const item=await base_1.ItemPF2e.fromDropData(data),itemData=duplicate(item.data),{slotId,featType}=this.getNearestSlotId(event);if("feat"===itemData.type&&void 0!==slotId&&this.isFeatValidInFeatSlot(slotId,featType,itemData)){itemData.data.location=slotId;return(await Promise.all([this.actor.createEmbeddedEntity("OwnedItem",itemData),this.actor.updateEmbeddedEntity("OwnedItem",this.actor.items.filter((x=>"feat"===x.data.type&&x.data.data.location===slotId)).map((x=>({_id:x._id,"data.location":""}))))])).flatMap((item=>item))}return super._onDropItem(event,data)}async _onSortItem(event,itemData){if("feat"===itemData.type){const{slotId,featType}=this.getNearestSlotId(event);if(this.isFeatValidInFeatSlot(slotId,featType,itemData))return this.actor.updateEmbeddedEntity("OwnedItem",[{_id:itemData._id,"data.location":slotId},...this.actor.items.filter((x=>"feat"===x.data.type&&x.data.data.location===slotId)).map((x=>({_id:x._id,"data.location":""})))]),itemData;if(itemData.data.location)return this.actor.updateEmbeddedEntity("OwnedItem",{_id:itemData._id,"data.location":""})}return super._onSortItem(event,itemData)}_onSubmit(event){var _a,_b,_c,_d,_e,_f,_g;return"data.attributes.sp.value"===(null===(_a=null==event?void 0:event.currentTarget)||void 0===_a?void 0:_a.name)&&(event.currentTarget.value=Math.clamped(Number(event.currentTarget.value),Number(null!==(_d=null===(_c=null===(_b=this.actor.data.data.attributes)||void 0===_b?void 0:_b.sp)||void 0===_c?void 0:_c.min)&&void 0!==_d?_d:0),Number(null!==(_g=null===(_f=null===(_e=this.actor.data.data.attributes)||void 0===_e?void 0:_e.sp)||void 0===_f?void 0:_f.max)&&void 0!==_g?_g:0))),super._onSubmit(event)}getDyingIcon(level){const maxDying=this.object.data.data.attributes.dying.max||4,doomed=this.object.data.data.attributes.doomed.value||0,icons={};for(let dyingLevel=0;dyingLevel<=maxDying;dyingLevel++){icons[dyingLevel]=dyingLevel===maxDying?"<span>":"";for(let column=1;column<=maxDying;column++)icons[dyingLevel]+=column>=maxDying-doomed||dyingLevel===maxDying?'<i class="fas fa-skull"></i>':dyingLevel<column?'<i class="far fa-circle"></i>':'<i class="fas fa-times-circle"></i>';icons[dyingLevel]+=dyingLevel===maxDying?"</span>":""}return icons[level]}getWoundedIcon(level){const maxDying=this.object.data.data.attributes.dying.max||4,icons={};for(let i=0;i<maxDying;i++){let iconHtml="";for(let iconColumn=1;iconColumn<maxDying;iconColumn++)iconHtml+=iconColumn<=i?'<i class="fas fa-dot-circle"></i>':'<i class="far fa-circle"></i>';icons[i]=iconHtml}return icons[level]}getDoomedIcon(level){const maxDying=this.object.data.data.attributes.dying.max||4,icons={};for(let i=0;i<maxDying;i++){let iconHtml="";for(let iconColumn=1;iconColumn<maxDying;iconColumn++)iconHtml+=iconColumn<=i?'<i class="fas fa-skull"></i>':'<i class="far fa-circle"></i>';icons[i]=iconHtml}return icons[level]}getHeroPointsIcon(level){return{0:'<i class="far fa-circle"></i><i class="far fa-circle"></i><i class="far fa-circle"></i>',1:'<i class="fas fa-hospital-symbol"></i><i class="far fa-circle"></i><i class="far fa-circle"></i>',2:'<i class="fas fa-hospital-symbol"></i><i class="fas fa-hospital-symbol"></i><i class="far fa-circle"></i>',3:'<i class="fas fa-hospital-symbol"></i><i class="fas fa-hospital-symbol"></i><i class="fas fa-hospital-symbol"></i>'}[level]}}exports.CharacterSheetPF2e=CharacterSheetPF2e},4498:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CreatureSheetPF2e=void 0;const treasure_1=__webpack_require__(4562),modifiers_1=__webpack_require__(6243),base_1=__webpack_require__(5435),localize_1=__webpack_require__(1608),physical_1=__webpack_require__(315),creature_1=__webpack_require__(2542),others_1=__webpack_require__(5079),utils_1=__webpack_require__(4930);class CreatureSheetPF2e extends base_1.ActorSheetPF2e{renderItemSummary(li,item,chatData){super.renderItemSummary(li,item,chatData);const div=li.find(".item-summary"),buttons=$('<div class="item-buttons"></div>');switch(item.data.type){case"action":chatData.weapon.value&&chatData.weapon.value&&(buttons.append(`<button class="weapon_attack tag" data-action="weaponAttack">${game.i18n.localize("PF2E.WeaponStrikeLabel")}</button>`),buttons.append('<button class="tag weapon_attack2" data-action="weaponAttack2">2</button>'),buttons.append('<button class="tag weapon_attack3" data-action="weaponAttack3">3</button>'),buttons.append(`<button class="tag weapon_damage" data-action="weaponDamage">${game.i18n.localize("PF2E.DamageLabel")}</button>`));break;case"weapon":chatData.isTwohanded&&"character"!==this.actor.type&&(chatData.wieldedTwoHands?buttons.append('<span class="tag"><button data-action="toggleHands"><i class="far fa-hand-paper"></i><i class="far fa-hand-paper"></i></button></span>'):buttons.append('<span class="tag"><button data-action="toggleHands"><i class="far fa-hand-paper"></i></button></span>'));break;case"spell":chatData.isSave&&buttons.append(`<span class="tag">${game.i18n.localize("PF2E.SaveDCLabel")} ${chatData.save.dc} ${chatData.save.basic} ${chatData.save.str}</span>`),chatData.isAttack&&buttons.append(`<span class="tag"><button class="spell_attack" data-action="spellAttack">${game.i18n.localize("PF2E.AttackLabel")}</button></span>`),item.data.data.damage.value&&buttons.append(`<span class="tag"><button class="spell_damage" data-action="spellDamage">${chatData.damageLabel}: ${item.data.data.damage.value}</button></span>`);break;case"consumable":chatData.hasCharges&&physical_1.PhysicalItemPF2e.isIdentified(item.data)&&buttons.append(`<span class="tag"><button class="consume" data-action="consume">${game.i18n.localize("PF2E.ConsumableUseLabel")} ${item.name}</button></span>`)}div.append(buttons),buttons.find("button").on("click",(event=>{switch(event.preventDefault(),event.stopPropagation(),event.target.dataset.action){case"toggleHands":"weapon"===item.data.type&&(item.data.data.hands.value=!item.data.data.hands.value,this.actor.updateEmbeddedEntity("OwnedItem",item.data),this._render());break;case"weaponAttack":item.rollWeaponAttack(event);break;case"weaponAttack2":item.rollWeaponAttack(event,2);break;case"weaponAttack3":item.rollWeaponAttack(event,3);break;case"weaponDamage":item.rollWeaponDamage(event);break;case"weaponDamageCritical":item.rollWeaponDamage(event,!0);break;case"spellAttack":item.rollSpellAttack(event);break;case"spellDamage":item.rollSpellDamage(event);break;case"consume":item.rollConsumable(event)}}))}getData(){var _a;const sheetData=super.getData();if(sheetData.data.martial){const proficiencies=Object.entries(sheetData.data.martial);for(const[key,proficiency]of proficiencies){const groupMatch=/weapon-group-([-a-z0-9]+)$/.exec(key),baseWeaponMatch=/weapon-base-([-a-z0-9]+)$/.exec(key),label=(()=>{if(utils_1.objectHasKey(CONFIG.PF2E.martialSkills,key))return CONFIG.PF2E.martialSkills[key];if(utils_1.objectHasKey(CONFIG.PF2E.weaponCategories,key))return CONFIG.PF2E.weaponCategories[key];if(Array.isArray(groupMatch)){const weaponGroup=groupMatch[1];return CONFIG.PF2E.weaponGroups[weaponGroup]}if(Array.isArray(baseWeaponMatch)){const baseWeapon=baseWeaponMatch[1];return localize_1.LocalizePF2e.translations.PF2E.Weapon.Base[baseWeapon]}return key})();proficiency.icon=this.getProficiencyIcon(proficiency.rank),proficiency.hover=CONFIG.PF2E.proficiencyLevels[proficiency.rank],proficiency.label=label,proficiency.value=modifiers_1.ProficiencyModifier.fromLevelAndRank(sheetData.data.details.level.value,proficiency.rank||0).modifier}}if(void 0!==sheetData.data.saves)for(const[s,save]of Object.entries(sheetData.data.saves))save.icon=this.getProficiencyIcon(save.rank),save.hover=CONFIG.PF2E.proficiencyLevels[save.rank],save.label=CONFIG.PF2E.saves[s];if(void 0!==sheetData.data.attributes&&(sheetData.data.attributes.perception.icon=this.getProficiencyIcon(sheetData.data.attributes.perception.rank),sheetData.data.attributes.perception.hover=CONFIG.PF2E.proficiencyLevels[sheetData.data.attributes.perception.rank]),void 0!==sheetData.data.abilities)for(const[a,abl]of Object.entries(sheetData.data.abilities))abl.label=CONFIG.PF2E.abilities[a];if(void 0!==sheetData.data.skills)for(const[s,skl]of Object.entries(sheetData.data.skills))skl.icon=this.getProficiencyIcon(skl.rank),skl.hover=CONFIG.PF2E.proficiencyLevels[skl.rank],skl.label=null!==(_a=skl.label)&&void 0!==_a?_a:CONFIG.PF2E.skills[s];if(void 0!==sheetData.actor.items){const currency=treasure_1.calculateValueOfCurrency(sheetData.actor.items);sheetData.totalCurrency=CreatureSheetPF2e.parseCoinsToActorSheetData(currency);const treasure=treasure_1.calculateWealth(sheetData.actor.items);sheetData.totalTreasureGold=(treasure_1.coinValueInCopper(treasure)/100).toFixed(2);const totalWealth=treasure_1.calculateTotalWealth(sheetData.actor.items);sheetData.totalWealthGold=(treasure_1.coinValueInCopper(totalWealth)/100).toFixed(2)}return sheetData.abilities=CONFIG.PF2E.abilities,sheetData.skills=CONFIG.PF2E.skills,sheetData.actorSizes=CONFIG.PF2E.actorSizes,sheetData.alignment=CONFIG.PF2E.alignment,sheetData.rarity=CONFIG.PF2E.rarityTraits,sheetData.attitude=CONFIG.PF2E.attitude,sheetData.pfsFactions=CONFIG.PF2E.pfsFactions,sheetData}getProficiencyIcon(level){return{0:"",1:'<i class="fas fa-check-circle"></i>',2:'<i class="fas fa-check-circle"></i><i class="fas fa-check-circle"></i>',3:'<i class="fas fa-check-circle"></i><i class="fas fa-check-circle"></i><i class="fas fa-check-circle"></i>',4:'<i class="fas fa-check-circle"></i><i class="fas fa-check-circle"></i><i class="fas fa-check-circle"></i><i class="fas fa-check-circle"></i>'}[level]}static parseCoinsToActorSheetData(treasure){const coins={};for(const[denomination,value]of Object.entries(treasure))coins[denomination]={value,label:CONFIG.PF2E.currencies[denomination]};return coins}activateListeners(html){super.activateListeners(html),html.find(".recoveryCheck.rollable").on("click",(()=>{this.actor.rollRecovery()})),html.find(".strikes-list [data-action-index]").on("click",".action-name",(event=>{$(event.currentTarget).parents(".expandable").toggleClass("expanded")}));const createStrikeRollContext=rollNames=>{var _a,_b;const targets=Array.from(game.user.targets).map((token=>token.actor)).filter((actor=>!!actor)),target=1===targets.length&&targets[0]instanceof creature_1.CreaturePF2e?targets[0]:void 0,options=this.actor.getRollOptions(rollNames);{const conditions=this.actor.items.filter((item=>item instanceof others_1.ConditionPF2e)).filter((item=>item.getFlag("pf2e","condition")));options.push(...conditions.map((item=>`self:${item.data.data.hud.statusName}`)))}if(target){const conditions=target.items.filter((item=>item instanceof others_1.ConditionPF2e)).filter((item=>item.getFlag("pf2e","condition")));options.push(...conditions.map((item=>`target:${item.data.data.hud.statusName}`)));const traits=(null!==(_a=target.data.data.traits.traits.custom)&&void 0!==_a?_a:"").split(/[;,\\|]/).map((value=>value.trim())).concat(null!==(_b=target.data.data.traits.traits.value)&&void 0!==_b?_b:[]).filter((value=>!!value)).map((trait=>`target:${trait}`));options.push(...traits)}return{options,targets:new Set(targets),target}},createAttackRollContext=(event,rollNames)=>{const ctx=createStrikeRollContext(rollNames);let dc;return ctx.target&&(dc={label:game.i18n.format("PF2E.CreatureArmorClass",{creature:ctx.target.name}),scope:"AttackOutcome",value:ctx.target.data.data.attributes.ac.value,visibility:"gm"}),{event,options:Array.from(new Set(ctx.options)),targets:ctx.targets,dc}},createDamageRollContext=event=>{const ctx=createStrikeRollContext(["all","damage-roll"]);return{event,options:Array.from(new Set(ctx.options)),targets:ctx.targets}};html.find(".strikes-list .damage-strike").on("click",(event=>{if(!["character","npc"].includes(this.actor.data.type))throw Error("This sheet only works for characters and NPCs");event.preventDefault(),event.stopPropagation(),event.stopImmediatePropagation();const actionIndex=$(event.currentTarget).parents("[data-action-index]").attr("data-action-index"),rollContext=createDamageRollContext(event);this.actor.data.data.actions[Number(actionIndex)].damage(rollContext)})),html.find(".strikes-list .critical-strike").on("click",(event=>{if(!["character","npc"].includes(this.actor.data.type))throw Error("This sheet only works for characters and NPCs");event.preventDefault(),event.stopPropagation(),event.stopImmediatePropagation();const actionIndex=$(event.currentTarget).parents("[data-action-index]").attr("data-action-index"),rollContext=createDamageRollContext(event);this.actor.data.data.actions[Number(actionIndex)].critical(rollContext)})),html.find(".spell-attack").on("click",(event=>{var _a,_b;if(!["character"].includes(this.actor.data.type))throw Error("This sheet only works for characters");const index=$(event.currentTarget).closest("[data-container-id]").data("containerId"),entryData=null===(_a=this.actor.itemTypes.spellcastingEntry.find((item=>item._id===index)))||void 0===_a?void 0:_a.data;if(entryData&&(null===(_b=entryData.data.attack)||void 0===_b?void 0:_b.roll)){const rollContext=createAttackRollContext(event,["all","attack-roll","spell-attack-roll"]);entryData.data.attack.roll(rollContext)}})),html.find(".spellcasting.rollable").on("click",(event=>{var _a;event.preventDefault();const itemId=null!==(_a=$(event.currentTarget).parents(".item-container").attr("data-container-id"))&&void 0!==_a?_a:"",item=this.actor.getOwnedItem(itemId);item&&item.rollSpellcastingEntryCheck(event)})),html.find("[data-action-index].item .item-image.action-strike").on("click",(event=>{if(!("actions"in this.actor.data.data))throw Error("Strikes are not supported on this actor");const actionIndex=$(event.currentTarget).parents(".item").attr("data-action-index"),rollContext=createAttackRollContext(event,["all","attack-roll"]);this.actor.data.data.actions[Number(actionIndex)].roll(rollContext)})),html.find("[data-variant-index].variant-strike").on("click",(event=>{if(!("actions"in this.actor.data.data))throw Error("Strikes are not supported on this actor");event.stopImmediatePropagation();const actionIndex=$(event.currentTarget).parents(".item").attr("data-action-index"),variantIndex=$(event.currentTarget).attr("data-variant-index"),action=this.actor.data.data.actions[Number(actionIndex)];if(action.selectedAmmoId){const ammo=this.actor.getOwnedItem(action.selectedAmmoId);if(ammo instanceof physical_1.PhysicalItemPF2e){if(ammo.quantity<1)return void ui.notifications.error(game.i18n.localize("PF2E.ErrorMessage.NotEnoughAmmo"));ammo.consume()}}const rollContext=createAttackRollContext(event,["all","attack-roll"]);action.variants[Number(variantIndex)].roll(rollContext)}))}}exports.CreatureSheetPF2e=CreatureSheetPF2e},5164:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActorSheetPF2eDataEntryNPC=void 0;const base_1=__webpack_require__(5435);class ActorSheetPF2eDataEntryNPC extends base_1.ActorSheetPF2e{constructor(){super(...arguments),this.CUSTOM_TRAIT_SEPARATOR=new RegExp(/[,;|]+/g),this.CREATURE_TRAITS=CONFIG.PF2E.monsterTraits}static get defaultOptions(){const options=super.defaultOptions;return mergeObject(options,{classes:options.classes.concat(["npc","data-entry"])})}get template(){return"systems/pf2e/templates/actors/npc/data-entry-sheet.html"}prepareItems(_sheetData){}getData(){return Object.assign(Object.assign({},super.getData()),{app:{id:this.id},dataset:{alignment:CONFIG.PF2E.alignment,rarity:CONFIG.PF2E.rarityTraits,size:CONFIG.PF2E.actorSizes,traits:{creature:this.CREATURE_TRAITS}}})}activateListeners(html){super.activateListeners(html),html.on("keydown",`#${this.id}-actor-trait`,(event=>{var _a,_b;if(event&&event.key&&"enter"===event.key.toLowerCase()){const target=event.target,actor=null!==(_b=null===(_a=this.token)||void 0===_a?void 0:_a.actor)&&void 0!==_b?_b:this.actor,trait=target.value.trim();if(trait in this.CREATURE_TRAITS){const builtin=actor.data.data.traits.traits.value.filter((token=>!(token in CONFIG.PF2E.rarityTraits)));builtin.includes(trait)||actor.update({"data.traits.traits.value":builtin.concat(trait)})}else{const custom=actor.data.data.traits.traits.custom.split(this.CUSTOM_TRAIT_SEPARATOR).map((token=>token.trim())).filter((token=>!!token));custom.includes(trait)||actor.update({"data.traits.traits.custom":custom.concat(trait).join(",")})}target.value="",target.focus()}})),html.on("click",'.actor-traits.tags [data-trait]:not([data-trait=""]).tag',(event=>{var _a,_b;const actor=null!==(_b=null===(_a=this.token)||void 0===_a?void 0:_a.actor)&&void 0!==_b?_b:this.actor,trait=event.target.dataset.trait.trim(),builtin=actor.data.data.traits.traits.value.filter((t=>t.toLowerCase()!==trait.toLowerCase())),custom=actor.data.data.traits.traits.custom.split(this.CUSTOM_TRAIT_SEPARATOR).map((token=>token.trim())).filter((token=>!!token)).filter((token=>token.toLowerCase()!==trait.toLowerCase())).join(",");actor.update({"data.traits.traits.value":builtin,"data.traits.traits.custom":custom})}))}async _render(force,options){var _a;const focus=this.element.find(":focus").toArray().filter((element=>element instanceof HTMLInputElement)).map((element=>element)).filter((element=>!element.hasAttribute("name"))).find((_element=>!0));await super._render(force,options),focus&&focus.id&&(null===(_a=this.element.find(`#${focus.id}`).toArray()[0])||void 0===_a||_a.focus())}}exports.ActorSheetPF2eDataEntryNPC=ActorSheetPF2eDataEntryNPC},86:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FamiliarSheetPF2e=void 0;const base_1=__webpack_require__(9978);class FamiliarSheetPF2e extends ActorSheet{static get defaultOptions(){var _a;const options=super.defaultOptions;return mergeObject(options,{classes:null===(_a=options.classes)||void 0===_a?void 0:_a.concat("familiar"),width:650,height:680,tabs:[{navSelector:".sheet-navigation",contentSelector:".sheet-content",initial:"attributes"}]}),options}get template(){return"systems/pf2e/templates/actors/familiar-sheet.html"}getData(){var _a,_b,_c,_d;const familiar=this.actor,owners=Object.entries(familiar.data.permission).filter((([_id,permission])=>permission===CONST.ENTITY_PERMISSIONS.OWNER)).flatMap((([userID])=>{var _a;return null!==(_a=game.users.get(userID))&&void 0!==_a?_a:[]})),masters=game.actors.entities.filter((actor=>["character","npc"].includes(actor.data.type))).filter((actor=>actor.hasPerm(game.user,"OWNER"))).filter((actor=>owners.some((owner=>actor.hasPerm(owner,"OWNER"))))),abilities=CONFIG.PF2E.abilities,size=null!==(_a=CONFIG.PF2E.actorSizes[familiar.data.data.traits.size.value])&&void 0!==_a?_a:null,familiarAbilities=null!==(_d=null===(_c=null===(_b=this.actor.master)||void 0===_b?void 0:_b.attributes)||void 0===_c?void 0:_c.familiarAbilities)&&void 0!==_d?_d:{value:0,breakdown:""},familiarTraits=CONFIG.PF2E.monsterTraits,traitDescriptions=CONFIG.PF2E.traitsDescriptions,traits=Array.from(this.actor.data.data.traits.traits.value).map((trait=>{var _a,_b;return{value:trait,label:null!==(_a=familiarTraits[trait])&&void 0!==_a?_a:trait,description:null!==(_b=traitDescriptions[trait])&&void 0!==_b?_b:""}})).sort();return Object.assign(Object.assign({},super.getData()),{owners,master:this.actor.master,masters,abilities,size,familiarAbilities,traits})}activateListeners(html){super.activateListeners(html),html.find('[data-saving-throw]:not([data-saving-throw=""])').on("click","*",(event=>{const save=$(event.currentTarget).closest("[data-saving-throw]").attr("data-saving-throw"),options=this.actor.getRollOptions(["all","saving-throw",save]);this.actor.data.data.saves[save].roll(event,options)})),html.find('[data-skill-check]:not([data-skill-check=""])').on("click","*",(event=>{var _a;const skill=$(event.currentTarget).closest("[data-skill-check]").attr("data-skill-check"),options=this.actor.getRollOptions(["all","skill-check",null!==(_a=base_1.SKILL_DICTIONARY[skill])&&void 0!==_a?_a:skill]);this.actor.data.data.skills[skill].roll(event,options)})),html.find("[data-perception-check]").on("click","*",(event=>{const options=this.actor.getRollOptions(["all","perception"]);this.actor.attributes.perception.roll({event,options})})),html.find("[data-attack-roll]").on("click","*",(event=>{const options=this.actor.getRollOptions(["all","attack"]);this.actor.data.data.attack.roll(event,options)})),html.find(".item-list").on("click",".expandable",(event=>{$(event.currentTarget).removeClass("expandable").addClass("expanded")})),html.find(".item-list").on("click",".expanded",(event=>{$(event.currentTarget).removeClass("expanded").addClass("expandable")})),this.isEditable&&(html.find(".item-list").on("click",'[data-item-id]:not([data-item-id=""]) .item-edit',(event=>{const itemID=$(event.currentTarget).closest("[data-item-id]").attr("data-item-id"),item=this.actor.items.get(null!=itemID?itemID:"");item&&item.sheet.render(!0)})),html.find(".item-list").on("click",'[data-item-id]:not([data-item-id=""]) .item-delete',(event=>{var _a;const itemID=null!==(_a=$(event.currentTarget).closest("[data-item-id]").attr("data-item-id"))&&void 0!==_a?_a:"",item=this.actor.getOwnedItem(itemID);if(item)return new Dialog({title:`Remove ${item.type}?`,content:`<p>Are you sure you want to remove ${item.name}?</p>`,buttons:{delete:{icon:'<i class="fas fa-trash"></i>',label:"Remove",callback:()=>{this.actor.deleteOwnedItem(itemID)}},cancel:{icon:'<i class="fas fa-times"></i>',label:"Cancel"}},default:"cancel"}).render(!0),!1})))}}exports.FamiliarSheetPF2e=FamiliarSheetPF2e},858:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.HazardSheetPF2e=void 0;const base_1=__webpack_require__(5435),base_2=__webpack_require__(9978);class HazardSheetPF2e extends base_1.ActorSheetPF2e{static get defaultOptions(){const options=super.defaultOptions;return mergeObject(options,{classes:options.classes.concat("hazard"),width:650,height:680}),options}get template(){const path="systems/pf2e/templates/actors/";return this.actor.getFlag("pf2e","editHazard.value")?`${path}hazard-sheet.html`:`${path}hazard-sheet-no-edit.html`}getData(){var _a,_b,_c;const sheetData=super.getData();for(const[s,save]of Object.entries(sheetData.data.saves))save.label=CONFIG.PF2E.saves[s];return sheetData.flags=sheetData.actor.flags,void 0===sheetData.flags.editHazard&&(sheetData.flags.editHazard={value:!1}),sheetData.hazardTraits=CONFIG.PF2E.hazardTraits,sheetData.actorTraits=(sheetData.data.traits.traits||{}).value,sheetData.stealthDC=(null!==(_b=null===(_a=sheetData.data.attributes.stealth)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:0)+10,sheetData.hasStealthDescription=(null===(_c=sheetData.data.attributes.stealth)||void 0===_c?void 0:_c.details)||!1,sheetData.hasImmunities=!!sheetData.data.traits.di.value.length&&sheetData.data.traits.di.value,sheetData.hasResistances=!!sheetData.data.traits.dr.length&&Array.isArray(sheetData.data.traits.dr),sheetData.hasWeaknesses=!!sheetData.data.traits.dv.length&&Array.isArray(sheetData.data.traits.dv),sheetData.hasDescription=sheetData.data.details.description||!1,sheetData.hasDisable=sheetData.data.details.disable||!1,sheetData.hasRoutineDetails=sheetData.data.details.routine||!1,sheetData.hasResetDetails=sheetData.data.details.reset||!1,sheetData.hasHPDetails=sheetData.data.attributes.hp.details||!1,sheetData.hasWillSave=0!==sheetData.data.saves.will.value||!1,sheetData.brokenThreshold=Math.floor(sheetData.data.attributes.hp.max/2),sheetData}prepareItems(sheetData){const actorData=sheetData.actor,attacks={melee:{label:"NPC Melee Attack",items:[],type:"melee"},ranged:{label:"NPC Ranged Attack",items:[],type:"melee"}},actions={action:{label:"Actions",actions:[]},reaction:{label:"Reactions",actions:[]},free:{label:"Free Actions",actions:[]},passive:{label:"Passive Actions",actions:[]}};for(const i of actorData.items)if(i.img=i.img||CONST.DEFAULT_TOKEN,"melee"===i.type){const weaponType=(i.data.weaponType||{}).value||"melee",isAgile=(i.data.traits.value||[]).includes("agile");i.data.bonus.total=parseInt(i.data.bonus.value,10)||0,i.data.isAgile=isAgile;const traits=[];if(0!==(i.data.traits.value||[]).length)for(let j=0;j<i.data.traits.value.length;j++){const traitsObject={label:CONFIG.PF2E.weaponTraits[i.data.traits.value[j]]||i.data.traits.value[j].charAt(0).toUpperCase()+i.data.traits.value[j].slice(1),description:CONFIG.PF2E.traitsDescriptions[i.data.traits.value[j]]||""};traits.push(traitsObject)}i.traits=traits.filter((p=>!!p)),attacks[weaponType].items.push(i)}else if("action"===i.type){const actionType=i.data.actionType.value||"action";i.img=base_2.HazardPF2e.getActionGraphics(actionType,parseInt((i.data.actions||{}).value,10)||1).imageUrl;const traits=[];if(0!==(i.data.traits.value||[]).length)for(let j=0;j<i.data.traits.value.length;j++){const traitsObject={label:CONFIG.PF2E.weaponTraits[i.data.traits.value[j]]||i.data.traits.value[j].charAt(0).toUpperCase()+i.data.traits.value[j].slice(1),description:CONFIG.PF2E.traitsDescriptions[i.data.traits.value[j]]||""};traits.push(traitsObject)}i.data.actionType.value&&traits.push({label:CONFIG.PF2E.weaponTraits[i.data.actionType.value]||i.data.actionType.value.charAt(0).toUpperCase()+i.data.actionType.value.slice(1),description:CONFIG.PF2E.traitsDescriptions[i.data.actionType.value]||""}),i.traits=traits.filter((p=>!!p)),actions[actionType].actions.push(i)}actorData.actions=actions,actorData.attacks=attacks}activateListeners(html){super.activateListeners(html),html.find(".item .melee-name h4").on("click",(event=>{this.onItemSummary(event)})),html.find("button").on("click",(event=>{event.preventDefault(),event.stopPropagation();const itemId=$(event.currentTarget).parents(".item").attr("data-item-id"),item=this.actor.getOwnedItem(itemId);switch(event.target.dataset.action){case"weaponAttack":item.rollWeaponAttack(event);break;case"weaponAttack2":item.rollWeaponAttack(event,2);break;case"weaponAttack3":item.rollWeaponAttack(event,3);break;case"weaponDamage":item.rollWeaponDamage(event);break;case"weaponDamageCritical":item.rollWeaponDamage(event,!0);break;case"npcAttack":item.rollNPCAttack(event);break;case"npcAttack2":item.rollNPCAttack(event,2);break;case"npcAttack3":item.rollNPCAttack(event,3);break;case"npcDamage":item.rollNPCDamage(event);break;case"npcDamageCritical":item.rollNPCDamage(event,!0);break;case"spellAttack":item.rollSpellAttack(event);break;case"spellDamage":item.rollSpellDamage(event);break;case"consume":item.rollConsumable(event);break;default:throw new Error("Unknown action type")}})),this.options.editable&&html.find(".isHazardEditable").on("change",(event=>{this.actor.setFlag("pf2e","editHazard",{value:event.target.checked})}))}}exports.HazardSheetPF2e=HazardSheetPF2e},7500:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LootSheetPF2e=void 0;const treasure_1=__webpack_require__(4562),base_1=__webpack_require__(5435),bulk_1=__webpack_require__(6272),container_1=__webpack_require__(1482),distribute_coins_popup_1=__webpack_require__(9518),physical_1=__webpack_require__(315),data_definitions_1=__webpack_require__(6508),loot_npcs_popup_1=__webpack_require__(1267);class LootSheetPF2e extends base_1.ActorSheetPF2e{constructor(actor,options={}){super(actor,Object.assign(Object.assign({},options),{editable:!0})),this.inEditMode=!1}static get defaultOptions(){const options=super.defaultOptions;return mergeObject(options,{classes:options.classes.concat("loot"),width:650,height:680,tabs:[{navSelector:".sheet-navigation",contentSelector:".sheet-content",initial:"inventory"}]})}get template(){return this.inEditMode&&this.actor.owner?"systems/pf2e/templates/actors/loot-sheet.html":"systems/pf2e/templates/actors/loot-sheet-no-edit.html"}get isLootSheet(){return!this.actor.owner&&this.actor.isLootableBy(game.user)&&!this.inEditMode}getData(){const sheetData=super.getData();if(sheetData.inEditMode=this.inEditMode,void 0!==sheetData.actor.items){const treasure=treasure_1.calculateWealth(sheetData.actor.items);sheetData.totalTreasure={};for(const denomination of["cp","sp","gp","pp"])sheetData.totalTreasure[denomination]={value:treasure[denomination],label:CONFIG.PF2E.currencies[denomination]}}return void 0===this.actor.getFlag("pf2e","editLoot.value")&&this.actor.setFlag("pf2e","editLoot",{value:!1}),sheetData.isLoot="Loot"===this.actor.data.data.lootSheetType,sheetData.isShop=!sheetData.isLoot,this.prepareItems(sheetData),sheetData.isGM=game.user.isGM,sheetData}activateListeners(html){super.activateListeners(html),this.options.editable&&(html.find(".split-coins").removeAttr("disabled").on("click",(event=>this._distributeCoins(event))),html.find(".loot-npcs").removeAttr("disabled").on("click",(event=>this._lootNPCs(event))),html.find("input.editMode").on("change",(event=>{const checkbox=event.delegateTarget;checkbox.checked!=this.inEditMode&&(this.inEditMode=checkbox.checked,this.render(!1))})))}async close(options){this.inEditMode=!1,super.close(options)}prepareItems(sheetData){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m;const actorData=sheetData.actor,inventory={weapon:{label:game.i18n.localize("PF2E.InventoryWeaponsHeader"),items:[]},armor:{label:game.i18n.localize("PF2E.InventoryArmorHeader"),items:[]},equipment:{label:game.i18n.localize("PF2E.InventoryEquipmentHeader"),items:[]},consumable:{label:game.i18n.localize("PF2E.InventoryConsumablesHeader"),items:[]},treasure:{label:game.i18n.localize("PF2E.InventoryTreasureHeader"),items:[]},backpack:{label:game.i18n.localize("PF2E.InventoryBackpackHeader"),items:[]}},bulkConfig={ignoreCoinBulk:game.settings.get("pf2e","ignoreCoinBulk"),ignoreContainerOverflow:game.settings.get("pf2e","ignoreContainerOverflow")},bulkItems=bulk_1.itemsFromActorData(actorData),bulkItemsById=bulk_1.indexBulkItemsById(bulkItems),containers=container_1.getContainerMap({items:actorData.items,bulkItemsById,bulkConfig});for(const i of actorData.items)if(i.identified=!data_definitions_1.isPhysicalItem(i)||physical_1.PhysicalItemPF2e.isIdentified(i),i.showGMInfo=game.user.isGM,i.showEdit=i.showGMInfo||i.identified&&this.actor.owner,i.img=i.img||CONST.DEFAULT_TOKEN,i.containerData=containers.get(i._id),i.isContainer=i.containerData.isContainer,i.isNotInContainer=i.containerData.isNotInContainer,i.canBeEquipped=i.isNotInContainer,i.isEquipped=null!==(_c=null===(_b=null===(_a=i.data)||void 0===_a?void 0:_a.equipped)||void 0===_b?void 0:_b.value)&&void 0!==_c&&_c,i.isSellableTreasure="treasure"===i.type&&"coins"!==(null===(_e=null===(_d=i.data)||void 0===_d?void 0:_d.stackGroup)||void 0===_e?void 0:_e.value),i.hasInvestedTrait=null!==(_j=null===(_h=null===(_g=null===(_f=i.data)||void 0===_f?void 0:_f.traits)||void 0===_g?void 0:_g.value)||void 0===_h?void 0:_h.includes("invested"))&&void 0!==_j&&_j,i.isInvested=null!==(_m=null===(_l=null===(_k=i.data)||void 0===_k?void 0:_k.invested)||void 0===_l?void 0:_l.value)&&void 0!==_m&&_m,Object.keys(inventory).includes(i.type)){i.data.quantity.value=i.data.quantity.value||0,i.data.weight.value=i.data.weight.value||0;const bulkItem=bulkItemsById.get(i._id),[approximatedBulk]=bulk_1.calculateBulk({items:void 0===bulkItem?[]:[bulkItem],bulkConfig});i.totalWeight=bulk_1.formatBulk(approximatedBulk),i.hasCharges="consumable"===i.type&&i.data.charges.max>0,i.isTwoHanded="weapon"===i.type&&!!(i.data.traits.value||[]).find((x=>x.startsWith("two-hand"))),i.wieldedTwoHanded="weapon"===i.type&&(i.data.hands||{}).value,inventory[i.type].items.push(i)}actorData.inventory=inventory}_distributeCoins(event){event.preventDefault(),new distribute_coins_popup_1.DistributeCoinsPopup(this.actor,{}).render(!0)}_lootNPCs(event){var _a,_b;event.preventDefault(),(null===(_b=null===(_a=null===canvas||void 0===canvas?void 0:canvas.tokens)||void 0===_a?void 0:_a.controlled)||void 0===_b?void 0:_b.filter((token=>token.actor._id!==this.actor._id)).length)>0?new loot_npcs_popup_1.LootNPCsPopup(this.actor,{}).render(!0):ui.notifications.warn("No tokens selected.")}async _onDropItem(event,data){return this.actor.id!==data.actorId||this.actor.hasPerm(game.user,"OWNER")?super._onDropItem(event,data):null}}exports.LootSheetPF2e=LootSheetPF2e},1267:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LootNPCsPopup=void 0;const physical_1=__webpack_require__(315),base_1=__webpack_require__(9978);class LootNPCsPopup extends FormApplication{static get defaultOptions(){const options=super.defaultOptions;return options.id="loot-NPCs",options.classes=[],options.title="Loot NPCs",options.template="systems/pf2e/templates/actors/loot/loot-npcs-popup.html",options.width="auto",options}activateListeners(html){super.activateListeners(html)}async _updateObject(_event,formData){const itemData=[],selectionData=Array.isArray(formData.selection)?formData.selection:[formData.selection];for(let i=0;i<selectionData.length;i++){const token=canvas.tokens.placeables.find((token=>{var _a;return token.id===(null===(_a=this.form[i])||void 0===_a?void 0:_a.id)})),currentSource=token instanceof Token?base_1.ActorPF2e.fromToken(token):void 0;if(selectionData[i]&&currentSource){const currentSourceItemData=Array.from(currentSource.items.values()).flatMap((item=>item instanceof physical_1.PhysicalItemPF2e?item._data:[]));itemData.push(...duplicate(currentSourceItemData));const idsToDelete=currentSourceItemData.map((item=>item._id));currentSource.deleteEmbeddedEntity("OwnedItem",idsToDelete)}}itemData.length>0&&this.object.createEmbeddedEntity("OwnedItem",itemData)}getData(){const sheetData=super.getData();sheetData.tokenInfo=[];const selectedTokens=canvas.tokens.controlled.filter((token=>{var _a;return(null===(_a=token.actor)||void 0===_a?void 0:_a._id)!==this.object._id}));for(let i=0;i<selectedTokens.length;i++)sheetData.tokenInfo.push({id:selectedTokens[i].id,name:selectedTokens[i].name,checked:!selectedTokens[i].actor.hasPlayerOwner});return sheetData}}exports.LootNPCsPopup=LootNPCsPopup},4534:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MoveLootPopup=void 0;class MoveLootPopup extends FormApplication{constructor(object,options,callback){super(object,options),this.onSubmitCallback=callback}getData(){return Object.assign(Object.assign({},super.getData()),{maxQuantity:this.options.maxQuantity})}static get defaultOptions(){const options=super.defaultOptions;return options.id="MoveLootPopup",options.classes=[],options.title=game.i18n.localize("PF2E.loot.MoveLootPopupTitle"),options.template="systems/pf2e/templates/popups/loot/move-loot-popup.html",options.width="auto",options}activateListeners(html){super.activateListeners(html)}async _updateObject(_event,formData){this.onSubmitCallback&&this.onSubmitCallback(formData.quantity)}}exports.MoveLootPopup=MoveLootPopup},4278:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.NPCSheetPF2e=void 0;const creature_1=__webpack_require__(4498),base_1=__webpack_require__(9978),npc_1=__webpack_require__(5975),recall_knowledge_1=__webpack_require__(3055),recall_knowledge_popup_1=__webpack_require__(5332);class NPCSheetPF2e extends creature_1.CreatureSheetPF2e{static get defaultOptions(){const options=super.defaultOptions;return mergeObject(options,{classes:options.classes.concat("npc-sheet"),width:650,height:680,showUnpreparedSpells:!0}),options}get template(){return"systems/pf2e/templates/actors/npc-sheet.html"}getData(){const sheetData=super.getData();sheetData.monsterTraits=CONFIG.PF2E.monsterTraits;const proficiencyWithoutLevel="ProficiencyWithoutLevel"===game.settings.get("pf2e","proficiencyVariant"),identifyCreatureData=recall_knowledge_1.identifyCreature(sheetData,{proficiencyWithoutLevel});return sheetData.identifyCreatureData=identifyCreatureData,sheetData.identifySkillDC=identifyCreatureData.skill.dc,sheetData.identifySkillAdjustment=CONFIG.PF2E.dcAdjustments[identifyCreatureData.skill.start],sheetData.identifySkillProgression=identifyCreatureData.skill.progression.join("/"),sheetData.identificationSkills=Array.from(identifyCreatureData.skills).sort().map((skillAcronym=>CONFIG.PF2E.skills[skillAcronym])),sheetData.specificLoreDC=identifyCreatureData.specificLoreDC.dc,sheetData.specificLoreAdjustment=CONFIG.PF2E.dcAdjustments[identifyCreatureData.specificLoreDC.start],sheetData.specificLoreProgression=identifyCreatureData.specificLoreDC.progression.join("/"),sheetData.unspecificLoreDC=identifyCreatureData.unspecificLoreDC.dc,sheetData.unspecificLoreAdjustment=CONFIG.PF2E.dcAdjustments[identifyCreatureData.unspecificLoreDC.start],sheetData.unspecificLoreProgression=identifyCreatureData.unspecificLoreDC.progression.join("/"),sheetData}prepareItems(sheetData){const actorData=sheetData.actor,attacks={melee:{label:"NPC Melee Attack",prefix:"PF2E.NPCAttackMelee",items:[],type:"melee"},ranged:{label:"NPC Ranged Attack",prefix:"PF2E.NPCAttackRanged",items:[],type:"melee"}},actions={action:{label:"Actions",actions:[]},reaction:{label:"Reactions",actions:[]},free:{label:"Free Actions",actions:[]},passive:{label:"Passive Actions",actions:[]}},tempSpellbook=[],spellcastingEntriesList=[],spellbooks=[];spellbooks.unassigned={};const spellcastingEntries=[],lores=[];for(const i of actorData.items)if(i.img=i.img||CONST.DEFAULT_TOKEN,"spell"===i.type)tempSpellbook.push(i);else if("spellcastingEntry"===i.type)spellcastingEntriesList.push(i._id),"prepared"===(i.data.prepared||{}).value?i.data.prepared.preparedSpells=!0:i.data.prepared.preparedSpells=!1,"ritual"===(i.data.tradition||{}).value?i.data.tradition.ritual=!0:i.data.tradition.ritual=!1,i.data.spelldc.dc=Number(i.data.spelldc.dc),i.data.spelldc.value=Number(i.data.spelldc.value),this.actor.data.data.traits.traits.value.some((trait=>"elite"===trait))?(i.data.spelldc.dc+=2,i.data.spelldc.value+=2):this.actor.data.data.traits.traits.value.some((trait=>"weak"===trait))&&(i.data.spelldc.dc-=2,i.data.spelldc.value-=2),spellcastingEntries.push(i);else if("weapon"===i.type);else if("melee"===i.type){const weaponType=(i.data.weaponType||{}).value||"melee",isAgile=(i.data.traits.value||[]).includes("agile");i.data.bonus.total=parseInt(i.data.bonus.value,10)||0,i.data.isAgile=isAgile;const traits=[];if(0!==(i.data.traits.value||[]).length)for(let j=0;j<i.data.traits.value.length;j++){const traitsObject={label:CONFIG.PF2E.weaponTraits[i.data.traits.value[j]]||i.data.traits.value[j].charAt(0).toUpperCase()+i.data.traits.value[j].slice(1),description:CONFIG.PF2E.traitsDescriptions[i.data.traits.value[j]]||""};traits.push(traitsObject)}i.traits=traits.filter((p=>!!p)),attacks[weaponType].items.push(i)}else if("action"===i.type){const actionType=i.data.actionType.value||"action";i.img=npc_1.NPCPF2e.getActionGraphics(actionType,parseInt((i.data.actions||{}).value,10)||1).imageUrl;const traits=[];if(0!==(i.data.traits.value||[]).length)for(let j=0;j<i.data.traits.value.length;j++){const traitsObject={label:CONFIG.PF2E.weaponTraits[i.data.traits.value[j]]||i.data.traits.value[j].charAt(0).toUpperCase()+i.data.traits.value[j].slice(1),description:CONFIG.PF2E.traitsDescriptions[i.data.traits.value[j]]||""};traits.push(traitsObject)}i.data.actionType.value&&traits.push({label:CONFIG.PF2E.weaponTraits[i.data.actionType.value]||i.data.actionType.value.charAt(0).toUpperCase()+i.data.actionType.value.slice(1),description:CONFIG.PF2E.traitsDescriptions[i.data.actionType.value]||""}),i.traits=traits.filter((p=>!!p)),actions[actionType].actions.push(i)}else if("feat"===i.type){const actionType=i.data.actionType.value||"passive";Object.keys(actions).includes(actionType)&&(i.feat=!0,i.img=npc_1.NPCPF2e.getActionGraphics(actionType,parseInt((i.data.actions||{}).value,10)||1).imageUrl,actions[actionType].actions.push(i))}else"lore"===i.type&&lores.push(i);const embeddedEntityUpdate=[];for(const i of tempSpellbook){const spellType=i.data.time.value;if("reaction"===spellType?i.img=npc_1.NPCPF2e.getActionGraphics("reaction").imageUrl:"free"===spellType?i.img=npc_1.NPCPF2e.getActionGraphics("free").imageUrl:parseInt(spellType,10)&&(i.img=npc_1.NPCPF2e.getActionGraphics("action",parseInt(spellType,10)).imageUrl),spellcastingEntriesList.includes(i.data.location.value)){const location=i.data.location.value;spellbooks[location]=spellbooks[location]||{},this.prepareSpell(actorData,spellbooks[location],i)}else if(1===spellcastingEntriesList.length){const location=spellcastingEntriesList[0];spellbooks[location]=spellbooks[location]||{},embeddedEntityUpdate.push({_id:i._id,"data.location.value":spellcastingEntriesList[0]}),this.prepareSpell(actorData,spellbooks[location],i)}else this.prepareSpell(actorData,spellbooks.unassigned,i)}embeddedEntityUpdate.length&&(console.log("PF2e System | Prepare Actor Data | Updating location for the following embedded entities: ",embeddedEntityUpdate),this.actor.updateEmbeddedEntity("OwnedItem",embeddedEntityUpdate),ui.notifications.info("PF2e actor data migration for orphaned spells applied. Please close actor and open again for changes to take affect.")),actorData.actions=actions,actorData.attacks=attacks,actorData.lores=lores,Object.keys(spellbooks.unassigned).length&&(actorData.orphanedSpells=!0,actorData.orphanedSpellbook=spellbooks.unassigned);for(const entry of spellcastingEntries)entry.data.prepared.preparedSpells&&spellbooks[entry._id]&&this.preparedSpellSlots(entry,spellbooks[entry._id]),entry.spellbook=spellbooks[entry._id];actorData.spellcastingEntries=spellcastingEntries}activateListeners(html){super.activateListeners(html),html.find(".item .melee-name h4").on("click",(event=>{this.onItemSummary(event)})),html.find("button:not(.recall-knowledge-breakdown)").on("click",(ev=>{ev.preventDefault(),ev.stopPropagation();const itemId=$(ev.currentTarget).parents(".item").attr("data-item-id"),item=this.actor.getOwnedItem(itemId);switch(ev.target.dataset.action){case"weaponAttack":item.rollWeaponAttack(ev);break;case"weaponAttack2":item.rollWeaponAttack(ev,2);break;case"weaponAttack3":item.rollWeaponAttack(ev,3);break;case"weaponDamage":item.rollWeaponDamage(ev);break;case"weaponDamageCritical":item.rollWeaponDamage(ev,!0);break;case"npcAttack":item.rollNPCAttack(ev);break;case"npcAttack2":item.rollNPCAttack(ev,2);break;case"npcAttack3":item.rollNPCAttack(ev,3);break;case"npcDamage":item.rollNPCDamage(ev);break;case"npcDamageCritical":item.rollNPCDamage(ev,!0);break;case"spellAttack":item.rollSpellAttack(ev);break;case"spellDamage":item.rollSpellDamage(ev);break;case"consume":item.rollConsumable(ev);break;default:throw new Error("Unknown action type")}})),this.options.editable&&(html.find(".item .npc-skill-name").on("click",(event=>{var _a,_b;event.preventDefault();const shortform=$(event.currentTarget).parents(".item").attr("data-skill"),opts=this.actor.getRollOptions(["all","skill-check",null!==(_a=base_1.SKILL_DICTIONARY[shortform])&&void 0!==_a?_a:shortform]),extraOptions=$(event.currentTarget).parents(".item").attr("data-options");if(extraOptions){const split=extraOptions.split(",").map((o=>o.trim())).filter((o=>!!o));opts.push(...split)}null===(_b=this.actor.data.data.skills[shortform])||void 0===_b||_b.roll({event,options:opts})})),html.find(".skill-input").on("change",(async event=>{const itemId=event.target.attributes["data-item-id"].value;await this.actor.updateEmbeddedEntity("OwnedItem",{_id:itemId,"data.mod.value":Number(event.target.value)})})),html.find(".spelldc-input").on("change",(async event=>{var _a,_b;event.preventDefault();const itemId=null!==(_a=$(event.currentTarget).parents(".item-container").attr("data-container-id"))&&void 0!==_a?_a:"",spelldcType=null!==(_b=$(event.currentTarget).parents(".npc-defense").attr("data-spelldc-attribute"))&&void 0!==_b?_b:"";["dc","value"].includes(spelldcType)?await this.actor.updateEmbeddedEntity("OwnedItem",{_id:itemId,[`data.spelldc.${spelldcType}`]:Number(event.target.value)}):"ability"===spelldcType&&await this.actor.updateEmbeddedEntity("OwnedItem",{_id:itemId,"data.ability.value":event.target.value})})),html.find(".recall-knowledge-breakdown").on("click",(event=>{event.preventDefault();const{identifyCreatureData}=this.getData();new recall_knowledge_popup_1.RecallKnowledgePopup(identifyCreatureData).render(!0)})))}}exports.NPCSheetPF2e=NPCSheetPF2e},1441:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AddCoinsPopup=void 0;const treasure_1=__webpack_require__(4562);class AddCoinsPopup extends FormApplication{static get defaultOptions(){const options=super.defaultOptions;return options.id="add-coins",options.classes=[],options.title="Add Coins",options.template="systems/pf2e/templates/actors/add-coins.html",options.width="auto",options}async _updateObject(_event,formData){const actor=this.object;treasure_1.addCoins(actor,{coins:{pp:formData.pp,gp:formData.gp,sp:formData.sp,cp:formData.cp},combineStacks:formData.combineStacks})}}exports.AddCoinsPopup=AddCoinsPopup},9518:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.DistributeCoinsPopup=void 0;const treasure_1=__webpack_require__(4562),base_1=__webpack_require__(9978),character_1=__webpack_require__(3919);class DistributeCoinsPopup extends FormApplication{static get defaultOptions(){const options=super.defaultOptions;return options.id="distribute-coins",options.classes=[],options.title="Distribute Coins",options.template="systems/pf2e/templates/actors/distribute-coins.html",options.width="auto",options}async _updateObject(_event,formData){var e_1,_a;const thisActor=this.object,selectedActors=formData.actorIds.flatMap((actorId=>{const maybeActor=game.actors.get(actorId);return maybeActor instanceof character_1.CharacterPF2e?maybeActor:[]})),playerCount=selectedActors.length;if(thisActor instanceof base_1.ActorPF2e){const coinShare={pp:0,gp:0,sp:0,cp:0},thisActorCurrency=treasure_1.calculateValueOfCurrency(thisActor.items.map((item=>item.data)));if(formData.breakCoins){const thisActorCopperValue=thisActorCurrency.cp+10*thisActorCurrency.sp+100*thisActorCurrency.gp+1e3*thisActorCurrency.pp,copperToDistribute=Math.trunc(thisActorCopperValue/playerCount);if(0===copperToDistribute)return void ui.notifications.warn("Nothing to distribute");treasure_1.attemptToRemoveCoinsByValue({actor:thisActor,coinsToRemove:{pp:0,gp:0,sp:0,cp:copperToDistribute*playerCount}}),coinShare.cp=copperToDistribute%10,coinShare.sp=Math.trunc(copperToDistribute/10)%10,coinShare.gp=Math.trunc(copperToDistribute/100)%10,coinShare.pp=Math.trunc(copperToDistribute/1e3)}else{if(coinShare.pp=Math.trunc(thisActorCurrency.pp/playerCount),coinShare.cp=Math.trunc(thisActorCurrency.cp/playerCount),coinShare.gp=Math.trunc(thisActorCurrency.gp/playerCount),coinShare.sp=Math.trunc(thisActorCurrency.sp/playerCount),0===coinShare.pp&&0===coinShare.gp&&0===coinShare.sp&&0===coinShare.cp)return void ui.notifications.warn("Nothing to distribute");treasure_1.removeCoins(thisActor,{coins:{pp:coinShare.pp*playerCount,gp:coinShare.gp*playerCount,sp:coinShare.sp*playerCount,cp:coinShare.cp*playerCount}})}let message="Distributed ";0!==coinShare.pp&&(message+=`${coinShare.pp} pp `),0!==coinShare.gp&&(message+=`${coinShare.gp} gp `),0!==coinShare.sp&&(message+=`${coinShare.sp} sp `),0!==coinShare.cp&&(message+=`${coinShare.cp} cp `);message+=`${playerCount>1?"each ":""}from ${thisActor.name} to `;try{for(var selectedActors_1_1,selectedActors_1=__asyncValues(selectedActors);!(selectedActors_1_1=await selectedActors_1.next()).done;){const actor=selectedActors_1_1.value;await treasure_1.addCoins(actor,{coins:coinShare,combineStacks:!0});const index=selectedActors.indexOf(actor);message+=0===index?`${actor.name}`:index<playerCount-1?`, ${actor.name}`:` and ${actor.name}.`}}catch(e_1_1){e_1={error:e_1_1}}finally{try{selectedActors_1_1&&!selectedActors_1_1.done&&(_a=selectedActors_1.return)&&await _a.call(selectedActors_1)}finally{if(e_1)throw e_1.error}}ChatMessage.create({user:game.user.id,type:CONST.CHAT_MESSAGE_TYPES.OTHER,content:message})}}async _onSubmit(event,options={}){var _a;const actorIds=Array.from(this.form.elements).flatMap((element=>element instanceof HTMLInputElement&&"actorIds"===element.name&&element.checked?element.value:[]));return options.updateData=mergeObject(null!==(_a=options.updateData)&&void 0!==_a?_a:{},{actorIds}),super._onSubmit(event,options)}getData(){const sheetData=super.getData(),playerActors=game.actors.filter((actor=>actor.hasPlayerOwner&&actor instanceof character_1.CharacterPF2e));return sheetData.actorInfo=playerActors.map((actor=>({id:actor.id,name:actor.name,checked:game.users.players.some((user=>{var _a;return user.active&&(null===(_a=user.character)||void 0===_a?void 0:_a.id)===actor.id}))}))),sheetData}}exports.DistributeCoinsPopup=DistributeCoinsPopup},173:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.IdentifyItemPopup=void 0;const identification_1=__webpack_require__(5881),physical_1=__webpack_require__(315),utils_1=__webpack_require__(4930);class IdentifyItemPopup extends FormApplication{static get defaultOptions(){return Object.assign(Object.assign({},super.defaultOptions),{id:"identify-item",title:game.i18n.localize("PF2E.identification.Identify"),template:"systems/pf2e/templates/actors/identify-item.html",width:"auto",classes:["identify-popup"]})}activateListeners(html){super.activateListeners(html),html.find(".identify").on("click",(()=>{this.getItem().setIdentifiedState("identified")})),html.find(".misidentify").on("click",(()=>{this.getItem().setIdentifiedState("misidentified")}))}async _updateObject(_event,_formData){}getData(){const item=this.getItem(),notMatchingTraditionModifier=game.settings.get("pf2e","identifyMagicNotMatchingTraditionModifier"),proficiencyWithoutLevel="ProficiencyWithoutLevel"===game.settings.get("pf2e","proficiencyVariant"),dcs=identification_1.identifyItem(item.data,{proficiencyWithoutLevel,notMatchingTraditionModifier});return Object.assign(Object.assign({},super.getData()),{isMagic:dcs instanceof identification_1.IdentifyMagicDCs,isAlchemical:dcs instanceof identification_1.IdentifyAlchemyDCs,dcs})}getItem(){const{itemId}=this.options,item=this.object.getOwnedItem(itemId);if(!item)throw utils_1.ErrorPF2e(`Could not load item with id: ${itemId} for identification`);if(!(item instanceof physical_1.PhysicalItemPF2e))throw utils_1.ErrorPF2e(`${item.name} is not a physical item.`);return item}}exports.IdentifyItemPopup=IdentifyItemPopup},2823:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ManageCombatProficiencies=void 0;const localize_1=__webpack_require__(1608);exports.ManageCombatProficiencies={add:async function(actor,event){const translations=localize_1.LocalizePF2e.translations.PF2E,weaponGroups=CONFIG.PF2E.weaponGroups,baseWeapons=translations.Weapon.Base,template=await renderTemplate("systems/pf2e/templates/actors/add-combat-proficiency-dialog.html",{message:translations.AddCombatProficiency.Message,weaponGroups,baseWeapons});new Dialog({title:localize_1.LocalizePF2e.translations.PF2E.AddCombatProficiency.Title,content:template,buttons:{add:{icon:'<i class="fas fa-check"></i>',label:localize_1.LocalizePF2e.translations.PF2E.AddShortLabel,callback:async $dialog=>{const selection=$dialog.find('select[name="proficiency"]').val();if("string"==typeof selection&&""!=selection){const proficiencyKey=selection in weaponGroups?`weapon-group-${selection}`:`weapon-base-${selection}`;await actor.addCombatProficiency(proficiencyKey);const $tab=$(event.currentTarget).closest(".tab.skills");$tab.animate({scrollTop:$tab.height()},"slow")}}},cancel:{icon:'<i class="fas fa-times"></i>',label:game.i18n.localize("Cancel")}},default:"cancel"}).render(!0)},remove:function(actor,event){const weaponGroups=CONFIG.PF2E.weaponGroups,baseWeapons=localize_1.LocalizePF2e.translations.PF2E.Weapon.Base,key=$(event.currentTarget).closest("li.skill.custom").data("skill"),translationKey=key.replace(/^weapon-(?:base|group)-/,""),name=translationKey in weaponGroups?weaponGroups[translationKey]:baseWeapons[translationKey],dialogText=localize_1.LocalizePF2e.translations.PF2E.RemoveCombatProficiency,message=game.i18n.format(dialogText.Message,{proficiency:name});Dialog.confirm({title:dialogText.Title,content:`<p>${message}</p>`,defaultYes:!1,yes:()=>{key in actor.data.data.martial&&actor.removeCombatProficiency(key)}})}}},5332:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RecallKnowledgePopup=void 0;const utils_1=__webpack_require__(4930);class RecallKnowledgePopup extends Application{static get defaultOptions(){const options=super.defaultOptions;return options.id="recall-knowledge-breakdown",options.classes=[],options.title=game.i18n.localize("PF2E.RecallKnowledge.BreakdownTitle"),options.template="systems/pf2e/templates/actors/recall-knowledge.html",options.width=630,options}getData(){const data=this.options;return{specificLoreAttempts:this.padAttempts(data.specificLoreDC.progression),unspecificLoreAttempts:this.padAttempts(data.unspecificLoreDC.progression),skills:Array.from(data.skills).sort().map((skill=>({name:CONFIG.PF2E.skills[skill],attempts:this.padAttempts(data.skill.progression)})))}}padAttempts(attempts){return utils_1.padArray(attempts.map((attempt=>attempt.toString())),6,"-")}}exports.RecallKnowledgePopup=RecallKnowledgePopup},3073:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RemoveCoinsPopup=void 0;const treasure_1=__webpack_require__(4562);class RemoveCoinsPopup extends FormApplication{static get defaultOptions(){const options=super.defaultOptions;return options.id="remove-coins",options.classes=[],options.title="Remove Coins",options.template="systems/pf2e/templates/actors/remove-coins.html",options.width="auto",options}async _updateObject(_event,formData){const actor=this.object,coinsToRemove={pp:formData.pp,gp:formData.gp,sp:formData.sp,cp:formData.cp};if(formData.removeByValue)await treasure_1.attemptToRemoveCoinsByValue({actor,coinsToRemove})||ui.notifications.warn("Insufficient coins");else{const actorCoins=treasure_1.calculateValueOfCurrency(actor.items.map((item=>item.data)));coinsToRemove.pp<=actorCoins.pp&&coinsToRemove.gp<=actorCoins.gp&&coinsToRemove.sp<=actorCoins.sp&&coinsToRemove.cp<=actorCoins.cp?treasure_1.removeCoins(actor,{coins:coinsToRemove}):ui.notifications.warn("Insufficient coins")}}}exports.RemoveCoinsPopup=RemoveCoinsPopup},1364:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ScrollWandPopup=void 0;class ScrollWandPopup extends FormApplication{constructor(object,options,callback,spellData){super(object,options),this.spellData=spellData,this.onSubmitCallback=callback}static get defaultOptions(){const options=super.defaultOptions;return options.classes=[],options.title=game.i18n.localize("PF2E.ScrollWandPopup.title"),options.template="systems/pf2e/templates/popups/scroll-wand-popup.html",options.width="auto",options}getData(){const sheetData=super.getData();if(sheetData.validLevels=[],!this.spellData)throw Error("PF2E | ScrollWandPopup | Could not read spelldata");for(let i=this.spellData.data.level.value;i<=10;i++)sheetData.validLevels.push(i);return sheetData}async _updateObject(_event,formData){"wand"===formData.itemType&&10===formData.level?ui.notifications.warn(game.i18n.localize("PF2E.ScrollWandPopup.10thLevelWand")):this.onSubmitCallback&&this.spellData&&this.onSubmitCallback(formData.level,formData.itemType,this.spellData)}}exports.ScrollWandPopup=ScrollWandPopup},4062:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActorSheetPF2eSimpleNPC=void 0;const creature_1=__webpack_require__(4498),dice_1=__webpack_require__(1459),base_1=__webpack_require__(9978),npc_skills_editor_1=__webpack_require__(6159),recall_knowledge_1=__webpack_require__(3055),physical_1=__webpack_require__(315),utils_1=__webpack_require__(4930);class ActorSheetPF2eSimpleNPC extends creature_1.CreatureSheetPF2e{static get defaultOptions(){const options=super.defaultOptions;return mergeObject(options,{classes:options.classes.concat("npc"),width:650,height:680,showUnpreparedSpells:!0,tabs:[{navSelector:".sheet-tabs",contentSelector:".sheet-body",initial:"main"}],scrollY:[".tab.main",".tab.inventory",".tab.spells",".tab.notes"]}),options}get template(){return this.isLootSheet?"systems/pf2e/templates/actors/npc/loot-sheet.html":"systems/pf2e/templates/actors/npc/npc-sheet.html"}get title(){var _a,_b;if(this.isLootSheet){return`${null!==(_b=null===(_a=this.token)||void 0===_a?void 0:_a.name)&&void 0!==_b?_b:this.actor.name} [${game.i18n.localize("PF2E.NPC.Dead")}]`}return super.title}get isLootSheet(){return game.settings.get("pf2e","automation.lootableNPCs")&&!this.actor.owner&&this.actor.isLootableBy(game.user)}prepareItems(sheetData){this.prepareAbilities(sheetData.data.abilities),this.prepareSize(sheetData.data),this.prepareAlignment(sheetData.data),this.preparePerception(sheetData.data),this.prepareSkills(sheetData.data),this.prepareSpeeds(sheetData.data),this.prepareSaves(sheetData.data),this.prepareActions(sheetData),sheetData.attacks=this.prepareAttacks(sheetData.data),sheetData.conditions=sheetData.items.filter((data=>"condition"===data.type)),sheetData.effects=sheetData.items.filter((data=>"effect"===data.type)),sheetData.spellcastingEntries=this.prepareSpellcasting(sheetData)}getData(){var _a,_b,_c,_d;const sheetData=super.getData(),proficiencyWithoutLevel="ProficiencyWithoutLevel"===game.settings.get("pf2e","proficiencyVariant"),identifyCreatureData=recall_knowledge_1.identifyCreature(sheetData,{proficiencyWithoutLevel});sheetData.identifyCreatureData=identifyCreatureData,sheetData.identifySkillDC=identifyCreatureData.skill.dc,sheetData.identifySkillAdjustment=CONFIG.PF2E.dcAdjustments[identifyCreatureData.skill.start],sheetData.identifySkillProgression=identifyCreatureData.skill.progression.join("/"),sheetData.identificationSkills=Array.from(sheetData.identifyCreatureData.skills).sort().map((skillAcronym=>CONFIG.PF2E.skills[skillAcronym])),sheetData.specificLoreDC=identifyCreatureData.specificLoreDC.dc,sheetData.specificLoreAdjustment=CONFIG.PF2E.dcAdjustments[identifyCreatureData.specificLoreDC.start],sheetData.specificLoreProgression=identifyCreatureData.specificLoreDC.progression.join("/"),sheetData.unspecificLoreDC=identifyCreatureData.unspecificLoreDC.dc,sheetData.unspecificLoreAdjustment=CONFIG.PF2E.dcAdjustments[identifyCreatureData.unspecificLoreDC.start],sheetData.unspecificLoreProgression=identifyCreatureData.unspecificLoreDC.progression.join("/"),sheetData.isNotCommon="common"!==sheetData.data.traits.rarity.value,sheetData.actorSize=CONFIG.PF2E.actorSizes[sheetData.data.traits.size.value],sheetData.actorAttitudes=CONFIG.PF2E.attitude,sheetData.actorAttitude=sheetData.actorAttitudes[null!==(_b=null===(_a=sheetData.data.traits.attitude)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:"indifferent"],sheetData.traits=this.prepareOptions(CONFIG.PF2E.monsterTraits,sheetData.data.traits.traits),sheetData.immunities=this.prepareOptions(CONFIG.PF2E.immunityTypes,sheetData.data.traits.di),sheetData.languages=this.prepareOptions(CONFIG.PF2E.languages,sheetData.data.traits.languages),sheetData.inventory=this.prepareInventory(sheetData);const shield=this.actor.heldShield,actorShieldData=sheetData.data.attributes.shield;shield?(sheetData.hasShield=!0,sheetData.data.attributes.shieldBroken=shield.isBroken):actorShieldData.max>0&&(sheetData.hasShield=!0,sheetData.data.attributes.shieldBroken=actorShieldData.value>actorShieldData.max/2);const isElite=this.isElite,isWeak=this.isWeak;if(sheetData.isElite=isElite,sheetData.isWeak=isWeak,sheetData.notAdjusted=!isElite&&!isWeak,isElite&&isWeak)throw utils_1.ErrorPF2e("NPC is both, Elite and Weak at the same time.");return isElite?(sheetData.eliteState="active",sheetData.weakState="inactive"):isWeak?(sheetData.eliteState="inactive",sheetData.weakState="active"):(sheetData.eliteState="inactive",sheetData.weakState="inactive"),this.isLootSheet&&(sheetData.actor.name=null!==(_d=null===(_c=this.token)||void 0===_c?void 0:_c.name)&&void 0!==_d?_d:this.actor.name),sheetData}activateListeners(html){super.activateListeners(html),this.isLootSheet&&(html.find(".tab.inventory").addClass("active"),html.find(".inventory-section li.item").attr({draggable:!0}).on("dragstart",(event=>this.onDragItemStart(event.originalEvent))));const rollables=["a.rollable",".rollable a",".item-icon.rollable"].join(", ");html.find(rollables).on("click",(event=>this.onClickRollable(event))),html.find("button").on("click",(event=>this.onButtonClicked(event))),html.find("a.chat, .spell-icon.rollable").on("click",(event=>this.onClickToChat(event))),html.find(".attack").on("mouseenter",(event=>this.showControls(event))).on("mouseleave",(event=>this.hideControls(event))),html.find(".action").on("mouseenter",(event=>this.showControls(event))).on("mouseleave",(event=>this.hideControls(event))),this.options.editable&&(html.find(".trait-edit").on("click",(event=>this.onTraitSelector(event))),html.find(".skills-edit").on("click",(event=>this.onSkillsEditClicked(event))),html.find(".npc-elite-adjustment").on("click",(()=>this.onClickMakeElite())),html.find(".npc-weak-adjustment").on("click",(()=>this.onClickMakeWeak())),html.find(".spellcasting-entry").find(".attack-input, .dc-input, .focus-points, .focus-pool, .ability-score select").on("change",(event=>this.onChangeSpellcastingEntry(event))),html.find(".spell-slots-increment-reset").on("click",(event=>this.onSpellSlotIncrementReset(event))),html.find(".modifier").on("focusin",(event=>this.baseInputOnFocus(event))).on("focusout",(event=>this.baseInputOnFocusOut(event))),html.find(".effects-list > .effect > .item-image").on("contextmenu",(event=>this.onClickDeleteItem(event))))}prepareOptions(options,selections){const mainSelections=selections.value.map((trait=>({value:trait,label:options[trait]}))),customSelections=selections.custom.split(/\s*[,;|]\s*/).filter((trait=>trait)).map((trait=>({value:trait,label:trait})));return mainSelections.concat(customSelections).filter((selection=>selection.label)).reduce(((selections,selection)=>mergeObject(selections,{[selection.value]:selection.label})),{})}prepareAbilities(abilities){Object.entries(abilities).forEach((([key,data])=>{const localizedCode=game.i18n.localize(`PF2E.AbilityId.${key}`),nameKey=this.getAbilityNameKey(key),localizedName=game.i18n.localize(nameKey);data.localizedCode=localizedCode,data.localizedName=localizedName}))}prepareSize(actorData){const size=actorData.traits.size.value,localizationKey=this.getSizeLocalizedKey(size),localizedName=game.i18n.localize(localizationKey);actorData.traits.size.localizedName=localizedName}prepareAlignment(actorData){const alignmentCode=actorData.details.alignment.value,localizedName=game.i18n.localize(`PF2E.Alignment${alignmentCode}`);actorData.details.alignment.localizedName=localizedName}preparePerception(actorData){const perception=actorData.attributes.perception;void 0!==perception.base&&perception.base>0?perception.readableValue=`+${perception.base}`:perception.readableValue=perception.base}prepareSenses(actorData){const configSenses=CONFIG.PF2E.senses;for(const sense of actorData.traits.senses)sense.localizedName=utils_1.objectHasKey(configSenses,sense.type)?configSenses[sense.type]:sense.type}prepareSkills(actorData){const sortedSkillsIds=Object.keys(actorData.skills),skills=actorData.skills;for(const skillId of sortedSkillsIds)skills[skillId].label=skillId in CONFIG.PF2E.skillList?game.i18n.localize("PF2E.Skill"+skills[skillId].name):skills[skillId].name;sortedSkillsIds.sort(((a,b)=>{const skillA=skills[a],skillB=skills[b];return skillA.label<skillB.label?-1:skillA.label>skillB.label?1:0}));const sortedSkills={};for(const skillId of sortedSkillsIds)sortedSkills[skillId]=skills[skillId];actorData.sortedSkills=sortedSkills}prepareSpeeds(sheetData){const configSpeedTypes=CONFIG.PF2E.speedTypes;sheetData.attributes.speed.otherSpeeds.forEach((speed=>{const speedName=speed.type.trim().toLowerCase().replace(/\s+/g,"-");let value=speed.value;"string"==typeof value&&value.includes("feet")&&(value=value.replace("feet","").trim()),speed.label=utils_1.objectHasKey(configSpeedTypes,speedName)?configSpeedTypes[speedName]:""})),"string"==typeof sheetData.attributes.speed.value&&(sheetData.attributes.speed.value=sheetData.attributes.speed.value.replace("feet","").trim())}prepareSaves(actorData){const fortitude=actorData.saves.fortitude,reflex=actorData.saves.reflex,will=actorData.saves.will;fortitude.labelShort=game.i18n.localize("PF2E.SavesFortitudeShort"),reflex.labelShort=game.i18n.localize("PF2E.SavesReflexShort"),will.labelShort=game.i18n.localize("PF2E.SavesWillShort")}prepareActions(actorData){const actions={passive:{label:game.i18n.localize("PF2E.ActionTypePassive"),actions:[]},free:{label:game.i18n.localize("PF2E.ActionTypeFree"),actions:[]},reaction:{label:game.i18n.localize("PF2E.ActionTypeReaction"),actions:[]},action:{label:game.i18n.localize("PF2E.ActionTypeAction"),actions:[]}};actorData.items.filter((item=>"action"===item.type)).forEach((item=>{const configTraitDescriptions=CONFIG.PF2E.traitsDescriptions,configWeaponTraits=CONFIG.PF2E.weaponTraits,traits=item.data.traits.value.map((traitString=>({label:utils_1.objectHasKey(configWeaponTraits,traitString)?CONFIG.PF2E.weaponTraits[traitString]:traitString.charAt(0).toUpperCase()+traitString.slice(1),description:utils_1.objectHasKey(configTraitDescriptions,traitString)?configTraitDescriptions[traitString]:""}))),itemData=item.data;if(itemData.actionType&&itemData.actionType.value){const actionTrait=itemData.actionType.value,trait={label:utils_1.objectHasKey(configWeaponTraits,actionTrait)?configWeaponTraits[actionTrait]:actionTrait.charAt(0).toUpperCase()+actionTrait.slice(1),description:utils_1.objectHasKey(configTraitDescriptions,actionTrait)?configTraitDescriptions[actionTrait]:""};traits.splice(0,0,trait)}item.traits=traits.filter((p=>!!p));const actionType=itemData.actionType.value||"action";this.assignActionGraphics(item),utils_1.objectHasKey(actions,actionType)&&actions[actionType].actions.push(item)})),actorData.actions=actions}prepareAttacks(sheetData){const traitDescriptions=CONFIG.PF2E.traitsDescriptions;return sheetData.actions.map((attack=>{const traits=attack.traits.map((strikeTrait=>{const description=utils_1.objectHasKey(traitDescriptions,strikeTrait.name)?traitDescriptions[strikeTrait.name]:"";return{label:strikeTrait.label,description}})).sort(((a,b)=>a.label<b.label?-1:a.label>b.label?1:0));return{attack,traits}}))}prepareSpellcasting(sheetData){const spellsList=[],spellEntriesList=[],spellbooks=[];spellbooks.unassigned={};for(const item of sheetData.items)if("spell"===item.type)spellsList.push(item);else if("spellcastingEntry"===item.type){spellEntriesList.push(item._id);const isPrepared="prepared"===(item.data.prepared||{}).value,isRitual="ritual"===(item.data.tradition||{}).value,isFocus="focus"===(item.data.tradition||{}).value;item.data.spelldc.dc=Number(item.data.spelldc.dc),item.data.spelldc.value=Number(item.data.spelldc.value),this.isElite?(item.data.spelldc.dc+=2,item.data.spelldc.value+=2):this.isWeak&&(item.data.spelldc.dc-=2,item.data.spelldc.value-=2),item.data.prepared=isPrepared,item.data.tradition.ritual=isRitual,item.data.tradition.focus=isFocus}const updateData=[];for(const spell of spellsList){const spellType=spell.data.time.value;if("reaction"===spellType)spell.glyph=base_1.ActorPF2e.getActionGraphics(spellType).actionGlyph;else if("free"===spellType)spell.glyph=base_1.ActorPF2e.getActionGraphics(spellType).actionGlyph;else{const actionsCost=parseInt(spellType,10);spell.glyph=base_1.ActorPF2e.getActionGraphics("action",actionsCost).actionGlyph}spell.data.components.somatic=spell.data.components.value.includes("somatic"),spell.data.components.verbal=spell.data.components.value.includes("verbal"),spell.data.components.material=spell.data.components.value.includes("material"),spell.traits=spell.data.traits.value.map((trait=>({label:game.i18n.localize(CONFIG.PF2E.spellTraits[trait]),description:game.i18n.localize(CONFIG.PF2E.traitsDescriptions[trait])})));let spellbook,location=spell.data.location.value;spellEntriesList.includes(location)?(spellbooks[location]=spellbooks[location]||{},spellbook=spellbooks[location]):1===spellEntriesList.length?(location=spellEntriesList[0],spellbooks[location]=spellbooks[location]||{},spellbook=spellbooks[location],updateData.push({_id:spell._id,"data.location.value":location})):(location="unassigned",spellbook=spellbooks.unassigned),this.prepareSpell(sheetData.actor,spellbook,spell)}updateData.length&&(console.log("PF2e System | Prepare Actor Data | Updating location for the following embedded entities: ",updateData),this.actor.updateEmbeddedEntity("OwnedItem",updateData),ui.notifications.info("PF2e actor data migration for orphaned spells applied. Please close actor and open again for changes to take affect."));Object.keys(spellbooks.unassigned).length>0?(sheetData.orphanedSpells=!0,sheetData.orphanedSpellbook=spellbooks.unassigned):sheetData.orphanedSpells=!1;const spellcastingEntries=[];for(const entryId of spellEntriesList){const entry=sheetData.items.find((i=>i._id===entryId));if(null!=entry){if(entry.data.prepared&&spellbooks[entry._id]){const preparedSpellBook=spellbooks[entry._id];this.preparedSpellSlots(entry,preparedSpellBook);for(const section of Object.values(preparedSpellBook)){const preparedSpells=section.prepared.filter((spellData=>!!spellData._id));for(const spell of preparedSpells){const actionType=spell.data.time.value;if(actionType){if("reaction"===actionType)spell.glyph=base_1.ActorPF2e.getActionGraphics(actionType).actionGlyph;else if("free"===actionType)spell.glyph=base_1.ActorPF2e.getActionGraphics(actionType).actionGlyph;else{const actionsCost=parseInt(actionType,10);spell.glyph=base_1.ActorPF2e.getActionGraphics("action",actionsCost).actionGlyph}spell.data.components.somatic=spell.data.components.value.includes("somatic"),spell.data.components.verbal=spell.data.components.value.includes("verbal"),spell.data.components.material=spell.data.components.value.includes("material"),spell.traits=spell.data.traits.value.map((trait=>({label:game.i18n.localize(CONFIG.PF2E.spellTraits[trait]),description:game.i18n.localize(CONFIG.PF2E.traitsDescriptions[trait])})))}}}}entry.spellbook=spellbooks[entry._id],spellcastingEntries.push(entry)}else console.error(`Failed to find spell casting entry with ID ${entryId}`)}return spellcastingEntries}prepareInventory(sheetData){const itemsData=sheetData.items;return{weapon:{label:game.i18n.localize("PF2E.InventoryWeaponsHeader"),type:"weapon",items:itemsData.filter((itemData=>"weapon"===itemData.type))},armor:{label:game.i18n.localize("PF2E.InventoryArmorHeader"),type:"armor",items:itemsData.filter((itemData=>"armor"===itemData.type))},equipment:{label:game.i18n.localize("PF2E.InventoryEquipmentHeader"),type:"equipment",items:itemsData.filter((itemData=>"equipment"===itemData.type))},consumable:{label:game.i18n.localize("PF2E.InventoryConsumablesHeader"),type:"consumable",items:itemsData.filter((itemData=>"consumable"===itemData.type))},treasure:{label:game.i18n.localize("PF2E.InventoryTreasureHeader"),type:"treasure",items:itemsData.filter((itemData=>"treasure"===itemData.type))}}}get isWeak(){return this.actor.traits.has("weak")}get isElite(){return this.actor.traits.has("elite")}getSizeLocalizedKey(size){const actorSizes=CONFIG.PF2E.actorSizes;return utils_1.objectHasKey(actorSizes,size)?actorSizes[size]:""}getAbilityNameKey(abilityCode){return CONFIG.PF2E.abilities[abilityCode]}rollPerception(event){const options=this.actor.getRollOptions(["all","perception-check"]),perception=this.actor.data.data.attributes.perception;(null==perception?void 0:perception.roll)&&perception.roll({event,options})}rollAbility(event,abilityId){const bonus=this.actor.data.data.abilities[abilityId].mod,title=game.i18n.localize(`PF2E.AbilityCheck.${abilityId}`),data={bonus},speaker=ChatMessage.getSpeaker(this);dice_1.DicePF2e.d20Roll({event,parts:["@bonus"],data,title,speaker})}rollNPCSkill(event,skillId){var _a;const skill=this.actor.data.data.skills[skillId];if(void 0!==skill)if(skill.roll){const opts=this.actor.getRollOptions(["all","skill-check",null!==(_a=base_1.SKILL_DICTIONARY[skillId])&&void 0!==_a?_a:skillId]),extraOptions=$(event.currentTarget).attr("data-options");if(extraOptions){const split=extraOptions.split(",").map((o=>o.trim())).filter((o=>!!o));opts.push(...split)}skill.roll({event,options:opts})}else this.actor.rollSkill(event,skillId)}rollSave(event,saveId){const save=this.actor.data.data.saves[saveId];if(null==save?void 0:save.roll){const options=this.actor.getRollOptions(["all","saving-throw",saveId]);save.roll({event,options})}else this.actor.rollSave(event,saveId)}onClickRollable(event){event.preventDefault();const $label=$(event.currentTarget).closest(".rollable"),ability=$label.parent().attr("data-attribute"),skill=$label.parent().attr("data-skill"),save=$label.parent().attr("data-save"),action=$label.parent().parent().attr("data-action"),item=$label.parent().parent().attr("data-item"),spell=$label.parent().parent().attr("data-spell");if(ability)switch(ability){case"perception":this.rollPerception(event);break;default:this.rollAbility(event,ability)}else skill?this.rollNPCSkill(event,skill):save?this.rollSave(event,save):(action||item||spell)&&this.onClickExpandable(event)}onButtonClicked(event){switch(event.preventDefault(),event.stopPropagation(),event.target.dataset.action){case"npcAttack":this.onNPCAttackClicked(event);break;case"damage":this.onNPCDamageClicked(event);break;case"critical":this.onNPCCriticalClicked(event)}}onNPCAttackClicked(event){var _a,_b;const actionId=Number(null!==(_a=$(event.currentTarget).parents(".item").attr("data-action-id"))&&void 0!==_a?_a:0),action=this.actor.data.data.actions[actionId];if(action){const variant=Number(null!==(_b=$(event.currentTarget).attr("data-variant-index"))&&void 0!==_b?_b:0),options=this.actor.getRollOptions(["all","attack-roll"]);action.variants[variant].roll({event,options})}}onNPCDamageClicked(event){var _a;const actionId=Number(null!==(_a=$(event.currentTarget).parents(".item").attr("data-action-id"))&&void 0!==_a?_a:0),action=this.actor.data.data.actions[actionId];if(action&&void 0!==action.damage){const options=this.actor.getRollOptions(["all","damage-roll"]);action.damage({event,options})}}onNPCCriticalClicked(event){var _a;const actionId=Number(null!==(_a=$(event.currentTarget).parents(".item").attr("data-action-id"))&&void 0!==_a?_a:0),action=this.actor.data.data.actions[actionId];if(action&&void 0!==action.critical){const options=this.actor.getRollOptions(["all","damage-roll"]);action.critical({event,options})}}hideControls(event){const controls=$(event.currentTarget).find(".controls");void 0!==controls&&controls.removeClass("expanded")}showControls(event){const controls=$(event.currentTarget).find(".controls");void 0!==controls&&controls.addClass("expanded")}baseInputOnFocus(event){var _a;const input=$(event.currentTarget),baseProperty=null!==(_a=input.attr("data-base-property"))&&void 0!==_a?_a:"",baseValue=getProperty(this.actor.data,baseProperty);baseProperty&&baseValue&&(input.attr("name",baseProperty),input.val(baseValue),input.removeClass("positive-modifier"),input.removeClass("negative-modifier"))}baseInputOnFocusOut(event){var _a;const input=$(event.currentTarget),displayValue=input.attr("data-display-value"),baseProperty=null!==(_a=input.attr("data-base-property"))&&void 0!==_a?_a:"",baseValue=getProperty(this.actor.data,baseProperty);if(displayValue){const totalModifier=Number(displayValue);totalModifier>baseValue?input.addClass("positive-modifier"):totalModifier<baseValue&&input.addClass("negative-modifier"),input.removeAttr("name"),input.val(displayValue)}}onSkillsEditClicked(event){event.preventDefault();new npc_skills_editor_1.NPCSkillsEditor(this.actor,{}).render(!0)}onClickExpandable(event){const $details=$(event.currentTarget).closest("li.item").find(".sub-section.expandable");$details.hasClass("expanded")?$details.slideUp(200,(()=>{$details.removeClass("expanded")})):$details.slideDown(200,(()=>{$details.addClass("expanded")}))}onClickToChat(event){var _a;event.preventDefault();const itemId=null!==(_a=$(event.currentTarget).parents(".item").attr("data-item-id"))&&void 0!==_a?_a:"",item=this.actor.getOwnedItem(itemId);if(item){if(item instanceof physical_1.PhysicalItemPF2e&&!item.isIdentified)return;item.roll(event)}else console.error(`Clicked item with ID ${itemId}, but unable to find item with that ID.`)}onClickMakeWeak(){this.actor.isWeak?this.actor.applyAdjustment("normal"):this.actor.applyAdjustment("weak")}onClickMakeElite(){this.actor.isElite?this.actor.applyAdjustment("normal"):this.actor.applyAdjustment("elite")}async onChangeSpellcastingEntry(event){var _a,_b,_c;event.preventDefault();const $input=$(event.currentTarget),itemId=null!==(_a=$input.closest(".spellcasting-entry").attr("data-container-id"))&&void 0!==_a?_a:"",key=null!==(_c=null===(_b=$input.attr("data-base-property"))||void 0===_b?void 0:_b.replace(/data\.items\.\d+\./,""))&&void 0!==_c?_c:"",value=$input.hasClass("focus-points")||$input.hasClass("focus-pool")?Math.min(Number($input.val()),3):$input.is("select")?String($input.val()):Number($input.val());await this.actor.updateEmbeddedEntity("OwnedItem",{_id:itemId,[key]:value})}async onSpellSlotIncrementReset(event){var _a;const target=$(event.currentTarget),itemId=target.data().itemId,itemLevel=null!==(_a=target.data().level)&&void 0!==_a?_a:"",item=this.actor.getOwnedItem(itemId);if(null==item||""===itemLevel)return;if("spellcastingEntry"!==item.data.type)return;const data=duplicate(item.data);if(null==data.data.slots)return;const slot=`slot${itemLevel}`;data.data.slots[slot].value=data.data.slots[slot].max,item.update(data)}assignActionGraphics(item){var _a,_b,_c;const{imageUrl,actionGlyph}=base_1.ActorPF2e.getActionGraphics((null===(_b=null===(_a=item.data)||void 0===_a?void 0:_a.actionType)||void 0===_b?void 0:_b.value)||"action",parseInt(((null===(_c=item.data)||void 0===_c?void 0:_c.actions)||{}).value,10)||1);item.glyph=actionGlyph,item.imageUrl=imageUrl}async _updateObject(event,formData){const shield=this.actor.heldShield;shield&&Number.isInteger(formData["data.attributes.shield.value"])&&await shield.update({"data.hp.value":formData["data.attributes.shield.value"]}),await super._updateObject(event,formData)}}exports.ActorSheetPF2eSimpleNPC=ActorSheetPF2eSimpleNPC},1684:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TrickMagicItemPopup=void 0;const base_1=__webpack_require__(9978),spell_consumables_1=__webpack_require__(9795),localize_1=__webpack_require__(1608),utils_1=__webpack_require__(4930);exports.TrickMagicItemPopup=class{constructor(item){if(this.SKILLS=["arc","nat","occ","rel"],this.translations=localize_1.LocalizePF2e.translations.PF2E.TrickMagicItemPopup,this.item=item,this.actor=item.actor,"consumable"!==item.data.type)throw utils_1.ErrorPF2e("Unexpected item used for Trick Magic Item");this.checkDC=spell_consumables_1.calculateTrickMagicItemCheckDC(item.data),"character"===this.actor.data.type||"npc"===this.actor.data.type?this.initialize():ui.notifications.warn(this.translations.InvalidActor)}async initialize(){const buttons=this.SKILLS.filter((skill=>skill in this.checkDC)).map((value=>({value,label:game.i18n.localize(`PF2E.Skill${value.capitalize()}`)}))).reduce(((accumulated,skill)=>{const button={icon:'<i class="fas fa-dice-d20"></i>',label:skill.label,callback:()=>this.handleTrickItem(skill.value)};return Object.assign(Object.assign({},accumulated),{[skill.value]:button})}),{});new Dialog({title:this.translations.Title,content:`<p>${this.translations.Label}</p>`,buttons},{classes:["dialog","trick-magic-item"],width:"auto"}).render(!0)}handleTrickItem(skill){const options=["all","skill-check","action:trick-magic-item"].concat(base_1.SKILL_DICTIONARY[skill]),stat=this.actor.data.data.skills[skill];stat.roll({actor:this.actor,options,notes:stat.notes,type:"skill-check",dc:{value:this.checkDC[skill]}});const result=spell_consumables_1.calculateTrickMagicItemCastData(this.actor,skill);this.item.castEmbeddedSpell(result)}}},1420:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.UpdatedNPCSheetPF2e=void 0;const npc_1=__webpack_require__(4278),dice_1=__webpack_require__(1459),base_1=__webpack_require__(9978),simple_npc_sheet_1=__webpack_require__(4062);class UpdatedNPCSheetPF2e extends npc_1.NPCSheetPF2e{get template(){if(this.isLootSheet)return"systems/pf2e/templates/actors/npc/loot-sheet.html";const path="systems/pf2e/templates/actors/";return this.actor.getFlag("pf2e","editNPC.value")?`${path}npc-sheet.html`:`${path}npc-sheet-no-edit.html`}static get defaultOptions(){const options=super.defaultOptions;return mergeObject(options,{classes:options.classes.concat("updatedNPCSheet"),width:650,height:680,showUnpreparedSpells:!0}),options}get title(){var _a,_b;if(this.isLootSheet){return`${null!==(_b=null===(_a=this.token)||void 0===_a?void 0:_a.name)&&void 0!==_b?_b:this.actor.name} [${game.i18n.localize("PF2E.NPC.Dead")}]`}return super.title}getData(){var _a,_b,_c;const sheetData=super.getData();if(this.isLootSheet)return this.getLootData(sheetData);sheetData.flags=sheetData.actor.flags,void 0===sheetData.flags.pf2e_updatednpcsheet&&(sheetData.flags.pf2e_updatednpcsheet={}),void 0===sheetData.flags.pf2e_updatednpcsheet.editNPC&&(sheetData.flags.pf2e_updatednpcsheet.editNPC={value:!1}),void 0===sheetData.flags.pf2e_updatednpcsheet.allSaveDetail&&(sheetData.flags.pf2e_updatednpcsheet.allSaveDetail={value:""}),sheetData.npcEliteActive=this.npcIsElite?" active":"",sheetData.npcWeakActive=this.npcIsWeak?" active":"",sheetData.npcEliteHidden=this.npcIsWeak?" hidden":"",sheetData.npcWeakHidden=this.npcIsElite?" hidden":"",sheetData.actorRarities=CONFIG.PF2E.rarityTraits,sheetData.actorRarity=sheetData.actorRarities[sheetData.data.traits.rarity.value],sheetData.isNotCommon="common"!==sheetData.data.traits.rarity.value,sheetData.actorSize=sheetData.actorSizes[sheetData.data.traits.size.value],sheetData.actorTraits=(sheetData.data.traits.traits||{}).value,sheetData.actorAlignment=sheetData.data.details.alignment.value,sheetData.actorAttitudes=CONFIG.PF2E.attitude,sheetData.actorAttitude=sheetData.actorAttitudes[null!==(_b=null===(_a=sheetData.data.traits.attitude)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:"indifferent"],sheetData.hasLanguages=!1,sheetData.data.traits.languages.value&&Array.isArray(sheetData.data.traits.languages.value)&&sheetData.actor.data.traits.languages.value.length>0&&(sheetData.hasLanguages=!0),sheetData.hasSkills=sheetData.actor.lores.length>0,sheetData.hasACDetails=sheetData.data.attributes.ac.details&&""!==sheetData.data.attributes.ac.details,sheetData.hasHPDetails=sheetData.data.attributes.hp.details&&""!==sheetData.data.attributes.hp.details,sheetData.hasFortDetails=sheetData.data.saves.fortitude.saveDetail&&""!==sheetData.data.saves.fortitude.saveDetail,sheetData.hasRefDetails=sheetData.data.saves.reflex.saveDetail&&""!==sheetData.data.saves.reflex.saveDetail,sheetData.hasWillDetails=sheetData.data.saves.will.saveDetail&&""!==sheetData.data.saves.will.saveDetail,sheetData.hasAllSaveDetails=(sheetData.data.attributes.allSaves||{}).value&&""!==(sheetData.data.attributes.allSaves||{}).value,sheetData.hasImmunities=!!sheetData.data.traits.di.value.length&&sheetData.data.traits.di.value,sheetData.hasResistances=!!sheetData.data.traits.dr.length&&Array.isArray(sheetData.data.traits.dr),sheetData.hasWeaknesses=!!sheetData.data.traits.dv.length&&Array.isArray(sheetData.data.traits.dv),sheetData.data.attributes.speed&&sheetData.data.attributes.speed.otherSpeeds&&(sheetData.hasSpeedDetails=!!sheetData.data.attributes.speed.otherSpeeds.length&&sheetData.data.attributes.speed.otherSpeeds),sheetData.hasSpells=!!sheetData.actor.spellcastingEntries.length&&sheetData.actor.spellcastingEntries;const equipment=[],reorgActions={interaction:{label:"Interaction Actions",actions:{action:{label:"Actions",actions:[]},reaction:{label:"Reactions",actions:[]},free:{label:"Free Actions",actions:[]},passive:{label:"Passive Actions",actions:[]}}},defensive:{label:"Defensive Actions",actions:{action:{label:"Actions",actions:[]},reaction:{label:"Reactions",actions:[]},free:{label:"Free Actions",actions:[]},passive:{label:"Passive Actions",actions:[]}}},offensive:{label:"Offensive Actions",actions:{action:{label:"Actions",actions:[]},reaction:{label:"Reactions",actions:[]},free:{label:"Free Actions",actions:[]},passive:{label:"Passive Actions",actions:[]}}}};sheetData.hasInteractionActions=!1,sheetData.hasDefensiveActions=!1,sheetData.hasOffensiveActions=!1,sheetData.hasEquipment=!1;for(const i of sheetData.actor.items)if("weapon"===i.type||"armor"===i.type||"equipment"===i.type||"consumable"===i.type||"treasure"===i.type)1!=i.data.quantity.value&&(i.name+=` (${i.data.quantity.value})`),equipment.push(i),sheetData.hasEquipment=!0;else if("action"===i.type){const actionType=i.data.actionType.value||"action";switch((null===(_c=i.data.actionCategory)||void 0===_c?void 0:_c.value)||"offensive"){case"interaction":reorgActions.interaction.actions[actionType].actions.push(i),sheetData.hasInteractionActions=!0;break;case"defensive":reorgActions.defensive.actions[actionType].actions.push(i),sheetData.hasDefensiveActions=!0;break;default:reorgActions.offensive.actions[actionType].actions.push(i),sheetData.hasOffensiveActions=!0}}else"melee"!==i.type&&"ranged"!==i.type||(i.img=base_1.ActorPF2e.getActionGraphics("action",1).imageUrl);return sheetData.actor.reorgActions=reorgActions,sheetData.actor.equipment=equipment,sheetData}getLootData(data){var _a,_b;return data.actor.name=null!==(_b=null===(_a=this.token)||void 0===_a?void 0:_a.name)&&void 0!==_b?_b:this.actor.name,data.options.classes=data.options.classes.filter((cls=>!["npc-sheet","updatedNPCSheet"].includes(cls))).concat("npc"),data.inventory=simple_npc_sheet_1.ActorSheetPF2eSimpleNPC.prototype.prepareInventory({items:data.actor.items}),data}get isLootSheet(){return game.settings.get("pf2e","automation.lootableNPCs")&&!this.actor.owner&&this.actor.isLootableBy(game.user)}npcAdjustment(increase){var _a;let traits=null!==(_a=duplicate(this.actor.data.data.traits.traits.value))&&void 0!==_a?_a:[];const isElite=traits.some((trait=>"elite"===trait)),isWeak=traits.some((trait=>"weak"===trait));increase?isWeak?(console.log("PF2e System | Adjusting NPC to become less powerful"),traits=traits.filter((trait=>"weak"!==trait))):isWeak||isElite||(console.log("PF2e System | Adjusting NPC to become more powerful"),traits.push("elite")):isElite?(console.log("PF2e System | Adjusting NPC to become less powerful"),traits=traits.filter((trait=>"elite"!==trait))):isElite||isWeak||(console.log("PF2e System | Adjusting NPC to become less powerful"),traits.push("weak")),this.actor.update({"data.traits.traits.value":traits})}get npcIsElite(){return this.actor.data.data.traits.traits.value.some((trait=>"elite"===trait))}get npcIsWeak(){return this.actor.data.data.traits.traits.value.some((trait=>"weak"===trait))}rollNPCDamageRoll(event,damageRoll,item){const itemData=item.data.data,rollData=duplicate(item.actor.data.data),parts=[damageRoll.die],dtype=CONFIG.PF2E.damageTypes[damageRoll.damageType];let title=`${item.name} - Damage`;dtype&&(title+=` (${dtype})`),rollData.item=itemData,dice_1.DicePF2e.damageRoll({event,parts,actor:item.actor,data:rollData,title,speaker:ChatMessage.getSpeaker({actor:item.actor}),dialogOptions:{width:400,top:event.clientY-80,left:window.innerWidth-710}})}expandAttackEffect(attackEffectName,event,triggerItem){var _a;const actionList=$(event.currentTarget).parents("form").find(".item.action-item");let toggledAnything=!1;const mAbilities=CONFIG.PF2E.monsterAbilities();if(actionList.each(((_index,element)=>{$(element).attr("data-item-name").trim().toLowerCase()===attackEffectName.trim().toLowerCase()&&($(element).find("h4").trigger("click"),toggledAnything=!0)})),!toggledAnything){const newAbilityInfo=mAbilities[attackEffectName];if(newAbilityInfo){const newAction={name:attackEffectName,type:"action",data:{actionType:{value:newAbilityInfo.actionType},actionCategory:{value:"offensive"},source:{value:""},description:{value:newAbilityInfo.description},traits:{value:[]},actions:{value:newAbilityInfo.actionCost}}},traitRegEx=/(?:Traits.aspx.+?">)(?:<\w+>)*(.+?)(?:<\/\w+>)*(?:<\/a>)/g,matchTraits=[...newAbilityInfo.description.matchAll(traitRegEx)];for(let i=0;i<matchTraits.length;i++)matchTraits[i]&&matchTraits[i].length>=2&&matchTraits[i][1]&&(newAction.data.traits.value.includes(matchTraits[i][1])||newAction.data.traits.value.push(matchTraits[i][1]));null===(_a=triggerItem.actor)||void 0===_a||_a.createOwnedItem(newAction,{displaySheet:!1})}}}activateListeners(html){super.activateListeners(html),this.isLootSheet&&(html.find(".tab.inventory").addClass("active"),html.find(".inventory-section li.item").attr({draggable:!0}).on("dragstart",(event=>this.onDragItemStart(event.originalEvent)))),this.options.editable&&(html.find(".npc-detail-text textarea").on("focusout",(async event=>{event.target.style.height="5px",event.target.style.height=`${event.target.scrollHeight}px`})),html.find(".npc-detail-text textarea").each(((_index,element)=>{element.style.height="5px",element.style.height=`${element.scrollHeight}px`})),html.find(".isNPCEditable").on("change",(event=>{this.actor.setFlag("pf2e","editNPC",{value:event.target.checked})})),html.find("button.npc-damageroll").on("click",(ev=>{ev.preventDefault(),ev.stopPropagation();const itemId=$(ev.currentTarget).parents(".item").attr("data-item-id"),drId=Number($(ev.currentTarget).attr("data-dmgRoll")),item=this.actor.getOwnedItem(itemId),damageRoll=item.data.flags.pf2e_updatednpcsheet.damageRolls[drId];switch(ev.target.dataset.action){case"npcDamageRoll":this.rollNPCDamageRoll(ev,damageRoll,item)}})),html.find("button.npc-attackEffect").on("click",(ev=>{ev.preventDefault(),ev.stopPropagation();const itemId=$(ev.currentTarget).parents(".item").attr("data-item-id"),aId=Number($(ev.currentTarget).attr("data-attackEffect")),item=this.actor.getOwnedItem(itemId);if(null===item||"melee"!==item.data.type)return void console.log("PF2e System | clicked an attackEffect, but item was not a melee");const attackEffect=item.data.data.attackEffects.value[aId];switch(console.log("PF2e System | clicked an attackEffect:",attackEffect,ev),ev.target.dataset.action){case"npcAttackEffect":this.expandAttackEffect(attackEffect,ev,item)}})),html.find("a.npc-elite-adjustment").on("click",(e=>{e.preventDefault(),console.log("PF2e System | Adding Elite adjustment to NPC");const eliteButton=$(e.currentTarget),weakButton=eliteButton.siblings(".npc-weak-adjustment");eliteButton.toggleClass("active"),weakButton.toggleClass("hidden"),this.npcAdjustment(eliteButton.hasClass("active"))})),html.find("a.npc-weak-adjustment").on("click",(e=>{e.preventDefault(),console.log("PF2e System | Adding Weak adjustment to NPC");const weakButton=$(e.currentTarget),eliteButton=weakButton.siblings(".npc-elite-adjustment");weakButton.toggleClass("active"),eliteButton.toggleClass("hidden"),this.npcAdjustment(!weakButton.hasClass("active"))})))}}exports.UpdatedNPCSheetPF2e=UpdatedNPCSheetPF2e},5193:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.VehicleSheetPF2e=void 0;const bulk_1=__webpack_require__(6272),container_1=__webpack_require__(1482),base_1=__webpack_require__(5435),treasure_1=__webpack_require__(4562),vehicle_1=__webpack_require__(6636);class VehicleSheetPF2e extends base_1.ActorSheetPF2e{static get defaultOptions(){return mergeObject(super.defaultOptions,{classes:["default","sheet","actor","vehicle"],width:670,height:480,tabs:[{navSelector:".sheet-navigation",contentSelector:".sheet-content",initial:"details"}]})}get template(){return"systems/pf2e/templates/actors/vehicle/vehicle-sheet.html"}getData(){const sheetData=super.getData();if(sheetData.actorSizes=CONFIG.PF2E.actorSizes,sheetData.actorSize=sheetData.actorSizes[sheetData.data.traits.size.value],sheetData.actorRarities=CONFIG.PF2E.rarityTraits,sheetData.actorRarity=sheetData.actorRarities[sheetData.data.traits.rarity.value],sheetData.isNotCommon="common"!==sheetData.data.traits.rarity.value,void 0!==sheetData.data.attributes&&(sheetData.data.attributes.hp.brokenThreshold=Math.floor(sheetData.data.attributes.hp.max/2)),void 0!==sheetData.data.saves)for(const[s,save]of Object.entries(sheetData.data.saves))save.label=CONFIG.PF2E.saves[s];if(this.prepareItems(sheetData),void 0!==sheetData.actor.items){const treasure=treasure_1.calculateWealth(sheetData.actor.items);sheetData.totalTreasure={};for(const[denomination,value]of Object.entries(treasure))sheetData.totalTreasure[denomination]={value,label:CONFIG.PF2E.currencies[denomination]}}return sheetData}prepareItems(sheetData){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m;const actorData=sheetData.actor,inventory={weapon:{label:game.i18n.localize("PF2E.InventoryWeaponsHeader"),items:[]},armor:{label:game.i18n.localize("PF2E.InventoryArmorHeader"),items:[]},equipment:{label:game.i18n.localize("PF2E.InventoryEquipmentHeader"),items:[]},consumable:{label:game.i18n.localize("PF2E.InventoryConsumablesHeader"),items:[]},treasure:{label:game.i18n.localize("PF2E.InventoryTreasureHeader"),items:[]},backpack:{label:game.i18n.localize("PF2E.InventoryBackpackHeader"),items:[]}},actions={action:{label:game.i18n.localize("PF2E.ActionsActionsHeader"),actions:[]},reaction:{label:game.i18n.localize("PF2E.ActionsReactionsHeader"),actions:[]},free:{label:game.i18n.localize("PF2E.ActionsFreeActionsHeader"),actions:[]}},readonlyActions={interaction:{label:"Interaction Actions",actions:[]},defensive:{label:"Defensive Actions",actions:[]},offensive:{label:"Offensive Actions",actions:[]}},bulkConfig={ignoreCoinBulk:game.settings.get("pf2e","ignoreCoinBulk"),ignoreContainerOverflow:game.settings.get("pf2e","ignoreContainerOverflow")},bulkItems=bulk_1.itemsFromActorData(actorData),bulkItemsById=bulk_1.indexBulkItemsById(bulkItems),containers=container_1.getContainerMap({items:actorData.items,bulkItemsById,bulkConfig,actorSize:actorData.data.traits.size.value});for(const i of actorData.items){if(i.img=i.img||CONST.DEFAULT_TOKEN,i.containerData=containers.get(i._id),i.isContainer=i.containerData.isContainer,i.isNotInContainer=i.containerData.isNotInContainer,i.canBeEquipped=i.isNotInContainer,i.isEquipped=null!==(_c=null===(_b=null===(_a=i.data)||void 0===_a?void 0:_a.equipped)||void 0===_b?void 0:_b.value)&&void 0!==_c&&_c,i.isSellableTreasure="treasure"===i.type&&"coins"!==(null===(_e=null===(_d=i.data)||void 0===_d?void 0:_d.stackGroup)||void 0===_e?void 0:_e.value),i.hasInvestedTrait=null!==(_j=null===(_h=null===(_g=null===(_f=i.data)||void 0===_f?void 0:_f.traits)||void 0===_g?void 0:_g.value)||void 0===_h?void 0:_h.includes("invested"))&&void 0!==_j&&_j,i.isInvested=null!==(_m=null===(_l=null===(_k=i.data)||void 0===_k?void 0:_k.invested)||void 0===_l?void 0:_l.value)&&void 0!==_m&&_m,Object.keys(inventory).includes(i.type)){i.data.quantity.value=i.data.quantity.value||0,i.data.weight.value=i.data.weight.value||0;const bulkItem=bulkItemsById.get(i._id),[approximatedBulk]=bulk_1.calculateBulk({items:void 0===bulkItem?[]:[bulkItem],bulkConfig,actorSize:actorData.data.traits.size.value});i.totalWeight=bulk_1.formatBulk(approximatedBulk),i.hasCharges="consumable"===i.type&&i.data.charges.max>0,i.isTwoHanded="weapon"===i.type&&!!(i.data.traits.value||[]).find((x=>x.startsWith("two-hand"))),i.wieldedTwoHanded="weapon"===i.type&&(i.data.hands||{}).value,inventory[i.type].items.push(i)}if("action"===i.type){const actionType=i.data.actionType.value||"action";if(i.img=vehicle_1.VehiclePF2e.getActionGraphics(actionType,parseInt((i.data.actions||{}).value,10)||1).imageUrl,"passive"===actionType?actions.free.actions.push(i):actions[actionType].actions.push(i),i.data.actionCategory&&i.data.actionCategory.value)switch(i.data.actionCategory.value){case"interaction":readonlyActions.interaction.actions.push(i),actorData.hasInteractionActions=!0;break;case"defensive":readonlyActions.defensive.actions.push(i),actorData.hasDefensiveActions=!0;break;case"offensive":readonlyActions.offensive.actions.push(i),actorData.hasOffensiveActions=!0;break;default:readonlyActions.offensive.actions.push(i),actorData.hasOffensiveActions=!0}else readonlyActions.offensive.actions.push(i),actorData.hasOffensiveActions=!0}}actorData.inventory=inventory,actorData.actions=actions,actorData.readonlyActions=readonlyActions}activateListeners(html){super.activateListeners(html);{const title=$(".sheet-navigation .active").data("tabTitle");title&&html.find(".navigation-title").text(title)}html.find(".sheet-navigation").on("mouseover",".item",(event=>{const title=event.currentTarget.dataset.tabTitle;title&&$(event.currentTarget).parents(".sheet-navigation").find(".navigation-title").text(title)})),html.find(".sheet-navigation").on("mouseout",".item",(event=>{const parent=$(event.currentTarget).parents(".sheet-navigation"),title=parent.find(".item.active").data("tabTitle");title&&parent.find(".navigation-title").text(title)})),html.find(".crb-trait-selector").on("click",(event=>this.onTraitSelector(event)))}}exports.VehicleSheetPF2e=VehicleSheetPF2e},6636:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.VehiclePF2e=void 0;const base_1=__webpack_require__(9978);class VehiclePF2e extends base_1.ActorPF2e{async createEmbeddedEntity(embeddedName,data,options={}){const createData=Array.isArray(data)?data:[data];for(const datum of createData)if(!["weapon","armor","equipment","consumable","treasure","backpack","kit","action"].includes(datum.type))return ui.notifications.error(game.i18n.localize("PF2E.vehicle.ItemTypeError")),null;return super.createEmbeddedEntity(embeddedName,createData,options)}}exports.VehiclePF2e=VehiclePF2e},4610:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __await=this&&this.__await||function(v){return this instanceof __await?(this.v=v,this):new __await(v)},__asyncGenerator=this&&this.__asyncGenerator||function(thisArg,_arguments,generator){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,g=generator.apply(thisArg,_arguments||[]),q=[];return i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i;function verb(n){g[n]&&(i[n]=function(v){return new Promise((function(a,b){q.push([n,v,a,b])>1||resume(n,v)}))})}function resume(n,v){try{(r=g[n](v)).value instanceof __await?Promise.resolve(r.value.v).then(fulfill,reject):settle(q[0][2],r)}catch(e){settle(q[0][3],e)}var r}function fulfill(value){resume("next",value)}function reject(value){resume("throw",value)}function settle(f,v){f(v),q.shift(),q.length&&resume(q[0][0],q[0][1])}},__asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.compendiumBrowser=void 0;const progress_1=__webpack_require__(1046),physical_1=__webpack_require__(315),others_1=__webpack_require__(5079);function _sortedObject(obj){return Object.fromEntries([...Object.entries(obj)].sort())}function normaliseString(str){return str.normalize("NFD").toLowerCase().replace(/[^a-z0-9]/g,"")}const packLoader=new class{constructor(){this.loadedPacks={Actor:{},Item:{}}}loadPacks(entityType,packs){return __asyncGenerator(this,arguments,(function*(){this.loadedPacks[entityType]||(this.loadedPacks[entityType]={});const progress=new progress_1.Progress({steps:packs.length});for(const packId of packs){let data=this.loadedPacks[entityType][packId];if(data){const{pack}=data;progress.advance(`Loading ${pack.metadata.label}`)}else{const pack=game.packs.get(packId);if(!pack){progress.advance("");continue}if(progress.advance(`Loading ${pack.metadata.label}`),pack.metadata.entity!==entityType)continue;{const content=yield __await(pack.getContent());data={pack,content},this.loadedPacks[entityType][packId]=data}}yield yield __await(data)}progress.close("Loading complete")}))}};class CompendiumBrowser extends Application{constructor(options={}){super(options),this.hookCompendiumList(),this.hookTab(),Hooks.on("ready",(()=>{this.loadSettings(),this.initCompendiumList()}))}initCompendiumList(){var _a,_b,_c;const settings={action:{},bestiary:{},hazard:{},equipment:{},feat:{},spell:{}};let types;for(const pack of game.packs.values()){if("Item"===pack.metadata.entity)types=["action","equipment","feat","spell"];else{if("Actor"!==pack.metadata.entity)continue;types=["bestiary","hazard"]}for(const t of types){const load=null!==(_c=null===(_b=null===(_a=this.settings[t])||void 0===_a?void 0:_a[pack.collection])||void 0===_b?void 0:_b.load)&&void 0!==_c?_c:pack.collection.includes(t);settings[t][pack.collection]={load,name:pack.metadata.label}}}this.settings=settings}loadSettings(){this.settings=JSON.parse(game.settings.get("pf2e","compendiumBrowserPacks")),this.data={action:null,bestiary:null,equipment:null,feat:null,hazard:null,spell:null}}hookTab(){this.navigationTab=this._tabs[0];const _tabCallback=this.navigationTab.callback;this.navigationTab.callback=(event,tabs,active,...args)=>{_tabCallback(event,tabs,active,...args),this.loadTab(active)}}async openTab(tab){await this._render(!0),this.navigationTab.activate(tab,{triggerCallback:!0})}async loadTab(tab){if(this.data[tab])return;let data;switch(tab){case"settings":return;case"action":data=this.loadActions();break;case"equipment":data=this.loadEquipment();break;case"feat":data=this.loadFeats();break;case"spell":data=this.loadSpells();break;case"bestiary":data=this.loadBestiary();break;case"hazard":data=this.loadHazards();break;default:throw new Error(`Unknown tab ${tab}`)}this.data[tab]=await data,this.rendered&&this.render(!0)}_loadedPacks(tab){var _a;return Object.entries(null!==(_a=this.settings[tab])&&void 0!==_a?_a:[]).flatMap((([collection,info])=>info.load?[collection]:[]))}async loadActions(){var e_1,_a;console.log("PF2e System | Compendium Browser | Started loading feats");const actions={};try{for(var _c,_b=__asyncValues(packLoader.loadPacks("Item",this._loadedPacks("action")));!(_c=await _b.next()).done;){const{pack,content}=_c.value;console.log(`PF2e System | Compendium Browser | ${pack.metadata.label} - Loading`);for(let action of content)action=action.data,"action"===action.type&&("passive"===action.data.actionType.value&&(action.img=this._getActionImg("passive")),action.compendium=pack.collection,actions[action._id]=action)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&await _a.call(_b)}finally{if(e_1)throw e_1.error}}return console.log("PF2e System | Compendium Browser | Finished loading actions"),{actions,actionTraits:_sortedObject(CONFIG.PF2E.featTraits),skills:CONFIG.PF2E.skillList,proficiencies:CONFIG.PF2E.proficiencyLevels}}async loadBestiary(){var e_2,_a;console.log("PF2e System | Compendium Browser | Started loading actors");const bestiaryActors={},sources=new Set;try{for(var _c,_b=__asyncValues(packLoader.loadPacks("Actor",this._loadedPacks("bestiary")));!(_c=await _b.next()).done;){const{pack,content}=_c.value;console.debug(`PF2e System | Compendium Browser | ${pack.metadata.label} - ${content.length} entries found`);for(let actor of content)if(actor=actor.data,"npc"===actor.type){if(actor.compendium=pack.collection,actor.filters={},actor.filters.level=actor.data.details.level.value,actor.filters.traits=actor.data.traits.traits.value,actor.filters.alignment=actor.data.details.alignment.value,actor.filters.actorSize=actor.data.traits.size.value,actor.data.details.source&&actor.data.details.source.value){const actorSource=actor.data.details.source.value;actorSource.includes("pg.")?actor.filters.source=actorSource.split("pg.")[0].trim():actorSource.includes("page.")?actor.filters.source=actorSource.split("page.")[0].trim():actor.filters.source=actorSource}actor.filters.source&&sources.add(actor.filters.source),bestiaryActors[actor._id]=actor,actor.filters.rarity=actor.data.traits.rarity?actor.data.traits.rarity.value:actor.data.rarity?actor.data.rarity.value:{value:"common"}}console.log(`PF2e System | Compendium Browser | ${pack.metadata.label} - Loaded`)}}catch(e_2_1){e_2={error:e_2_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&await _a.call(_b)}finally{if(e_2)throw e_2.error}}return console.log("PF2e System | Compendium Browser | Finished loading Bestiary actors"),{bestiaryActors,actorSize:CONFIG.PF2E.actorSizes,alignment:CONFIG.PF2E.alignment,traits:_sortedObject(CONFIG.PF2E.monsterTraits),languages:_sortedObject(CONFIG.PF2E.languages),source:[...sources].sort(),rarities:CONFIG.PF2E.rarityTraits}}async loadHazards(){var e_3,_a;console.log("PF2e System | Compendium Browser | Started loading actors");const hazardActors={},sources=new Set,rarities=Object.keys(CONFIG.PF2E.rarityTraits);try{for(var _c,_b=__asyncValues(packLoader.loadPacks("Actor",this._loadedPacks("hazard")));!(_c=await _b.next()).done;){const{pack,content}=_c.value;console.log(`PF2e System | Compendium Browser | ${pack.metadata.label} - ${content.length} entries found`);for(let actor of content)if(actor=actor.data,"hazard"===actor.type){if(actor.compendium=pack.collection,actor.filters={},actor.filters.level=actor.data.details.level,actor.filters.traits=actor.data.traits.traits.value,actor.data.details.source&&actor.data.details.source.value){const actorSource=actor.data.details.source.value;actorSource.includes("pg.")?actor.filters.source=actorSource.split("pg.")[0].trim():actorSource.includes("page.")?actor.filters.source=actorSource.split("page.")[0].trim():actor.filters.source=actorSource}actor.filters.complex=actor.data.details.isComplex?"complex":"simple",actor.filters.source&&sources.add(actor.filters.source),hazardActors[actor._id]=actor,actor.filters.rarity=(()=>{if(actor.data.traits.rarity)return actor.data.traits.rarity.value;if(actor.data.rarity)return actor.data.rarity.value;for(const rarity of rarities){const indexOfRarity=actor.data.traits.traits.value.indexOf(rarity);if(indexOfRarity>=0)return actor.data.traits.traits.value[indexOfRarity]}return"common"})()}console.log(`PF2e System | Compendium Browser | ${pack.metadata.label} - Loaded`)}}catch(e_3_1){e_3={error:e_3_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&await _a.call(_b)}finally{if(e_3)throw e_3.error}}return console.log("PF2e System | Compendium Browser | Finished loading Hazard actors"),{hazardActors,traits:_sortedObject(CONFIG.PF2E.hazardTraits),source:[...sources].sort(),rarities:CONFIG.PF2E.rarityTraits}}async loadEquipment(){var e_4,_a;console.log("PF2e System | Compendium Browser | Started loading feats");const inventoryItems={},itemTypes=["weapon","armor","equipment","consumable","treasure","backpack","kit"];try{for(var _c,_b=__asyncValues(packLoader.loadPacks("Item",this._loadedPacks("equipment")));!(_c=await _b.next()).done;){const{pack,content}=_c.value;console.log(`PF2e System | Compendium Browser | ${pack.metadata.label} - ${content.length} entries found`);for(let item of content)item=item.data,itemTypes.includes(item.type)&&(item.compendium=pack.collection,item.data.itemTypes={value:item.type},inventoryItems[item._id]=item,item.data.rarity=item.data.traits.rarity?item.data.traits.rarity:item.data.rarity?item.data.rarity:{value:"common"})}}catch(e_4_1){e_4={error:e_4_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&await _a.call(_b)}finally{if(e_4)throw e_4.error}}return console.log("PF2e System | Compendium Browser | Finished loading inventory items"),{inventoryItems,armorTypes:CONFIG.PF2E.armorTypes,armorGroups:CONFIG.PF2E.armorGroups,weaponTraits:_sortedObject(CONFIG.PF2E.weaponTraits),itemTypes:{weapon:"Weapons",armor:"Armor",equipment:"Equipment",consumable:"Consumables",treasure:"Treasure",backpack:"Containers",kit:"Kits"},rarities:CONFIG.PF2E.rarityTraits,weaponTypes:CONFIG.PF2E.weaponTypes,weaponGroups:CONFIG.PF2E.weaponGroups}}async loadFeats(){var e_5,_a;console.log("PF2e System | Compendium Browser | Started loading feats");const feats={},classes=new Set,skills=new Set,ancestries=new Set,times=new Set,ancestryList=Object.keys(CONFIG.PF2E.ancestryTraits);try{for(var _c,_b=__asyncValues(packLoader.loadPacks("Item",this._loadedPacks("feat")));!(_c=await _b.next()).done;){const{pack,content}=_c.value;console.log(`PF2e System | Compendium Browser | ${pack.metadata.label} - ${content.length} entries found`);for(let feat of content)if(feat=feat.data,"feat"===feat.type){if(feat.compendium=pack.collection,feat.data.traits.value){const classIntersection=Object.keys(CONFIG.PF2E.classTraits).filter((x=>feat.data.traits.value.includes(x)));if(0!==classIntersection.length&&(classes.add(classIntersection.join(",")),feat.data.classes={value:classIntersection}),"ancestry"===feat.data.featType.value){const ancestryIntersection=ancestryList.filter((x=>feat.data.traits.value.includes(x)));0!==ancestryIntersection.length&&(ancestries.add(ancestryIntersection.join(",")),feat.data.ancestry={value:ancestryIntersection})}}{const skillList=Object.keys(CONFIG.PF2E.skillList),prereqs=feat.data.prerequisites.value;let prerequisitesArr=[];prerequisitesArr=prereqs.map((y=>y.value.toLowerCase()));const skillIntersection=skillList.filter((x=>prerequisitesArr.some((entry=>entry.includes(x)))));0!==skillIntersection.length&&(skills.add(skillIntersection.join(",")),feat.data.skills={value:skillIntersection})}feat.data.level.formated=parseInt(feat.data.level.value,10);let time="";"reaction"===feat.data.actionType.value?(feat.data.actionType.img=this._getActionImg("reaction"),time="reaction"):"free"===feat.data.actionType.value?(feat.data.actionType.img=this._getActionImg("free"),time="free"):"passive"===feat.data.actionType.value?(feat.data.actionType.img=this._getActionImg("passive"),time="passive"):parseInt(feat.data.actions.value,10)&&(feat.data.actionType.img=this._getActionImg(feat.data.actions.value),time=feat.data.actions.value.toLowerCase()),""!==time&&times.add(time),feats[feat._id]=feat,feat.data.rarity=feat.data.traits.rarity?feat.data.traits.rarity:feat.data.rarity?feat.data.rarity:{value:"common"}}}}catch(e_5_1){e_5={error:e_5_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&await _a.call(_b)}finally{if(e_5)throw e_5.error}}const classesObj={};for(const classStr of[...classes].sort())classesObj[classStr]=CONFIG.PF2E.classTraits[classStr];const ancestryObj={};for(const ancestryStr of[...ancestries].sort())ancestryObj[ancestryStr]=CONFIG.PF2E.ancestryTraits[ancestryStr];return console.log("PF2e System | Compendium Browser | Finished loading feats"),{feats,featClasses:CONFIG.PF2E.classTraits,featSkills:CONFIG.PF2E.skillList,featAncestry:ancestryObj,featTimes:[...times].sort(),rarities:CONFIG.PF2E.rarityTraits}}async loadSpells(){var e_6,_a;console.log("PF2e System | Compendium Browser | Started loading spells");const spells={},classes=new Set,schools=new Set,times=new Set,classList=Object.keys(CONFIG.PF2E.classTraits);try{for(var _c,_b=__asyncValues(packLoader.loadPacks("Item",this._loadedPacks("spell")));!(_c=await _b.next()).done;){const{pack,content}=_c.value;console.log(`PF2e System | Compendium Browser | ${pack.metadata.label} - ${content.length} entries found`);for(let spell of content)if(spell=spell.data,"spell"===spell.type){spell.compendium=pack.collection,0===spell.data.level.value?spell.data.level.formated="C":11===spell.data.level.value?spell.data.level.formated="F":spell.data.level.formated=spell.data.level.value;const classIntersection=classList.filter((x=>spell.data.traits.value.includes(x)));if(0!==classIntersection.length&&(classes.add(classIntersection.join(",")),spell.data.classes={value:classIntersection}),void 0!==spell.data.time.value){let time=spell.data.time.value;-1!==time.indexOf("reaction")&&(time="reaction"),times.add(time)}"reaction"===spell.data.time.value?spell.data.time.img=this._getActionImg("reaction"):"free"===spell.data.time.value?spell.data.time.img=this._getActionImg("free"):spell.data.time.img=this._getActionImg(spell.data.time.value),spells[spell._id]=spell,void 0!==spell.data.school.value&&schools.add(spell.data.school.value),spell.data.rarity=spell.data.traits.rarity?spell.data.traits.rarity:spell.data.rarity?spell.data.rarity:{value:"common"}}}}catch(e_6_1){e_6={error:e_6_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&await _a.call(_b)}finally{if(e_6)throw e_6.error}}const classesObj={};for(const classStr of[...classes].sort())classesObj[classStr]=CONFIG.PF2E.classTraits[classStr];const schoolsObj={};for(const school of[...schools].sort())schoolsObj[school]=CONFIG.PF2E.magicSchools[school];return console.log("PF2e System | Compendium Browser | Finished loading spells"),{classes:classesObj,times:[...times].sort(),schools:schoolsObj,traditions:CONFIG.PF2E.magicTraditions,spells,rarities:CONFIG.PF2E.rarityTraits,spellTraits:CONFIG.PF2E.spellOtherTraits}}static get defaultOptions(){return mergeObject(super.defaultOptions,{classes:[],template:"systems/pf2e/templates/packs/compendium-browser.html",width:800,height:700,resizable:!1,tabs:[{navSelector:".compendium-navigation",contentSelector:".compendium-content",initial:"landing-page"}]})}get title(){return game.i18n.localize("PF2E.CompendiumBrowser.Title")}activateListeners(html){super.activateListeners(html),this.resetFilters(html),html.on("click",".clear-filters",(()=>{this.resetFilters(html),this.filterSpells(html.find(".tab.active li"))})),html.on("click",".item-edit, .actor-edit",(ev=>{const entry=ev.currentTarget.closest(".spell").dataset,id=entry.entryId,compendium=entry.entryCompendium;game.packs.get(compendium).getEntity(id).then((spell=>{spell.sheet.render(!0)}))})),html.find(".draggable").each(((_i,li)=>{li.setAttribute("draggable","true"),li.addEventListener("dragstart",(event=>{const packName=li.dataset.entryCompendium,pack=game.packs.find((p=>p.collection===packName));return pack?(event.dataTransfer.setData("text/plain",JSON.stringify({type:pack.entity,pack:pack.collection,id:li.dataset.entryId})),!0):(event.preventDefault(),!1)}),!1)})),html.on("click",".filtercontainer h3",(ev=>{$(ev.target.nextElementSibling).toggle(100)})),html.on("contextmenu","input[name=textFilter]",(()=>{html.find(".hint").toggle(100)})),html.on("change","select[name=sortorder]",(ev=>{const spellList=html.find(".tab.active li"),byName="true"===ev.target.value,sortedList=this.sortSpells(spellList,byName),ol=$(html.find(".tab.active ul"));ol[0].innerHTML="";for(const element of sortedList)ol[0].append(element)})),html.on("change paste","input[name=textFilter]",(ev=>{this.sorters.text=ev.target.value,this.filterSpells(html.find(".tab.active li"))})),html.on("change","#timefilter select",(ev=>{this.sorters.castingtime=ev.target.value,this.filterSpells(html.find(".tab.active li"))})),html.on("click","input[type=checkbox]",(ev=>{const filterType=ev.target.name.split(/-(.+)/)[0],filterTarget=ev.target.name.split(/-(.+)/)[1],filterValue=ev.target.checked;Object.keys(this.filters).includes(filterType)&&(this.filters[filterType][filterTarget]=filterValue,this.filters[filterType]=this.clearObject(this.filters[filterType])),this.filterSpells(html.find(".tab.active li"))})),html.on("input change paste","input[name*=Bound]",(ev=>{const type=ev.target.name.split("-")[1],parentDiv=ev.target.parentElement,lowerBoundElement=parentDiv.querySelector("input[name*=lowerBound]"),upperBoundElement=parentDiv.querySelector("input[name*=upperBound]");this.ranges[type].lowerBound=lowerBoundElement.value,this.ranges[type].upperBound=upperBoundElement.value,this.filterSpells(html.find(".tab.active li"))})),html.on("click","button.save-settings",(_ev=>{const formData=new FormData(html.find(".compendium-browser-settings form")[0]);for(const[t,packs]of Object.entries(this.settings))for(const[key,pack]of Object.entries(packs))pack.load=formData.has(`${t}-${key}`);game.settings.set("pf2e","compendiumBrowserPacks",JSON.stringify(this.settings))})),html.on("click",".take-item",(_ev=>{const id=_ev.currentTarget.closest(".spell").dataset.entryId;this.addPhysicalItesToSelectedTokens(id)}))}addPhysicalItesToSelectedTokens(id){physical_1.PhysicalItemPF2e.createPhysicalItemFromCompendiumId(id).then((item=>{var _a,_b,_c;if(item instanceof others_1.KitPF2e){const kitItems=item.data.data.items;Object.values(kitItems).forEach((kitItem=>this.addPhysicalItesToSelectedTokens(kitItem.id)))}else{const actorsToUpdate=new Set(canvas.tokens.controlled.map((token=>token.actor)));for(const actor of actorsToUpdate){if(void 0===actor)continue;const userHasPermissions=null!==(_a=actor.can(game.user,"update"))&&void 0!==_a&&_a,actorType=null!==(_c=null===(_b=actor.data)||void 0===_b?void 0:_b.type)&&void 0!==_c?_c:"undefined",actorMayContainEquipment="character"===actorType||"loot"===actorType||"npc"===actorType;null!==item&&userHasPermissions&&actorMayContainEquipment?actor.createEmbeddedEntity("OwnedItem",item.data):ui.notifications.error(game.i18n.format("PF2E.ErrorMessage.NoTokenSelected"),{})}}}))}hookCompendiumList(){Hooks.on("renderCompendiumDirectory",((_app,html)=>{if(html.find(".compendium-browser-btn").length)return void console.error("Compendium Browser - Already hooked");const importButton=$('<button class="compendium-browser-btn"><i class="fas fa-fire"></i> Compendium Browser</button>');let target=html.find(".directory-footer");target.length||(target=html.find(".directory-list")),target.append(importButton),importButton.on("click",(ev=>{ev.preventDefault(),this.render(!0)}))})),Hooks.on("renderActorDirectory",((_app,html)=>{if(html.find(".bestiary-browser-btn").length)return void console.error("Compendium Browser - Already hooked");const bestiaryImportButton=$('<button class="bestiary-browser-btn"><i class="fas fa-fire"></i> Bestiary Browser</button>');game.user.isGM&&html.find(".directory-footer").append(bestiaryImportButton),bestiaryImportButton.on("click",(ev=>{ev.preventDefault(),this.openTab("bestiary")}))}))}clearObject(obj){return Object.fromEntries(Object.entries(obj).filter((([_key,value])=>value)))}_getActionImg(action){var _a;return null!==(_a={1:"systems/pf2e/icons/actions/OneAction.webp",2:"systems/pf2e/icons/actions/TwoActions.webp",3:"systems/pf2e/icons/actions/ThreeActions.webp","1 or 2":"systems/pf2e/icons/actions/OneTwoActions.webp","1 to 3":"systems/pf2e/icons/actions/OneThreeActions.webp","2 or 3":"systems/pf2e/icons/actions/TwoThreeActions.webp",free:"systems/pf2e/icons/actions/FreeAction.webp",reaction:"systems/pf2e/icons/actions/Reaction.webp",passive:"systems/pf2e/icons/actions/Passive.webp"}[action])&&void 0!==_a?_a:"systems/pf2e/icons/actions/OneAction.webp"}getData(){return mergeObject({user:game.user,settings:this.settings},this.data)}async filterSpells(li){let counter=0;li.hide();for(const spell of li)this.getFilterResult(spell)&&($(spell).show(),counter+=1,counter%20==0&&await new Promise((r=>setTimeout(r,0))))}getFilterResult(element){var _a;if(""!==this.sorters.text){const searches=this.sorters.text.split(",");for(const search of searches)if(-1===search.indexOf(":")){if(!normaliseString($(element).find(".spell-name a")[0].innerHTML).includes(normaliseString(search)))return!1}else{const targetValue=search.split(":")[1].trim(),targetStat=search.split(":")[0];if(!normaliseString(null!==(_a=element.dataset[targetStat])&&void 0!==_a?_a:"").includes(normaliseString(targetValue)))return!1}}if("null"!==this.sorters.castingtime){if(element.dataset.time!==this.sorters.castingtime)return!1}for(const filter of Object.keys(this.filters))if(Object.keys(this.filters[filter]).length>0){const filteredElements=element.dataset[filter];let hide=!0;if(filteredElements)for(const e of filteredElements.split(","))if(!0===this.filters[filter][e.trim()]){hide=!1;break}if(hide)return!1}return this.isWithinFilteredBounds(element)}isWithinFilteredBounds(element){var _a;const rangeIdentifiers=Object.keys(this.ranges);for(const range of rangeIdentifiers){const lowerBound=this.ranges[range].lowerBound,upperBound=this.ranges[range].upperBound,filter=Number(null!==(_a=element.dataset[range])&&void 0!==_a?_a:0);if(filter<lowerBound||upperBound<filter)return!1}return!0}resetFilters(html){this.sorters={text:"",castingtime:"null"},this.filters={level:{},complex:{},classes:{},skills:{},ancestry:{},school:{},traditions:{},armortype:{},group:{},traits:{},itemtypes:{},rarity:{},weapontype:{},proficiencies:{},actorsize:{},alignment:{},source:{},feattype:{}},this.ranges={level:{lowerBound:-1,upperBound:30}},html.find(".tab.browser input[name=textFilter]").val(""),html.find(".tab.browser input[name=timefilter]").val("null"),html.find(".tab.browser input[type=checkbox]").prop("checked",!1)}sortSpells(list,byName){const mappedList=byName?list.map(((i,li)=>({value:$(li).find(".spell-name a")[0].innerHTML,li,i}))).toArray():list.map(((i,li)=>({value:parseInt(li.dataset.level||"-10",10),li,i}))).toArray();return mappedList.sort(((a,b)=>{const aName=a.value,bName=b.value;return aName<bName?-1:aName>bName?1:a.i-b.i})),mappedList.map((mapping=>mapping.li))}}exports.compendiumBrowser=new CompendiumBrowser},2472:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PackFolderPF2e=void 0;exports.PackFolderPF2e=class extends Array{constructor(items=[],{id,name,type,parent=null,expanded=!1}){super(...items),this.subfolders=[],this.id=id,this.type=type,this.name=name,this.parent=parent,this.expanded=expanded}get private(){return this.every((pack=>pack.private))&&this.subfolders.every((folder=>folder.private))}get visible(){return game.user.isGM||this.some((pack=>!pack.private))||this.subfolders.some((folder=>folder.visible))}push(summaryData){const packID=`pf2e.${summaryData.metadata.name}`,compendium=game.packs.get(packID);return(null==compendium?void 0:compendium.entity)===this.type?super.push(summaryData):this.length}}},4136:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CompendiumDirectoryPF2e=void 0;const localize_1=__webpack_require__(1608),utils_1=__webpack_require__(4930),folder_1=__webpack_require__(2472);class CompendiumDirectoryPF2e extends CompendiumDirectory{constructor(){super(...arguments),this.folders=new Map}static get defaultOptions(){return Object.assign(Object.assign({},super.defaultOptions),{template:"systems/pf2e/templates/system/ui/compendium-directory.html",filters:[{inputSelector:'input[name="search"]',contentSelector:CompendiumDirectoryPF2e.contentSelector}],renderUpdateKeys:["name","permission","sort","folder"]})}getData(options){var _a,_b,_c,_d,_e;const packSettings=game.settings.get("core","compendiumConfiguration");for(const pack of game.packs){const metadata=pack.metadata;"pf2e"!==metadata.package&&(delete metadata.folder,delete metadata.private);const packKey=`${metadata.package}.${metadata.name}`;pack.private=null!==(_c=null!==(_b=null===(_a=packSettings[packKey])||void 0===_a?void 0:_a.private)&&void 0!==_b?_b:metadata.private)&&void 0!==_c&&_c}const data=super.getData(options),packSummaries=Object.values(data.packs);for(const summary of packSummaries)summary.title=null!==(_e=null===(_d=localize_1.LocalizePF2e.translations.PF2E[summary.label])||void 0===_d?void 0:_d.Plural)&&void 0!==_e?_e:summary.label,this.setupFolders(summary);return data}setupFolders(summary){const summaryFolders=[];summary.folders=summaryFolders;const inFolders=summary.packs.filter((summaryData=>!!summaryData.metadata.folder));for(const summaryData of inFolders){const folder=summaryData.metadata.folder.split("/").reduce(((folder,folderPart)=>{const newFolder=this.findOrCreateFolder(folder,summaryData,folderPart);return this.folders.set(newFolder.id,newFolder),summaryFolders.includes(newFolder)||newFolder.parent||summaryFolders.push(newFolder),newFolder}),null);folder&&!folder.some((pack=>pack===summaryData))&&folder.push(summaryData)}}findOrCreateFolder(parent,summaryData,folderPart){var _a,_b;const metadata=summaryData.metadata,folderID=parent?`${parent.id}/${folderPart}`:`${metadata.package}.${folderPart}`,existingFolder=this.folders.get(folderID);if(existingFolder)return existingFolder;const folderName=null!==(_a=localize_1.LocalizePF2e.translations.PF2E.CompendiumDirectory.Folders[folderID.replace(/^[^.]+\./,"")])&&void 0!==_a?_a:folderPart,flagKey=`compendiumFolders.${folderID}.expanded`,newFolder=new folder_1.PackFolderPF2e([],{id:folderID,name:folderName,type:metadata.entity,parent,expanded:game.user.getFlag("pf2e",flagKey)});return null===(_b=null==parent?void 0:parent.subfolders)||void 0===_b||_b.push(newFolder),newFolder}activateListeners($html){super.activateListeners($html);for(const filter of this._searchFilters)for(const compendiumList of $html)filter.bind(compendiumList);$html.find("header.folder-header").on("click",(event=>{this.toggleFolder(event)})),$html.find("li.compendium-pack").on("click",(event=>{const $li=$(event.currentTarget),$icon=$li.find("i.folder");$icon.removeClass(["fa-folder","fa-folder-open"]),"1"===$li.attr("data-open")&&$icon.removeClass("fa-atlas").addClass("fa-book-open")}));const original=Compendium.prototype.close;Compendium.prototype.close=async function(){const packID=`${this.metadata.package}.${this.metadata.name}`,$icon=$html.find(`li.compendium-pack[data-pack="${packID}"]`).find("h4.pack-title i.folder");await original.apply(this),$icon.removeClass(["fa-folder","fa-book-open"]).addClass("fa-atlas")}}_canDragDrop(){return game.user.hasPermission("ACTOR_CREATE")}_onSearchFilter(_event,query,_html){const $compendia=$(CompendiumDirectoryPF2e.contentSelector).find("li.compendium-pack"),isSearch=!!query,regexp=new RegExp(this.escape(query),"i"),$filteredRows=isSearch?$compendia.filter(((_i,row)=>{var _a;return regexp.test((null!==(_a=$(row).find("h4 a").text())&&void 0!==_a?_a:"").trim())})):$compendia;$filteredRows.css({display:"list-item"});$compendia.not($filteredRows).css({display:"none"});const $filteredFolders=$filteredRows.parents("li.folder");$filteredFolders.filter("li.folder.collapsed").children("header.folder-header").trigger("click");$compendia.parents("li.folder:not(.collapsed)").not($filteredFolders).children("header.folder-header").trigger("click")}toggleFolder(event){const $folder=$(event.currentTarget.parentElement),folderID=$folder.data("folder-id"),folder=this.folders.get(folderID);if(!folder)throw utils_1.ErrorPF2e("Unexpected failure to find folder");folder.expanded?(folder.expanded=!1,$folder.addClass("collapsed")):(folder.expanded=!0,$folder.removeClass("collapsed"));const flagKey=`compendiumFolders.${folder.id}.expanded`;game.user.setFlag("pf2e",flagKey,folder.expanded),this.popOut&&this.setPosition()}escape(text){return text.replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&")}}exports.CompendiumDirectoryPF2e=CompendiumDirectoryPF2e,CompendiumDirectoryPF2e.contentSelector="ol.compendium-list"},915:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ChatMessagePF2e=void 0;const cards_1=__webpack_require__(1211);class ChatMessagePF2e extends ChatMessage{async render(force,options){const $html=await super.render(force,options);return cards_1.ChatCards.listen($html),$html}}exports.ChatMessagePF2e=ChatMessagePF2e},1211:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ChatCards=void 0;const base_1=__webpack_require__(9978),base_2=__webpack_require__(5180),others_1=__webpack_require__(5079);exports.ChatCards={listen:$html=>{$html.on("click",".card-buttons button",(async event=>{var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k;event.preventDefault();const button=$(event.currentTarget),messageId=null!==(_a=button.parents(".message").attr("data-message-id"))&&void 0!==_a?_a:"",senderId=null!==(_d=null===(_c=null===(_b=game.messages.get(messageId))||void 0===_b?void 0:_b.user)||void 0===_c?void 0:_c._id)&&void 0!==_d?_d:"",card=button.parents(".chat-card"),action=button.attr("data-action");if(!game.user.isGM&&game.user._id!==senderId&&"save"!==action)return;let actor;const tokenKey=card.attr("data-token-id");if(tokenKey){const[sceneId,tokenId]=tokenKey.split(".");let token;if(sceneId===(null===(_e=canvas.scene)||void 0===_e?void 0:_e._id))token=canvas.tokens.get(tokenId);else{const scene=game.scenes.get(sceneId);if(!scene)return;const tokenData=scene.data.tokens.find((t=>t._id===tokenId));tokenData&&(token=new Token(tokenData,scene))}if(!token)return;actor=base_1.ActorPF2e.fromToken(token)}else actor=game.actors.get(null!==(_f=card.attr("data-actor-id"))&&void 0!==_f?_f:"");if(!actor)return;const itemId=null!==(_g=card.attr("data-item-id"))&&void 0!==_g?_g:"";let itemData,item=null;const embeddedItem=$(event.target).parents(".item-card").attr("data-embedded-item");if(embeddedItem?(itemData=JSON.parse(embeddedItem),itemData&&(item=null!==(_h=actor.items.get(itemData._id))&&void 0!==_h?_h:await base_2.ItemPF2e.createOwned(itemData,actor))):(item=actor.getOwnedItem(itemId),itemData=null==item?void 0:item.data),item&&itemData){const strike=null===(_j=actor.data.data.actions)||void 0===_j?void 0:_j.find((a=>a.item===itemId)),rollOptions=null===(_k=actor)||void 0===_k?void 0:_k.getRollOptions(["all","attack-roll"]);"weaponAttack"===action?strike&&rollOptions?strike.variants[0].roll({event,options:rollOptions}):item.rollWeaponAttack(event):"weaponAttack2"===action?strike&&rollOptions?strike.variants[1].roll({event,options:rollOptions}):item.rollWeaponAttack(event,2):"weaponAttack3"===action?strike&&rollOptions?strike.variants[2].roll({event,options:rollOptions}):item.rollWeaponAttack(event,3):"weaponDamage"===action?strike&&rollOptions?strike.damage({event,options:rollOptions}):item.rollWeaponDamage(event):"weaponDamageCritical"===action||"criticalDamage"===action?strike&&rollOptions?strike.critical({event,options:rollOptions}):item.rollWeaponDamage(event,!0):"npcAttack"===action&&item instanceof others_1.MeleePF2e?item.rollNPCAttack(event):"npcAttack2"===action&&item instanceof others_1.MeleePF2e?item.rollNPCAttack(event,2):"npcAttack3"===action&&item instanceof others_1.MeleePF2e?item.rollNPCAttack(event,3):"npcDamage"===action&&item instanceof others_1.MeleePF2e?item.rollNPCDamage(event):"npcDamageCritical"===action&&item instanceof others_1.MeleePF2e?item.rollNPCDamage(event,!0):"spellAttack"===action?item.rollSpellAttack(event):"spellAttack2"===action?item.rollSpellAttack(event,2):"spellAttack3"===action?item.rollSpellAttack(event,3):"spellDamage"===action?item.rollSpellDamage(event):"spellCounteract"===action?item.rollCounteract(event):"consume"===action?item.rollConsumable(event):"save"===action&&base_1.ActorPF2e.rollSave(event,item)}else{const strikeIndex=card.attr("data-strike-index"),strikeName=card.attr("data-strike-name"),strikeAction=actor.data.data.actions[Number(strikeIndex)];if(strikeAction&&strikeAction.name===strikeName){const options=actor.getRollOptions(["all","attack-roll"]);"strikeAttack"===action?strikeAction.variants[0].roll({event,options}):"strikeAttack2"===action?strikeAction.variants[1].roll({event,options}):"strikeAttack3"===action?strikeAction.variants[2].roll({event,options}):"strikeDamage"===action?strikeAction.damage({event,options}):"strikeCritical"===action&&strikeAction.critical({event,options})}}}))}}},2985:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CombatPF2e=void 0;class CombatPF2e extends Combat{async createEmbeddedEntity(embeddedName,data,options={}){const createData=(Array.isArray(data)?data:[data]).filter((datum=>{const token=canvas.tokens.placeables.find((canvasToken=>canvasToken.id===datum.tokenId));return void 0!==token&&(null===token.actor?(ui.notifications.warn(`${token.name} has no associated actor.`),!1):"loot"!==token.actor.type||(ui.notifications.info(`Excluding loot token ${token.name}.`),!1))}));return super.createEmbeddedEntity(embeddedName,createData,options)}_getInitiativeFormula(combatant){var _a,_b,_c,_d;const{actor}=combatant;if(!actor)return"1d20";const actorType=actor.data.type,data=actor?actor.data.data:{};let bonus;const modifierEnabledInit=null===(_b=null===(_a=data.attributes)||void 0===_a?void 0:_a.initiative)||void 0===_b?void 0:_b.totalModifier;bonus="hazard"===actorType?data.attributes.stealth.value:void 0!==modifierEnabledInit?modifierEnabledInit:data.attributes.perception.value;const parts=["1d20",bonus||0];return((data.attributes.initiative||{}).circumstance||0)+((data.attributes.initiative||{}).status||0)!==0&&parts.push(((null===(_c=data.attributes.initiative)||void 0===_c?void 0:_c.circumstance)||0)+((null===(_d=data.attributes.initiative)||void 0===_d?void 0:_d.status)||0)),actor.hasPlayerOwner||parts.push(.5),parts.join("+")}}exports.CombatPF2e=CombatPF2e},5330:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConditionManager=void 0;const modifiers_1=__webpack_require__(6243),status_effects_1=__webpack_require__(7839);class ConditionManager{static get conditions(){return ConditionManager.__conditionsCache||(ConditionManager.__conditionsCache=new Map,ConditionManager._compediumConditions.forEach(((condition,name)=>ConditionManager.__conditionsCache.set(name,duplicate(condition)))),ConditionManager._customConditions.forEach(((condition,name)=>ConditionManager.__conditionsCache.set(name,duplicate(condition)))),Object.freeze(ConditionManager.__conditionsCache)),ConditionManager.__conditionsCache}static get conditionsNames(){return Array.from(ConditionManager._compediumConditions.keys()).concat(Array.from(ConditionManager._customConditions.keys())).values()}static get statusNames(){return Array.from(ConditionManager._compendiumConditionStatusNames.keys()).concat(Array.from(ConditionManager._customStatusNames.keys())).values()}static async init(){const content=await game.packs.get("pf2e.conditionitems").getContent();for(const condition of content)ConditionManager._compediumConditions.set(condition.name.toLowerCase(),condition.data),ConditionManager._compendiumConditionStatusNames.set(condition.data.data.hud.statusName,condition.data);Object.freeze(ConditionManager._compediumConditions),Object.freeze(ConditionManager._compendiumConditionStatusNames)}static getCondition(conditionKey){conditionKey=conditionKey.toLocaleLowerCase();const condition=ConditionManager._customConditions.has(conditionKey)?duplicate(ConditionManager._customConditions.get(conditionKey)):duplicate(ConditionManager._compediumConditions.get(conditionKey));if(!condition)throw Error("PF2e System | Unexpected failure looking up condition");return condition}static getConditionByStatusName(statusName){if(ConditionManager._customStatusNames.has(statusName))return duplicate(ConditionManager._customStatusNames.get(statusName));{const conditionData=ConditionManager._compendiumConditionStatusNames.get(statusName);return void 0===conditionData?void 0:duplicate(conditionData)}}static createCustomCondition(name,data){return name=name.toLocaleLowerCase(),!ConditionManager._customConditions.has(name)&&(data.flags.pf2e||(data.flags.pf2e={}),data.flags.pf2e.condition=!0,ConditionManager._customConditions.set(name,data),ConditionManager._customStatusNames.set(data.data.hud.statusName,data),!0)}static deleteCustomCondition(name){return name=name.toLocaleLowerCase(),!!ConditionManager._customConditions.has(name)&&(ConditionManager._customConditions.delete(name),!0)}static __processValuedCondition(conditions,updates){let appliedCondition;return conditions.forEach((condition=>{if(void 0===appliedCondition||condition.data.value.value>appliedCondition.data.value.value){if(!condition.data.active){const update=updates.has(condition._id)?updates.get(condition._id):duplicate(condition);update.data.active=!0,updates.set(update._id,update)}if(appliedCondition)if(appliedCondition.data.active){const update=updates.has(appliedCondition._id)?updates.get(appliedCondition._id):duplicate(appliedCondition);update.data.active=!1,updates.set(update._id,update)}else updates.delete(appliedCondition._id);appliedCondition=condition}else if(condition.data.active){const update=updates.has(condition._id)?updates.get(condition._id):duplicate(condition);update.data.active=!1,updates.set(update._id,update)}ConditionManager.__clearOverrides(condition,updates)})),appliedCondition}static __processToggleCondition(conditions,updates){let appliedCondition;return conditions.forEach((condition=>{if(void 0===appliedCondition&&(appliedCondition=condition),condition._id!==appliedCondition._id||condition.data.active){if(condition._id!==appliedCondition._id&&condition.data.active){const update=updates.has(condition._id)?updates.get(condition._id):duplicate(condition);update.data.active=!1,updates.set(update._id,update)}}else{const update=updates.has(condition._id)?updates.get(condition._id):duplicate(condition);update.data.active=!0,updates.set(update._id,update)}ConditionManager.__clearOverrides(condition,updates)})),appliedCondition}static __clearOverrides(condition,updates){if(condition.data.references.overrides.length){const update=updates.has(condition._id)?updates.get(condition._id):duplicate(condition);update.data.references.overrides.splice(0,update.data.references.overriddenBy.length),updates.set(update._id,update)}if(condition.data.references.overriddenBy.length){const update=updates.has(condition._id)?updates.get(condition._id):duplicate(condition);update.data.references.overriddenBy.splice(0,update.data.references.overriddenBy.length),updates.set(update._id,update)}}static __processOverride(overridden,overrider,updates){if(overridden.data.active){const update=updates.has(overridden._id)?updates.get(overridden._id):duplicate(overridden);update.data.active=!1,updates.set(update._id,update)}if(!overridden.data.references.overriddenBy.some((i=>i.id===overrider._id))){const update=updates.has(overridden._id)?updates.get(overridden._id):duplicate(overridden);update.data.references.overriddenBy.push({id:overrider._id,type:"condition"}),updates.set(update._id,update)}if(!overrider.data.references.overrides.some((i=>i.id===overridden._id))){const update=updates.has(overrider._id)?updates.get(overrider._id):duplicate(overrider);update.data.references.overrides.push({id:overridden._id,type:"condition"}),updates.set(update._id,update)}}static async processConditions(token){const conditions=token.actor.data.items.filter((c=>{var _a;return(null===(_a=c.flags.pf2e)||void 0===_a?void 0:_a.condition)&&"condition"===c.type})),updates=new Map,appliedConditions=new Map,baseList=new Set,overriding=[];conditions.forEach((condition=>{if(!baseList.has(condition.data.base)){const base=condition.data.base;baseList.add(base);const list=conditions.filter((c=>c.data.base===base));let appliedCondition;appliedCondition=ConditionManager.getCondition(base).data.value.isValued?ConditionManager.__processValuedCondition(list,updates):ConditionManager.__processToggleCondition(list,updates),appliedConditions.set(base,appliedCondition),appliedCondition.data.overrides.length&&overriding.push(base)}})),overriding.forEach((base=>{const overrider=updates.has(appliedConditions.get(base)._id)?updates.get(appliedConditions.get(base)._id):appliedConditions.get(base);overrider.data.overrides.forEach((overriddenBase=>{appliedConditions.has(overriddenBase)&&(appliedConditions.delete(overriddenBase),conditions.filter((c=>c.data.base===overriddenBase)).forEach((c=>{const overridden=updates.has(c._id)?updates.get(c._id):c;ConditionManager.__processOverride(overridden,overrider,updates)})))}))})),updates.size&&await token.actor.updateEmbeddedEntity("OwnedItem",Array.from(updates.values())),token.hasActiveHUD&&await status_effects_1.StatusEffects._updateHUD(canvas.tokens.hud.element,token)}static getModifiersFromConditions(conditions){const conditionModifiers=new Map;for(const condition of conditions)for(const modifier of condition.data.modifiers)conditionModifiers.has(modifier.group)||conditionModifiers.set(modifier.group,[]),condition.data.value.isValued?conditionModifiers.get(modifier.group).push(new modifiers_1.ModifierPF2e(condition.name,-condition.data.value.value,modifier.type)):conditionModifiers.get(modifier.group).push(new modifiers_1.ModifierPF2e(condition.name,modifier.value,modifier.type));return conditionModifiers}static async addConditionToToken(name,token){const condition="string"==typeof name?ConditionManager.getCondition(name):name,returnValue=await ConditionManager._addConditionEntity(condition,token);return ConditionManager.processConditions(token),returnValue}static async _addConditionEntity(condition,token){let item=await token.actor.createEmbeddedEntity("OwnedItem",condition);if(!token.data.actorLink)for(const itemData of token.actor.data.items.reverse())if(itemData.name===condition.name&&"condition"===itemData.type){item=itemData;break}let needsItemUpdate=!1;const itemUpdate=duplicate(item);for(const linkedConditionName of condition.data.alsoApplies.linked){const c=ConditionManager.getCondition(linkedConditionName.condition);linkedConditionName.value&&(c.data.value.value=linkedConditionName.value),c.data.references.parent={id:item._id,type:"condition"},c.data.sources.hud=condition.data.sources.hud;const linkedItem=await ConditionManager._addConditionEntity(c,token);itemUpdate.data.references.children.push({id:linkedItem._id,type:"condition"}),needsItemUpdate=!0}for(const unlinkedConditionName of condition.data.alsoApplies.unlinked){const c=ConditionManager.getCondition(unlinkedConditionName.condition);unlinkedConditionName.value&&(c.name=`${c.name} ${c.data.value.value}`,c.data.value.value=unlinkedConditionName.value),c.data.sources.hud=condition.data.sources.hud,await ConditionManager._addConditionEntity(c,token)}return needsItemUpdate&&await token.actor.updateEmbeddedEntity("OwnedItem",itemUpdate),item}static async removeConditionFromToken(id,token){id=id instanceof Array?id:[id],await ConditionManager._deleteConditionEntity(id,token),ConditionManager.processConditions(token)}static async _deleteConditionEntity(ids,token){const list=[],stack=new Array(...ids);for(;stack.length;){const id=stack.pop(),condition=token.actor.data.items.find((i=>i._id===id));condition&&(list.push(id),condition.data.references.children.forEach((child=>stack.push(child.id))))}await token.actor.deleteEmbeddedEntity("OwnedItem",list)}static async updateConditionValue(id,token,value){const condition=token.actor.data.items.find((i=>i._id===id));if(condition)if(0===value)await ConditionManager._deleteConditionEntity([id],token);else{const update=duplicate(condition);update.data.value.value=value,await token.actor.updateEmbeddedEntity("OwnedItem",update),console.log(`PF2e System | Setting condition '${condition.name}' to ${value}.`)}ConditionManager.processConditions(token)}static getFlattenedConditions(items){const conditions=new Map;return items.sort(((a,b)=>ConditionManager.__sortCondition(a,b))).forEach((c=>{let condition,name=`${c.data.base}`;if(c.data.value.isValued&&(name=`${name} ${c.data.value.value}`),conditions.has(name)?condition=conditions.get(name):(condition={id:c._id,active:c.data.active,name,value:c.data.value.isValued?c.data.value.value:void 0,description:c.data.description.value,img:c.img,references:!1,parents:[],children:[],overrides:[],overriddenBy:[],immunityFrom:[]},conditions.set(name,condition)),c.data.references.parent){const refCondition=items.find((i=>i._id===c.data.references.parent.id));if(refCondition){const ref={id:c.data.references.parent,name:refCondition.name,base:refCondition.data.base,text:""};refCondition.data.value.isValued&&(ref.name=`${ref.name} ${refCondition.data.value.value}`),ref.text=`@Compendium[pf2e.conditionitems.${refCondition.data.base}]{${ref.name}}`,condition.references=!0,condition.parents.push(ref)}}c.data.references.children.forEach((item=>{const refCondition=items.find((i=>i._id===item.id));if(refCondition){const ref={id:c.data.references.parent,name:refCondition.name,base:refCondition.data.base,text:""};refCondition.data.value.isValued&&(ref.name=`${ref.name} ${refCondition.data.value.value}`),ref.text=`@Compendium[pf2e.conditionitems.${refCondition.data.base}]{${ref.name}}`,condition.references=!0,condition.children.push(ref)}})),c.data.references.overrides.forEach((item=>{const refCondition=items.find((i=>i._id===item.id));if(refCondition){const ref={id:c.data.references.parent,name:refCondition.name,base:refCondition.data.base,text:""};refCondition.data.value.isValued&&(ref.name=`${ref.name} ${refCondition.data.value.value}`),ref.text=`@Compendium[pf2e.conditionitems.${refCondition.data.base}]{${ref.name}}`,condition.references=!0,condition.overrides.push(ref)}})),c.data.references.overriddenBy.forEach((item=>{const refCondition=items.find((i=>i._id===item.id));if(refCondition){const ref={id:c.data.references.parent,name:refCondition.name,base:refCondition.data.base,text:""};refCondition.data.value.isValued&&(ref.name=`${ref.name} ${refCondition.data.value.value}`),ref.text=`@Compendium[pf2e.conditionitems.${refCondition.data.base}]{${ref.name}}`,condition.references=!0,condition.overriddenBy.push(ref)}})),c.data.references.immunityFrom.forEach((item=>{const refCondition=items.find((i=>i._id===item.id));if(refCondition){const ref={id:c.data.references.parent,name:refCondition.name,base:refCondition.data.base,text:""};refCondition.data.value.isValued&&(ref.name=`${ref.name} ${refCondition.data.value.value}`),ref.text=`@Compendium[pf2e.conditionitems.${refCondition.data.base}]{${ref.name}}`,condition.references=!0,condition.immunityFrom.push(ref)}}))})),Array.from(conditions.values())}static __sortCondition(a,b){return a.data.active===b.data.active?a.data.base===b.data.base?a.data.value.isValued?b.data.value.value-a.data.value.value:0:a.data.base.localeCompare(b.data.base):a.data.active&&!b.data.active?-1:!a.data.active&&b.data.active?1:0}}exports.ConditionManager=ConditionManager,ConditionManager._compediumConditions=new Map,ConditionManager._customConditions=new Map,ConditionManager._compendiumConditionStatusNames=new Map,ConditionManager._customStatusNames=new Map,ConditionManager.__conditionsCache=void 0},2292:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.createDifficultyScale=exports.combineDCAdjustments=exports.calculateSpellDC=exports.calculateSimpleDC=exports.calculateDC=exports.adjustDCByRarity=exports.adjustDC=exports.rarityToDCAdjustment=void 0;const adjustmentScale=["incredibly easy","very easy","easy","normal","hard","very hard","incredibly hard"],dcAdjustments=new Map;dcAdjustments.set("incredibly easy",-10),dcAdjustments.set("very easy",-5),dcAdjustments.set("easy",-2),dcAdjustments.set("normal",0),dcAdjustments.set("hard",2),dcAdjustments.set("very hard",5),dcAdjustments.set("incredibly hard",10);const dcByLevel=new Map;dcByLevel.set(-1,13),dcByLevel.set(0,14),dcByLevel.set(1,15),dcByLevel.set(2,16),dcByLevel.set(3,18),dcByLevel.set(4,19),dcByLevel.set(5,20),dcByLevel.set(6,22),dcByLevel.set(7,23),dcByLevel.set(8,24),dcByLevel.set(9,26),dcByLevel.set(10,27),dcByLevel.set(11,28),dcByLevel.set(12,30),dcByLevel.set(13,31),dcByLevel.set(14,32),dcByLevel.set(15,34),dcByLevel.set(16,35),dcByLevel.set(17,36),dcByLevel.set(18,38),dcByLevel.set(19,39),dcByLevel.set(20,40),dcByLevel.set(21,42),dcByLevel.set(22,44),dcByLevel.set(23,46),dcByLevel.set(24,48),dcByLevel.set(25,50);const simpleDCs=new Map;simpleDCs.set("untrained",10),simpleDCs.set("trained",15),simpleDCs.set("expert",20),simpleDCs.set("master",30),simpleDCs.set("legendary",40);const simpleDCsWithoutLevel=new Map;function rarityToDCAdjustment(rarity="common"){return"uncommon"===rarity?"hard":"rare"===rarity?"very hard":"unique"===rarity?"incredibly hard":"normal"}function adjustDC(dc,adjustment="normal"){return dc+dcAdjustments.get(adjustment)}function calculateDC(level,{proficiencyWithoutLevel=!1}={}){var _a;const dc=null!==(_a=dcByLevel.get(level))&&void 0!==_a?_a:14;return proficiencyWithoutLevel?dc-Math.max(level,0):dc}simpleDCsWithoutLevel.set("untrained",10),simpleDCsWithoutLevel.set("trained",15),simpleDCsWithoutLevel.set("expert",20),simpleDCsWithoutLevel.set("master",25),simpleDCsWithoutLevel.set("legendary",30),exports.rarityToDCAdjustment=rarityToDCAdjustment,exports.adjustDC=adjustDC,exports.adjustDCByRarity=function(dc,rarity="common"){return adjustDC(dc,rarityToDCAdjustment(rarity))},exports.calculateDC=calculateDC,exports.calculateSimpleDC=function(rank,{proficiencyWithoutLevel=!1}={}){var _a,_b;return proficiencyWithoutLevel?null!==(_a=simpleDCsWithoutLevel.get(rank))&&void 0!==_a?_a:10:null!==(_b=simpleDCs.get(rank))&&void 0!==_b?_b:10},exports.calculateSpellDC=function(spellLevel,{proficiencyWithoutLevel=!1}={}){return calculateDC(2*spellLevel-1,{proficiencyWithoutLevel})},exports.combineDCAdjustments=function(first,second){const startingIndex=adjustmentScale.indexOf(first),lowerByIndex=adjustmentScale.indexOf(second),resultIndex=Math.min(Math.max(startingIndex+lowerByIndex-3,0),6);return adjustmentScale[resultIndex]},exports.createDifficultyScale=function(dc,startAt){const beginAtIndex=adjustmentScale.indexOf(startAt);return adjustmentScale.filter(((_value,index)=>index>=beginAtIndex)).map((value=>adjustDC(dc,value)))}},2130:(__unused_webpack_module,exports)=>{"use strict";var DegreeOfSuccess,DegreeAdjustment;function adjustDegreeOfSuccess(adjustment,degreeOfSuccess){return adjustment===DegreeAdjustment.INCREASE?DegreeOfSuccess[DegreeOfSuccess[Math.clamped(degreeOfSuccess+1,0,3)]]:DegreeOfSuccess[DegreeOfSuccess[Math.clamped(degreeOfSuccess-1,0,3)]]}function adjustDegreeByDieValue(dieValue,degreeOfSuccess){return 20===dieValue?adjustDegreeOfSuccess(DegreeAdjustment.INCREASE,degreeOfSuccess):1===dieValue?adjustDegreeOfSuccess(DegreeAdjustment.LOWER,degreeOfSuccess):degreeOfSuccess}Object.defineProperty(exports,"__esModule",{value:!0}),exports.calculateDegreeOfSuccess=exports.adjustDegreeByDieValue=exports.adjustDegreeOfSuccess=exports.DegreeAdjustment=exports.DegreeOfSuccess=void 0,function(DegreeOfSuccess){DegreeOfSuccess[DegreeOfSuccess.CRITICAL_FAILURE=0]="CRITICAL_FAILURE",DegreeOfSuccess[DegreeOfSuccess.FAILURE=1]="FAILURE",DegreeOfSuccess[DegreeOfSuccess.SUCCESS=2]="SUCCESS",DegreeOfSuccess[DegreeOfSuccess.CRITICAL_SUCCESS=3]="CRITICAL_SUCCESS"}(DegreeOfSuccess=exports.DegreeOfSuccess||(exports.DegreeOfSuccess={})),function(DegreeAdjustment){DegreeAdjustment[DegreeAdjustment.LOWER=0]="LOWER",DegreeAdjustment[DegreeAdjustment.INCREASE=1]="INCREASE"}(DegreeAdjustment=exports.DegreeAdjustment||(exports.DegreeAdjustment={})),exports.adjustDegreeOfSuccess=adjustDegreeOfSuccess,exports.adjustDegreeByDieValue=adjustDegreeByDieValue,exports.calculateDegreeOfSuccess=function(roll,dc){const total=roll.dieValue+roll.modifier;return adjustDegreeByDieValue(roll.dieValue,total-dc>=10?DegreeOfSuccess.CRITICAL_SUCCESS:dc-total>=10?DegreeOfSuccess.CRITICAL_FAILURE:total>=dc?DegreeOfSuccess.SUCCESS:DegreeOfSuccess.FAILURE)}},847:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.registerHandlebarsHelpers=void 0,exports.registerHandlebarsHelpers=function(){Handlebars.registerHelper("pad",((value,length,character)=>`${value}`.padStart(length,character))),Handlebars.registerHelper("add",((a,b)=>a+b)),Handlebars.registerHelper("if_all",((...args)=>{const opts=args.pop();let{fn}=opts;for(let i=0;i<args.length;++i)if(!args[i]){fn=opts.inverse;break}return fn()})),Handlebars.registerHelper("any",((...args)=>{const opts=args.pop();return args.some((v=>!!v))?opts:opts.inverse})),Handlebars.registerHelper("disabled",(condition=>condition?"disabled":"")),Handlebars.registerHelper("not",(arg=>!arg)),Handlebars.registerHelper("lower",(str=>String.prototype.toLowerCase.call(null!=str?str:""))),Handlebars.registerHelper("multiply",((a,b)=>a*b)),Handlebars.registerHelper("percentage",((value,max)=>100*value/max)),Handlebars.registerHelper("strip_tags",(value=>function(input,allowed){allowed=(`${allowed||""}`.toLowerCase().match(/<[a-z][a-z0-9]*>/g)||[]).join("");const tags=/<\/?([a-z0-9]*)\b[^>]*>?/gi,commentsAndPhpTags=/<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;let before,after=(phpValue=>{if("string"==typeof phpValue)return phpValue;switch(typeof phpValue){case"boolean":return phpValue?"1":"";case"number":return Number.isNaN(phpValue)?"NAN":phpValue===1/0?(phpValue<0?"-":"")+"INF":`${phpValue}`;case"undefined":return"";case"object":return Array.isArray(phpValue)?"Array":null!==phpValue?"Object":"";case"function":default:throw new Error("Unsupported value type")}})(input);after="<"===after.substring(after.length-1)?after.substring(0,after.length-1):after;do{if(before=after,after=before.replace(commentsAndPhpTags,"").replace(tags,(($0,$1)=>allowed.indexOf(`<${$1.toLowerCase()}>`)>-1?$0:"")),before===after)return after}while(before!==after);return""}(String(value)))),Handlebars.registerHelper("enrichHTML",(html=>TextEditor.enrichHTML(html))),Handlebars.registerHelper("json",(html=>JSON.stringify(html)))}},8496:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ABCItemPF2e=void 0;const base_1=__webpack_require__(5180),feat_1=__webpack_require__(5103);class ABCItemPF2e extends base_1.ItemPF2e{async getFeature(entry){if(entry.pack){const pack=game.packs.get(entry.pack),featData=await(null==pack?void 0:pack.getEntry(entry.id));return featData&&"feat"===featData.type?featData:Promise.reject(new Error("Invalid item type referenced in ABCFeatureEntryData"))}{const feat=game.items.get(entry.id);if(void 0===feat||!(feat instanceof feat_1.FeatPF2e))throw Error("Invalid item type referenced in ABCFeatureEntryData");return feat._data}}async deleteExistingFeatures(actor){const existingABCIds=actor.items.entries.flatMap((item=>item.type===this.type&&item.id!==this.id?item.id:[])),existingFeatureIds=actor.itemTypes.feat.filter((feat=>existingABCIds.includes(feat.data.data.location))).map((feat=>feat.id));await actor.deleteEmbeddedEntity("OwnedItem",existingABCIds.concat(existingFeatureIds))}async addFeatures(actor){this.deleteExistingFeatures(actor);const entriesData=Object.values(this.data.data.items),featuresData=await entriesData.map((entryData=>()=>this.getFeature(entryData))).reduce(((promise,getItemData)=>promise.then((retrieved=>getItemData().then((featureData=>(featureData.data.location=this.id,retrieved.concat([featureData]))))))),Promise.resolve([]));await actor.createEmbeddedEntity("OwnedItem",featuresData)}}exports.ABCItemPF2e=ABCItemPF2e},1021:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActionPF2e=void 0;const base_1=__webpack_require__(5180);class ActionPF2e extends base_1.ItemPF2e{prepareData(){return super.prepareData()}getChatData(htmlOptions){const data=this.data.data;let associatedWeapon=null;data.weapon.value&&this.actor&&(associatedWeapon=this.actor.getOwnedItem(data.weapon.value));const properties=[CONFIG.PF2E.actionTypes[data.actionType.value],associatedWeapon?associatedWeapon.name:null].filter((p=>p)),traits=base_1.ItemPF2e.traitChatData(data.traits,CONFIG.PF2E.featTraits);return this.processChatData(htmlOptions,Object.assign(Object.assign({},data),{properties,traits}))}}exports.ActionPF2e=ActionPF2e},939:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AncestryPF2e=void 0;const abc_1=__webpack_require__(8496);class AncestryPF2e extends abc_1.ABCItemPF2e{get hitPoints(){return this.data.data.hp}get speed(){return this.data.data.speed}get size(){return this.data.data.size}}exports.AncestryPF2e=AncestryPF2e},8425:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ArmorPF2e=void 0;const localize_1=__webpack_require__(1608),utils_1=__webpack_require__(4930),physical_1=__webpack_require__(315),runes_1=__webpack_require__(8468);class ArmorPF2e extends physical_1.PhysicalItemPF2e{get isShield(){return"shield"===this.data.data.armorType.value}get isArmor(){return!this.isShield}get category(){return this.data.data.armorType.value}get dexCap(){return this.isShield?null:this.data.data.dex.value}get strength(){return this.isShield?null:this.data.data.strength.value}get checkPenalty(){return this.isShield?null:this.data.data.check.value}get speedPenalty(){return this.data.data.speed.value}get acBonus(){var _a;const potencyRune=Number(null===(_a=this.data.data.potencyRune)||void 0===_a?void 0:_a.value)||0,baseArmor=Number(this.data.data.armor.value)||0;return this.isShield&&this.isBroken?0:baseArmor+potencyRune}get hitPoints(){return{current:this.data.data.hp.value,max:this.data.data.maxHp.value}}get hardness(){return this.data.data.hardness.value}get brokenThreshold(){return this.data.data.brokenThreshold.value}get isBroken(){return this.hitPoints.current<=this.brokenThreshold}prepareData(){super.prepareData();const potencyRune=this.data.data.potencyRune,traits=this.data.data.traits;traits.value=[...traits.value,potencyRune.value?["invested","abjuration"]:[],["arcane","primal","divine","occult"].some((trait=>traits.value.includes(trait)))?[]:"magical"].flat(),traits.value=Array.from(new Set(traits.value))}getChatData(htmlOptions){const data=this.data.data,localize=game.i18n.localize.bind(game.i18n),properties=[CONFIG.PF2E.armorTypes[data.armorType.value],CONFIG.PF2E.armorGroups[data.group.value],`${utils_1.addSign(runes_1.getArmorBonus(data))} ${localize("PF2E.ArmorArmorLabel")}`,`${data.dex.value||0} ${localize("PF2E.ArmorDexLabel")}`,`${data.check.value||0} ${localize("PF2E.ArmorCheckLabel")}`,`${data.speed.value||0} ${localize("PF2E.ArmorSpeedLabel")}`,...data.traits.value,data.equipped.value?localize("PF2E.ArmorEquippedLabel"):null].filter((property=>property));return this.processChatData(htmlOptions,Object.assign(Object.assign({},data),{properties,traits:null}))}generateUnidentifiedName(){var _a;const formatString=localize_1.LocalizePF2e.translations.PF2E.identification.UnidentifiedItem,group=null!==(_a=CONFIG.PF2E.armorGroups[this.data.data.group.value])&&void 0!==_a?_a:null,fallback=this.isShield?"PF2E.ArmorTypeShield":"ITEM.TypeArmor",item=game.i18n.localize(null!=group?group:fallback);return game.i18n.format(formatString,{item})}}exports.ArmorPF2e=ArmorPF2e},1899:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BackgroundPF2e=void 0;const abc_1=__webpack_require__(8496);class BackgroundPF2e extends abc_1.ABCItemPF2e{}exports.BackgroundPF2e=BackgroundPF2e},5180:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ItemPF2e=void 0;const spell_facade_1=__webpack_require__(4715),runes_1=__webpack_require__(8468),modifiers_1=__webpack_require__(6243),dice_1=__webpack_require__(1459),base_1=__webpack_require__(9978),spell_consumables_1=__webpack_require__(9795),trick_magic_item_popup_1=__webpack_require__(1684),rolls_1=__webpack_require__(7540),utils_1=__webpack_require__(4930);class ItemPF2e extends Item{constructor(data,options={}){var _a;if(null===(_a=options.pf2e)||void 0===_a?void 0:_a.ready)delete options.pf2e.ready,super(data,options);else try{const ready={pf2e:{ready:!0}};return new CONFIG.PF2E.Item.entityClasses[data.type](data,Object.assign(Object.assign({},ready),options))}catch(_error){super(data,options),console.warn(`Unrecognized Item type (${data.type}): falling back to PF2EItem`)}}static get defaultImg(){const[typeName]=Object.entries(CONFIG.PF2E.Item.entityClasses).find((([_key,cls])=>cls.name===this.name));return`systems/pf2e/icons/default-icons/${typeName}.svg`}get slug(){return this.data.data.slug}get sourceId(){return this.getFlag("core","sourceId")}get traits(){const rarity=this.data.data.traits.rarity.value;return new Set([rarity].concat(this.data.data.traits.value))}get description(){return this.data.data.description.value}async roll(event){var _a;const template=`systems/pf2e/templates/chat/${this.data.type}-card.html`,{token}=this.actor,contextualData=(event?event.currentTarget.closest(".item"):{}).dataset||{},templateData={actor:this.actor,tokenId:token?`${token.scene._id}.${token.id}`:null,item:this.data,data:this.getChatData(void 0,contextualData)},chatData={user:game.user.id,speaker:{actor:this.actor.id,token:null===(_a=this.actor.token)||void 0===_a?void 0:_a.id,alias:this.actor.name},flags:{core:{canPopout:!0}},type:CONST.CHAT_MESSAGE_TYPES.OTHER},rollMode=game.settings.get("core","rollMode");return["gmroll","blindroll"].includes(rollMode)&&(chatData.whisper=ChatMessage.getWhisperRecipients("GM").map((u=>u._id))),"blindroll"===rollMode&&(chatData.blind=!0),chatData.content=await renderTemplate(template,templateData),ChatMessage.create(chatData,{displaySheet:!1})}processChatData(htmlOptions,data){return(null==data?void 0:data.description)&&(data.description.value=TextEditor.enrichHTML(data.description.value,htmlOptions)),data}getChatData(htmlOptions,_rollOptions){return this.processChatData(htmlOptions,duplicate(this.data.data))}static traitChatData(itemTraits,traitList){let traits=duplicate(itemTraits.value);const customTraits=itemTraits.custom?itemTraits.custom.trim().split(/\s*[,;|]\s*/):[];customTraits.length>0&&(traits=traits.concat(customTraits));return traits.map((trait=>{var _a;return{label:traitList[trait]||trait.charAt(0).toUpperCase()+trait.slice(1),description:null!==(_a=CONFIG.PF2E.traitsDescriptions[trait])&&void 0!==_a?_a:""}}))}rollWeaponAttack(event,multiAttackPenalty=1){if("weapon"!==this.type&&"melee"!==this.type)throw new Error("Wrong item type!");const itemData=this.getChatData(),rollData=duplicate(this.actor.data.data),abl=itemData.isFinesse&&rollData.abilities.dex.mod>rollData.abilities.str.mod?"dex":itemData.ability.value||"str",prof=itemData.weaponType.value||"simple";let parts=["@itemBonus",`@abilities.${abl}.mod`];const title=`${this.name} - Attack Roll${multiAttackPenalty>1?` (MAP ${multiAttackPenalty})`:""}`;"npc"===this.actor.data.type?parts=["@itemBonus"]:itemData.proficiency&&"skill"===itemData.proficiency.type?parts.push(itemData.proficiency.value):parts.push(`@martial.${prof}.value`),rollData.item=itemData,rollData.itemBonus=runes_1.getAttackBonus(itemData),2===multiAttackPenalty?parts.push(itemData.map2):3===multiAttackPenalty&&parts.push(itemData.map3),dice_1.DicePF2e.d20Roll({event,parts,actor:this.actor,data:rollData,rollType:"attack-roll",title,speaker:ChatMessage.getSpeaker({actor:this.actor}),dialogOptions:{width:400,top:event&&event.clientY?event.clientY-80:400,left:window.innerWidth-710}})}rollWeaponDamage(event,critical=!1){var _a;const localize=game.i18n.localize.bind(game.i18n),item=this.data;if("weapon"!==item.type)throw new Error("Wrong item type!");const itemData=item.data,rollData=duplicate(this.actor.data.data);let rollDie=itemData.damage.die;let abilityMod=rollData.abilities.str.mod,parts=[];const partsCritOnly=[],dtype=CONFIG.PF2E.damageTypes[itemData.damage.damageType],traits=itemData.traits.value;let critTrait="",critDie="",bonusDamage=0,twohandedTrait=!1,twohandedDie="",thrownTrait=!1;const critRegex=/\b(deadly|fatal)-(d\d+)/,twohandedRegex=/\b(two-hand)-(d\d+)/,thrownRegex=/\b(thrown)-(\d+)/,hasThiefRacket=this.actor.itemTypes.feat.some((feat=>"thief-racket"===feat.slug)),strikingDice=runes_1.getStrikingDice(itemData);hasThiefRacket&&rollData.abilities.dex.mod>abilityMod&&(abilityMod=rollData.abilities.dex.mod);for(const trait of traits){const critMatch=critRegex.exec(trait),twoHandedMatch=twohandedRegex.exec(trait),thrownMatch=thrownRegex.exec(trait);Array.isArray(critMatch)&&"string"==typeof critMatch[1]&&"string"==typeof critMatch[2]?(critTrait=critMatch[1],critDie=critMatch[2]):Array.isArray(twoHandedMatch)&&"string"==typeof twoHandedMatch[2]?(twohandedTrait=!0,twohandedDie=twoHandedMatch[2]):Array.isArray(thrownMatch)&&(thrownTrait=!0)}twohandedTrait&&itemData.hands.value&&(rollDie=twohandedDie),itemData.bonusDamage&&itemData.bonusDamage.value&&(bonusDamage=parseInt(itemData.bonusDamage.value,10));const damageDice=null!==(_a=itemData.damage.dice)&&void 0!==_a?_a:1;let weaponDamage=damageDice+strikingDice+rollDie;if(parts=[weaponDamage,"@itemBonus"],rollData.itemBonus=bonusDamage,"deadly"===critTrait){const deadlyDamage=(strikingDice>0?strikingDice:1)+critDie;partsCritOnly.push(deadlyDamage)}else"fatal"===critTrait&&(!0===critical&&(weaponDamage=damageDice+strikingDice+critDie,parts=[weaponDamage,"@itemBonus"]),partsCritOnly.push(1+critDie));if("melee"===itemData.range.value||"reach"===itemData.range.value||""===itemData.range.value)parts.push(abilityMod);else if(itemData.traits.value.includes("propulsive")){if(1===Math.sign(this.actor.data.data.abilities.str.mod)){const halfStr=Math.floor(this.actor.data.data.abilities.str.mod/2);parts.push(halfStr)}}else thrownTrait&&parts.push(abilityMod);if(itemData.property1.dice&&itemData.property1.die&&itemData.property1.damageType){const propertyDamage=Number(itemData.property1.dice)+itemData.property1.die;parts.push(propertyDamage)}if(itemData.property1.critDice&&itemData.property1.critDie&&itemData.property1.critDamageType){const propertyDamage=Number(itemData.property1.critDice)+itemData.property1.critDie;partsCritOnly.push(propertyDamage)}const critTitle=critTrait?critTrait.toUpperCase():"";let title=critical?`${localize("PF2E.CriticalDamageLabel")} ${critTitle} ${localize("PF2E.DamageLabel")}: ${this.name}`:`${localize("PF2E.DamageLabel")}: ${this.name}`;dtype&&(title+=` (${dtype})`),rollData.item=itemData,dice_1.DicePF2e.damageRoll({event,parts,partsCritOnly,critical,actor:this.actor?this.actor:void 0,data:rollData,title,speaker:ChatMessage.getSpeaker({actor:this.actor?this.actor:void 0}),dialogOptions:{width:400,top:event.clientY?event.clientY-80:400,left:window.innerWidth-710}})}rollNPCAttack(event,multiAttackPenalty=1){var _a,_b;if("melee"!==this.type)throw utils_1.ErrorPF2e("Wrong item type!");if("npc"!==(null===(_a=this.actor)||void 0===_a?void 0:_a.data.type)&&"hazard"!==(null===(_b=this.actor)||void 0===_b?void 0:_b.data.type))throw utils_1.ErrorPF2e("Attempted to roll an attack without an actor!");const itemData=this.getChatData(),rollData=duplicate(this.actor.data.data),parts=["@itemBonus"],title=`${this.name} - Attack Roll${multiAttackPenalty>1?` (MAP ${multiAttackPenalty})`:""}`;rollData.item=itemData;let adjustment=0;const traits=this.actor.data.data.traits.traits.value;traits.some((trait=>"elite"===trait))?adjustment=2:traits.some((trait=>"weak"===trait))&&(adjustment=-2),rollData.itemBonus=Number(itemData.bonus.value)+adjustment,2===multiAttackPenalty?parts.push(itemData.map2):3===multiAttackPenalty&&parts.push(itemData.map3),dice_1.DicePF2e.d20Roll({event,parts,actor:this.actor,data:rollData,rollType:"attack-roll",title,speaker:ChatMessage.getSpeaker({actor:this.actor}),dialogOptions:{width:400,top:event?event.clientY-80:400,left:window.innerWidth-710}})}rollNPCDamage(event,critical=!1){var _a,_b;if("melee"!==this.data.type)throw utils_1.ErrorPF2e("Wrong item type!");if("npc"!==(null===(_a=this.actor)||void 0===_a?void 0:_a.data.type)&&"hazard"!==(null===(_b=this.actor)||void 0===_b?void 0:_b.data.type))throw utils_1.ErrorPF2e("Attempted to roll an attack without an actor!");const itemData=this.data.data,rollData=duplicate(this.actor.data.data);let parts=[];const partsType=[];itemData.damageRolls&&"object"==typeof itemData.damageRolls?Object.keys(itemData.damageRolls).forEach((key=>{itemData.damageRolls[key].damage&&parts.push(itemData.damageRolls[key].damage),partsType.push(`${itemData.damageRolls[key].damage} ${itemData.damageRolls[key].damageType}`)})):parts=[itemData.damage.die];const title=`${this.name}: ${partsType.join(", ")}`;0===parts.length&&(console.log("PF2e System | No damage parts provided in damage roll"),parts=["0"]);const traits=this.actor.data.data.traits.traits.value;traits.some((trait=>"elite"===trait))?parts.push("+2"):traits.some((trait=>"weak"===trait))&&parts.push("-2"),rollData.item=itemData,dice_1.DicePF2e.damageRoll({event,parts,critical,actor:this.actor,data:rollData,title,speaker:ChatMessage.getSpeaker({actor:this.actor}),dialogOptions:{width:400,top:event.clientY-80,left:window.innerWidth-710}})}rollSpellcastingEntryCheck(event){const itemData=this.data;if("spellcastingEntry"!==itemData.type)throw new Error("Wrong item type!");if(!this.actor)throw new Error("Attempted a spellcasting check without an actor!");const rollData=duplicate(this.actor.data.data),parts=[itemData.data.spelldc.value],title=`${this.name} - Spellcasting Check`,traits=this.actor.data.data.traits.traits.value;traits.some((trait=>"elite"===trait))?parts.push(2):traits.some((trait=>"weak"===trait))&&parts.push(-2),dice_1.DicePF2e.d20Roll({event,parts,data:rollData,title,speaker:ChatMessage.getSpeaker({actor:this.actor}),dialogOptions:{width:400,top:event.clientY-80,left:window.innerWidth-710}})}rollSpellAttack(event,multiAttackPenalty=1){var _a,_b,_c;let item=this.data;if("consumable"===item.type&&(null===(_a=item.data.spell)||void 0===_a?void 0:_a.data)&&(item=item.data.spell.data),"spell"!==item.type)throw new Error("Wrong item type!");if(!this.actor)throw new Error("Attempted to cast a spell without an actor");const trickMagicItemData=item.data.trickMagicItemData,itemData=item.data,rollData=duplicate(this.actor.data.data),spellcastingEntry=null===(_b=this.actor.itemTypes.spellcastingEntry.find((entry=>entry.id===itemData.location.value)))||void 0===_b?void 0:_b.data,useTrickData=!spellcastingEntry;if(useTrickData&&!trickMagicItemData)throw new Error("Spell points to location that is not a spellcasting type");const map=this.calculateMap();if(spellcastingEntry&&(null===(_c=spellcastingEntry.data.attack)||void 0===_c?void 0:_c.roll)){const options=this.actor.getRollOptions(["all","attack-roll","spell-attack-roll"]).concat(...this.traits),modifiers=[];multiAttackPenalty>1&&modifiers.push(new modifiers_1.ModifierPF2e(map.label,map[`map${multiAttackPenalty}`],"untyped")),spellcastingEntry.data.attack.roll({event,options,modifiers})}else{const spellAttack=useTrickData?null==trickMagicItemData?void 0:trickMagicItemData.data.spelldc.value:null==spellcastingEntry?void 0:spellcastingEntry.data.spelldc.value,parts=[Number(spellAttack)||0],title=`${this.name} - Spell Attack Roll`,traits=this.actor.data.data.traits.traits.value;traits.some((trait=>"elite"===trait))?parts.push(2):traits.some((trait=>"weak"===trait))&&parts.push(-2),multiAttackPenalty>1&&parts.push(map[`map${multiAttackPenalty}`]),dice_1.DicePF2e.d20Roll({event,parts,data:rollData,rollType:"attack-roll",title,speaker:ChatMessage.getSpeaker({actor:this.actor}),dialogOptions:{width:400,top:event.clientY-80,left:window.innerWidth-710}})}}static findSpellLevel(event){const card=event.currentTarget.closest("*[data-spell-lvl]"),cardData=card?card.dataset:{};return parseInt(cardData.spellLvl,10)}rollSpellDamage(event){var _a,_b,_c,_d;let item=this.data;if("consumable"===item.type&&(null===(_a=item.data.spell)||void 0===_a?void 0:_a.data)&&(item=item.data.spell.data),"spell"!==item.type)throw new Error("Wrong item type!");const itemData=item.data,rollData=duplicate(this.actor.data.data),isHeal="heal"===itemData.spellType.value,damageType=game.i18n.localize(CONFIG.PF2E.damageTypes[itemData.damageType.value]),spellLvl=ItemPF2e.findSpellLevel(event),spell=new spell_facade_1.SpellFacade(item,{castingActor:this.actor,castLevel:spellLvl}),parts=spell.damageParts,damageLabel=game.i18n.localize(isHeal?"PF2E.SpellTypeHeal":"PF2E.DamageLabel");let title=`${this.name} - ${damageLabel}`;if(damageType&&!isHeal&&(title+=` (${damageType})`),!(null===(_b=spell.spellcastingEntry)||void 0===_b?void 0:_b.data)&&spell.data.data.trickMagicItemData?rollData.mod=rollData.abilities[spell.data.data.trickMagicItemData.ability].mod:rollData.mod=rollData.abilities[null!==(_d=null===(_c=spell.spellcastingEntry)||void 0===_c?void 0:_c.ability)&&void 0!==_d?_d:"int"].mod,rollData.item=itemData,this.isOwned){const traits=this.actor.data.data.traits.traits.value;traits.some((trait=>"elite"===trait))?parts.push(4):traits.some((trait=>"weak"===trait))&&parts.push(-4)}dice_1.DicePF2e.damageRoll({event,parts,data:rollData,actor:this.actor,title,speaker:ChatMessage.getSpeaker({actor:this.actor}),dialogOptions:{width:400,top:event.clientY-80,left:window.innerWidth-710}})}rollCounteract(event){var _a,_b,_c,_d,_e,_f;let item=this.data;if("consumable"===item.type&&(null===(_a=item.data.spell)||void 0===_a?void 0:_a.data)&&(item=item.data.spell.data),"spell"!==item.type)throw new Error("Wrong item type!");const itemData=item.data,spellcastingEntry=null===(_b=this.actor)||void 0===_b?void 0:_b.getOwnedItem(itemData.location.value);if(!spellcastingEntry||"spellcastingEntry"!==spellcastingEntry.data.type)throw new Error("Spell points to location that is not a spellcasting type");const modifiers=[],ability=(null===(_c=spellcastingEntry.data.data.ability)||void 0===_c?void 0:_c.value)||"int",score=null!==(_e=null===(_d=this.actor.data.data.abilities[ability])||void 0===_d?void 0:_d.value)&&void 0!==_e?_e:0;modifiers.push(modifiers_1.AbilityModifier.fromAbilityScore(ability,score));const proficiencyRank=null!==(_f=spellcastingEntry.data.data.proficiency.value)&&void 0!==_f?_f:0;modifiers.push(modifiers_1.ProficiencyModifier.fromLevelAndRank(this.actor.data.data.details.level.value,proficiencyRank));const traits=item.data.traits.value;let flavor="<hr>";flavor+=`<h3>${game.i18n.localize("PF2E.Counteract")}</h3>`,flavor+="<hr>";const spellLevel=ItemPF2e.findSpellLevel(event),addFlavor=(success,level)=>{const title=game.i18n.localize(`PF2E.${success}`),desc=game.i18n.format(`PF2E.CounteractDescription.${success}`,{level});flavor+=`<b>${title}</b> ${desc}<br>`};flavor+=`<p>${game.i18n.localize("PF2E.CounteractDescription.Hint")}</p>`,flavor+="<p>",addFlavor("CritSuccess",spellLevel+3),addFlavor("Success",spellLevel+1),addFlavor("Failure",spellLevel),addFlavor("CritFailure",0),flavor+="</p>";const check=new modifiers_1.StatisticModifier(flavor,modifiers),finalOptions=this.actor.getRollOptions(["all","counteract-check"]).concat([]).concat(traits);modifiers_1.ensureProficiencyOption(finalOptions,proficiencyRank),rolls_1.CheckPF2e.roll(check,{actor:this.actor,type:"counteract-check",options:finalOptions,title:game.i18n.localize("PF2E.Counteract"),traits},event)}async rollConsumable(_event){var _a;const item=this.data;if("consumable"!==item.type)throw Error("Tried to roll consumable on a non-consumable");if(!this.actor)throw Error("Tried to roll a consumable that has no actor");const itemData=item.data;if(["scroll","wand"].includes(item.data.consumableType.value)&&(null===(_a=item.data.spell)||void 0===_a?void 0:_a.data)&&this.actor instanceof base_1.ActorPF2e)if(spell_consumables_1.canCastConsumable(this.actor,item))this.castEmbeddedSpell();else if(this.actor.itemTypes.feat.some((feat=>"trick-magic-item"===feat.slug)))new trick_magic_item_popup_1.TrickMagicItemPopup(this);else{const content=game.i18n.format("PF2E.LackCastConsumableCapability",{name:this.name});ChatMessage.create({user:game.user._id,speaker:ChatMessage.getSpeaker({actor:this.actor}),whisper:ChatMessage.getWhisperRecipients(this.actor.name),content})}else{const cv=itemData.consume.value,content=`Uses ${this.name}`;cv?new Roll(cv).toMessage({speaker:ChatMessage.getSpeaker({actor:this.actor}),flavor:content}):ChatMessage.create({user:game.user._id,speaker:ChatMessage.getSpeaker({actor:this.actor}),content})}itemData.autoUse.value&&this.consume()}consume(){const item=this.data;if("consumable"!==item.type)throw Error("Tried to consume non-consumable");const itemData=item.data,qty=itemData.quantity,chg=itemData.charges;if(this.actor)if(chg.value<=1&&qty.value<=1&&itemData.autoDestroy.value)this.actor.deleteEmbeddedEntity("OwnedItem",this.data._id);else if(chg.max<1){const options={_id:this.data._id,"data.quantity.value":Math.max(qty.value-1,0),"data.charges.value":chg.max};this.actor.updateEmbeddedEntity("OwnedItem",options)}else this.actor.updateEmbeddedEntity("OwnedItem",{_id:this.data._id,"data.charges.value":Math.max(chg.value-1,0)})}async castEmbeddedSpell(trickMagicItemData){var _a,_b;if("consumable"!==this.data.type||!this.actor)return;if(!(null===(_a=this.data.data.spell)||void 0===_a?void 0:_a.data)||!(null===(_b=this.data.data.spell)||void 0===_b?void 0:_b.heightenedLevel))return;const actor=this.actor,spellData=duplicate(this.data.data.spell.data.data),realEntries=actor.itemTypes.spellcastingEntry.map((entry=>entry.data)).filter((i=>["prepared","spontaneous"].includes(i.data.prepared.value))).filter((i=>spellData.traditions.value.includes(i.data.tradition.value))),spellcastingEntries=trickMagicItemData?[trickMagicItemData]:realEntries;if(spellcastingEntries.length>0){const localize=game.i18n.localize.bind(game.i18n);let maxBonus=0,bestEntry=0;for(let i=0;i<spellcastingEntries.length;i++)spellcastingEntries[i].data.spelldc.value>maxBonus&&(maxBonus=spellcastingEntries[i].data.spelldc.value,bestEntry=i);this.data.data.spell.data.data.trickMagicItemData=trickMagicItemData,this.data.data.spell.data.data.location.value=spellcastingEntries[bestEntry]._id,spellData.isSave="save"===spellData.spellType.value||""!==spellData.save.value,spellData.isSave?spellData.save.dc=spellcastingEntries[bestEntry].data.spelldc.dc:spellData.save.dc=spellcastingEntries[bestEntry].data.spelldc.value,spellData.save.str=spellData.save.value?CONFIG.PF2E.saves[spellData.save.value.toLowerCase()]:"",spellData.damageLabel="heal"===spellData.spellType.value?localize("PF2E.SpellTypeHeal"):localize("PF2E.DamageLabel"),spellData.isAttack="attack"===spellData.spellType.value;const props=[CONFIG.PF2E.spellLevels[spellData.level.value],`${localize("PF2E.SpellComponentsLabel")}: ${spellData.components.value}`,spellData.range.value?`${localize("PF2E.SpellRangeLabel")}: ${spellData.range.value}`:null,spellData.target.value?`${localize("PF2E.SpellTargetLabel")}: ${spellData.target.value}`:null,spellData.area.value?`${localize("PF2E.SpellAreaLabel")}: ${CONFIG.PF2E.areaSizes[spellData.area.value]} ${CONFIG.PF2E.areaTypes[spellData.area.areaType]}`:null,spellData.time.value?`${localize("PF2E.SpellTimeLabel")}: ${spellData.time.value}`:null,spellData.duration.value?`${localize("PF2E.SpellDurationLabel")}: ${spellData.duration.value}`:null];spellData.spellLvl=this.data.data.spell.heightenedLevel.toString(),spellData.level.value<parseInt(spellData.spellLvl,10)&&props.push("Heightened: +"+(parseInt(spellData.spellLvl,10)-spellData.level.value)),spellData.properties=props.filter((p=>null!==p)),spellData.traits=ItemPF2e.traitChatData(spellData.traits,CONFIG.PF2E.spellTraits),spellData.item=JSON.stringify(this.data);const template="systems/pf2e/templates/chat/spell-card.html",{token}=actor,templateData={actor,tokenId:token?`${token.scene._id}.${token.id}`:null,item:this,data:spellData},chatData={user:game.user._id,speaker:{actor:actor._id,token:actor.token,alias:actor.name},flags:{core:{canPopout:!0}},type:CONST.CHAT_MESSAGE_TYPES.OTHER},rollMode=game.settings.get("core","rollMode");["gmroll","blindroll"].includes(rollMode)&&(chatData.whisper=ChatMessage.getWhisperRecipients("GM").map((u=>u._id))),"blindroll"===rollMode&&(chatData.blind=!0),chatData.content=await renderTemplate(template,templateData),await ChatMessage.create(chatData,{displaySheet:!1})}}calculateMap(){return ItemPF2e.calculateMap(this.data)}static calculateMap(item){if("melee"===item.type||"weapon"===item.type){const agile=item.data.traits.value.includes("agile");switch((item.data.MAP||{}).value){case"1":return{label:"PF2E.MultipleAttackPenalty",map2:-1,map3:-2};case"2":return{label:"PF2E.MultipleAttackPenalty",map2:-2,map3:-4};case"3":return{label:"PF2E.MultipleAttackPenalty",map2:-3,map3:-6};case"4":return{label:"PF2E.MultipleAttackPenalty",map2:-4,map3:-8};case"5":return{label:"PF2E.MultipleAttackPenalty",map2:-5,map3:-10};default:return agile?{label:"PF2E.MultipleAttackPenalty",map2:-4,map3:-8}:{label:"PF2E.MultipleAttackPenalty",map2:-5,map3:-10}}}return{label:"PF2E.MultipleAttackPenalty",map2:-5,map3:-10}}static async createDialog(data={},options={}){const original=game.system.entityTypes.Item;game.system.entityTypes.Item=original.filter((itemType=>!["condition","martial","spellcastingEntry"].includes(itemType)));const newItem=super.createDialog(data,options);return game.system.entityTypes.Item=original,newItem}}exports.ItemPF2e=ItemPF2e},6272:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.indexBulkItemsById=exports.fixWeight=exports.calculateCarriedArmorBulk=exports.itemsFromActorData=exports.toBulkItems=exports.toBulkItem=exports.normalizeWeight=exports.weightToBulk=exports.calculateBulk=exports.defaultBulkConfig=exports.BulkItem=exports.formatBulk=exports.convertBulkToSize=exports.Bulk=void 0;const utils_1=__webpack_require__(4930),data_definitions_1=__webpack_require__(6508),stackDefinitions={bolts:{size:10,lightBulk:1},arrows:{size:10,lightBulk:1},slingBullets:{size:10,lightBulk:1},blowgunDarts:{size:10,lightBulk:1},woodenTaws:{size:10,lightBulk:1},rations:{size:7,lightBulk:1},sacks:{size:5,lightBulk:1},coins:{size:1e3,lightBulk:10},gems:{size:2e3,lightBulk:10}};class Bulk{constructor({normal=0,light=0}={}){this.normal=normal+Math.floor(light/10),this.light=light%10}get isNegligible(){return 0===this.normal&&0===this.light}get isLight(){return this.toLightBulk()<10&&!this.isNegligible}toLightBulk(){return 10*this.normal+this.light}plus(bulk){return new Bulk({normal:this.normal+bulk.normal,light:this.light+bulk.light})}minus(bulk){const[thisBulk,otherBulk]=this._toSingleNumber(bulk),result=thisBulk-otherBulk;return result<0?new Bulk:new Bulk({normal:Math.floor(result/10),light:result%10})}_toSingleNumber(bulk){return[10*this.normal+this.light,10*bulk.normal+bulk.light]}times(factor){const normal=this.normal*factor,lightCarryOver=normal<1&&normal>0?1:0,light=Math.floor(this.light*factor)+lightCarryOver;return new Bulk({normal:Math.floor(normal),light})}isSmallerThan(bulk){const[thisBulk,otherBulk]=this._toSingleNumber(bulk);return thisBulk<otherBulk}isBiggerThan(bulk){const[thisBulk,otherBulk]=this._toSingleNumber(bulk);return thisBulk>otherBulk}isEqualTo(bulk){return this.normal===bulk.normal&&this.light===bulk.light}isPositive(){return this.normal>0||this.light>0}toString(){return`normal: ${this.normal}; light: ${this.light}`}double(){return this.isNegligible?new Bulk({light:1}):this.isLight?this.times(10):this.times(2)}halve(){return this.isNegligible||this.isLight?new Bulk:1===this.normal?new Bulk({light:1}):this.times(.5)}}function convertBulkToSize(bulk,itemSize,actorSize){const sizes=["tiny","med","lg","huge","grg"],itemSizeIndex=sizes.indexOf("sm"===itemSize?"med":itemSize),actorSizeIndex=sizes.indexOf("sm"===actorSize?"med":actorSize);return itemSizeIndex===actorSizeIndex?bulk:itemSizeIndex>actorSizeIndex?utils_1.applyNTimes((bulk=>bulk.double()),itemSizeIndex-actorSizeIndex,bulk):utils_1.applyNTimes((bulk=>bulk.halve()),actorSizeIndex-itemSizeIndex,bulk)}exports.Bulk=Bulk,exports.convertBulkToSize=convertBulkToSize,exports.formatBulk=function(bulk){return 0===bulk.normal&&0===bulk.light?"-":bulk.normal>0&&0===bulk.light?`${bulk.normal}`:1===bulk.light&&0===bulk.normal?"L":bulk.light>0&&0===bulk.normal?`${bulk.light}L`:`${bulk.normal}; ${bulk.light}L`};class BulkItem{constructor({id="",bulk=new Bulk,quantity=1,stackGroup,isEquipped=!1,unequippedBulk,equippedBulk,holdsItems=[],negateBulk=new Bulk,extraDimensionalContainer=!1,size="med"}={}){this.id=id,this.bulk=bulk,this.quantity=quantity,this.stackGroup=stackGroup,this.holdsItems=holdsItems,this.negateBulk=negateBulk,this.unequippedBulk=unequippedBulk,this.equippedBulk=equippedBulk,this.isEquipped=isEquipped,this.extraDimensionalContainer=extraDimensionalContainer,this.size=size}get reducesBulk(){return!this.negateBulk.isNegligible}}function combineBulkAndOverflow(first,second){const[firstBulk,firstOverflow]=first,[secondBulk,secondOverflow]=second;return[firstBulk.plus(secondBulk),utils_1.combineObjects(firstOverflow,secondOverflow,utils_1.add)]}function calculateStackBulk({itemStacks,bulkConfig=exports.defaultBulkConfig,actorSize,itemSize}){return Object.entries(itemStacks).filter((([stackType])=>!(bulkConfig.ignoreCoinBulk&&"coins"===stackType))).map((([stackType,quantity])=>{stackType in stackDefinitions||(console.warn(`No stack definition found for stack ${stackType}`),stackType="arrows");const{size,lightBulk}=stackDefinitions[stackType],bulkRelevantQuantity=Math.floor(quantity/size);return[bulkRelevantQuantity>0?convertBulkToSize(new Bulk({light:bulkRelevantQuantity*lightBulk}),itemSize,actorSize):new Bulk,{[stackType]:quantity%size}]})).reduce(combineBulkAndOverflow,[new Bulk,{}])}function reduceNestedItemBulk(bulk,item,nestedExtraDimensionalContainer){return function(item,nestedExtraDimensionalContainer){return item.extraDimensionalContainer&&!nestedExtraDimensionalContainer||item.reducesBulk&&item.isEquipped}(item,nestedExtraDimensionalContainer)?bulk.minus(item.negateBulk):bulk}function calculateCombinedBulk({item,nestedExtraDimensionalContainer=!1,bulkConfig=exports.defaultBulkConfig,actorSize}){const[mainBulk,mainOverflow]=function({item,bulkConfig,actorSize}){const stackName=item.stackGroup;if(utils_1.isBlank(stackName))return[convertBulkToSize(function(item){return void 0===item.unequippedBulk||null===item.unequippedBulk||item.isEquipped?void 0!==item.equippedBulk&&null!==item.equippedBulk&&item.isEquipped?item.equippedBulk:item.bulk:item.unequippedBulk}(item),item.size,actorSize).times(item.quantity),{}];return calculateStackBulk({itemStacks:{[stackName]:item.quantity},bulkConfig,itemSize:item.size,actorSize})}({item,bulkConfig,actorSize}),[childBulk,childOverflow]=item.holdsItems.map((child=>calculateCombinedBulk({item:child,nestedExtraDimensionalContainer:item.extraDimensionalContainer,bulkConfig,actorSize}))).reduce(combineBulkAndOverflow,[new Bulk,{}]),combinedOverflow=utils_1.combineObjects(mainOverflow,function(overflow,item,ignoreContainerOverflow){return item.extraDimensionalContainer||ignoreContainerOverflow?{}:overflow}(childOverflow,item,bulkConfig.ignoreContainerOverflow),utils_1.add),[overflowBulk,remainingOverflow]=calculateStackBulk({itemStacks:combinedOverflow,bulkConfig,actorSize,itemSize:item.size});return[mainBulk.plus(reduceNestedItemBulk(childBulk,item,nestedExtraDimensionalContainer)).plus(overflowBulk),remainingOverflow]}exports.BulkItem=BulkItem,exports.defaultBulkConfig={ignoreCoinBulk:!1,ignoreContainerOverflow:!1},exports.calculateBulk=function({items=[],nestedExtraDimensionalContainer=!1,actorSize="med",bulkConfig=exports.defaultBulkConfig}={}){return calculateCombinedBulk({item:new BulkItem({holdsItems:items}),nestedExtraDimensionalContainer,bulkConfig,actorSize})};const lightBulkRegex=/^(\d*)l$/i,complexBulkRegex=/^(\d+);\s*(\d*)l$/i;function weightToBulk(weight){if(null==weight)return;const trimmed=weight.trim();if(/^\d+$/.test(trimmed))return new Bulk({normal:parseInt(trimmed,10)});const lightMatch=trimmed.match(lightBulkRegex);if(lightMatch)return new Bulk({light:parseInt(lightMatch[1]||"1",10)});const complexMatch=trimmed.match(complexBulkRegex);if(complexMatch){const[,normal,light]=complexMatch;return new Bulk({normal:parseInt(normal,10),light:parseInt(light||"1",10)})}}function normalizeWeight(weight){if(null==weight)return;return`${weight}`.toLowerCase().trim()}function toBulkItem(item,nestedItems=[]){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u,_v,_w,_x,_y,_z,_0;const id=item._id,weight=null===(_b=null===(_a=item.data)||void 0===_a?void 0:_a.weight)||void 0===_b?void 0:_b.value,quantity=null!==(_e=null===(_d=null===(_c=item.data)||void 0===_c?void 0:_c.quantity)||void 0===_d?void 0:_d.value)&&void 0!==_e?_e:0,isEquipped=null!==(_h=null===(_g=null===(_f=item.data)||void 0===_f?void 0:_f.equipped)||void 0===_g?void 0:_g.value)&&void 0!==_h&&_h,equippedBulk=null===(_k=null===(_j=item.data)||void 0===_j?void 0:_j.equippedBulk)||void 0===_k?void 0:_k.value,unequippedBulk=null===(_m=null===(_l=item.data)||void 0===_l?void 0:_l.unequippedBulk)||void 0===_m?void 0:_m.value,stackGroup=null===(_p=null===(_o=item.data)||void 0===_o?void 0:_o.stackGroup)||void 0===_p?void 0:_p.value,negateBulk=null===(_r=null===(_q=item.data)||void 0===_q?void 0:_q.negateBulk)||void 0===_r?void 0:_r.value,extraDimensionalContainer=null!==(_v=null===(_u=null===(_t=null===(_s=item.data)||void 0===_s?void 0:_s.traits)||void 0===_t?void 0:_t.value)||void 0===_u?void 0:_u.includes("extradimensional"))&&void 0!==_v&&_v,size=null!==(_y=null===(_x=null===(_w=item.data)||void 0===_w?void 0:_w.size)||void 0===_x?void 0:_x.value)&&void 0!==_y?_y:"med";return new BulkItem({id,bulk:null!==(_z=weightToBulk(normalizeWeight(weight)))&&void 0!==_z?_z:new Bulk,negateBulk:null!==(_0=weightToBulk(normalizeWeight(negateBulk)))&&void 0!==_0?_0:new Bulk,unequippedBulk:weightToBulk(normalizeWeight(unequippedBulk)),equippedBulk:weightToBulk(normalizeWeight(equippedBulk)),holdsItems:nestedItems,stackGroup,isEquipped,quantity,extraDimensionalContainer,size})}function buildContainerTree(items,groupedItems){return items.map((item=>{const itemId=item._id;if(null!=itemId&&groupedItems.has(itemId)){return toBulkItem(item,buildContainerTree(groupedItems.get(itemId),groupedItems))}return toBulkItem(item)}))}function toBulkItems(items){const allIds=new Set(items.map((item=>item._id))),itemsInContainers=utils_1.groupBy(items,(item=>{var _a,_b,_c;const ref=null!==(_c=null===(_b=null===(_a=item.data)||void 0===_a?void 0:_a.containerId)||void 0===_b?void 0:_b.value)&&void 0!==_c?_c:null;return null!==ref&&allIds.has(ref)?ref:null}));if(itemsInContainers.has(null)){return buildContainerTree(itemsInContainers.get(null),itemsInContainers)}return[]}function fillBulkIndex(bulkItem,resultMap){resultMap.set(bulkItem.id,bulkItem),bulkItem.holdsItems.forEach((heldBulkItem=>fillBulkIndex(heldBulkItem,resultMap)))}exports.weightToBulk=weightToBulk,exports.normalizeWeight=normalizeWeight,exports.toBulkItem=toBulkItem,exports.toBulkItems=toBulkItems,exports.itemsFromActorData=function(actorData){return toBulkItems(actorData.items.filter(data_definitions_1.isPhysicalItem))},exports.calculateCarriedArmorBulk=function(wornBulk){var _a;const bulk=null!==(_a=weightToBulk(normalizeWeight(wornBulk)))&&void 0!==_a?_a:new Bulk;return 1===bulk.light?"1":bulk.normal>0?`${bulk.normal+1}`:"-"},exports.fixWeight=function(brokenWeight){var _a;const bulk=null!==(_a=weightToBulk(normalizeWeight(brokenWeight)))&&void 0!==_a?_a:new Bulk;return 1===bulk.light?"l":bulk.normal>0?`${bulk.normal}`:null},exports.indexBulkItemsById=function(bulkItems=[]){const result=new Map;return bulkItems.forEach((bulkItem=>fillBulkIndex(bulkItem,result))),result}},2769:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ClassPF2e=void 0;const abc_1=__webpack_require__(8496);class ClassPF2e extends abc_1.ABCItemPF2e{get hpPerLevel(){return this.data.data.hp}async addFeatures(actor){await this.deleteExistingFeatures(actor),await this.ensureClassFeaturesForLevel(actor,0)}async ensureClassFeaturesForLevel(actor,minLevelInput){var e_1,_a,_b;const minLevel=null!==(_b=null!=minLevelInput?minLevelInput:await this.getFlag(game.system.id,"insertedClassFeaturesLevel"))&&void 0!==_b?_b:0;if(minLevel>=actor.level)return;const featuresToAdd=Object.values(this.data.data.items).filter((entryData=>actor.level>=entryData.level&&entryData.level>minLevel)),classFeaturesToCreate=[];try{for(var featuresToAdd_1_1,featuresToAdd_1=__asyncValues(featuresToAdd);!(featuresToAdd_1_1=await featuresToAdd_1.next()).done;){const feature=featuresToAdd_1_1.value,featureData=await this.getFeature(feature);void 0!==featureData&&classFeaturesToCreate.push(featureData)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{featuresToAdd_1_1&&!featuresToAdd_1_1.done&&(_a=featuresToAdd_1.return)&&await _a.call(featuresToAdd_1)}finally{if(e_1)throw e_1.error}}for(const feature of classFeaturesToCreate)feature.data.location=this.id;await Promise.all([actor.createEmbeddedEntity("OwnedItem",classFeaturesToCreate),this.setFlag(game.system.id,"insertedClassFeaturesLevel",actor.level)])}}exports.ClassPF2e=ClassPF2e},8280:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConsumablePF2e=void 0;const physical_1=__webpack_require__(315);class ConsumablePF2e extends physical_1.PhysicalItemPF2e{get charges(){return{current:this.data.data.charges.value,max:this.data.data.charges.max}}getChatData(htmlOptions){const data=this.data.data,localize=game.i18n.localize.bind(game.i18n),consumableType=CONFIG.PF2E.consumableTypes[data.consumableType.value];return this.processChatData(htmlOptions,Object.assign(Object.assign({},data),{consumableType:Object.assign(Object.assign({},data.consumableType),{str:consumableType}),properties:[consumableType,`${data.charges.value}/${data.charges.max} ${localize("PF2E.ConsumableChargesLabel")}`],hasCharges:this.charges.max>0}))}generateUnidentifiedName(){return game.i18n.format(`PF2E.identification.${status}`,{item:game.i18n.localize(CONFIG.PF2E.consumableTypes[this.data.data.consumableType.value])})}}exports.ConsumablePF2e=ConsumablePF2e},1482:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getContainerMap=exports.isCycle=void 0;const bulk_1=__webpack_require__(6272),utils_1=__webpack_require__(4930);class ContainerData{constructor({item,heldItems,negateBulk,capacity,heldItemBulk,isInContainer,formattedNegateBulk,formattedHeldItemBulk,formattedCapacity}){this.item=item,this.heldItems=heldItems,this.negateBulk=negateBulk,this.heldItemBulk=heldItemBulk,this.isInContainer=isInContainer,this.formattedHeldItemBulk=formattedHeldItemBulk,this.formattedNegateBulk=formattedNegateBulk,this.formattedCapacity=formattedCapacity,this.capacity=capacity}get isContainer(){return!this.capacity.isNegligible}get isCollapsed(){var _a,_b,_c,_d;return null!==(_d=null===(_c=null===(_b=null===(_a=this.item)||void 0===_a?void 0:_a.data)||void 0===_b?void 0:_b.collapsed)||void 0===_c?void 0:_c.value)&&void 0!==_d&&_d}get isNotInContainer(){return!this.isInContainer}_getLightBulkCapacityThreshold(){return this.capacity.normal>0?this.capacity.toLightBulk()+10:this.capacity.light}get fullPercentage(){const capacity=this._getLightBulkCapacityThreshold();if(0===capacity)return 0;const heldLightBulk=this.heldItemBulk.toLightBulk();return Math.floor(heldLightBulk/capacity*100)}get fullPercentageMax100(){const percentage=this.fullPercentage;return percentage>100?100:percentage}get isOverLoaded(){return this.capacity.normal>0?this.heldItemBulk.toLightBulk()>=this.capacity.toLightBulk()+10:this.heldItemBulk.toLightBulk()>this.capacity.light}}function toContainer({item,heldItems=[],heldBulkItems=[],isInContainer,bulkConfig,actorSize}){var _a,_b,_c,_d,_e,_f;const negateBulk=null!==(_c=bulk_1.weightToBulk(null===(_b=null===(_a=item.data)||void 0===_a?void 0:_a.negateBulk)||void 0===_b?void 0:_b.value))&&void 0!==_c?_c:new bulk_1.Bulk,[heldItemBulk]=bulk_1.calculateBulk({items:heldBulkItems,bulkConfig,actorSize}),capacity=null!==(_f=bulk_1.weightToBulk(null===(_e=null===(_d=item.data)||void 0===_d?void 0:_d.bulkCapacity)||void 0===_e?void 0:_e.value))&&void 0!==_f?_f:new bulk_1.Bulk;return new ContainerData({item,heldItems,negateBulk,capacity,heldItemBulk,isInContainer,formattedNegateBulk:bulk_1.formatBulk(negateBulk),formattedHeldItemBulk:bulk_1.formatBulk(heldItemBulk),formattedCapacity:bulk_1.formatBulk(capacity)})}function detectCycle(itemId,containerId,idIndexedItems){var _a,_b;if(idIndexedItems.has(containerId)){const currentItem=idIndexedItems.get(containerId);return itemId===currentItem._id||detectCycle(itemId,null===(_b=null===(_a=null==currentItem?void 0:currentItem.data)||void 0===_a?void 0:_a.containerId)||void 0===_b?void 0:_b.value,idIndexedItems)}return!1}exports.isCycle=function(itemId,containerId,items){const idIndexedItems=new Map;for(const item of items)idIndexedItems.set(item._id,item);return detectCycle(itemId,containerId,idIndexedItems)},exports.getContainerMap=function({items=[],bulkItemsById=new Map,bulkConfig=bulk_1.defaultBulkConfig,actorSize="med"}={}){var _a,_b,_c,_d;const allIds=utils_1.groupBy(items,(item=>item._id)),containerGroups=utils_1.groupBy(items,(item=>{var _a,_b;const containerId=null===(_b=null===(_a=null==item?void 0:item.data)||void 0===_a?void 0:_a.containerId)||void 0===_b?void 0:_b.value;return allIds.has(containerId)?containerId:null})),idIndexedContainerData=new Map;for(const item of items){const isInContainer=containerGroups.has(null===(_b=null===(_a=null==item?void 0:item.data)||void 0===_a?void 0:_a.containerId)||void 0===_b?void 0:_b.value),heldItems=containerGroups.get(item._id)||[];idIndexedContainerData.set(item._id,toContainer({item:allIds.get(item._id)[0],heldItems,heldBulkItems:null!==(_d=null===(_c=bulkItemsById.get(item._id))||void 0===_c?void 0:_c.holdsItems)&&void 0!==_d?_d:[],isInContainer,bulkConfig,actorSize}))}return idIndexedContainerData}},6508:(__unused_webpack_module,exports)=>{"use strict";function isPhysicalItem(itemData){return"quantity"in itemData.data}Object.defineProperty(exports,"__esModule",{value:!0}),exports.assertPhysicalItem=exports.isLevelItem=exports.isMagicDetailsData=exports.isInventoryItem=exports.isPhysicalItem=void 0,exports.isPhysicalItem=isPhysicalItem,exports.isInventoryItem=function(type){switch(type){case"armor":case"backpack":case"consumable":case"equipment":case"treasure":case"weapon":return!0}return!1},exports.isMagicDetailsData=function(itemDataData){return"object"==typeof itemDataData.invested&&null!==itemDataData.invested&&"value"in itemDataData.invested&&"boolean"==typeof itemDataData.invested.value},exports.isLevelItem=function(item){return"level"in item.data},exports.assertPhysicalItem=function(item,error){if(!isPhysicalItem(item))throw Error(error)}},541:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.EffectPF2e=void 0;const base_1=__webpack_require__(5180);class EffectPF2e extends base_1.ItemPF2e{}exports.EffectPF2e=EffectPF2e},3866:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.calculateEncumbrance=exports.InventoryWeight=void 0;class InventoryWeight{constructor(combinedBulk,encumberedAt,limit){this.combinedBulk=combinedBulk,this.encumberedAt=encumberedAt,this.limit=limit}get encumberedPercentage(){const totalTimes10=this.combinedBulk.toLightBulk(),encumberedAtTimes10=10*this.encumberedAt+10;return Math.floor(totalTimes10/encumberedAtTimes10*100)}get limitPercentage(){const totalTimes10=this.combinedBulk.toLightBulk(),limitTimes10=10*this.limit+10;return Math.floor(totalTimes10/limitTimes10*100)}get limitPercentageMax100(){return this.limitPercentage>100?100:this.limitPercentage}get isEncumbered(){return this.combinedBulk.normal>this.encumberedAt}get isOverLimit(){return this.combinedBulk.normal>this.limit}get bulk(){return this.combinedBulk.normal}}exports.InventoryWeight=InventoryWeight,exports.calculateEncumbrance=function(strengthModifier,bonusBulkEncumbrance,bonusBulkLimit,combinedBulk,_actorSize="med"){const encumberedAt=Math.floor(strengthModifier+bonusBulkEncumbrance+5),limit=Math.floor(strengthModifier+bonusBulkLimit+10);return new InventoryWeight(combinedBulk,encumberedAt,limit)}},5103:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FeatPF2e=void 0;const base_1=__webpack_require__(5180);class FeatPF2e extends base_1.ItemPF2e{get featType(){return{value:this.data.data.featType.value,label:game.i18n.localize(CONFIG.PF2E.featTypes[this.data.data.featType.value])}}getChatData(htmlOptions){const data=this.data.data,properties=[`Level ${data.level.value||0}`,data.actionType.value?CONFIG.PF2E.actionTypes[data.actionType.value]:null].filter((p=>p)),traits=base_1.ItemPF2e.traitChatData(data.traits,CONFIG.PF2E.featTraits);return this.processChatData(htmlOptions,Object.assign(Object.assign({},data),{properties,traits}))}}exports.FeatPF2e=FeatPF2e},5881:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getUnidentifiedPlaceholderImage=exports.identifyItem=exports.isMagical=exports.GenericIdentifyDCs=exports.IdentifyAlchemyDCs=exports.IdentifyMagicDCs=void 0;const data_definitions_1=__webpack_require__(6508),utils_1=__webpack_require__(4930),dc_1=__webpack_require__(2292),magicTraditions=new Set(["arcane","primal","divine","occult"]);function getTraits(itemData){return new Set(itemData.data.traits.value)}function getDcRarity(itemData){var _a,_b;return function(itemData){return getTraits(itemData).has("cursed")}(itemData)?"unique":null!==(_b=null===(_a=itemData.data.traits.rarity)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:"common"}class IdentifyMagicDCs{constructor(arc,nat,rel,occ){this.arc=arc,this.nat=nat,this.rel=rel,this.occ=occ}}exports.IdentifyMagicDCs=IdentifyMagicDCs;class IdentifyAlchemyDCs{constructor(cra){this.cra=cra}}exports.IdentifyAlchemyDCs=IdentifyAlchemyDCs;class GenericIdentifyDCs{constructor(dc){this.dc=dc}}function identifyMagic(itemData,baseDc,notMatchingTraditionModifier){const result={occult:baseDc,primal:baseDc,divine:baseDc,arcane:baseDc},traditions=function(itemData){const traits=getTraits(itemData),result=new Set;for(const trait of traits)magicTraditions.has(trait)&&result.add(trait);return result}(itemData);for(const key of Object.keys(result))traditions.size>0&&!traditions.has(key)&&(result[key]=baseDc+notMatchingTraditionModifier);return new IdentifyMagicDCs(result.arcane,result.primal,result.divine,result.occult)}function isMagical(itemData){const traits=getTraits(itemData);return traits.has("magical")||function(itemData){return"weapon"===itemData.type?!(!itemData.data.potencyRune.value&&!itemData.data.strikingRune.value):"armor"===itemData.type&&!(!itemData.data.potencyRune.value&&!itemData.data.resiliencyRune.value)}(itemData)||Array.from(magicTraditions).some((trait=>traits.has(trait)))}exports.GenericIdentifyDCs=GenericIdentifyDCs,exports.isMagical=isMagical,exports.identifyItem=function(itemData,{proficiencyWithoutLevel=!1,notMatchingTraditionModifier}){var _a,_b;const level=data_definitions_1.isLevelItem(itemData)&&null!==(_b=utils_1.toNumber(null===(_a=itemData.data.level)||void 0===_a?void 0:_a.value))&&void 0!==_b?_b:0,dc=dc_1.calculateDC(level,{proficiencyWithoutLevel}),rarity=getDcRarity(itemData),baseDc=dc_1.adjustDCByRarity(dc,rarity);return isMagical(itemData)?identifyMagic(itemData,baseDc,notMatchingTraditionModifier):function(itemData){return getTraits(itemData).has("alchemical")}(itemData)?new IdentifyAlchemyDCs(baseDc):new GenericIdentifyDCs(baseDc)},exports.getUnidentifiedPlaceholderImage=function(itemData){const traits=getTraits(itemData);let iconName="adventuring_gear";switch(itemData.type){case"weapon":iconName=traits.has("bomb")?"alchemical_bomb":traits.has("staff")?"staves":traits.has("artifact")?"artifact":"weapon";break;case"armor":iconName="shield"===itemData.data.armorType.value?"shields":"armor";break;case"consumable":switch(itemData.data.consumableType.value){case"ammo":iconName="ammunition";break;case"oil":iconName="oils";break;case"scroll":iconName="infernal-contracts";break;case"talisman":case"talasman":iconName="talisman";break;case"elixir":case"mutagen":iconName="alchemical_elixir";break;case"poison":iconName="alchemical_poison";break;case"tool":iconName="alchemical_tool";break;case"wand":iconName="wands";break;case"potion":iconName="potions";break;case"snare":case"other":default:iconName=traits.has("drug")?"drugs":"other-consumables"}break;case"equipment":traits.has("precious")&&(iconName="material-chunk");break;default:iconName="adventuring_gear"}return`systems/pf2e/icons/unidentified_item_icons/${iconName}.webp`}},5785:(__unused_webpack_module,exports)=>{"use strict";async function getKitItemData(kitData){return(await Promise.all(Object.values(kitData.items).map((async item=>{var _a,_b;let itemData;if(item.pack){const pack=game.packs.get(item.pack);itemData=await pack.getEntry(item.id)}else itemData=duplicate(null===(_a=game.items.get(item.id))||void 0===_a?void 0:_a._data);if(!itemData)return console.warn(`PF2E Kit: ${null!==(_b=item.pack)&&void 0!==_b?_b:"World Item"} ${item.id} (${item.name}) not found`),[];if("kit"===itemData.type)return getKitItemData(itemData.data);itemData.data.quantity.value=item.quantity;return[[itemData,(await getKitItemData(item)).map((([i])=>i))]]})))).flat()}Object.defineProperty(exports,"__esModule",{value:!0}),exports.addKit=void 0,exports.addKit=async function(kitData,createItems){const rootItemData=await getKitItemData(kitData.data),potentialContainers=await createItems(rootItemData.map((([itemData])=>itemData))),containedItemData=rootItemData.map((([_itemData,items],i)=>[items,potentialContainers[i]])).flatMap((([items,containerId])=>items.map((itemData=>(itemData.data.containerId.value=containerId,itemData)))));await createItems(containedItemData)}},5079:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConditionPF2e=exports.MartialPF2e=exports.LorePF2e=exports.EquipmentPF2e=exports.MeleePF2e=exports.KitPF2e=exports.TreasurePF2e=exports.ContainerPF2e=void 0;const physical_1=__webpack_require__(315),base_1=__webpack_require__(5180);class ContainerPF2e extends physical_1.PhysicalItemPF2e{}exports.ContainerPF2e=ContainerPF2e;class TreasurePF2e extends physical_1.PhysicalItemPF2e{}exports.TreasurePF2e=TreasurePF2e;class KitPF2e extends physical_1.PhysicalItemPF2e{get isEquipped(){return!1}}exports.KitPF2e=KitPF2e;class MeleePF2e extends physical_1.PhysicalItemPF2e{getChatData(htmlOptions){const data=this.data.data,traits=base_1.ItemPF2e.traitChatData(data.traits,CONFIG.PF2E.weaponTraits),isAgile=this.traits.has("agile"),map2=isAgile?"-4":"-5",map3=isAgile?"-8":"-10";return this.processChatData(htmlOptions,Object.assign(Object.assign({},data),{traits,map2,map3}))}}exports.MeleePF2e=MeleePF2e;class EquipmentPF2e extends physical_1.PhysicalItemPF2e{getChatData(htmlOptions){const data=this.data.data,properties=[data.equipped.value?game.i18n.localize("PF2E.EquipmentEquippedLabel"):null].filter((p=>null!==p));return this.processChatData(htmlOptions,Object.assign(Object.assign({},data),{properties}))}}exports.EquipmentPF2e=EquipmentPF2e;class LorePF2e extends base_1.ItemPF2e{getChatData(htmlOptions){if(!this.actor)return{};const data=this.data.data;let properties=[];if("npc"!==this.actor.data.type){const abl=this.actor.data.data.abilities[data.ability.value].label,prof=data.proficient.value||0;properties=[abl,CONFIG.PF2E.proficiencyLevels[prof]].filter((p=>null!==p))}return this.processChatData(htmlOptions,Object.assign(Object.assign({},data),{properties}))}}exports.LorePF2e=LorePF2e;class MartialPF2e extends base_1.ItemPF2e{}exports.MartialPF2e=MartialPF2e;class ConditionPF2e extends base_1.ItemPF2e{get fromSystem(){return!!this.getFlag("pf2e","condition")}}exports.ConditionPF2e=ConditionPF2e},315:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PhysicalItemPF2e=void 0;const base_1=__webpack_require__(5180),data_definitions_1=__webpack_require__(6508),identification_1=__webpack_require__(5881);class PhysicalItemPF2e extends base_1.ItemPF2e{static isIdentified(itemData){var _a,_b;const identificationStatus=null===(_b=null===(_a=itemData.data)||void 0===_a?void 0:_a.identification)||void 0===_b?void 0:_b.status;return"unidentified"!==identificationStatus&&"misidentified"!==identificationStatus}static getIdentificationState(itemData){var _a,_b;return null===(_b=null===(_a=itemData.data)||void 0===_a?void 0:_a.identification)||void 0===_b?void 0:_b.status}get quantity(){var _a;return null!==(_a=this.data.data.quantity.value)&&void 0!==_a?_a:1}get isEquipped(){return this.data.data.equipped.value}get isInContainer(){return!!this.data.data.containerId.value}get isMagical(){const traits=this.traits;return["magical","arcane","primal","divine","occult"].some((trait=>traits.has(trait)))}get isInvested(){return this.traits.has("invested")?"invested"in this.data.data&&!0===this.data.data.invested.value:null}get isIdentified(){return PhysicalItemPF2e.isIdentified(this.data)}prepareData(){if(super.prepareData(),!this.isEquipped||!1===this.isInvested)for(const effectData of this.data.effects)effectData.disabled=!0;"kit"!==this.data.type&&"melee"!==this.data.type&&(this.data.data.identification||(this.data.data.identification={status:"identified"}),this.data.data.identification.identified&&""!==this.data.data.identification.identified.name||PhysicalItemPF2e.setMystifiedDefaults(this,"identified"),this.data.data.identification.unidentified&&""!==this.data.data.identification.unidentified.name||PhysicalItemPF2e.setMystifiedDefaults(this,"unidentified"),this.data.data.identification.misidentified&&""!==this.data.data.identification.misidentified.name||PhysicalItemPF2e.setMystifiedDefaults(this,"misidentified"))}get hasShowableMystifiedState(){var _a,_b,_c,_d,_e,_f;const itemData=this.data;switch(PhysicalItemPF2e.getIdentificationState(itemData)){case"unidentified":return!!(null===(_c=null===(_b=null===(_a=itemData.data.identification.unidentified)||void 0===_a?void 0:_a.data)||void 0===_b?void 0:_b.description)||void 0===_c?void 0:_c.value);case"misidentified":return!!(null===(_f=null===(_e=null===(_d=itemData.data.identification.misidentified)||void 0===_d?void 0:_d.data)||void 0===_e?void 0:_e.description)||void 0===_f?void 0:_f.value);default:return!0}}async setIdentifiedState(state){if(state===PhysicalItemPF2e.getIdentificationState(this.data))return this;const updateData={_id:this.id,"data.identified.value":"identified"===state,"data.identification.status":state};return this.update(updateData)}static getMystifiedName(itemData,state){var _a,_b,_c,_d,_e,_f,_g;if("identified"===state)return null;switch(itemData.type){case"weapon":return game.i18n.format(`PF2E.identification.${state}`,{itemtype:(null!==(_c=null===(_b=null===(_a=itemData.data)||void 0===_a?void 0:_a.group)||void 0===_b?void 0:_b.value)&&void 0!==_c?_c:"Weapon").capitalize()});case"armor":switch(null===(_e=null===(_d=itemData.data)||void 0===_d?void 0:_d.armorType)||void 0===_e?void 0:_e.value){case"shield":return game.i18n.format(`PF2E.identification.${state}`,{itemtype:"Shield"});case"unarmored":return game.i18n.format(`PF2E.identification.${state}`,{itemtype:"Clothes"});default:return game.i18n.format(`PF2E.identification.${state}`,{itemtype:`${null===(_g=null===(_f=itemData.data)||void 0===_f?void 0:_f.armorType)||void 0===_g?void 0:_g.value.capitalize()} Armor`})}case"consumable":return game.i18n.format(`PF2E.identification.${state}`,{itemtype:itemData.data.consumableType.value.capitalize()});default:return game.i18n.format(`PF2E.identification.${state}`,{itemtype:"Item"})}}static setMystifiedDefaults(item,state){if("identified"===state)item.data.data.identification.identified={name:item.name,img:item.img,data:{description:{value:item.data.data.description.value}}};else{const mystifiedName=this.getMystifiedName(item.data,state),img=identification_1.getUnidentifiedPlaceholderImage(item.data);setProperty(item,`data.data.identification.${state}`,{name:mystifiedName,img,data:{description:{value:`This ${item.data.type} is ${state}.`}}})}}static async updateIdentificationData(itemData,diff){if(!data_definitions_1.isPhysicalItem(itemData))return;const update=mergeObject({},diff),oldIdentificationState=getProperty(itemData,"data.identification.status"),newIdentificationState=getProperty(update,"data.identification.status");if(newIdentificationState&&oldIdentificationState!==newIdentificationState){diff[`data.identification.${oldIdentificationState}.name`]=itemData.name,diff[`data.identification.${oldIdentificationState}.img`]=itemData.img,diff[`data.identification.${oldIdentificationState}.data.description.value`]=itemData.data.description.value;const uuid=getProperty(update,`data.identification.${newIdentificationState}.link`);if(uuid){const baseItem=await fromUuid(uuid);if(baseItem instanceof PhysicalItemPF2e){const baseData=duplicate(baseItem.data);delete baseData._id,delete baseData.data.identification;for(const[key,value]of Object.entries(flattenObject(baseData)))diff[key]=value}}let override=getProperty(update,`data.identification.${newIdentificationState}`);if(override&&""!==override.name||(override=getProperty(itemData,`data.identification.${newIdentificationState}`)),override){delete override.link;for(const[key,value]of Object.entries(flattenObject(override)))diff[key]=value}}}async update(diff,options={}){return await PhysicalItemPF2e.updateIdentificationData(this.data,diff),super.update(diff,options)}static async createPhysicalItemFromCompendiumId(id){const pack=game.packs.find((p=>"pf2e.equipment-srd"===p.collection));if(!pack)throw Error("unable to get pack!");return pack.getEntity(id)}}exports.PhysicalItemPF2e=PhysicalItemPF2e},8468:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.hasGhostTouchRune=exports.getPropertyRuneModifiers=exports.getResiliencyBonus=exports.getStrikingDice=exports.getArmorBonus=exports.getAttackBonus=exports.getPropertyRunes=exports.getPropertySlots=void 0;const utils_1=__webpack_require__(4930),modifiers_1=__webpack_require__(6243);function getPropertySlots(itemData){var _a,_b;let slots=0;"orichalcum"===(null===(_a=itemData.data.preciousMaterial)||void 0===_a?void 0:_a.value)&&(slots+=1);let potencyRune=null===(_b=itemData.data.potencyRune)||void 0===_b?void 0:_b.value;return"noABP"!==game.settings.get("pf2e","automaticBonusVariant")&&(potencyRune=0,slots+=getPropertyRunes(itemData,4).length,slots+=1),potencyRune&&(slots+=potencyRune),slots}function getPropertyRunes(itemData,slots){var _a;const runes=[];for(let i=1;i<=slots;i+=1){const rune=null===(_a=itemData.data[`propertyRune${i}`])||void 0===_a?void 0:_a.value;utils_1.isBlank(rune)||runes.push(rune)}return runes}exports.getPropertySlots=getPropertySlots,exports.getPropertyRunes=getPropertyRunes,exports.getAttackBonus=function(itemData){var _a,_b,_c;return"bomb"===(null===(_a=itemData.group)||void 0===_a?void 0:_a.value)?null!==(_c=utils_1.toNumber(null===(_b=null==itemData?void 0:itemData.bonus)||void 0===_b?void 0:_b.value))&&void 0!==_c?_c:0:itemData.potencyRune.value},exports.getArmorBonus=function(itemData){var _a;const potencyRune=itemData.potencyRune.value;return(null!==(_a=utils_1.toNumber(itemData.armor.value))&&void 0!==_a?_a:0)+potencyRune};const strikingRuneValues=new Map([["striking",1],["greaterStriking",2],["majorStriking",3]]);exports.getStrikingDice=function(itemData){var _a;return null!==(_a=strikingRuneValues.get(itemData.strikingRune.value))&&void 0!==_a?_a:0};const resilientRuneValues=new Map([["resilient",1],["greaterResilient",2],["majorResilient",3]]);function toModifier(rune,{damageType,dieSize="d6",diceNumber=1}){const traits=[];return void 0!==damageType&&traits.push(damageType),new modifiers_1.DiceModifierPF2e({name:CONFIG.PF2E.weaponPropertyRunes[rune],diceNumber,dieSize,damageType,traits})}exports.getResiliencyBonus=function(itemData){var _a,_b;return null!==(_b=resilientRuneValues.get(null===(_a=null==itemData?void 0:itemData.resiliencyRune)||void 0===_a?void 0:_a.value))&&void 0!==_b?_b:0};const runeDamageModifiers=new Map;runeDamageModifiers.set("disrupting",{damageType:"positive"}),runeDamageModifiers.set("corrosive",{damageType:"acid"}),runeDamageModifiers.set("flaming",{damageType:"fire"}),runeDamageModifiers.set("frost",{damageType:"cold"}),runeDamageModifiers.set("shock",{damageType:"electricity"}),runeDamageModifiers.set("thundering",{damageType:"sonic"}),runeDamageModifiers.set("serrating",{dieSize:"d4"}),runeDamageModifiers.set("anarchic",{damageType:"chaotic"}),runeDamageModifiers.set("axiomatic",{damageType:"lawful"}),runeDamageModifiers.set("holy",{damageType:"good"}),runeDamageModifiers.set("unholy",{damageType:"evil"}),runeDamageModifiers.set("greaterDisrupting",{damageType:"positive",diceNumber:2}),runeDamageModifiers.set("greaterCorrosive",{damageType:"acid"}),runeDamageModifiers.set("greaterFlaming",{damageType:"fire"}),runeDamageModifiers.set("greaterFrost",{damageType:"cold"}),runeDamageModifiers.set("greaterShock",{damageType:"electricity"}),runeDamageModifiers.set("greaterThundering",{damageType:"sonic"}),exports.getPropertyRuneModifiers=function(itemData){const diceModifiers=[];for(const rune of getPropertyRunes(itemData,getPropertySlots(itemData))){const modifierConfig=runeDamageModifiers.get(rune);modifierConfig&&diceModifiers.push(toModifier(rune,modifierConfig))}return diceModifiers},exports.hasGhostTouchRune=function(itemData){return new Set(getPropertyRunes(itemData,getPropertySlots(itemData))).has("ghostTouch")}},9008:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ABCSheetPF2e=void 0;const base_1=__webpack_require__(8206),feat_1=__webpack_require__(5103),base_2=__webpack_require__(5180),localize_1=__webpack_require__(1608);class ABCSheetPF2e extends base_1.ItemSheetPF2e{static get defaultOptions(){return Object.assign(Object.assign({},super.defaultOptions),{scrollY:[".item-details"],dragDrop:[{dropSelector:".item-details"}]})}getData(){const itemType=this.item.type;return Object.assign(Object.assign({},this.getBaseData()),{hasSidebar:"class"!==this.item.data.type,sidebarTemplate:()=>`systems/pf2e/templates/items/${itemType}-sidebar.html`,hasDetails:!0,detailsTemplate:()=>`systems/pf2e/templates/items/${itemType}-details.html`})}getLocalizedAbilities(traits){return void 0!==traits&&traits.value?6===traits.value.length?{free:game.i18n.localize("PF2E.AbilityFree")}:Object.fromEntries(traits.value.map((x=>[x,CONFIG.PF2E.abilities[x]]))):{}}isValidDrop(event,feat){var _a,_b;const validFeatTypes=null!==(_b=null===(_a=$(event.target).closest(".abc-list").data("valid-drops"))||void 0===_a?void 0:_a.split(" "))&&void 0!==_b?_b:[];if(validFeatTypes.includes(feat.featType.value))return!0;const goodTypes=validFeatTypes.map((featType=>game.i18n.localize(CONFIG.PF2E.featTypes[featType])));if(1===goodTypes.length){const badType=feat.featType.label,warning=game.i18n.format(localize_1.LocalizePF2e.translations.PF2E.Item.ABC.InvalidDrop,{badType,goodType:goodTypes[0]});return ui.notifications.warn(warning),!1}return!0}async _onDrop(event){var _a;event.preventDefault();const dataString=null===(_a=event.dataTransfer)||void 0===_a?void 0:_a.getData("text/plain"),dropData=JSON.parse(null!=dataString?dataString:""),item=await base_2.ItemPF2e.fromDropData(dropData);if(!(item instanceof feat_1.FeatPF2e&&this.isValidDrop(event,item)))return;const entry={pack:dropData.pack,id:dropData.id,img:item.data.img,name:item.name,level:item.data.data.level.value},items=this.item.data.data.items;let id;do{id=randomID(5)}while(items[id]);await this.item.update({[`data.items.${id}`]:entry})}removeItem(event){event.preventDefault();const target=$(event.target).parents("li"),containerId=target.parents("[data-container-id]").data("containerId");let path=`-=${target.data("index")}`;containerId&&(path=`${containerId}.items.${path}`),this.item.update({[`data.items.${path}`]:null})}activateListeners(html){super.activateListeners(html),html.on("click","[data-action=remove]",(ev=>this.removeItem(ev)))}}exports.ABCSheetPF2e=ABCSheetPF2e},5070:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActionSheetPF2e=void 0;const base_1=__webpack_require__(8206);class ActionSheetPF2e extends base_1.ItemSheetPF2e{getData(){var _a,_b;const data=super.getData(),actorWeapons=null!==(_b=null===(_a=this.actor)||void 0===_a?void 0:_a.data.items.filter((itemData=>"weapon"===itemData.type)))&&void 0!==_b?_b:[],actionType=data.data.actionType.value||"action";let actionImg=0;return"action"===actionType?actionImg=parseInt((data.data.actions||{}).value,10)||1:"reaction"===actionType?actionImg="reaction":"free"===actionType?actionImg="free":"passive"===actionType&&(actionImg="passive"),data.item.img=this.getActionImg(actionImg.toString()),Object.assign(Object.assign({},data),{categories:CONFIG.PF2E.actionCategories,weapons:actorWeapons,actionTypes:CONFIG.PF2E.actionTypes,actionsNumber:CONFIG.PF2E.actionsNumber,featTraits:CONFIG.PF2E.featTraits,skills:CONFIG.PF2E.skillList,proficiencies:CONFIG.PF2E.proficiencyLevels,traits:this.prepareOptions(CONFIG.PF2E.featTraits,data.data.traits)})}}exports.ActionSheetPF2e=ActionSheetPF2e},1039:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AncestrySheetPF2e=void 0;const abc_1=__webpack_require__(9008);class AncestrySheetPF2e extends abc_1.ABCSheetPF2e{getData(){const data=super.getData(),itemData=data.item;return Object.assign(Object.assign({},data),{selectedBoosts:Object.fromEntries(Object.entries(itemData.data.boosts).map((([k,b])=>[k,this.getLocalizedAbilities(b)]))),selectedFlaws:Object.fromEntries(Object.entries(itemData.data.flaws).map((([k,b])=>[k,this.getLocalizedAbilities(b)]))),rarities:this.prepareOptions(CONFIG.PF2E.rarityTraits,{value:[itemData.data.traits.rarity.value]}),sizes:this.prepareOptions(CONFIG.PF2E.actorSizes,{value:[itemData.data.size]}),traits:this.prepareOptions(CONFIG.PF2E.creatureTraits,itemData.data.traits),languages:this.prepareOptions(CONFIG.PF2E.languages,itemData.data.languages),additionalLanguages:this.prepareOptions(CONFIG.PF2E.languages,itemData.data.additionalLanguages)})}}exports.AncestrySheetPF2e=AncestrySheetPF2e},3666:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BackgroundSheetPF2e=void 0;const abc_1=__webpack_require__(9008);class BackgroundSheetPF2e extends abc_1.ABCSheetPF2e{getData(){const data=super.getData(),itemData=data.item;return Object.assign(Object.assign({},data),{rarities:this.prepareOptions(CONFIG.PF2E.rarityTraits,{value:[itemData.data.traits.rarity.value]}),trainedSkills:this.prepareOptions(CONFIG.PF2E.skills,itemData.data.trainedSkills),selectedBoosts:Object.fromEntries(Object.entries(itemData.data.boosts).map((([k,b])=>[k,this.getLocalizedAbilities(b)])))})}}exports.BackgroundSheetPF2e=BackgroundSheetPF2e},8206:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ItemSheetPF2e=void 0;const base_1=__webpack_require__(9978),runes_1=__webpack_require__(8468),localize_1=__webpack_require__(1608),spell_1=__webpack_require__(802),tagify_1=__importDefault(__webpack_require__(8901)),trait_selector_1=__webpack_require__(8477),utils_1=__webpack_require__(4930);class ItemSheetPF2e extends ItemSheet{constructor(){super(...arguments),this.activeMystifyTab="unidentified"}static get defaultOptions(){const options=super.defaultOptions;return options.width=630,options.height=460,options.classes=options.classes.concat(["pf2e","item"]),options.template="systems/pf2e/templates/items/item-sheet.html",options.tabs=[{navSelector:".tabs",contentSelector:".sheet-body",initial:"description"},{navSelector:".mystify-nav",contentSelector:".mystify-sheet",initial:"unidentified"}],options}getData(){var _a,_b,_c,_d,_e,_f,_g,_h;const data=super.getData();data.user=game.user,data.abilities=CONFIG.PF2E.abilities,data.saves=CONFIG.PF2E.saves;const{type}=this.item;mergeObject(data,{type,hasSidebar:!0,hasMystify:!1,sidebarTemplate:()=>`systems/pf2e/templates/items/${type}-sidebar.html`,hasDetails:["consumable","equipment","feat","spell","weapon","armor","action","melee","backpack","condition","lore"].includes(type),detailsTemplate:()=>`systems/pf2e/templates/items/${type}-details.html`});const item=this.item,itemData=duplicate(item.data),traits=itemData.data.traits.value.filter((trait=>!!trait)),dt=duplicate(CONFIG.PF2E.damageTypes);"spell"===itemData.type&&mergeObject(dt,CONFIG.PF2E.healingTypes),data.damageTypes=dt;const stackGroup=null===(_b=null===(_a=data.data)||void 0===_a?void 0:_a.stackGroup)||void 0===_b?void 0:_b.value;if(data.bulkDisabled=null!=stackGroup&&""!==stackGroup.trim(),data.rarity=CONFIG.PF2E.rarityTraits,data.usage=CONFIG.PF2E.usageTraits,data.stackGroups=CONFIG.PF2E.stackGroups,"treasure"===type)data.currencies=CONFIG.PF2E.currencies,data.bulkTypes=CONFIG.PF2E.bulkTypes,data.sizes=CONFIG.PF2E.actorSizes;else if("consumable"===type)data.consumableTypes=CONFIG.PF2E.consumableTypes,data.bulkTypes=CONFIG.PF2E.bulkTypes,data.stackGroups=CONFIG.PF2E.stackGroups,data.consumableTraits=CONFIG.PF2E.consumableTraits,data.sizes=CONFIG.PF2E.actorSizes;else if(item instanceof spell_1.SpellPF2e)mergeObject(data,{spellTypes:CONFIG.PF2E.spellTypes,spellCategories:CONFIG.PF2E.spellCategories,magicSchools:CONFIG.PF2E.magicSchools,spellLevels:CONFIG.PF2E.spellLevels,magicTraditions:this.prepareOptions(CONFIG.PF2E.magicTraditions,item.data.data.traditions),traits:this.prepareOptions(CONFIG.PF2E.spellTraits,itemData.data.traits),spellComponents:this.formatSpellComponents(data.data),areaSizes:CONFIG.PF2E.areaSizes,areaTypes:CONFIG.PF2E.areaTypes,spellScalingModes:CONFIG.PF2E.spellScalingModes,isRitual:item.data.data.traditions.value.includes("ritual")}),this.prepareTraits(traits,Object.assign(Object.assign({},CONFIG.PF2E.magicTraditions),CONFIG.PF2E.spellTraits));else if("weapon"===type){const martialSkills=[];if(this.actor)for(const i of this.actor.data.items)"martial"===i.type&&martialSkills.push(i);data.martialSkills=martialSkills;const materials=duplicate(CONFIG.PF2E.preciousMaterials);delete materials.dragonhide;const slots=runes_1.getPropertySlots(data);this.assignPropertySlots(data,slots),data.preciousMaterials=materials,data.weaponPotencyRunes=CONFIG.PF2E.weaponPotencyRunes,data.weaponStrikingRunes=CONFIG.PF2E.weaponStrikingRunes,data.weaponPropertyRunes=CONFIG.PF2E.weaponPropertyRunes,data.preciousMaterials=CONFIG.PF2E.preciousMaterials,data.preciousMaterialGrades=CONFIG.PF2E.preciousMaterialGrades,data.weaponTraits=traits.map((trait=>{var _a;return null!==(_a=CONFIG.PF2E.weaponTraits[trait])&&void 0!==_a?_a:trait})),data.baseWeapons=localize_1.LocalizePF2e.translations.PF2E.Weapon.Base,data.weaponTypes=CONFIG.PF2E.weaponTypes,data.weaponGroups=CONFIG.PF2E.weaponGroups,data.itemBonuses=CONFIG.PF2E.itemBonuses,data.damageDie=CONFIG.PF2E.damageDie,data.damageDice=CONFIG.PF2E.damageDice,data.conditionTypes=CONFIG.PF2E.conditionTypes,data.weaponDamage=CONFIG.PF2E.damageTypes,data.weaponRange=CONFIG.PF2E.weaponRange,data.weaponReload=CONFIG.PF2E.weaponReload,data.weaponMAP=CONFIG.PF2E.weaponMAP,data.bulkTypes=CONFIG.PF2E.bulkTypes,data.sizes=CONFIG.PF2E.actorSizes,data.isBomb="weapon"===type&&"bomb"===(null===(_d=null===(_c=data.data)||void 0===_c?void 0:_c.group)||void 0===_d?void 0:_d.value),this.prepareTraits(data.data.traits,CONFIG.PF2E.weaponTraits)}else if("melee"===type){data.hasSidebar=!1,data.detailsActive=!0,data.damageTypes=CONFIG.PF2E.damageTypes;const attackEffectOptions=null!==(_f=null===(_e=this.actor)||void 0===_e?void 0:_e.itemTypes.action.reduce(((options,action)=>mergeObject(options,{[action.name.toLowerCase()]:action.name},{inplace:!1})),CONFIG.PF2E.attackEffects))&&void 0!==_f?_f:{};data.attackEffects=this.prepareOptions(attackEffectOptions,data.data.attackEffects),data.traits=this.prepareOptions(CONFIG.PF2E.weaponTraits,data.data.traits)}else if("condition"===type)data.conditions=[];else if("equipment"===type)data.bulkTypes=CONFIG.PF2E.bulkTypes,data.stackGroups=CONFIG.PF2E.stackGroups,data.equipmentTraits=CONFIG.PF2E.equipmentTraits,data.sizes=CONFIG.PF2E.actorSizes;else if("backpack"===type)data.bulkTypes=CONFIG.PF2E.bulkTypes,data.equipmentTraits=CONFIG.PF2E.equipmentTraits,data.sizes=CONFIG.PF2E.actorSizes;else if("armor"===type){const slots=runes_1.getPropertySlots(data);this.assignPropertySlots(data,slots),data.armorPotencyRunes=CONFIG.PF2E.armorPotencyRunes,data.armorResiliencyRunes=CONFIG.PF2E.armorResiliencyRunes,data.armorPropertyRunes=CONFIG.PF2E.armorPropertyRunes,data.armorTypes=CONFIG.PF2E.armorTypes,data.armorGroups=CONFIG.PF2E.armorGroups,data.bulkTypes=CONFIG.PF2E.bulkTypes,data.traits=this.prepareOptions(CONFIG.PF2E.armorTraits,item.data.data.traits),data.preciousMaterials=CONFIG.PF2E.preciousMaterials,data.preciousMaterialGrades=CONFIG.PF2E.preciousMaterialGrades,data.sizes=CONFIG.PF2E.actorSizes}else if("lore"===type)data.proficiencies=CONFIG.PF2E.proficiencyLevels;else if("effect"===type&&(null===(_g=null==this?void 0:this.actor)||void 0===_g?void 0:_g.items)){const scopes=new Set;data.item.data.rules.filter((rule=>"PF2E.RuleElement.EffectTarget"===rule.key)).forEach((rule=>{scopes.add(rule.scope)})),scopes&&(data.targets=this.actor.items.filter((item=>scopes.has(item.type))).map((item=>({id:item.id,name:item.name}))))}return data.enabledRulesUI=null!==(_h=game.settings.get(game.system.id,"enabledRulesUI"))&&void 0!==_h&&_h,data.activeEffects=this.getActiveEffectsData(),data.isPhysicalItem=!1,data}getBaseData(){var _a;return Object.assign(Object.assign({},super.getData()),{user:game.user,enabledRulesUI:null!==(_a=game.settings.get(game.system.id,"enabledRulesUI"))&&void 0!==_a&&_a,activeEffects:this.getActiveEffectsData(),isPhysicalItem:!1})}getActiveEffectsData(){const durationString=duration=>{var _a;const translations=localize_1.LocalizePF2e.translations.PF2E.ActiveEffects,durationEntries=Object.entries(duration).filter((entry=>["rounds","seconds","turns"].includes(entry[0]))),[key,quantity]=null!==(_a=durationEntries.find((entry=>"number"==typeof entry[1])))&&void 0!==_a?_a:["permanent",null];if("permanent"===key)return translations.Duration.Permanent;const unit=1===quantity?key.slice(0,1).toUpperCase()+key.slice(1,-1):key.slice(0,1).toUpperCase()+key.slice(1);return game.i18n.format(translations.Duration[null!=unit?unit:"seconds"],{quantity})},actor=this.item.actor,origin=`Actor.${null==actor?void 0:actor.id}.OwnedItem.${this.item.id}`,effects=actor instanceof base_1.ActorPF2e?actor.effects.entries.filter((effect=>effect.data.origin===origin)):this.item.effects.entries;return{showAEs:game.settings.get(game.system.id,"enabledRulesUI"),canEdit:null===this.actor&&!this.item.uuid.match(/Compendium/),effects:effects.map((effect=>{var _a;return{id:effect.id,iconPath:null!==(_a=effect.data.icon)&&void 0!==_a?_a:null,name:effect.data.label,duration:durationString(effect.data.duration),enabled:effect.isEnabled}}))}}assignPropertySlots(data,number){const slots=[1,2,3,4];for(const slot of slots)number>=slot&&(data[`propertyRuneSlots${slot}`]=!0)}prepareTraits(traits,choices){void 0!==traits&&(traits.selected?traits.selected=traits.value.reduce(((obj,t)=>(obj[t]=choices[t],obj)),{}):traits.selected=[],traits.custom&&(traits.selected.custom=traits.custom))}prepareOptions(options,selections){const sheetOptions=Object.entries(options).reduce(((sheetOptions,[stringKey,label])=>{const key="number"==typeof selections.value[0]?Number(stringKey):stringKey;return sheetOptions[key]={label,value:stringKey,selected:selections.value.includes(key)},sheetOptions}),{});return selections.custom&&(sheetOptions.custom={label:selections.custom,value:"",selected:!0}),sheetOptions}formatSpellComponents(data){if(!data.components.value)return[];const comps=data.components.value.split(",").map((component=>{var _a;return null!==(_a=CONFIG.PF2E.spellComponents[component.trim()])&&void 0!==_a?_a:component.trim()}));return data.materials.value&&comps.push(data.materials.value),comps}onTraitSelector(event){var _a,_b,_c,_d;event.preventDefault();const $anchor=$(event.currentTarget),selectorType=null!==(_a=$anchor.attr("data-trait-selector"))&&void 0!==_a?_a:"";if("basic"!==selectorType||!utils_1.tupleHasValue(trait_selector_1.TAG_SELECTOR_TYPES,selectorType))throw utils_1.ErrorPF2e("Item sheets can only use the basic tag selector");const objectProperty=null!==(_b=$anchor.attr("data-property"))&&void 0!==_b?_b:"",configTypes=(null!==(_c=$anchor.attr("data-config-types"))&&void 0!==_c?_c:"").split(",").map((type=>type.trim())).filter((tag=>utils_1.tupleHasValue(trait_selector_1.SELECTABLE_TAG_FIELDS,tag))),selectorOptions={objectProperty,configTypes};if("true"===$anchor.attr("data-no-custom"))selectorOptions.allowCustom=!1;else if(this.actor&&configTypes.includes("attackEffects")){const attackEffectOptions=null!==(_d=this.actor.itemTypes.action.reduce(((options,action)=>mergeObject(options,{[action.name.toLowerCase()]:action.name},{inplace:!1})),CONFIG.PF2E.attackEffects))&&void 0!==_d?_d:{};selectorOptions.customChoices=attackEffectOptions}new trait_selector_1.TraitSelectorBasic(this.item,selectorOptions).render(!0)}getActionImg(action){return{0:"systems/pf2e/icons/default-icons/mystery-man.svg",1:"systems/pf2e/icons/actions/OneAction.webp",2:"systems/pf2e/icons/actions/TwoActions.webp",3:"systems/pf2e/icons/actions/ThreeActions.webp",free:"systems/pf2e/icons/actions/FreeAction.webp",reaction:"systems/pf2e/icons/actions/Reaction.webp",passive:"systems/pf2e/icons/actions/Passive.webp"}[null!=action?action:"0"]}async addDamageRoll(event){event.preventDefault();const newKey=randomID(20);return this.item.update({[`data.damageRolls.${newKey}`]:{damage:"",damageType:""}})}async deleteDamageRoll(event){event.preventDefault(),event.originalEvent&&await this._onSubmit(event.originalEvent);const targetKey=$(event.target).parents(".damage-part").attr("data-damage-part");return this.item.update({[`data.damageRolls.-=${targetKey}`]:null})}_canDragDrop(_selector){return this.item.owner}activateListeners(html){super.activateListeners(html),this._tabs[0].callback=()=>{"mystify"===this._tabs[0].active&&this._tabs[1].activate(this.activeMystifyTab)},this._tabs[1].callback=()=>{this.activeMystifyTab=this._tabs[1].active},html.find('li.trait-item input[type="checkbox"]').on("click",(event=>{event.originalEvent instanceof MouseEvent&&this._onSubmit(event.originalEvent)})),html.find(".trait-selector").on("click",(ev=>this.onTraitSelector(ev))),html.find(".add-damage").on("click",(ev=>{this.addDamageRoll(ev)})),html.find(".delete-damage").on("click",(ev=>{this.deleteDamageRoll(ev)})),html.find(".add-rule-element").on("click",(async event=>{var _a;event.preventDefault(),event.originalEvent instanceof MouseEvent&&await this._onSubmit(event.originalEvent);const rules=null!==(_a=this.item.data.data.rules)&&void 0!==_a?_a:[];this.item.update({"data.rules":rules.concat([{key:"PF2E.RuleElement.Unrecognized"}])})})),html.find(".rules").on("click",".remove-rule-element",(async event=>{var _a;event.preventDefault(),event.originalEvent instanceof MouseEvent&&await this._onSubmit(event.originalEvent);const rules=duplicate(null!==(_a=this.item.data.data.rules)&&void 0!==_a?_a:[]),index=event.currentTarget.dataset.ruleIndex;rules&&rules.length>Number(index)&&(rules.splice(index,1),this.item.update({"data.rules":rules}))})),html.find(".add-skill-variant").on("click",(_event=>{var _a,_b,_c,_d,_e;const variants=null!==(_e=null===(_d=null===(_c=null===(_b=null===(_a=this.actor)||void 0===_a?void 0:_a.items)||void 0===_b?void 0:_b.get(this.entity.id))||void 0===_c?void 0:_c.data.data)||void 0===_d?void 0:_d.variants)&&void 0!==_e?_e:{},index=Object.keys(variants).length;this.item.update({[`data.variants.${index}`]:{label:"+X in terrain",options:""}})})),html.find(".skill-variants").on("click",".remove-skill-variant",(event=>{const index=event.currentTarget.dataset.skillVariantIndex;this.item.update({[`data.variants.-=${index}`]:null})}));const $prerequisites=html.find('input[name="data.prerequisites.value"]');$prerequisites[0]&&new tagify_1.default($prerequisites[0],{editTags:1}),html.find('.tab.effects table th a[data-action="create"]').on("click",(()=>{ActiveEffect.create({label:"New Effect",icon:this.item.img,origin:this.item.uuid,disabled:!1,duration:{rounds:void 0,seconds:void 0}},this.item).create().then((effectData=>{this.render(),this.item.effects.get(effectData._id).sheet.render(!0)}))}));const $aeControls=html.find(".tab.effects table tbody td.controls"),actor=this.item.actor,origin=`Actor.${null==actor?void 0:actor.id}.OwnedItem.${this.item.id}`,getEffects=()=>actor instanceof base_1.ActorPF2e?actor.effects.entries.filter((effect=>effect.data.origin===origin)):this.item.effects.entries,getEffectId=target=>$(target).closest("tr").data("effect-id");getEffects();$aeControls.find('input[data-action="enable"]').on("change",(event=>{event.preventDefault();const effects=getEffects(),effectId=getEffectId(event.target),effect=effects.find((ownedEffect=>ownedEffect.id===effectId));if(effect instanceof ActiveEffect){const isDisabled=!$(event.target).is(":checked"),refresh=()=>this.render();actor instanceof base_1.ActorPF2e?actor.updateEmbeddedEntity("ActiveEffect",{_id:effect.id,disabled:isDisabled}).then(refresh):effect.update({disabled:isDisabled}).then(refresh)}})),$aeControls.find('a[data-action="edit"]').on("click",(event=>{const effects=getEffects(),effectId=getEffectId(event.target),effect=effects.find((ownedEffect=>ownedEffect.id===effectId));effect instanceof ActiveEffect&&effect.sheet.render(!0)})),$aeControls.find('a[data-action="delete"]').on("click",(event=>{const effects=getEffects(),effectId=getEffectId(event.target),effect=effects.find((ownedEffect=>ownedEffect.id===effectId));effect instanceof ActiveEffect&&(actor instanceof base_1.ActorPF2e?actor.deleteEmbeddedEntity("ActiveEffect",effect.id):effect.delete())}))}_getSubmitData(updateData={}){const fd=new FormDataExtended(this.form,{editors:this.editors}),data=updateData?mergeObject(fd.toObject(),updateData):expandObject(fd.toObject());return(null==data?void 0:data.data)&&"rules"in(null==data?void 0:data.data)&&(data.data.rules=Object.entries(data.data.rules).map((([_,value])=>{try{return JSON.parse(value)}catch(error){throw ui.notifications.warn("Syntax error in rule element definition."),error}}))),flattenObject(data)}_getHeaderButtons(){const buttons=super._getHeaderButtons(),hasMultipleSheets=Object.keys(CONFIG.Item.sheetClasses[this.item.type]).length>1,sheetButton=buttons.find((button=>"configure-sheet"===button.class));return!hasMultipleSheets&&sheetButton&&buttons.splice(buttons.indexOf(sheetButton),1),buttons}async _onSubmit(event,{updateData=null,preventClose=!1,preventRender=!1}={}){return $(this.form).find("tags ~ input").each(((_i,input)=>{""===input.value&&(input.value="[]")})),super._onSubmit(event,{updateData,preventClose,preventRender})}async _updateObject(event,formData){""===formData["data.baseItem"]&&(formData["data.baseItem"]=null),super._updateObject(event,formData)}}exports.ItemSheetPF2e=ItemSheetPF2e},5839:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ClassSheetPF2e=void 0;const abc_1=__webpack_require__(9008);class ClassSheetPF2e extends abc_1.ABCSheetPF2e{getData(){const data=super.getData(),itemData=data.item,items=Object.entries(data.data.items).map((([key,item])=>({key,item}))).sort(((first,second)=>first.item.level-second.item.level));return Object.assign(Object.assign({},data),{items,rarities:this.prepareOptions(CONFIG.PF2E.rarityTraits,{value:[itemData.data.traits.rarity.value]}),skills:CONFIG.PF2E.skills,proficiencyChoices:CONFIG.PF2E.proficiencyLevels,selectedKeyAbility:this.getLocalizedAbilities(itemData.data.keyAbility),ancestryTraits:this.prepareOptions(CONFIG.PF2E.ancestryItemTraits,itemData.data.traits),trainedSkills:this.prepareOptions(CONFIG.PF2E.skills,itemData.data.trainedSkills),ancestryFeatLevels:this.prepareOptions(CONFIG.PF2E.levels,itemData.data.ancestryFeatLevels),classFeatLevels:this.prepareOptions(CONFIG.PF2E.levels,itemData.data.classFeatLevels),generalFeatLevels:this.prepareOptions(CONFIG.PF2E.levels,itemData.data.generalFeatLevels),skillFeatLevels:this.prepareOptions(CONFIG.PF2E.levels,itemData.data.skillFeatLevels),skillIncreaseLevels:this.prepareOptions(CONFIG.PF2E.levels,itemData.data.skillIncreaseLevels),abilityBoostLevels:this.prepareOptions(CONFIG.PF2E.levels,itemData.data.abilityBoostLevels)})}}exports.ClassSheetPF2e=ClassSheetPF2e},106:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FeatSheetPF2e=void 0;const base_1=__webpack_require__(8206);class FeatSheetPF2e extends base_1.ItemSheetPF2e{getData(){var _a,_b;const data=super.getData();return Object.assign(Object.assign({},data),{featTypes:CONFIG.PF2E.featTypes,featActionTypes:CONFIG.PF2E.featActionTypes,actionsNumber:CONFIG.PF2E.actionsNumber,categories:CONFIG.PF2E.actionCategories,damageTypes:Object.assign(Object.assign({},CONFIG.PF2E.damageTypes),CONFIG.PF2E.healingTypes),prerequisites:JSON.stringify(null!==(_b=null===(_a=this.item.data.data.prerequisites)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:[]),rarities:this.prepareOptions(CONFIG.PF2E.rarityTraits,{value:[data.data.traits.rarity.value]}),traits:this.prepareOptions(CONFIG.PF2E.featTraits,data.data.traits)})}}exports.FeatSheetPF2e=FeatSheetPF2e},3477:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.KitSheetPF2e=void 0;const physical_1=__webpack_require__(315),base_1=__webpack_require__(8206);class KitSheetPF2e extends base_1.ItemSheetPF2e{static get defaultOptions(){return Object.assign(Object.assign({},super.defaultOptions),{scrollY:[".item-details"],dragDrop:[{dropSelector:".item-details"}]})}getData(){const data=super.getBaseData();return mergeObject(data,{type:"kit",hasSidebar:!0,sidebarTemplate:()=>"systems/pf2e/templates/items/kit-sidebar.html",hasDetails:!0,detailsTemplate:()=>"systems/pf2e/templates/items/kit-details.html"}),data.rarity=CONFIG.PF2E.rarityTraits,this.prepareTraits(data.data.traits,CONFIG.PF2E.classTraits),data}async _onDrop(event){var _a,_b,_c,_d,_e,_f,_g;event.preventDefault();const dropTarget=$(event.target),dragData=null===(_a=event.dataTransfer)||void 0===_a?void 0:_a.getData("text/plain"),dragItem=JSON.parse(null!=dragData?dragData:""),containerId=null!==(_b=dropTarget.data("containerId"))&&void 0!==_b?_b:dropTarget.parents("[data-container-id]").data("containerId");if("Item"!==dragItem.type)return;const item=dragItem.pack?null!==(_d=await(null===(_c=game.packs.get(dragItem.pack))||void 0===_c?void 0:_c.getEntity(dragItem.id)))&&void 0!==_d?_d:void 0:null!==(_e=game.items.get(dragItem.id))&&void 0!==_e?_e:void 0;if(!(item instanceof physical_1.PhysicalItemPF2e))return;const entry={pack:dragItem.pack,id:dragItem.id,img:item.data.img,quantity:1,name:item.name,isContainer:"backpack"===item.data.type&&!containerId,items:{}};let id,{items}=this.item.data.data,pathPrefix="data.items";void 0!==containerId&&(pathPrefix=`${pathPrefix}.${containerId}.items`,items=null!==(_g=null===(_f=items[containerId])||void 0===_f?void 0:_f.items)&&void 0!==_g?_g:{});do{id=randomID(5)}while(items[id]);await this.item.update({[`${pathPrefix}.${id}`]:entry})}removeItem(event){event.preventDefault();const target=$(event.target).parents("li"),containerId=target.parents("[data-container-id]").data("containerId");let path=`-=${target.data("index")}`;containerId&&(path=`${containerId}.items.${path}`),this.item.update({[`data.items.${path}`]:null})}activateListeners(html){super.activateListeners(html),html.on("click","[data-action=remove]",(event=>this.removeItem(event)))}}exports.KitSheetPF2e=KitSheetPF2e},293:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PhysicalItemSheetPF2e=void 0;const base_1=__webpack_require__(8206),data_definitions_1=__webpack_require__(6508);class MystifyData{}class PhysicalItemSheetPF2e extends base_1.ItemSheetPF2e{getData(){return Object.assign(Object.assign({},super.getData()),{isPhysicalItem:!0,hasMystify:game.user.isGM&&data_definitions_1.isInventoryItem(this.item.type)&&!1,isIdentified:this.item.isIdentified})}async _updateObject(event,formData){this.item.data.data.identification&&this.checkForMystifyUpdates(formData),super._updateObject(event,formData)}checkForMystifyUpdates(data){var _a,_b,_c,_d,_e;let currentItemData;const namePath=`data.identification.${this.item.data.data.identification.status}.name`,imgPath=`data.identification.${this.item.data.data.identification.status}.img`,mystifyDescPath=`data.identification.${this.item.data.data.identification.status}.data.description.value`,baseDescPath="data.description.value";switch(this.item.data.data.identification.status){case"unidentified":currentItemData=null!==(_a=this.item.data.data.identification.unidentified)&&void 0!==_a?_a:new MystifyData;break;case"misidentified":currentItemData=null!==(_b=this.item.data.data.identification.misidentified)&&void 0!==_b?_b:new MystifyData;break;case"identified":default:currentItemData=null!==(_c=this.item.data.data.identification.identified)&&void 0!==_c?_c:new MystifyData}this.item.data.name!==data.name?data[namePath]=data.name:data[namePath]!==currentItemData.name&&(data.name=data[namePath]),this.item.data.img!==data.img?data[imgPath]=data.img:data[imgPath]!==currentItemData.img&&(data.img=data[imgPath]),data[mystifyDescPath]&&data[mystifyDescPath]!==(null===(_e=null===(_d=currentItemData.data)||void 0===_d?void 0:_d.description)||void 0===_e?void 0:_e.value)?data[baseDescPath]=data[mystifyDescPath]:data[baseDescPath]&&data[baseDescPath]!==this.item.data.data.description.value&&(data[mystifyDescPath]=data[baseDescPath])}}exports.PhysicalItemSheetPF2e=PhysicalItemSheetPF2e},9795:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.calculateTrickMagicItemCastData=exports.calculateTrickMagicItemCheckDC=exports.canCastConsumable=exports.createConsumableFromSpell=exports.SpellConsumableTypes=void 0;const dc_1=__webpack_require__(2292),utils_1=__webpack_require__(4930);var SpellConsumableTypes;!function(SpellConsumableTypes){SpellConsumableTypes[SpellConsumableTypes.Scroll=0]="Scroll",SpellConsumableTypes[SpellConsumableTypes.Wand=1]="Wand"}(SpellConsumableTypes=exports.SpellConsumableTypes||(exports.SpellConsumableTypes={}));const scrollCompendiumIds={1:"RjuupS9xyXDLgyIr",2:"Y7UD64foDbDMV9sx",3:"ZmefGBXGJF3CFDbn",4:"QSQZJ5BC3DeHv153",5:"tjLvRWklAylFhBHQ",6:"4sGIy77COooxhQuC",7:"fomEZZ4MxVVK3uVu",8:"iPki3yuoucnj7bIt",9:"cFHomF3tty8Wi1e5",10:"o1XIHJ4MJyroAHfF"},wandCompendiumIds={1:"UJWiN0K3jqVjxvKk",2:"vJZ49cgi8szuQXAD",3:"wrDmWkGxmwzYtfiA",4:"Sn7v9SsbEDMUIwrO",5:"5BF7zMnrPYzyigCs",6:"kiXh4SUWKr166ZeM",7:"nmXPj9zuMRQBNT60",8:"Qs8RgNH6thRPv2jt",9:"Fgv722039TVM5JTc"};exports.createConsumableFromSpell=async function(type,spellData,heightenedLevel){heightenedLevel=null!=heightenedLevel?heightenedLevel:spellData.data.level.value;const pack=game.packs.find((p=>"pf2e.equipment-srd"===p.collection)),itemID=function(type,heightenedLevel){return type==SpellConsumableTypes.Scroll?scrollCompendiumIds[heightenedLevel]:wandCompendiumIds[heightenedLevel]}(type,heightenedLevel),consumable=await(null==pack?void 0:pack.getEntity(itemID));if(!consumable||!("type"in consumable._data)||"consumable"!==consumable._data.type)throw utils_1.ErrorPF2e("Failed to retrieve consumable item");const consumableData=consumable._data;consumableData.data.traits.value.push(...spellData.data.traditions.value),consumableData.name=function(type,spellName,heightenedLevel){return type==SpellConsumableTypes.Scroll?game.i18n.format("PF2E.ScrollFromSpell",{name:spellName,level:heightenedLevel}):game.i18n.format("PF2E.WandFromSpell",{name:spellName,level:heightenedLevel})}(type,spellData.name,heightenedLevel);const description=consumableData.data.description.value;return consumableData.data.description.value=`@Compendium[pf2e.spells-srd.${spellData._id}]{${spellData.name}}\n<hr/>${description}`,consumableData.data.spell={data:duplicate(spellData),heightenedLevel},consumableData},exports.canCastConsumable=function(actor,item){var _a,_b;const spellData=null===(_b=null===(_a=item.data.spell)||void 0===_a?void 0:_a.data)||void 0===_b?void 0:_b.data;return!!spellData&&actor.itemTypes.spellcastingEntry.map((entry=>entry.data)).filter((entryData=>["prepared","spontaneous"].includes(entryData.data.prepared.value))).some((entryData=>spellData.traditions.value.includes(entryData.data.tradition.value)))};const TraditionSkills={arcane:"arc",divine:"rel",occult:"occ",primal:"nat"};exports.calculateTrickMagicItemCheckDC=function(itemData,options={proficiencyWithoutLevel:!1}){const level=Number(itemData.data.level.value),saveDC=dc_1.calculateDC(level,options),skills=itemData.data.traits.value.filter((trait=>trait in CONFIG.PF2E.spellTraditions)).map((tradition=>[TraditionSkills[tradition],saveDC]));return Object.fromEntries(skills)},exports.calculateTrickMagicItemCastData=function(actor,skill){const highestMentalStat=["int","wis","cha"].map((s=>({stat:s,mod:actor.getAbilityMod(s)}))).reduce(((highest,next)=>next.mod>highest.mod?next:highest)).stat,spellDC=actor.data.data.details.level.value+2*Math.max(0,actor.data.data.skills[skill].rank-2)+actor.getAbilityMod(highestMentalStat);return{ability:highestMentalStat,data:{spelldc:{value:spellDC,dc:spellDC+10}},_id:""}}},4715:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SpellFacade=void 0;exports.SpellFacade=class{constructor(data,scope={}){var _a,_b,_c;this.data=data,this.castingActor=scope.castingActor,this._castLevel=scope.castLevel||this.spellLevel,this.spellcastingEntry=null===(_c=null===(_b=null===(_a=this.castingActor)||void 0===_a?void 0:_a.itemTypes)||void 0===_b?void 0:_b.spellcastingEntry)||void 0===_c?void 0:_c.find((entry=>entry.id===this.spellcastingEntryId))}get spellcastingEntryId(){return this.data.data.location.value}get spellLevel(){return this.data.data.level.value}get heightenedLevel(){var _a,_b;return null!==(_b=null===(_a=this.data.data.heightenedLevel)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:this.spellLevel}get damage(){return this.data.data.damage}get damageValue(){return this.damage.value&&""!==this.damage.value&&"0"!==this.damage.value?this.damage.value:null}get damageParts(){const parts=[];if(this.damageValue&&parts.push(this.damage.value),this.damage.applyMod&&this.castingActor){const entry=this.spellcastingEntry;!entry&&this.data.data.trickMagicItemData?parts.push(this.castingActor.getAbilityMod(this.data.data.trickMagicItemData.ability)):entry&&parts.push(this.castingActor.getAbilityMod(entry.ability))}if(""===this.data.data.duration.value&&this.castingActor){this.castingActor.itemTypes.feat.some((feat=>"dangerous-sorcery"===feat.slug))&&!this.isFocusSpell&&0!==this.spellLevel&&(console.debug(`PF2e System | Adding Dangerous Sorcery spell damage for ${this.data.name}`),parts.push(this.castLevel))}return parts.concat(this.heightenedParts)}get scaling(){var _a;return(null===(_a=this.data.data)||void 0===_a?void 0:_a.scaling)||{formula:"",mode:""}}get castLevel(){return this.autoScalingSpell&&this.castingActor?Math.ceil(this.castingActor.level/2):this._castLevel}get autoScalingSpell(){return 0===this.spellLevel||11===this.spellLevel||this.isFocusSpell}get isCantrip(){return 0===this.spellLevel}get isFocusSpell(){return this.traditions.includes("focus")}get isRitual(){return this.traditions.includes("ritual")}get traditions(){var _a,_b;return(null===(_b=null===(_a=this.data.data)||void 0===_a?void 0:_a.traditions)||void 0===_b?void 0:_b.value)||[]}get heighteningModes(){return{level1:1,level2:2,level3:3,level4:4}}get heightenedParts(){let parts=[];if(""!==this.scaling.formula){const heighteningDivisor=this.heighteningModes[this.scaling.mode];if(heighteningDivisor){let effectiveSpellLevel=1;this.spellLevel>0&&this.spellLevel<11&&(effectiveSpellLevel=this.spellLevel);let partCount=this.castLevel-effectiveSpellLevel;partCount=Math.floor(partCount/heighteningDivisor),parts=Array(partCount).fill(this.scaling.formula)}}return parts}}},802:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SpellPF2e=void 0;const base_1=__webpack_require__(5180);class SpellPF2e extends base_1.ItemPF2e{get spellcasting(){var _a;const spellcastingId=this.data.data.location.value;return null===(_a=this.actor)||void 0===_a?void 0:_a.itemTypes.spellcastingEntry.find((entry=>entry.id===spellcastingId))}getChatData(htmlOptions,rollOptions={}){var _a,_b,_c,_d,_e,_f,_g;if(!this.actor)return{};const localize=game.i18n.localize.bind(game.i18n),data=this.data.data,spellcastingEntryData=null===(_a=this.spellcasting)||void 0===_a?void 0:_a.data;if(!spellcastingEntryData)return{};let spellDC=null!==(_c=null===(_b=spellcastingEntryData.data.dc)||void 0===_b?void 0:_b.value)&&void 0!==_c?_c:spellcastingEntryData.data.spelldc.dc,spellAttack=null!==(_e=null===(_d=spellcastingEntryData.data.attack)||void 0===_d?void 0:_d.value)&&void 0!==_e?_e:spellcastingEntryData.data.spelldc.value;const actorTraits=this.actor.data.data.traits.traits.value;actorTraits.some((trait=>"elite"===trait))?(spellDC=Number(spellDC)+2,spellAttack=Number(spellAttack)+2):actorTraits.some((trait=>"weak"===trait))&&(spellDC=Number(spellDC)-2,spellAttack=Number(spellAttack)-2);const isAttack="attack"===data.spellType.value,isSave="save"===data.spellType.value||""!==data.save.value,save=duplicate(this.data.data.save);save.dc=isSave?spellDC:spellAttack,save.str=game.i18n.localize(CONFIG.PF2E.saves[data.save.value.toLowerCase()]);const damageLabel="heal"===data.spellType.value?localize("PF2E.SpellTypeHeal"):localize("PF2E.DamageLabel"),area=(()=>{var _a,_b;if(data.area.value){const areaSize=game.i18n.localize(null!==(_a=CONFIG.PF2E.areaSizes[data.area.value])&&void 0!==_a?_a:""),areaType=game.i18n.localize(null!==(_b=CONFIG.PF2E.areaTypes[data.area.areaType])&&void 0!==_b?_b:"");return`${localize("PF2E.SpellAreaLabel")}: ${areaSize} ${areaType}`.trim()}return null})(),properties=[localize(CONFIG.PF2E.spellLevels[data.level.value]),`${localize("PF2E.SpellComponentsLabel")}: ${data.components.value}`,data.range.value?`${localize("PF2E.SpellRangeLabel")}: ${data.range.value}`:null,data.target.value?`${localize("PF2E.SpellTargetLabel")}: ${data.target.value}`:null,area,data.time.value?`${localize("PF2E.SpellTimeLabel")}: ${data.time.value}`:null,data.duration.value?`${localize("PF2E.SpellDurationLabel")}: ${data.duration.value}`:null].filter((p=>null!==p)),spellLvl=null!==(_f=(rollOptions||{}).spellLvl)&&void 0!==_f?_f:null===(_g=data.heightenedLevel)||void 0===_g?void 0:_g.value,castedLevel=Number(null!=spellLvl?spellLvl:0);data.level.value<castedLevel&&properties.push("Heightened: +"+(castedLevel-data.level.value));const traits=base_1.ItemPF2e.traitChatData(data.traits,CONFIG.PF2E.spellTraits);return this.processChatData(htmlOptions,Object.assign(Object.assign({},data),{save,isAttack,isSave,spellLvl,damageLabel,properties,traits}))}}exports.SpellPF2e=SpellPF2e},1337:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SpellcastingEntryPF2e=void 0;const base_1=__webpack_require__(5180);class SpellcastingEntryPF2e extends base_1.ItemPF2e{get ability(){return this.data.data.ability.value||"int"}get isSpontaneous(){return"spontaneous"===this.data.data.prepared.value}get isInnate(){return"innate"===this.data.data.prepared.value}}exports.SpellcastingEntryPF2e=SpellcastingEntryPF2e},4562:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.attemptToRemoveCoinsByValue=exports.sellTreasure=exports.sellAllTreasure=exports.removeCoins=exports.addCoins=exports.coinCompendiumIds=exports.calculateWealth=exports.calculateValueOfCurrency=exports.calculateTotalWealth=exports.extractPriceFromItem=exports.coinValueInCopper=void 0;const utils_1=__webpack_require__(4930),data_definitions_1=__webpack_require__(6508);function toCoins(denomination,value){return{pp:"pp"===denomination?value:0,gp:"gp"===denomination?value:0,sp:"sp"===denomination?value:0,cp:"cp"===denomination?value:0}}function combineCoins(first,second){return{pp:first.pp+second.pp,gp:first.gp+second.gp,sp:first.sp+second.sp,cp:first.cp+second.cp}}function extractPriceFromItem(item,quantityOverride){var _a,_b,_c,_d,_e;const priceTag=null!==(_e=null===(_d=null===(_c=null===(_b=null===(_a=item.data.price)||void 0===_a?void 0:_a.value)||void 0===_b?void 0:_b.toString())||void 0===_c?void 0:_c.trim())||void 0===_d?void 0:_d.replace(/,/g,""))&&void 0!==_e?_e:"",match=/^(\d+)(?:\s*)(pp|gp|sp|cp)$/.exec(priceTag);if(match){const[value,denomination]=match.slice(1,3),quantity=null!=quantityOverride?quantityOverride:item.data.quantity.value;return toCoins(denomination,parseInt(value,10)*quantity)}return toCoins("gp",0)}function calculateWealthForCategory(items,category){const toCalculate=items.filter((itemData=>data_definitions_1.isPhysicalItem(itemData)&&(game.user.isGM||"identified"===itemData.data.identification.status)));return"treasure"===category?function(items){return items.filter((item=>{var _a,_b,_c,_d;return"treasure"===item.type&&void 0!==(null===(_b=null===(_a=null==item?void 0:item.data)||void 0===_a?void 0:_a.denomination)||void 0===_b?void 0:_b.value)&&null!==(null===(_d=null===(_c=null==item?void 0:item.data)||void 0===_c?void 0:_c.denomination)||void 0===_d?void 0:_d.value)})).map((item=>{var _a,_b,_c,_d,_e,_f;const value=(null!==(_c=null===(_b=null===(_a=item.data)||void 0===_a?void 0:_a.value)||void 0===_b?void 0:_b.value)&&void 0!==_c?_c:1)*(null!==(_f=null===(_e=null===(_d=item.data)||void 0===_d?void 0:_d.quantity)||void 0===_e?void 0:_e.value)&&void 0!==_f?_f:1);return toCoins(item.data.denomination.value,value)})).reduce(combineCoins,{pp:0,gp:0,sp:0,cp:0})}(toCalculate):toCalculate.filter((item=>item.type===category)).map((item=>extractPriceFromItem(item))).reduce(combineCoins,{pp:0,gp:0,sp:0,cp:0})}function calculateValueOfCurrency(items){return items.filter((item=>{var _a,_b,_c;return"treasure"===item.type&&"coins"===(null===(_a=item.data.stackGroup)||void 0===_a?void 0:_a.value)&&void 0!==(null===(_b=item.data.denomination)||void 0===_b?void 0:_b.value)&&null!==(null===(_c=item.data.denomination)||void 0===_c?void 0:_c.value)})).map((item=>{const value=(Number(item.data.value.value)||0)*item.data.quantity.value;return toCoins(item.data.denomination.value,value)})).reduce(combineCoins,{pp:0,gp:0,sp:0,cp:0})}function isTopLevelCoin(item,currencies){var _a,_b,_c,_d,_e,_f,_g,_h;return"treasure"===(null==item?void 0:item.type)&&1===(null===(_b=null===(_a=null==item?void 0:item.data)||void 0===_a?void 0:_a.value)||void 0===_b?void 0:_b.value)&&"coins"===(null===(_d=null===(_c=null==item?void 0:item.data)||void 0===_c?void 0:_c.stackGroup)||void 0===_d?void 0:_d.value)&&utils_1.isBlank(null===(_f=null===(_e=null==item?void 0:item.data)||void 0===_e?void 0:_e.containerId)||void 0===_f?void 0:_f.value)&&currencies.has(null===(_h=null===(_g=null==item?void 0:item.data)||void 0===_g?void 0:_g.denomination)||void 0===_h?void 0:_h.value)}async function addFromCompendium(actor,compendiumId,quantity){const pack=game.packs.find((p=>"pf2e.equipment-srd"===p.collection));if(!pack)throw Error("unable to get pack!");const item=await pack.getEntity(compendiumId);null!==item&&"treasure"===item.data.type&&(item.data.data.quantity.value=quantity,await actor.createOwnedItem(item.data))}async function increaseItemQuantity(actor,item,quantity){var _a,_b;const currentQuantity=(null===(_b=null===(_a=null==item?void 0:item.data)||void 0===_a?void 0:_a.quantity)||void 0===_b?void 0:_b.value)||0,ownedItem=actor.getOwnedItem(item._id);"treasure"===ownedItem.data.type&&await ownedItem.update({"data.quantity.value":currentQuantity+quantity})}async function decreaseItemQuantity(actor,item,quantityToRemove){var _a,_b,_c;const entitiesToDelete=[];for(let x=0;x<item.length&&quantityToRemove>0;x++){const currentQuantity=(null===(_c=null===(_b=null===(_a=item[x])||void 0===_a?void 0:_a.data)||void 0===_b?void 0:_b.quantity)||void 0===_c?void 0:_c.value)||0;currentQuantity>quantityToRemove?(actor.getOwnedItem(item[x]._id).update({"data.quantity.value":currentQuantity-quantityToRemove}),quantityToRemove=0):(entitiesToDelete.push(item[x]._id),quantityToRemove-=currentQuantity)}entitiesToDelete.length>0&&await actor.deleteEmbeddedEntity("OwnedItem",entitiesToDelete),quantityToRemove>0&&console.warn("Attempted to remove more coinage than exists")}exports.coinValueInCopper=function(coins){return coins.cp+10*coins.sp+100*coins.gp+1e3*coins.pp},exports.extractPriceFromItem=extractPriceFromItem,exports.calculateTotalWealth=function(items){return["weapon","armor","equipment","consumable","treasure","backpack"].map((itemType=>calculateWealthForCategory(items,itemType))).reduce(combineCoins,{pp:0,gp:0,sp:0,cp:0})},exports.calculateValueOfCurrency=calculateValueOfCurrency,exports.calculateWealth=function(items){return calculateWealthForCategory(items.filter((itemData=>"treasure"===itemData.type)),"treasure")},exports.coinCompendiumIds={pp:"JuNPeK5Qm1w6wpb4",gp:"B6B7tBWJSqOBz5zz",sp:"5Ew82vBF9YfaiY9f",cp:"lzJ8AVhRcbFul5fh"};const CURRENCIES=new Set(["pp","gp","sp","cp"]);async function addCoins(actor,{coins={pp:0,gp:0,sp:0,cp:0},combineStacks=!1}={}){var e_1,_a;const topLevelCoins=actor.data.items.filter((item=>combineStacks&&isTopLevelCoin(item,CURRENCIES))),coinsByDenomination=utils_1.groupBy(topLevelCoins,(item=>{var _a,_b;return null===(_b=null===(_a=null==item?void 0:item.data)||void 0===_a?void 0:_a.denomination)||void 0===_b?void 0:_b.value}));try{for(var CURRENCIES_1_1,CURRENCIES_1=__asyncValues(CURRENCIES);!(CURRENCIES_1_1=await CURRENCIES_1.next()).done;){const denomination=CURRENCIES_1_1.value,quantity=coins[denomination];if(quantity>0)if(coinsByDenomination.has(denomination))await increaseItemQuantity(actor,coinsByDenomination.get(denomination)[0],quantity);else{const compendiumId=exports.coinCompendiumIds[denomination];await addFromCompendium(actor,compendiumId,quantity)}}}catch(e_1_1){e_1={error:e_1_1}}finally{try{CURRENCIES_1_1&&!CURRENCIES_1_1.done&&(_a=CURRENCIES_1.return)&&await _a.call(CURRENCIES_1)}finally{if(e_1)throw e_1.error}}}async function removeCoins(actor,{coins={pp:0,gp:0,sp:0,cp:0}}={}){var e_2,_a;const topLevelCoins=actor.data.items.filter((item=>isTopLevelCoin(item,CURRENCIES))),coinsByDenomination=utils_1.groupBy(topLevelCoins,(item=>{var _a,_b;return null===(_b=null===(_a=null==item?void 0:item.data)||void 0===_a?void 0:_a.denomination)||void 0===_b?void 0:_b.value}));try{for(var CURRENCIES_2_1,CURRENCIES_2=__asyncValues(CURRENCIES);!(CURRENCIES_2_1=await CURRENCIES_2.next()).done;){const denomination=CURRENCIES_2_1.value,quantity=coins[denomination];quantity>0&&coinsByDenomination.has(denomination)&&await decreaseItemQuantity(actor,coinsByDenomination.get(denomination),quantity)}}catch(e_2_1){e_2={error:e_2_1}}finally{try{CURRENCIES_2_1&&!CURRENCIES_2_1.done&&(_a=CURRENCIES_2.return)&&await _a.call(CURRENCIES_2)}finally{if(e_2)throw e_2.error}}}exports.addCoins=addCoins,exports.removeCoins=removeCoins,exports.sellAllTreasure=function(actor){const treasureIds=[],coins=actor.data.items.filter((item=>{var _a,_b,_c,_d,_e,_f;return"treasure"===item.type&&void 0!==(null===(_b=null===(_a=item.data)||void 0===_a?void 0:_a.denomination)||void 0===_b?void 0:_b.value)&&null!==(null===(_d=null===(_c=item.data)||void 0===_c?void 0:_c.denomination)||void 0===_d?void 0:_d.value)&&"coins"!==(null===(_f=null===(_e=null==item?void 0:item.data)||void 0===_e?void 0:_e.stackGroup)||void 0===_f?void 0:_f.value)})).map((item=>{var _a,_b,_c,_d,_e,_f;treasureIds.push(item._id);const value=(null!==(_c=null===(_b=null===(_a=item.data)||void 0===_a?void 0:_a.value)||void 0===_b?void 0:_b.value)&&void 0!==_c?_c:1)*(null!==(_f=null===(_e=null===(_d=item.data)||void 0===_d?void 0:_d.quantity)||void 0===_e?void 0:_e.value)&&void 0!==_f?_f:1);return toCoins(item.data.denomination.value,value)})).reduce(combineCoins,{pp:0,gp:0,sp:0,cp:0});return Promise.all([actor.deleteEmbeddedEntity("OwnedItem",treasureIds),addCoins(actor,{coins,combineStacks:!0})])},exports.sellTreasure=async function(actor,itemId){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m;const item=actor.getOwnedItem(itemId);if("treasure"===(null==item?void 0:item.type)&&void 0!==(null===(_b=null===(_a=item.data.data)||void 0===_a?void 0:_a.denomination)||void 0===_b?void 0:_b.value)&&null!==(null===(_d=null===(_c=item.data.data)||void 0===_c?void 0:_c.denomination)||void 0===_d?void 0:_d.value)&&"coins"!==(null===(_f=null===(_e=item.data.data)||void 0===_e?void 0:_e.stackGroup)||void 0===_f?void 0:_f.value)){const quantity=(null!==(_j=null===(_h=null===(_g=item.data.data)||void 0===_g?void 0:_g.value)||void 0===_h?void 0:_h.value)&&void 0!==_j?_j:1)*(null!==(_m=null===(_l=null===(_k=item.data.data)||void 0===_k?void 0:_k.quantity)||void 0===_l?void 0:_l.value)&&void 0!==_m?_m:1),coins=toCoins(item.data.data.denomination.value,quantity);await actor.deleteEmbeddedEntity("OwnedItem",itemId),await addCoins(actor,{coins,combineStacks:!0})}},exports.attemptToRemoveCoinsByValue=async function({actor,coinsToRemove}){const actorCoins=calculateValueOfCurrency(actor.data.items||[]),actorCoinsCopper=actorCoins.cp+10*actorCoins.sp+100*actorCoins.gp+1e3*actorCoins.pp;let valueToRemoveInCopper=coinsToRemove.cp+10*coinsToRemove.sp+100*coinsToRemove.gp+1e3*coinsToRemove.pp;if(valueToRemoveInCopper>actorCoinsCopper)return!1;const coinsToAdd={pp:0,gp:0,sp:0,cp:0};let coinsBroken=!1;if(valueToRemoveInCopper%10>actorCoins.cp)coinsToAdd.cp=10,coinsToRemove.cp=valueToRemoveInCopper%10,valueToRemoveInCopper+=10-coinsToRemove.cp,coinsBroken=!0;else{coinsToRemove.cp=valueToRemoveInCopper%10,valueToRemoveInCopper-=coinsToRemove.cp,actorCoins.cp-=coinsToRemove.cp;const extraCopper=10*Math.min(valueToRemoveInCopper/10,Math.trunc(actorCoins.cp/10));coinsToRemove.cp+=extraCopper,valueToRemoveInCopper-=extraCopper}if(valueToRemoveInCopper/10%10>actorCoins.sp)coinsToAdd.sp=10,coinsToRemove.sp=valueToRemoveInCopper/10%10,valueToRemoveInCopper+=100-10*coinsToRemove.sp,coinsBroken=!0;else{coinsToRemove.sp=valueToRemoveInCopper/10%10,valueToRemoveInCopper-=10*coinsToRemove.sp,actorCoins.sp-=coinsToRemove.sp;const extraSilver=10*Math.min(valueToRemoveInCopper/100,Math.trunc(actorCoins.sp/10));coinsToRemove.sp+=extraSilver,valueToRemoveInCopper-=10*extraSilver}if(valueToRemoveInCopper/100%10>actorCoins.gp)coinsToAdd.gp=10,coinsToRemove.gp=valueToRemoveInCopper/100%10,valueToRemoveInCopper+=1e3-100*coinsToRemove.gp,coinsBroken=!0;else{coinsToRemove.gp=valueToRemoveInCopper/100%10,valueToRemoveInCopper-=100*coinsToRemove.gp,actorCoins.gp-=coinsToRemove.gp;const extraGold=10*Math.min(valueToRemoveInCopper/1e3,Math.trunc(actorCoins.gp/10));coinsToRemove.gp+=extraGold,valueToRemoveInCopper-=100*extraGold}return coinsToRemove.pp=valueToRemoveInCopper/1e3,coinsBroken&&await addCoins(actor,{coins:coinsToAdd}),await removeCoins(actor,{coins:coinsToRemove}),!0}},9385:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.WeaponPF2e=void 0;const physical_1=__webpack_require__(315),modifiers_1=__webpack_require__(6243),runes_1=__webpack_require__(8468),localize_1=__webpack_require__(1608);class WeaponPF2e extends physical_1.PhysicalItemPF2e{get baseType(){var _a;return null!==(_a=this.data.data.baseItem)&&void 0!==_a?_a:null}get group(){var _a;return null!==(_a=this.data.data.group.value)&&void 0!==_a?_a:null}get category(){var _a;return null!==(_a=this.data.data.weaponType.value)&&void 0!==_a?_a:null}prepareData(){super.prepareData();const potencyRune=this.data.data.potencyRune,traits=this.data.data.traits;traits.value=[...traits.value,potencyRune.value?"evocation":[],["arcane","primal","divine","occult"].some((trait=>traits.value.includes(trait)))?[]:"magical"].flat(),traits.value=Array.from(new Set(traits.value))}getChatData(htmlOptions){var _a,_b,_c,_d,_e,_f,_g;if(!this.actor)return{};const data=this.data.data,actorData=this.actor.data,twohandedTrait=void 0!==data.traits.value.find((trait=>trait.match("(\\btwo-hand\\b)-(d\\d+)"))),traits=WeaponPF2e.traitChatData(data.traits,CONFIG.PF2E.weaponTraits);if("weapon"!==this.data.type)throw new Error("tried to create a weapon chat data for a non-weapon item");const isFinesse=this.traits.has("finesse"),abl=isFinesse&&actorData.data.abilities.dex.mod>actorData.data.abilities.str.mod?"dex":data.ability.value||"str",prof=data.weaponType.value||"simple",proficiency={type:"default",value:0};if(Object.keys(CONFIG.PF2E.weaponTypes).includes(prof))proficiency.type="martial",proficiency.value=(null===(_b=null===(_a=actorData.data.martial)||void 0===_a?void 0:_a[prof])||void 0===_b?void 0:_b.value)||0;else try{const martialSkill=null===(_c=this.actor)||void 0===_c?void 0:_c.getOwnedItem(prof);if("martial"===(null==martialSkill?void 0:martialSkill.data.type)){proficiency.type="skill";const rank=(null===(_d=martialSkill.data.data.proficient)||void 0===_d?void 0:_d.value)||0;proficiency.value=modifiers_1.ProficiencyModifier.fromLevelAndRank(this.actor.data.data.details.level.value,rank).modifier}}catch(err){console.log(`PF2E | Could not find martial skill for ${prof}`)}const properties=[].filter((p=>!!p)),critSpecialization=data.group.value?{label:CONFIG.PF2E.weaponGroups[data.group.value],description:CONFIG.PF2E.weaponDescriptions[data.group.value]}:void 0,{map2,map3}=this.calculateMap();return this.processChatData(htmlOptions,Object.assign(Object.assign({},data),{traits,proficiency,attackRoll:runes_1.getAttackBonus(data)+(null!==(_g=null===(_f=null===(_e=actorData.data.abilities)||void 0===_e?void 0:_e[abl])||void 0===_f?void 0:_f.mod)&&void 0!==_g?_g:0)+proficiency.value,critSpecialization,isTwohanded:!!twohandedTrait,wieldedTwoHands:!!data.hands.value,isFinesse,properties,map2,map3}))}generateUnidentifiedName(){var _a;const translations=localize_1.LocalizePF2e.translations.PF2E,formatString=translations.identification.UnidentifiedItem,base=this.baseType?translations.Weapon.Base[this.baseType]:null,group=this.group?CONFIG.PF2E.weaponGroups[this.group]:null,item=game.i18n.localize(null!==(_a=null!=base?base:group)&&void 0!==_a?_a:"ITEM.TypeWeapon");return game.i18n.format(formatString,{item})}}exports.WeaponPF2e=WeaponPF2e},4157:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MacroPF2e=void 0;class MacroPF2e extends Macro{get visible(){return this.permission>=CONST.ENTITY_PERMISSIONS.OBSERVER}}exports.MacroPF2e=MacroPF2e},6100:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MigrationRunnerBase=void 0;exports.MigrationRunnerBase=class{constructor(migrations=[]){this.migrations=migrations.sort(((a,b)=>a.version-b.version)),this.latestVersion="game"in globalThis?globalThis.game.system.data.schema:0}needsMigration(currentVersion){return currentVersion<this.latestVersion}diffItems(orig,updated){const ret={inserted:[],deleted:[],updated:[]},origItems=new Map;for(const item of orig)origItems.set(item._id,item);for(const item of updated){const origItem=origItems.get(item._id);origItem?(JSON.stringify(origItem)!==JSON.stringify(item)&&ret.updated.push(item),origItems.delete(item._id)):ret.inserted.push(item)}for(const item of origItems.values())ret.deleted.push(item._id);return ret}async getUpdatedItem(item,migrations){const current=duplicate(item);for(const migration of migrations)try{await migration.updateItem(current)}catch(err){console.error(err)}return current}async getUpdatedActor(actor,migrations){const current=duplicate(actor);for(const migration of migrations)try{await migration.updateActor(current);for(const item of current.items)await migration.updateItem(item,current)}catch(err){console.error(err)}return current}async getUpdatedMessage(messageData,migrations){const current=duplicate(messageData);for(const migration of migrations)try{await migration.updateMessage(current)}catch(err){console.error(err)}return current}async getUpdatedMacro(macroData,migrations){const current=duplicate(macroData);for(const migration of migrations)try{await migration.updateMacro(current)}catch(err){console.error(err)}return current}async getUpdatedTable(table,migrations){const current=duplicate(table);for(const migration of migrations)try{await migration.updateTable(current)}catch(err){console.error(err)}return current}async getUpdatedToken(tokenData,migrations){const current=duplicate(tokenData);for(const migration of migrations)try{await migration.updateToken(current)}catch(err){console.error(err)}return current}async getUpdatedUser(userData,migrations){const current=duplicate(userData);for(const migration of migrations)try{await migration.updateUser(current)}catch(err){console.error(err)}return current}}},749:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.MigrationRunner=void 0;const migration_runner_base_1=__webpack_require__(6100);class MigrationRunner extends migration_runner_base_1.MigrationRunnerBase{needsMigration(){return super.needsMigration(game.settings.get("pf2e","worldSchemaVersion"))}async migrateWorldItem(migrations,item,pack){try{const updatedItem=await this.getUpdatedItem(item._data,migrations),changes=diffObject(item._data,updatedItem);isObjectEmpty(changes)||(pack?await pack.updateEntity(Object.assign({_id:item.id},changes),{enforceTypes:!1}):await item.update(changes,{enforceTypes:!1}))}catch(err){console.error(err)}}async migrateWorldActor(migrations,actor,pack){try{const baseActor=duplicate(actor._data),updatedActor=await this.getUpdatedActor(baseActor,migrations),baseItems=baseActor.items,updatedItems=updatedActor.items;delete baseActor.items,delete updatedActor.items,JSON.stringify(baseActor)!==JSON.stringify(updatedActor)&&(pack?await pack.updateEntity(updatedActor,{enforceTypes:!1}):await actor.update(updatedActor,{enforceTypes:!1}));const itemDiff=this.diffItems(baseItems,updatedItems);itemDiff.deleted.length>0&&await actor.deleteEmbeddedEntity("OwnedItem",itemDiff.deleted),itemDiff.inserted.length>0&&await actor.createEmbeddedEntity("OwnedItem",itemDiff.inserted),itemDiff.updated.length>0&&await actor.updateEmbeddedEntity("OwnedItem",itemDiff.updated)}catch(err){console.error(err)}}async migrateChatMessage(migrations,message){try{const updatedMacro=await this.getUpdatedMessage(message._data,migrations),changes=diffObject(message._data,updatedMacro);isObjectEmpty(changes)||await message.update(changes,{enforceTypes:!1})}catch(err){console.error(err)}}async migrateWorldMacro(migrations,macro,pack){try{const updatedMacro=await this.getUpdatedMacro(macro._data,migrations),changes=diffObject(macro._data,updatedMacro);isObjectEmpty(changes)||(pack?await pack.updateEntity(Object.assign({_id:macro.id},changes),{enforceTypes:!1}):await macro.update(changes,{enforceTypes:!1}))}catch(err){console.error(err)}}async migrateWorldTable(migrations,table,pack){try{const updatedMacro=await this.getUpdatedTable(table._data,migrations),changes=diffObject(table._data,updatedMacro);isObjectEmpty(changes)||(pack?await pack.updateEntity(Object.assign({_id:table.id},changes),{enforceTypes:!1}):await table.update(changes,{enforceTypes:!1}))}catch(err){console.error(err)}}async migrateSceneToken(migrations,token){var _a,_b;try{const actorData=duplicate(null!==(_b=null===(_a=token.actor)||void 0===_a?void 0:_a._data)&&void 0!==_b?_b:null);if(!actorData)return;const updatedToken=await this.getUpdatedToken(token.data,migrations),changes=diffObject(token.data,updatedToken);if(!token.data.actorLink){const updatedActor=await this.getUpdatedActor(actorData,migrations);changes.actorData=diffObject(actorData,updatedActor)}isObjectEmpty(changes)||await token.update(changes,{enforceTypes:!1})}catch(err){console.error(err)}}async migrateUser(migrations,user){try{const baseUser=duplicate(user._data),updatedUser=await this.getUpdatedUser(baseUser,migrations),changes=diffObject(user._data,updatedUser);isObjectEmpty(changes)||await user.update(changes,{enforceTypes:!1})}catch(err){console.error(err)}}async runMigrations(migrations){var e_1,_a,e_2,_b,e_3,_c;const promises=[];for(const actor of game.actors)promises.push(this.migrateWorldActor(migrations,actor));for(const item of game.items)promises.push(this.migrateWorldItem(migrations,item));for(const macro of game.macros)promises.push(this.migrateWorldMacro(migrations,macro));for(const table of game.tables)promises.push(this.migrateWorldTable(migrations,table));for(const message of game.messages)promises.push(this.migrateChatMessage(migrations,message));const packsToRelock=await this.runPackMigrations(migrations,promises);for(const user of game.users)promises.push(this.migrateUser(migrations,user));for(const migration of migrations)promises.push(migration.migrate());await Promise.allSettled(promises);try{for(var packsToRelock_1_1,packsToRelock_1=__asyncValues(packsToRelock);!(packsToRelock_1_1=await packsToRelock_1.next()).done;){const pack=packsToRelock_1_1.value;await pack.configure({locked:!0})}}catch(e_1_1){e_1={error:e_1_1}}finally{try{packsToRelock_1_1&&!packsToRelock_1_1.done&&(_a=packsToRelock_1.return)&&await _a.call(packsToRelock_1)}finally{if(e_1)throw e_1.error}}try{for(var _e,_d=__asyncValues(game.scenes.entities);!(_e=await _d.next()).done;){const scene=_e.value;try{for(var _g,_f=(e_3=void 0,__asyncValues(scene.data.tokens));!(_g=await _f.next()).done;){const tokenData=_g.value,token=new Token(tokenData,scene);token.actor&&await this.migrateSceneToken(migrations,token)}}catch(e_3_1){e_3={error:e_3_1}}finally{try{_g&&!_g.done&&(_c=_f.return)&&await _c.call(_f)}finally{if(e_3)throw e_3.error}}}}catch(e_2_1){e_2={error:e_2_1}}finally{try{_e&&!_e.done&&(_b=_d.return)&&await _b.call(_d)}finally{if(e_2)throw e_2.error}}}async runPackMigrations(migrations,promises){var e_4,_a,e_5,_b,e_6,_c,e_7,_d,e_8,_e;const worldPacks=game.packs.filter((pack=>"world"===pack.metadata.package)),packsToRelock=worldPacks.filter((pack=>pack.locked));try{for(var packsToRelock_2_1,packsToRelock_2=__asyncValues(packsToRelock);!(packsToRelock_2_1=await packsToRelock_2.next()).done;){const pack=packsToRelock_2_1.value;await pack.configure({locked:!1})}}catch(e_4_1){e_4={error:e_4_1}}finally{try{packsToRelock_2_1&&!packsToRelock_2_1.done&&(_a=packsToRelock_2.return)&&await _a.call(packsToRelock_2)}finally{if(e_4)throw e_4.error}}const actorPacks=worldPacks.filter((pack=>"Actor"===pack.entity));try{for(var actorPacks_1_1,actorPacks_1=__asyncValues(actorPacks);!(actorPacks_1_1=await actorPacks_1.next()).done;){const pack=actorPacks_1_1.value;for(const actor of await pack.getContent())promises.push(this.migrateWorldActor(migrations,actor,pack))}}catch(e_5_1){e_5={error:e_5_1}}finally{try{actorPacks_1_1&&!actorPacks_1_1.done&&(_b=actorPacks_1.return)&&await _b.call(actorPacks_1)}finally{if(e_5)throw e_5.error}}const itemPacks=worldPacks.filter((pack=>"Item"===pack.entity));try{for(var itemPacks_1_1,itemPacks_1=__asyncValues(itemPacks);!(itemPacks_1_1=await itemPacks_1.next()).done;){const pack=itemPacks_1_1.value;for(const item of await pack.getContent())promises.push(this.migrateWorldItem(migrations,item,pack))}}catch(e_6_1){e_6={error:e_6_1}}finally{try{itemPacks_1_1&&!itemPacks_1_1.done&&(_c=itemPacks_1.return)&&await _c.call(itemPacks_1)}finally{if(e_6)throw e_6.error}}const macroPacks=worldPacks.filter((pack=>"Macro"===pack.entity));try{for(var macroPacks_1_1,macroPacks_1=__asyncValues(macroPacks);!(macroPacks_1_1=await macroPacks_1.next()).done;){const pack=macroPacks_1_1.value;for(const macro of await pack.getContent())promises.push(this.migrateWorldMacro(migrations,macro,pack))}}catch(e_7_1){e_7={error:e_7_1}}finally{try{macroPacks_1_1&&!macroPacks_1_1.done&&(_d=macroPacks_1.return)&&await _d.call(macroPacks_1)}finally{if(e_7)throw e_7.error}}const tablePacks=worldPacks.filter((pack=>"RollTable"===pack.entity));try{for(var tablePacks_1_1,tablePacks_1=__asyncValues(tablePacks);!(tablePacks_1_1=await tablePacks_1.next()).done;){const pack=tablePacks_1_1.value;for(const table of await pack.getContent())promises.push(this.migrateWorldTable(migrations,table,pack))}}catch(e_8_1){e_8={error:e_8_1}}finally{try{tablePacks_1_1&&!tablePacks_1_1.done&&(_e=tablePacks_1.return)&&await _e.call(tablePacks_1)}finally{if(e_8)throw e_8.error}}return packsToRelock}async runMigration(){const systemVersion=game.system.data.version,currentVersion=game.settings.get("pf2e","worldSchemaVersion");ui.notifications.info(`Applying PF2E System Migration to version ${systemVersion}. Please be patient and do not close your game or shut down your server.`,{permanent:!0});const migrationsToRun=this.migrations.filter((x=>currentVersion<x.version)),migrationPhases=[[]];for(const migration of migrationsToRun)migrationPhases[migrationPhases.length-1].push(migration),migration.requiresFlush&&migrationPhases.push([]);for(const migrationPhase of migrationPhases)migrationPhase.length>0&&await this.runMigrations(migrationPhase);game.settings.set("pf2e","worldSchemaVersion",this.latestVersion),ui.notifications.info(`PF2E System Migration to version ${systemVersion} completed!`,{permanent:!0})}}exports.MigrationRunner=MigrationRunner},3659:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration412MigrateDyingCondition=void 0;const base_1=__webpack_require__(7569);class Migration412MigrateDyingCondition extends base_1.MigrationBase{async updateActor(actor){"character"==actor&&(actor.data.attributes.dying={value:0,max:4},actor.data.attributes.wounded={value:0,max:3},actor.data.attributes.doomed={value:0,max:3})}}exports.Migration412MigrateDyingCondition=Migration412MigrateDyingCondition,Migration412MigrateDyingCondition.version=.412},3721:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration544MigrateStamina=void 0;const base_1=__webpack_require__(7569);class Migration544MigrateStamina extends base_1.MigrationBase{async updateActor(actor){actor.data.attributes.sp={min:0,max:0,value:0},actor.data.attributes.resolve={value:0},actor.data.details.keyability={value:"str"}}}exports.Migration544MigrateStamina=Migration544MigrateStamina,Migration544MigrateStamina.version=.544},9165:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration559MigrateNpcItemDamageRolls=void 0;const base_1=__webpack_require__(7569);class Migration559MigrateNpcItemDamageRolls extends base_1.MigrationBase{async updateItem(item,actor){actor&&"npc"===actor.type&&"melee"===item.type&&item.data.damage.die&&(item.data.damageRolls={migrated:{damage:item.data.damage.die,damageType:item.data.damage.damageType}})}}exports.Migration559MigrateNpcItemDamageRolls=Migration559MigrateNpcItemDamageRolls,Migration559MigrateNpcItemDamageRolls.version=.559},3875:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration561MigrateHitpointData=void 0;const base_1=__webpack_require__(7569);class Migration561MigrateHitpointData extends base_1.MigrationBase{async updateActor(actor){"character"==actor&&(actor.data.attributes.flatbonushp=parseInt((actor.data.attributes.flatbonushp||{}).value,10)||0,actor.data.attributes.levelbonushp=parseInt((actor.data.attributes.levelbonushp||{}).value,10)||0,actor.data.attributes.flatbonussp=parseInt((actor.data.attributes.flatbonussp||{}).value,10)||0,actor.data.attributes.levelbonussp=parseInt((actor.data.attributes.levelbonussp||{}).value,10)||0,actor.data.attributes.ancestryhp=parseInt((actor.data.attributes.ancestryhp||{}).value,10)||0,actor.data.attributes.classhp=parseInt((actor.data.attributes.classhp||{}).value,10)||0)}}exports.Migration561MigrateHitpointData=Migration561MigrateHitpointData,Migration561MigrateHitpointData.version=.561},334:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration566MigrateNpcItemAttackEffects=void 0;const base_1=__webpack_require__(7569);class Migration566MigrateNpcItemAttackEffects extends base_1.MigrationBase{async updateItem(item,actor){actor&&"npc"===actor.type&&"melee"===item.type&&item.data.attackEffects&&!("value"in item.data.attackEffects)&&(item.data.attackEffects={value:item.data.attackEffects})}}exports.Migration566MigrateNpcItemAttackEffects=Migration566MigrateNpcItemAttackEffects,Migration566MigrateNpcItemAttackEffects.version=.566},10:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration567MigrateClassDC=void 0;const base_1=__webpack_require__(7569);class Migration567MigrateClassDC extends base_1.MigrationBase{async updateActor(actor){"character"==actor&&(actor.data.attributes.classDC={rank:0,ability:"str",item:0,value:0,breakdown:""},actor.data.attributes.bonusbulk=0)}}exports.Migration567MigrateClassDC=Migration567MigrateClassDC,Migration567MigrateClassDC.version=.567},2391:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration571AddDefaultRarity=void 0;const base_1=__webpack_require__(7569);class Migration571AddDefaultRarity extends base_1.MigrationBase{async updateItem(item,actor){var _a,_b;actor&&"npc"===actor.type&&((null===(_b=null===(_a=item.data.traits)||void 0===_a?void 0:_a.rarity)||void 0===_b?void 0:_b.value)||(item.data.traits.rarity={value:"common"}))}}exports.Migration571AddDefaultRarity=Migration571AddDefaultRarity,Migration571AddDefaultRarity.version=.571},1528:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration573ActorLanguages=void 0;const base_1=__webpack_require__(7569);class Migration573ActorLanguages extends base_1.MigrationBase{async updateActor(actor){var _a,_b,_c;if(null===(_c=null===(_b=null===(_a=actor.data)||void 0===_a?void 0:_a.traits)||void 0===_b?void 0:_b.languages)||void 0===_c?void 0:_c.value){const languages=actor.data.traits.languages.value.map((language=>{const l=language.toString().toLowerCase();return"dwarvish"===l?"dwarven":l}));actor.data.traits.languages.value=languages}}}exports.Migration573ActorLanguages=Migration573ActorLanguages,Migration573ActorLanguages.version=.573},4043:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration574MigrateBulk=void 0;const bulk_1=__webpack_require__(6272),base_1=__webpack_require__(7569);class Migration574MigrateBulk extends base_1.MigrationBase{async updateItem(item){var _a,_b,_c,_d,_e;const itemName=null===(_a=null==item?void 0:item.name)||void 0===_a?void 0:_a.trim();if(["weapon","melee","armor","equipment","consumable","backpack"].includes(item.type))if((null==itemName?void 0:itemName.includes("rrow"))?item.data.data.stackGroup.value="arrows":(null==itemName?void 0:itemName.includes("olt"))?item.data.data.stackGroup.value="bolts":item.data.data.stackGroup.value="Rations (1 week)"===itemName?"rations":"Blowgun Darts (10)"===itemName?"blowgunDarts":"Sling Bullets (10)"===itemName?"slingBullets":"","armor"===item.type){const weight=null!==(_d=null===(_c=null===(_b=item.data)||void 0===_b?void 0:_b.weight)||void 0===_c?void 0:_c.value)&&void 0!==_d?_d:"";item.data.data.equippedBulk.value=null!==(_e=bulk_1.fixWeight(weight))&&void 0!==_e?_e:"",item.data.data.weight.value=bulk_1.calculateCarriedArmorBulk(weight)}else"Backpack"===itemName||"Satchel"===itemName||"Bandolier"===itemName?(item.data.data.weight.value="L",item.data.data.equippedBulk.value="0"):"Saddlebags"===itemName?(item.data.data.weight.value="1",item.data.data.equippedBulk.value="L"):"Tack"===itemName?(item.data.data.weight.value="2",item.data.data.equippedBulk.value="1"):item.data.data.equippedBulk.value=""}}exports.Migration574MigrateBulk=Migration574MigrateBulk,Migration574MigrateBulk.version=.574},2770:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration576AddCoins=void 0;const base_1=__webpack_require__(7569),physical_1=__webpack_require__(315),utils_1=__webpack_require__(4930);class Migration576AddCoins extends base_1.MigrationBase{constructor(){super(...arguments),this.requiresFlush=!0}async addCoin(actor,treasureId,denomination,quantity){if(null!==quantity&&"0"!==String(quantity).trim()){console.log(`Adding ${quantity} of ${denomination} to actors ${actor.name}'s inventory`);const pack=game.packs.find((p=>"pf2e.equipment-srd"===p.collection)),item=await(null==pack?void 0:pack.getEntity(treasureId));if(!(item instanceof physical_1.PhysicalItemPF2e))throw utils_1.ErrorPF2e(`Unexpected missing inventory item: ${treasureId}`);item.data.data.quantity.value=quantity,actor.items.push(item.data)}}async updateActor(actor){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r;console.log("Migrating coins");const coinCompendiumIds_pp="JuNPeK5Qm1w6wpb4",coinCompendiumIds_gp="B6B7tBWJSqOBz5zz",coinCompendiumIds_sp="5Ew82vBF9YfaiY9f",coinCompendiumIds_cp="lzJ8AVhRcbFul5fh",ppQuantity=null!==(_d=null===(_c=null===(_b=null===(_a=actor.data)||void 0===_a?void 0:_a.currency)||void 0===_b?void 0:_b.pp)||void 0===_c?void 0:_c.value)&&void 0!==_d?_d:null;await this.addCoin(actor,coinCompendiumIds_pp,"pp",ppQuantity);const gpQuantity=null!==(_h=null===(_g=null===(_f=null===(_e=actor.data)||void 0===_e?void 0:_e.currency)||void 0===_f?void 0:_f.gp)||void 0===_g?void 0:_g.value)&&void 0!==_h?_h:null;await this.addCoin(actor,coinCompendiumIds_gp,"gp",gpQuantity);const spQuantity=null!==(_m=null===(_l=null===(_k=null===(_j=actor.data)||void 0===_j?void 0:_j.currency)||void 0===_k?void 0:_k.sp)||void 0===_l?void 0:_l.value)&&void 0!==_m?_m:null;await this.addCoin(actor,coinCompendiumIds_sp,"sp",spQuantity);const cpQuantity=null!==(_r=null===(_q=null===(_p=null===(_o=actor.data)||void 0===_o?void 0:_o.currency)||void 0===_p?void 0:_p.cp)||void 0===_q?void 0:_q.value)&&void 0!==_r?_r:null;await this.addCoin(actor,coinCompendiumIds_cp,"cp",cpQuantity)}}exports.Migration576AddCoins=Migration576AddCoins,Migration576AddCoins.version=.576},2555:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration578MigrateItemImagePaths=void 0;const base_1=__webpack_require__(7569);class Migration578MigrateItemImagePaths extends base_1.MigrationBase{async updateItem(item){const itemImage=item.img;(null==itemImage?void 0:itemImage.includes("systems/pf2e/icons/equipment/alchemical%20items/alchemical%20elixirs/"))?item.img=itemImage.replace("systems/pf2e/icons/equipment/alchemical%20items/alchemical%20elixirs/","systems/pf2e/icons/equipment/alchemical-items/alchemical-elixirs/"):(null==itemImage?void 0:itemImage.includes("systems/pf2e/icons/equipment/alchemical%20items/"))?item.img=itemImage.replace("systems/pf2e/icons/equipment/alchemical%20items/","systems/pf2e/icons/equipment/alchemical-items/"):(null==itemImage?void 0:itemImage.includes("systems/pf2e/icons/equipment/adventuring%20gear/"))?item.img=itemImage.replace("systems/pf2e/icons/equipment/adventuring%20gear/","systems/pf2e/icons/equipment/adventuring-gear/"):(null==itemImage?void 0:itemImage.includes("systems/pf2e/icons/equipment/cursed%20items/"))?item.img=itemImage.replace("systems/pf2e/icons/equipment/cursed%20items/","systems/pf2e/icons/equipment/cursed-items/"):(null==itemImage?void 0:itemImage.includes("systems/pf2e/icons/equipment/held%20items/"))?item.img=itemImage.replace("systems/pf2e/icons/equipment/held%20items/","systems/pf2e/icons/equipment/held-items/"):(null==itemImage?void 0:itemImage.includes("systems/pf2e/icons/equipment/intelligent%20items/"))?item.img=itemImage.replace("systems/pf2e/icons/equipment/intelligent%20items/","systems/pf2e/icons/equipment/intelligent-items/"):(null==itemImage?void 0:itemImage.includes("systems/pf2e/icons/equipment/worn%20items/"))?item.img=itemImage.replace("systems/pf2e/icons/equipment/worn%20items/","systems/pf2e/icons/equipment/worn-items/"):(null==itemImage?void 0:itemImage.includes("systems/pf2e/icons/equipment/consumables/"))&&!(null==itemImage?void 0:itemImage.includes("systems/pf2e/icons/equipment/consumables/potions/"))&&(null==itemImage?void 0:itemImage.includes("potion"))?item.img=itemImage.replace("systems/pf2e/icons/equipment/consumables/","systems/pf2e/icons/equipment/consumables/potions/"):(null==itemImage?void 0:itemImage.includes("systems/pf2e/icons/equipment/alchemical-items/"))&&!(null==itemImage?void 0:itemImage.includes("systems/pf2e/icons/equipment/alchemical-items/alchemical-elixirs/"))&&(null==itemImage?void 0:itemImage.includes("elixir"))?item.img=itemImage.replace("systems/pf2e/icons/equipment/alchemical-items/","systems/pf2e/icons/equipment/alchemical-items/alchemical-elixirs/"):(null==itemImage?void 0:itemImage.includes("systems/pf2e/icons/equipment/alchemical-items/acid-flask.jpg"))?item.img=itemImage.replace("systems/pf2e/icons/equipment/alchemical-items/acid-flask.jpg","systems/pf2e/icons/equipment/alchemical-items/alchemical-bombs/acid-flask.jpg"):(null==itemImage?void 0:itemImage.includes("systems/pf2e/icons/equipment/alchemical-items/alchemists-fire.jpg"))?item.img=itemImage.replace("systems/pf2e/icons/equipment/alchemical-items/alchemists-fire.jpg","systems/pf2e/icons/equipment/alchemical-items/alchemical-bombs/alchemists-fire.jpg"):(null==itemImage?void 0:itemImage.includes("systems/pf2e/icons/equipment/alchemical-items/frost-vial.jpg"))?item.img=itemImage.replace("systems/pf2e/icons/equipment/alchemical-items/frost-vial.jpg","systems/pf2e/icons/equipment/alchemical-items/alchemical-bombs/frost-vial.jpg"):(null==itemImage?void 0:itemImage.includes("systems/pf2e/icons/equipment/alchemical-items/bombers-eye-elixir.jpg"))?item.img=itemImage.replace("systems/pf2e/icons/equipment/alchemical-items/bombers-eye-elixir.jpg","systems/pf2e/icons/equipment/alchemical-items/alchemical-elixirs/bombers-eye-elixir.jpg"):(null==itemImage?void 0:itemImage.includes("systems/pf2e/icons/equipment/alchemical-items/antidote.jpg"))?item.img=itemImage.replace("systems/pf2e/icons/equipment/alchemical-items/antidote.jpg","systems/pf2e/icons/equipment/alchemical-items/alchemical-elixirs/antidote.jpg"):(null==itemImage?void 0:itemImage.includes("systems/pf2e/icons/equipment/alchemical-items/bottled-lightning.jpg"))?item.img=itemImage.replace("systems/pf2e/icons/equipment/alchemical-items/bottled-lightning.jpg","systems/pf2e/icons/equipment/alchemical-items/alchemical-bombs/bottled-lightning.jpg"):(null==itemImage?void 0:itemImage.includes("systems/pf2e/icons/equipment/held-items/platinum-pieces.jpg"))?item.img=itemImage.replace("systems/pf2e/icons/equipment/held-items/platinum-pieces.jpg","systems/pf2e/icons/equipment/treasure/currency/platinum-pieces.jpg"):(null==itemImage?void 0:itemImage.includes("systems/pf2e/icons/equipment/held-items/gold-pieces.jpg"))?item.img=itemImage.replace("systems/pf2e/icons/equipment/held-items/gold-pieces.jpg","systems/pf2e/icons/equipment/treasure/currency/gold-pieces.jpg"):(null==itemImage?void 0:itemImage.includes("systems/pf2e/icons/equipment/held-items/silver-pieces.jpg"))?item.img=itemImage.replace("systems/pf2e/icons/equipment/held-items/silver-pieces.jpg","systems/pf2e/icons/equipment/treasure/currency/silver-pieces.jpg"):(null==itemImage?void 0:itemImage.includes("systems/pf2e/icons/equipment/held-items/copper-pieces.jpg"))&&(item.img=itemImage.replace("systems/pf2e/icons/equipment/held-items/copper-pieces.jpg","systems/pf2e/icons/equipment/treasure/currency/copper-pieces.jpg"))}}exports.Migration578MigrateItemImagePaths=Migration578MigrateItemImagePaths,Migration578MigrateItemImagePaths.version=.578},4791:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration579AddContainerAttributes=void 0;const base_1=__webpack_require__(7569);class Migration579AddContainerAttributes extends base_1.MigrationBase{async updateItem(item){var _a;if(["weapon","melee","armor","equipment","consumable","backpack"].includes(item.type)){const itemName=null===(_a=null==item?void 0:item.name)||void 0===_a?void 0:_a.trim();"Backpack"===itemName?(item.data.data.bulkCapacity.value="4",item.data.data.negateBulk.value="2"):"Bag of Devouring Type I"===itemName?(item.data.data.bulkCapacity.value="50",item.data.data.negateBulk.value="50"):"Bag of Devouring Type II"===itemName?(item.data.data.bulkCapacity.value="100",item.data.data.negateBulk.value="100"):"Bag of Devouring Type III"===itemName?(item.data.data.bulkCapacity.value="150",item.data.data.negateBulk.value="150"):"Bag of Holding (Type I)"===itemName?(item.data.data.bulkCapacity.value="25",item.data.data.negateBulk.value="25"):"Bag of Holding (Type II)"===itemName?(item.data.data.bulkCapacity.value="50",item.data.data.negateBulk.value="50"):"Bag of Holding (Type III)"===itemName?(item.data.data.bulkCapacity.value="100",item.data.data.negateBulk.value="100"):"Bag of Holding (Type IV)"===itemName?(item.data.data.bulkCapacity.value="150",item.data.data.negateBulk.value="150"):"Bag of Weasels"===itemName?(item.data.data.bulkCapacity.value="25",item.data.data.negateBulk.value="25"):"Gloves of Carelessness"===itemName||"Gloves of Storing"===itemName?(item.data.data.bulkCapacity.value="1",item.data.data.negateBulk.value="1"):"Belt Pouch"===itemName||"Pathfinder's Pouch"===itemName?(item.data.data.bulkCapacity.value="4L",item.data.data.negateBulk.value="0"):"Knapsack of Halflingkind"===itemName||"Knapsack of Halflingkind (Greater)"===itemName?(item.data.data.bulkCapacity.value="50",item.data.data.negateBulk.value="50"):"Sack (5)"===itemName?(item.data.data.bulkCapacity.value="8",item.data.data.negateBulk.value="0"):"Satchel"===itemName?(item.data.data.bulkCapacity.value="2",item.data.data.negateBulk.value="0"):"Bandolier"===itemName?(item.data.data.bulkCapacity.value="8L",item.data.data.negateBulk.value="0"):"Saddlebags"===itemName?(item.data.data.bulkCapacity.value="3",item.data.data.negateBulk.value="0"):"Chest"===itemName?(item.data.data.bulkCapacity.value="8",item.data.data.negateBulk.value="0"):(item.data.data.bulkCapacity.value="",item.data.data.negateBulk.value="0"),item.data.data.containerId.value=""}}}exports.Migration579AddContainerAttributes=Migration579AddContainerAttributes,Migration579AddContainerAttributes.version=.579},1277:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration580AddItemRarityAndLevel=void 0;const base_1=__webpack_require__(7569);class Migration580AddItemRarityAndLevel extends base_1.MigrationBase{async updateItem(item){item.data.rarity={value:"common"},["treasure","backpack"].includes(item.type)&&(item.data.level={value:"0"})}}exports.Migration580AddItemRarityAndLevel=Migration580AddItemRarityAndLevel,Migration580AddItemRarityAndLevel.version=.58},1978:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration580MigrateOtherSpeeds=void 0;const base_1=__webpack_require__(7569);class Migration580MigrateOtherSpeeds extends base_1.MigrationBase{async updateItem(item,actor){var _a,_b,_c;actor&&(Array.isArray(null===(_c=null===(_b=null===(_a=actor.data)||void 0===_a?void 0:_a.attributes)||void 0===_b?void 0:_b.speed)||void 0===_c?void 0:_c.otherSpeeds)||(item.data.attributes.speed.otherSpeeds=[]))}}exports.Migration580MigrateOtherSpeeds=Migration580MigrateOtherSpeeds,Migration580MigrateOtherSpeeds.version=.58},8093:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration582AddPotencyRune=void 0;const base_1=__webpack_require__(7569),utils_1=__webpack_require__(4930);class Migration582AddPotencyRune extends base_1.MigrationBase{async updateItem(item){var _a,_b,_c,_d;if("weapon"===item.type){const bonusAttack=null!==(_d=utils_1.toNumber(null!==(_c=null===(_b=null===(_a=item.data)||void 0===_a?void 0:_a.bonus)||void 0===_b?void 0:_b.value)&&void 0!==_c?_c:""))&&void 0!==_d?_d:0;bonusAttack>0&&bonusAttack<5&&(item.data.potencyRune.value=`${bonusAttack}`)}}}exports.Migration582AddPotencyRune=Migration582AddPotencyRune,Migration582AddPotencyRune.version=.582},1274:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration583AddHpThresholdHardness=void 0;const base_1=__webpack_require__(7569);class Migration583AddHpThresholdHardness extends base_1.MigrationBase{async updateItem(item){["weapon","melee","armor","equipment","consumable","backpack"].includes(item.type)&&(item.data.brokenThreshold={value:0},item.data.hp={value:0},item.data.maxHp={value:0},item.data.hardness={value:0})}}exports.Migration583AddHpThresholdHardness=Migration583AddHpThresholdHardness,Migration583AddHpThresholdHardness.version=.583},4480:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration583MigrateActorBonusBulk=void 0;const base_1=__webpack_require__(7569);class Migration583MigrateActorBonusBulk extends base_1.MigrationBase{async updateActor(actor){"character"==actor&&(actor.data.attributes.bonusLimitBulk=actor.data.attributes.bonusbulk||0,actor.data.attributes.bonusEncumbranceBulk=actor.data.attributes.bonusbulk||0)}}exports.Migration583MigrateActorBonusBulk=Migration583MigrateActorBonusBulk,Migration583MigrateActorBonusBulk.version=.583},7533:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration584AddEthnicityNationality=void 0;const base_1=__webpack_require__(7569);class Migration584AddEthnicityNationality extends base_1.MigrationBase{async updateActor(actor){"character"==actor&&(actor.data.details.ethnicity={value:""},actor.data.details.nationality={value:""})}}exports.Migration584AddEthnicityNationality=Migration584AddEthnicityNationality,Migration584AddEthnicityNationality.version=.584},5890:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration585MigrateCompendiumSettings=void 0;const base_1=__webpack_require__(7569),compendium_browser_1=__webpack_require__(4610);class Migration585MigrateCompendiumSettings extends base_1.MigrationBase{async migrate(){for(const scope of["FeatBrowser","SpellBrowser","InventoryBrowser","BestiaryBrowser","ActionBrowser"])game.settings.register(scope,"settings",{name:"Feat Browser Settings",default:"{}",type:String,scope:"world"});game.settings.set("pf2e","compendiumBrowserPacks",JSON.stringify({action:JSON.parse(game.settings.get("ActionBrowser","settings")),bestiary:JSON.parse(game.settings.get("BestiaryBrowser","settings")),equipment:JSON.parse(game.settings.get("InventoryBrowser","settings")),feat:JSON.parse(game.settings.get("FeatBrowser","settings")),spell:JSON.parse(game.settings.get("SpellBrowser","settings"))})),compendium_browser_1.compendiumBrowser.initCompendiumList()}}exports.Migration585MigrateCompendiumSettings=Migration585MigrateCompendiumSettings,Migration585MigrateCompendiumSettings.version=.585},5298:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration586AddSplashDamage=void 0;const base_1=__webpack_require__(7569);class Migration586AddSplashDamage extends base_1.MigrationBase{async updateItem(item){["weapon","melee"].includes(item.type)&&(item.data.splashDamage={value:"0"})}}exports.Migration586AddSplashDamage=Migration586AddSplashDamage,Migration586AddSplashDamage.version=.586},2930:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration588NpcActionCategory=void 0;const base_1=__webpack_require__(7569);class Migration588NpcActionCategory extends base_1.MigrationBase{async updateItem(item,actor){var _a,_b;if(actor&&"npc"===actor.type&&"action"===item.type&&Object.prototype.hasOwnProperty.call(item.flags,"pf2e_updatednpcsheet")){const oldValue=null===(_a=item.flags.pf2e_updatednpcsheet.npcActionType)||void 0===_a?void 0:_a.value;(null===(_b=item.data.actionCategory)||void 0===_b?void 0:_b.value)||(item.data.actionCategory={value:oldValue||"offensive"}),delete item.flags.pf2e_updatednpcsheet}}}exports.Migration588NpcActionCategory=Migration588NpcActionCategory,Migration588NpcActionCategory.version=.588},31:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration589SetItemAsIdentified=void 0;const data_definitions_1=__webpack_require__(6508),base_1=__webpack_require__(7569);class Migration589SetItemAsIdentified extends base_1.MigrationBase{async updateItem(item){data_definitions_1.isPhysicalItem(item)&&(item.data.identified={value:!0})}}exports.Migration589SetItemAsIdentified=Migration589SetItemAsIdentified,Migration589SetItemAsIdentified.version=.589},399:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration591SetOriginalItemName=void 0;const data_definitions_1=__webpack_require__(6508),base_1=__webpack_require__(7569);class Migration591SetOriginalItemName extends base_1.MigrationBase{async updateItem(item){var _a;data_definitions_1.isPhysicalItem(item)&&null!==(_a=item.data.identified.value)&&void 0!==_a&&!_a&&(item.data.originalName=item.name,item.name="Unidentified Item")}}exports.Migration591SetOriginalItemName=Migration591SetOriginalItemName,Migration591SetOriginalItemName.version=.591},3676:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration592CopyIdentificationData=void 0;const data_definitions_1=__webpack_require__(6508),base_1=__webpack_require__(7569);class Migration592CopyIdentificationData extends base_1.MigrationBase{async updateItem(item){var _a,_b;if(data_definitions_1.isPhysicalItem(item)){const unidentified=null!==(_b=!(null===(_a=(item=item).data.identified)||void 0===_a?void 0:_a.value))&&void 0!==_b&&_b;!item.data.identification&&unidentified&&item.data.originalName&&(item.data.identification.status="unidentified",item.data.identification.identified.name=item.data.originalName)}}}exports.Migration592CopyIdentificationData=Migration592CopyIdentificationData,Migration592CopyIdentificationData.version=.592},3094:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration593AddAncestryItem=void 0;const base_1=__webpack_require__(7569);class Migration593AddAncestryItem extends base_1.MigrationBase{constructor(){super(...arguments),this.requiresFlush=!0}async updateActor(actor){var _a,_b,_c,_d,_e,_f,_g,_h;if("character"!==actor.type)return;if(actor.items.find((x=>"ancestry"===x.type)))return;const name=null!==(_b=null===(_a=actor.data.details.ancestry)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:"";actor.items.push({type:"ancestry",name:""!==name?name:"unknown",data:{hp:null!==(_d=null===(_c=actor.data.attributes)||void 0===_c?void 0:_c.ancestryhp)&&void 0!==_d?_d:8,speed:null!==(_f=parseInt(null===(_e=actor.data.attributes.speed)||void 0===_e?void 0:_e.value,10))&&void 0!==_f?_f:25,size:null!==(_h=null===(_g=actor.data.traits.size)||void 0===_g?void 0:_g.value)&&void 0!==_h?_h:"med",boosts:{0:{value:[]},1:{value:[]},2:{value:[]}},flaws:{0:{value:[]}},languages:{value:["common"],custom:""},additionalLanguages:{count:0,value:[],custom:""},items:[],traits:{rarity:{value:"common"},value:[]},vision:"normal"}}),delete actor.data.details.ancestry,delete actor.data.attributes.ancestryhp,delete actor.data.attributes.speed.value,delete actor.data.traits.size}}exports.Migration593AddAncestryItem=Migration593AddAncestryItem,Migration593AddAncestryItem.version=.593},3217:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration594AddBackgroundItem=void 0;const base_1=__webpack_require__(7569);class Migration594AddBackgroundItem extends base_1.MigrationBase{constructor(){super(...arguments),this.requiresFlush=!0}async updateActor(actor){var _a,_b;if("character"!==actor.type)return;if(actor.items.find((x=>"background"===x.type)))return;const name=null!==(_b=null===(_a=actor.data.details.background)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:"";actor.items.push({type:"background",name:""!==name?name:"unknown",data:{boosts:{0:{value:[]},1:{value:[]}},items:[],traits:{rarity:{value:"common"},value:[]},trainedLore:"",trainedSkills:{value:[]}}}),delete actor.data.details.background}}exports.Migration594AddBackgroundItem=Migration594AddBackgroundItem,Migration594AddBackgroundItem.version=.594},2433:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration595AddItemSize=void 0;const base_1=__webpack_require__(7569),data_definitions_1=__webpack_require__(6508);class Migration595AddItemSize extends base_1.MigrationBase{async updateItem(item){!data_definitions_1.isPhysicalItem(item)||"size"in item.data&&"value"in item.data.size||(item.data.size={value:"med"})}}exports.Migration595AddItemSize=Migration595AddItemSize,Migration595AddItemSize.version=.595},4411:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration596SetSlugSourceIds=void 0;const base_1=__webpack_require__(7569),data_definitions_1=__webpack_require__(6508),base_2=__webpack_require__(5180);class Migration596SetSlugSourceIds extends base_1.MigrationBase{constructor(){super(),this.sourceIdPattern=/^Compendium\.(pf2e\.[-\w]+)\.(\w+)$/,this.itemPacks=new Map(game.packs.filter((pack=>"Item"===pack.entity)).map((pack=>[pack.collection,pack])))}getPackContent(collection){var _a;const cache=Migration596SetSlugSourceIds.packContent;console.debug(`Loading pack ${collection}`);return null!==(_a=cache.get(collection))&&void 0!==_a?_a:(()=>{const pack=this.itemPacks.get(collection);if(void 0===pack)throw Error("PF2e System | Expected error retrieving compendium");const promisedItems=(async()=>{const newContent=await pack.getContent();return new Map(newContent.map((item=>[item.id,item])))})();return cache.set(collection,promisedItems),promisedItems})()}async findCompendiumItem(itemData,collection){var e_1,_a,_b,_c,_d;const itemName=data_definitions_1.isPhysicalItem(itemData)&&"identified"===(null===(_b=itemData.data.identification)||void 0===_b?void 0:_b.status)&&(null===(_d=null===(_c=itemData.data.identification)||void 0===_c?void 0:_c.identified)||void 0===_d?void 0:_d.name)||itemData.name,packs="string"==typeof collection?[this.itemPacks.get(collection)]:this.itemPacks.values();try{for(var packs_1_1,packs_1=__asyncValues(packs);!(packs_1_1=await packs_1.next()).done;){const pack=packs_1_1.value;if(void 0===pack)continue;const content=await this.getPackContent(pack.collection),packItem=Array.from(content.values()).find((packItem=>packItem.type===itemData.type&&packItem.name===itemName));if(packItem instanceof base_2.ItemPF2e)return packItem.data}}catch(e_1_1){e_1={error:e_1_1}}finally{try{packs_1_1&&!packs_1_1.done&&(_a=packs_1.return)&&await _a.call(packs_1)}finally{if(e_1)throw e_1.error}}}async updateItem(itemData){var _a;const existingSourceId=null===(_a=itemData.flags.core)||void 0===_a?void 0:_a.sourceId,match=this.sourceIdPattern.exec(null!=existingSourceId?existingSourceId:""),collection=Array.isArray(match)?match[1]:void 0,sourcedItemData=[collection,itemData.data.slug].every((maybeString=>"string"==typeof maybeString))?itemData:await this.findCompendiumItem(itemData,collection);if(sourcedItemData){console.debug(`PF2e System | Setting slug and sourceId for ${itemData.name}`);const sourceId=sourcedItemData.flags.core.sourceId;itemData.data.slug=sourcedItemData.data.slug,itemData.flags.core={sourceId}}}}exports.Migration596SetSlugSourceIds=Migration596SetSlugSourceIds,Migration596SetSlugSourceIds.version=.596,Migration596SetSlugSourceIds.packContent=new Map},7148:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration597MakeTraitTraitsArrays=void 0;const base_1=__webpack_require__(7569);class Migration597MakeTraitTraitsArrays extends base_1.MigrationBase{async updateItem(itemData){const traits=itemData.data.traits.value,delimiter=/[;,|]+\s*/,dromedarify=text=>text.slice(0,1).toLowerCase()+text.slice(1);itemData.data.traits.value=Array.isArray(traits)?traits.flatMap((trait=>"string"==typeof trait&&trait.trim().length>0?dromedarify(trait.trim()):[])):"string"==typeof traits?traits.split(delimiter).flatMap((trait=>trait.length>0?dromedarify(trait):[])):traits}}exports.Migration597MakeTraitTraitsArrays=Migration597MakeTraitTraitsArrays,Migration597MakeTraitTraitsArrays.version=.597},8707:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration598AddClassItem=void 0;const base_1=__webpack_require__(7569);class Migration598AddClassItem extends base_1.MigrationBase{constructor(){super(...arguments),this.requiresFlush=!0}async updateActor(actor){var _a,_b,_c,_d,_e,_f;if("character"!==actor.type)return;if(actor.items.find((x=>"class"===x.type)))return;const name=null!==(_b=null===(_a=actor.data.details.class)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:"";actor.items.push({type:"class",name:""!==name?name:"unknown",data:{keyAbility:{value:[null!==(_d=null===(_c=actor.data.details)||void 0===_c?void 0:_c.keyability)&&void 0!==_d?_d:"str"]},items:[],traits:{rarity:{value:"common"},value:[]},hp:null!==(_f=null===(_e=actor.data.attributes)||void 0===_e?void 0:_e.classhp)&&void 0!==_f?_f:0,perception:0,savingThrows:{fortitude:0,reflex:0,will:0},attacks:{simple:0,martial:0,advanced:0,unarmed:0,other:{name:"",rank:0}},defenses:{unarmored:0,light:0,medium:0,heavy:0},trainedSkills:{value:[],additional:0},classDC:0,ancestryFeatLevels:[1,5,9,13,17],classFeatLevels:[1,2,4,6,8,10,12,14,16,18,20],generalFeatLevels:[3,7,11,15,19],skillFeatLevels:[2,4,6,8,10,12,14,16,18,20],skillIncreaseLevels:[3,5,7,9,11,13,15,17,19],abilityBoostLevels:[5,10,15,20]}}),delete actor.data.details.class,delete actor.data.attributes.ancestryhp}}exports.Migration598AddClassItem=Migration598AddClassItem,Migration598AddClassItem.version=.598},4527:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration599AddTraditionTraits=void 0;const base_1=__webpack_require__(7569);class Migration599AddTraditionTraits extends base_1.MigrationBase{async updateItem(item){var _a;if("consumable"!==item.type||!(null===(_a=item.data.spell)||void 0===_a?void 0:_a.data))return;const traditions=duplicate(item.data.spell.data.data.traditions.value);for(const tradition of traditions)item.data.traits.value.includes(tradition)||item.data.traits.value.push(tradition)}}exports.Migration599AddTraditionTraits=Migration599AddTraditionTraits,Migration599AddTraditionTraits.version=.599},6796:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration600Reach=void 0;const base_1=__webpack_require__(7569);class Migration600Reach extends base_1.MigrationBase{async updateItem(item){"ancestry"===item.type&&(item.data.reach=5)}}exports.Migration600Reach=Migration600Reach,Migration600Reach.version=.6},6193:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration601SplitEffectCompendia=void 0;const base_1=__webpack_require__(7569),utils_1=__webpack_require__(4930);class Migration601SplitEffectCompendia extends base_1.MigrationBase{async updateItem(item){var _a;"string"==typeof item.data.description.value&&(item.data.description.value=item.data.description.value.replace(/(@Compendium\[pf2e\.)(spell-effects)(\.)([a-zA-Z0-9]{16})(\]{.*?})/g,((_full,first,_replace,dot,itemId,rest)=>first+(utils_1.objectHasKey(Migration601SplitEffectCompendia.effectLocations,itemId)?Migration601SplitEffectCompendia.effectLocations[itemId]:"??")+dot+itemId+rest))),"string"==typeof(null===(_a=item.flags.core)||void 0===_a?void 0:_a.sourceId)&&(item.flags.core.sourceId=item.flags.core.sourceId.replace(/(Compendium\.pf2e\.)(spell-effects)(\.)([a-zA-Z0-9]{16})/g,((_full,first,_replace,dot,itemId)=>first+(utils_1.objectHasKey(Migration601SplitEffectCompendia.effectLocations,itemId)?Migration601SplitEffectCompendia.effectLocations[itemId]:"??")+dot+itemId)))}async migrate(){game.macros.forEach((macro=>{macro.data.command=macro.data.command.replace(/(Compendium\.pf2e\.)(spell-effects)(\.)([a-zA-Z0-9]{16})/g,((_full,first,_replace,dot,itemId)=>first+(utils_1.objectHasKey(Migration601SplitEffectCompendia.effectLocations,itemId)?Migration601SplitEffectCompendia.effectLocations[itemId]:"??")+dot+itemId))}))}}exports.Migration601SplitEffectCompendia=Migration601SplitEffectCompendia,Migration601SplitEffectCompendia.version=.601,Migration601SplitEffectCompendia.effectLocations={QuZ5frBMJF3gi7RY:"consumable-effects","7z1iY4AaNEAIKuAU":"consumable-effects","1mKjaWC65KWPuFR4":"consumable-effects",mi4Md1fB2XThCand:"consumable-effects",R106i7WCXvHLGMTu:"consumable-effects",kkDbalYEavzRpYlp:"consumable-effects",qVKrrKpTghgMIuGH:"consumable-effects",HeRHBo2NaKy5IxhU:"consumable-effects",tTBJ33UGtzXjWOJp:"consumable-effects",xVAdPzFaSvJXPMKv:"consumable-effects",fYjvLx9DHIdCHdDx:"consumable-effects",kwD0wuW5Ndkc9YXB:"consumable-effects",fIpzDpuwLdIS4tW5:"consumable-effects","1ouUo8lLK6H79Rqh":"consumable-effects",xFQRiVU6h8EA6Lw9:"consumable-effects",MI5OCkF9IXmD2lPF:"consumable-effects",S4MZzALqFoXJsr6o:"consumable-effects",wFF0SZs1Hcf87Kk1:"consumable-effects","2C1HuKDQDGFZuv7l":"consumable-effects",q1EhQ716bPSgJVnC:"consumable-effects",eh7EqmDBDW30ShCu:"consumable-effects",wTZnKkT0K4Tdy8mD:"consumable-effects",Cxa7MdgMCUoMqbKm:"consumable-effects",PeuUz7JaabCgl6Yh:"consumable-effects",lNWACCNe9RYgaFxb:"consumable-effects",j9zVZwRBVAcnpEkE:"consumable-effects",qit1mLbJUyRTYcPU:"consumable-effects",jaBMZKdoywOTrQvP:"consumable-effects",RT1BxXrbbGgk40Ti:"consumable-effects",ztxW3lBPRcesF7wK:"consumable-effects","7vCenP9j6FuHRv5C":"consumable-effects","7UL8belWmo7U5YGM":"consumable-effects",bcxVvIbuZWOvsKcA:"consumable-effects","4tepFOJLhZSelPoa":"consumable-effects",qwoLV4awdezlEJ60:"consumable-effects",GBBjw61g4ekJymT0:"consumable-effects",vFOr2JAJxiVvvn2E:"consumable-effects",BV8RPntjc9FUzD3g:"consumable-effects",kgotU0sFmtAHYySB:"consumable-effects",VCypzSu659eC6jNi:"consumable-effects",wyLEew86nhNUXASu:"consumable-effects",Wa4317cqU4lJ8vAQ:"consumable-effects",Z9oPh462q82IYIZ6:"consumable-effects",EpB7yJPEuG6ez4z3:"consumable-effects",PpLxndUSgzgs6dd0:"consumable-effects",lPRuIRbu0rHBkoKY:"consumable-effects",Yxssrnh9UZJAM0V7:"consumable-effects","9MeHc072G4L8AJkp":"consumable-effects",xLilBqqf34ZJYO9i:"consumable-effects","1l139A2Qik4lBHKO":"consumable-effects","2PNo8u4wxSbz5WEs":"consumable-effects",fUrZ4xcMJz0CfTyG:"consumable-effects","6A8jsLR7upLGuRiv":"consumable-effects",Zdh2uO1vVYJmaqld:"consumable-effects",Mf9EBLhYmZerf0nS:"consumable-effects",ModBoFdCi7YQU4gP:"consumable-effects",W3xQBLj5hLOtb6Tj:"consumable-effects","2Bds6d4UGQZqYSZM":"consumable-effects","6PNLBIdlqqWNCFMy":"consumable-effects","988f6NpOo4YzFzIr":"consumable-effects",VPtsrpbP0AE642al:"consumable-effects",MCny5ohCGf09a7Wl:"consumable-effects",RRusoN3HEGnDO1Dg:"consumable-effects",thOpQunbQr77XWdF:"consumable-effects","9keegq0GdS1eSrNr":"consumable-effects",jw6Tr9FbErjLAFLQ:"consumable-effects","5xgapIXn5DwbXHKh":"consumable-effects",t7VUJHSUT6bkVUjg:"consumable-effects",yrbz0rZzp8aZEqbv:"consumable-effects","16tOZk4qy329s2aK":"consumable-effects",zd85Ny1RS46OL0TD:"consumable-effects",oAewXfq9c0ecaSfw:"consumable-effects",dpIrjd1UPY7EnWUD:"consumable-effects","9FfFhu2kl2wMTsiI":"consumable-effects",v5Ht1V4MZvRKRBjL:"consumable-effects",TkRuKKYyPHTGPfgf:"consumable-effects",XrlChFETfe8avLsX:"consumable-effects",qzRcSQ0HTTp58hV2:"consumable-effects",TsWUTODTVi487SEz:"consumable-effects","5Gof60StUppR2Xn9":"consumable-effects",mG6S6zm6hxaF7Tla:"consumable-effects",zlSNbMDIlTOpcO8R:"consumable-effects",b9DTIJyBT8kvIBpj:"consumable-effects",PEPOd38VfVzQMKG5:"consumable-effects","1xHHvQlW4pRR89qj":"consumable-effects",AMhUb42NAJ1aisZp:"consumable-effects",kwOtHtmlH69ctK0O:"consumable-effects",VrYfR2WuyA15zFhq:"consumable-effects",OAN5Fj21PJPhIqRU:"consumable-effects",e6dXfbKzv5sNr1zh:"consumable-effects",Hnt3Trd7TiFICB06:"consumable-effects",p2aGtovaY1feytws:"equipment-effects",yvabfuAO74pvH8hh:"equipment-effects",etJW0w4CiSFgMrWP:"equipment-effects",vOU4Yv2MyAfYBbmF:"equipment-effects",FbFl95WRpzrrijh3:"equipment-effects",iK6JeCsZwm5Vakks:"equipment-effects",P7Y7pO2ulZ5wBgxU:"equipment-effects",cg5qyeMJUh6b4fta:"equipment-effects",fbSFwwp60AuDDKpK:"equipment-effects","88kqcDmsoAEddzUt":"equipment-effects",lLP56tbG689TNKW5:"equipment-effects",PeiuJ951kkBPTCSM:"equipment-effects",G0lG7IIZnCZtYi6v:"equipment-effects",gDefAEEMXVVZgqXH:"equipment-effects",uXEp1rPU5fY4OiBf:"equipment-effects",Uadsb25G18pKdZ2e:"equipment-effects",viCX9fZzTWGuoO85:"equipment-effects",eeGWTG9ZAha4IIOY:"equipment-effects",ioGzmVSmMGXWWBYb:"equipment-effects",pAMyEbJzWBoYoGhs:"equipment-effects","7dLsA9PAb5ij7Bc6":"equipment-effects",NE7Fm5YnUhD4ySX3:"equipment-effects","8ersuvNJXX00XaIQ":"equipment-effects",EpNflrkmWzQ0lEb4:"equipment-effects",iEkH8BKLMUa2wxLX:"equipment-effects",bP40jr6wE6MCsRvY:"equipment-effects",eSIYyxi6uTKiP6W5:"equipment-effects",E4B02mJmNexQLa8F:"equipment-effects","3O5lvuX4VHqtpCkU":"equipment-effects",ah41XCrV4LFsVyzl:"equipment-effects",W3BCLbX6j1IqL0uB:"equipment-effects",zqKzWGLODgIvtiKf:"equipment-effects",lBMhT2W2raYMa8JS:"equipment-effects","5uK3fmGlfJrbWQz4":"equipment-effects",i0tm2ZHekp7rGGR3:"equipment-effects",Zb8RYgmzCI6fQE0o:"equipment-effects",QapoFh0tbUgMwSIB:"equipment-effects",UlalLihKzDxcOdXL:"equipment-effects",lO95TwgihBdTilAB:"equipment-effects","9PASRixhNM0ogqmG":"equipment-effects","7MgpgF8tOXOiDEwv":"equipment-effects","1S51uIRb9bnZtpFU":"equipment-effects","1nCwQErK6hpkNvfw":"feat-effects","5IGz4iheaiUWm5KR":"feat-effects",uFYvW3kFP9iyNfVX:"feat-effects",CgxYa0lrLUjS2ZhI:"feat-effects",nwkYZs6YwXYAJ4ps:"feat-effects",qUowHpn79Dpt1hVn:"feat-effects",RozqjLocahvQWERr:"feat-effects",tPKXLtDJ3bzJcXlv:"feat-effects",gYpy9XBPScIlY93p:"feat-effects",Im5JBInybWFbHEYS:"feat-effects",BCyGDKcplkJiSAKJ:"feat-effects",PMHwCrnh9W4sMu5b:"feat-effects",pf9yvKNg6jZLrE30:"feat-effects",eeAlh6edygcZIz9c:"feat-effects",b2kWJuCPj1rDMdwz:"feat-effects",UQ7vZgmfK0VSFS8A:"feature-effects",s1tulrmW6teTFjVd:"feature-effects",aKRo5TIhUtu0kyEr:"feature-effects",yfbP64r4a9e5oyli:"feature-effects",n1vhmOd7aNiuR3nk:"feature-effects",FNTTeJHiK6iOjrSq:"feature-effects","3gGBZHcUFsHLJeQH":"feature-effects",rJpkKaPRGaH0pLse:"feature-effects","9AUcoY48H5LrVZiF":"feature-effects",KVbS7AbhQdeuA0J6:"feature-effects","6fb15XuSV4TNuVAT":"feature-effects",vguxP8ukwVTWWWaA:"feature-effects",SVGW8CLKwixFlnTv:"feature-effects",ruRAfGJnik7lRavk:"feature-effects",uBJsxCzNhje8m8jj:"feature-effects","7BFd8A9HFrmg6vwL":"feature-effects",z3uyCMBddrPK5umr:"feature-effects",Nv70aqcQgCBpDYp8:"feature-effects",OqH6IaeOwRWkGPrk:"feature-effects",Lb4q2bBAgxamtix5:"feature-effects",Gqy7K6FnbLtwGpud:"spell-effects","41WThj17MZBXTO2X":"spell-effects",sPCWrhUHqlbGhYSD:"spell-effects","3qHKBDF7lrHw8jFK":"spell-effects",l9HRQggofFGIxEse:"spell-effects",beReeFroAx24hj83:"spell-effects",qkwb5DD3zmKwvbk0:"spell-effects",GnWkI3T3LYRlm3X8:"spell-effects",dWbg2gACxMkSnZag:"spell-effects",Jemq5UknGdMO7b73:"spell-effects",LXf1Cqi1zyo4DaLv:"spell-effects"}},2075:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration602UpdateDiehardFeat=void 0;const base_1=__webpack_require__(7569),feat_1=__webpack_require__(5103);class Migration602UpdateDiehardFeat extends base_1.MigrationBase{constructor(){super(),this.requiresFlush=!0,this.diehardPromise=fromUuid("Compendium.pf2e.feats-srd.I0BhPWqYf1bbzEYg")}async updateActor(actorData){const diehard=actorData.items.find((itemData=>"diehard"===itemData.data.slug&&"feat"===itemData.type));if("character"===actorData.type&&void 0!==diehard){actorData.data.attributes.dying.max=4;const diehardIndex=actorData.items.indexOf(diehard),newDiehard=await this.diehardPromise;if(!(newDiehard instanceof feat_1.FeatPF2e))throw Error("PF2E System | Expected item not found in Compendium");actorData.items.splice(diehardIndex,1,newDiehard.data)}}}exports.Migration602UpdateDiehardFeat=Migration602UpdateDiehardFeat,Migration602UpdateDiehardFeat.version=.602},6572:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration603ResetQuickRollDefault=void 0;const base_1=__webpack_require__(7569);class Migration603ResetQuickRollDefault extends base_1.MigrationBase{async updateUser(userData){var _a,_b;"boolean"==typeof(null===(_b=null===(_a=userData.flags.PF2e)||void 0===_a?void 0:_a.settings)||void 0===_b?void 0:_b.quickD20roll)&&(userData.flags.PF2e.settings.quickD20roll=!1)}}exports.Migration603ResetQuickRollDefault=Migration603ResetQuickRollDefault,Migration603ResetQuickRollDefault.version=.603},1740:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration604FixClassItem=void 0;const base_1=__webpack_require__(7569);class Migration604FixClassItem extends base_1.MigrationBase{async updateItem(item){"class"===item.type&&(Array.isArray(item.data.ancestryFeatLevels)&&(item.data.ancestryFeatLevels={value:item.data.ancestryFeatLevels}),Array.isArray(item.data.classFeatLevels)&&(item.data.classFeatLevels={value:item.data.classFeatLevels}),Array.isArray(item.data.skillFeatLevels)&&(item.data.skillFeatLevels={value:item.data.skillFeatLevels}),Array.isArray(item.data.generalFeatLevels)&&(item.data.generalFeatLevels={value:item.data.generalFeatLevels}),Array.isArray(item.data.skillIncreaseLevels)&&(item.data.skillIncreaseLevels={value:item.data.skillIncreaseLevels}),Array.isArray(item.data.abilityBoostLevels)&&(item.data.abilityBoostLevels={value:item.data.abilityBoostLevels}))}}exports.Migration604FixClassItem=Migration604FixClassItem,Migration604FixClassItem.version=.604},297:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration605CatchUpToTemplateJSON=void 0;const base_1=__webpack_require__(7569),data_definitions_1=__webpack_require__(6508);class Migration605CatchUpToTemplateJSON extends base_1.MigrationBase{addEffects(entityData){Array.isArray(entityData.effects)||(entityData.effects=[])}async updateActor(actorData){if(this.addEffects(actorData),"string"!=typeof actorData.data.traits.traits.custom&&(actorData.data.traits.traits.custom=""),"character"===actorData.type||"npc"===actorData.type){if("string"==typeof actorData.data.attributes.hp.max){const newMax=parseInt(actorData.data.attributes.hp.max,10);Number.isInteger(newMax)&&(actorData.data.attributes.hp.max=newMax)}if("string"==typeof actorData.data.attributes.hp.value){const newValue=parseInt(actorData.data.attributes.hp.value,10);Number.isInteger(newValue)&&(actorData.data.attributes.hp.value=newValue)}if("string"==typeof actorData.data.details.level.value){const newLevel=parseInt(actorData.data.details.level.value,10);Number.isInteger(newLevel)&&(actorData.data.details.level.value=newLevel)}"tempmax"in actorData.data.attributes.hp&&delete actorData.data.attributes.hp.tempmax,"special"in actorData.data.attributes.speed&&delete actorData.data.attributes.speed.special}}async updateItem(itemData,actorData){this.addEffects(itemData),!itemData.data.slug&&actorData&&(itemData.data.slug=null),Array.isArray(itemData.data.rules)||(itemData.data.rules=[]),itemData.data.traits.custom||(itemData.data.traits.custom=""),itemData.data.traits.rarity||(itemData.data.traits.rarity={value:"common"}),data_definitions_1.isPhysicalItem(itemData)&&!itemData.data.identification&&(itemData.data.identification={status:"identified"}),"spell"!==itemData.type||itemData.data.hasCounteractCheck||(itemData.data.hasCounteractCheck={value:!1}),"lore"===itemData.type&&"featType"in itemData.data&&delete itemData.data.featType,"action"===itemData.type&&"skill_requirements"in itemData.data&&delete itemData.data.skill_requirements,"action"===itemData.type&&"skill_requirement"in itemData.data&&delete itemData.data.skill_requirement}}exports.Migration605CatchUpToTemplateJSON=Migration605CatchUpToTemplateJSON,Migration605CatchUpToTemplateJSON.version=.605},3663:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration606SignatureSpells=void 0;const base_1=__webpack_require__(7569);class Migration606SignatureSpells extends base_1.MigrationBase{async updateItem(item){"spellcastingEntry"!==item.type||item.data.signatureSpells||(item.data.signatureSpells={value:[]})}}exports.Migration606SignatureSpells=Migration606SignatureSpells,Migration606SignatureSpells.version=.606},6836:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration607MeleeItemDamageRolls=void 0;const base_1=__webpack_require__(7569);class Migration607MeleeItemDamageRolls extends base_1.MigrationBase{async updateItem(itemData,_actorData){if("melee"===itemData.type&&Array.isArray(itemData.data.damageRolls)){const damageRolls={};itemData.data.damageRolls.forEach((roll=>{const key=randomID(20);damageRolls[key]=roll})),itemData.data.damageRolls=damageRolls}}}exports.Migration607MeleeItemDamageRolls=Migration607MeleeItemDamageRolls,Migration607MeleeItemDamageRolls.version=.607},3482:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration608DeletePersistedKits=void 0;const base_1=__webpack_require__(7569);class Migration608DeletePersistedKits extends base_1.MigrationBase{async updateItem(itemData,actorData){if(actorData&&"kit"===itemData.type){const index=actorData.items.indexOf(itemData);actorData.items.splice(index,1)}}}exports.Migration608DeletePersistedKits=Migration608DeletePersistedKits,Migration608DeletePersistedKits.version=.608},6685:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration609LootActorTraits=void 0;const base_1=__webpack_require__(7569);class Migration609LootActorTraits extends base_1.MigrationBase{async updateActor(actorData){"loot"===actorData.type&&void 0===actorData.data.traits&&(actorData.data.traits={rarity:{value:"common"},size:{value:"med"},traits:{value:[],custom:""},di:{custom:"",value:[]},dr:[],dv:[],ci:[]})}}exports.Migration609LootActorTraits=Migration609LootActorTraits,Migration609LootActorTraits.version=.609},1442:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration610SetHeritageFeatType=void 0;const base_1=__webpack_require__(7569);class Migration610SetHeritageFeatType extends base_1.MigrationBase{async updateItem(itemData){const itemTraits=itemData.data.traits.value;if("feat"===itemData.type&&itemTraits.includes("heritage")){itemData.data.featType.value="heritage";const index=itemTraits.indexOf("heritage");itemTraits.splice(index,1)}}}exports.Migration610SetHeritageFeatType=Migration610SetHeritageFeatType,Migration610SetHeritageFeatType.version=.61},389:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration611UpdateToughnessMountainsStoutness=void 0;const base_1=__webpack_require__(7569),feat_1=__webpack_require__(5103);class Migration611UpdateToughnessMountainsStoutness extends base_1.MigrationBase{constructor(){super(),this.requiresFlush=!0,this.featSlugs=["mountains-stoutness","mountain-s-stoutness","toughness"],this.featsPromise=game.packs.get("pf2e.feats-srd").getContent()}async updateActor(actorData){var e_1,_a;if("character"!==actorData.type)return;const oldFeatsData=actorData.items.filter((itemData=>{var _a;return this.featSlugs.includes(null!==(_a=itemData.data.slug)&&void 0!==_a?_a:"")&&"feat"===itemData.type}));try{for(var oldFeatsData_1_1,oldFeatsData_1=__asyncValues(oldFeatsData);!(oldFeatsData_1_1=await oldFeatsData_1.next()).done;){const oldFeatData=oldFeatsData_1_1.value;"mountain-s-stoutness"===oldFeatData.data.slug&&(oldFeatData.data.slug="mountains-stoutness");const newFeat="toughness"===oldFeatData.data.slug?(await this.featsPromise).find((feat=>"toughness"===feat.slug)):(await this.featsPromise).find((feat=>"mountains-stoutness"===feat.slug));if(!(newFeat instanceof feat_1.FeatPF2e))throw Error("PF2E System | Expected item not found in Compendium");newFeat.data.data.location=oldFeatData.data.location;const oldFeatIndex=actorData.items.indexOf(oldFeatData);actorData.items.splice(oldFeatIndex,1,newFeat.data)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{oldFeatsData_1_1&&!oldFeatsData_1_1.done&&(_a=oldFeatsData_1.return)&&await _a.call(oldFeatsData_1)}finally{if(e_1)throw e_1.error}}}}exports.Migration611UpdateToughnessMountainsStoutness=Migration611UpdateToughnessMountainsStoutness,Migration611UpdateToughnessMountainsStoutness.version=.611},6791:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration612NormalizeRarities=void 0;const base_1=__webpack_require__(7569);class Migration612NormalizeRarities extends base_1.MigrationBase{async updateActor(actorData){const traits=actorData.data.traits;"rarity"in traits||(traits.rarity={value:"common"});const rarities=["common","uncommon","rare","unique"];for(const rarity of rarities)if(traits.traits.value.includes(rarity)){const index=traits.traits.value.indexOf(rarity);traits.traits.value.splice(index,1),traits.rarity={value:rarity}}}}exports.Migration612NormalizeRarities=Migration612NormalizeRarities,Migration612NormalizeRarities.version=.612},3181:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration613RemoveAmmoCharges=void 0;const base_1=__webpack_require__(7569);class Migration613RemoveAmmoCharges extends base_1.MigrationBase{async updateItem(itemData,_actorData){"consumable"===itemData.type&&"ammo"===itemData.data.consumableType.value&&(itemData.data.charges.value=0,itemData.data.charges.max=0)}}exports.Migration613RemoveAmmoCharges=Migration613RemoveAmmoCharges,Migration613RemoveAmmoCharges.version=.613},1688:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration614NumifyMeleeBonuses=void 0;const base_1=__webpack_require__(7569);class Migration614NumifyMeleeBonuses extends base_1.MigrationBase{async updateItem(itemData){"melee"===itemData.type&&(itemData.data.bonus={value:Number(itemData.data.bonus.value)})}}exports.Migration614NumifyMeleeBonuses=Migration614NumifyMeleeBonuses,Migration614NumifyMeleeBonuses.version=.614},2929:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration615RemoveInstinctTrait=void 0;const base_1=__webpack_require__(7569);class Migration615RemoveInstinctTrait extends base_1.MigrationBase{async updateItem(itemData){const traits=itemData.data.traits;"string"==typeof traits.value?traits.value=[]:traits.value=traits.value.filter((trait=>"instinct"!==trait))}}exports.Migration615RemoveInstinctTrait=Migration615RemoveInstinctTrait,Migration615RemoveInstinctTrait.version=.615},5123:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration616MigrateFeatPrerequisites=void 0;const base_1=__webpack_require__(7569);class Migration616MigrateFeatPrerequisites extends base_1.MigrationBase{async updateItem(itemData){if("feat"===itemData.type){const update=[],prerequisites=itemData.data.prerequisites;if(prerequisites.value){if("string"==typeof prerequisites.value)update.push({value:prerequisites.value});else if(Array.isArray(prerequisites.value))for(const p of prerequisites.value)p&&update.push({value:(null==p?void 0:p.value)?p.value:p})}else if(Array.isArray(prerequisites))for(const p of prerequisites)p&&update.push({value:(null==p?void 0:p.value)?p.value:p});itemData.data.prerequisites={value:update}}}}exports.Migration616MigrateFeatPrerequisites=Migration616MigrateFeatPrerequisites,Migration616MigrateFeatPrerequisites.version=.616},6097:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration617FixUserFlags=void 0;const base_1=__webpack_require__(7569);class Migration617FixUserFlags extends base_1.MigrationBase{async updateUser(userData){var _a,_b,_c,_d,_e,_f;const settings=null===(_a=userData.flags.PF2e)||void 0===_a?void 0:_a.settings;if(settings){const uiTheme=null!==(_b=settings.color)&&void 0!==_b?_b:"blue",showRollDialogs=!settings.quickD20roll;null!==(_c=(_f=userData.flags).pf2e)&&void 0!==_c||(_f.pf2e={}),userData.flags.pf2e.settings={uiTheme,showEffectPanel:null===(_e=null===(_d=userData.flags.pf2e)||void 0===_d?void 0:_d.showEffectPanel)||void 0===_e||_e,showRollDialogs},delete userData.flags.PF2e,userData.flags["-=PF2e"]=null}}}exports.Migration617FixUserFlags=Migration617FixUserFlags,Migration617FixUserFlags.version=.617},8590:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration618MigrateItemImagePaths=void 0;const base_1=__webpack_require__(7569);class Migration618MigrateItemImagePaths extends base_1.MigrationBase{constructor(){super(...arguments),this.IMAGE_PATHS={"systems/pf2e/icons/equipment/weapons/blowgun.png":"systems/pf2e/icons/equipment/weapons/blowgun.jpg","systems/pf2e/icons/equipment/weapons/trident.png":"systems/pf2e/icons/equipment/weapons/trident.jpg","systems/pf2e/icons/equipment/weapons/longsword.png":"systems/pf2e/icons/equipment/weapons/longsword.jpg","systems/pf2e/icons/equipment/weapons/composite-longbow.png":"systems/pf2e/icons/equipment/weapons/composite-longbow.jpg","systems/pf2e/icons/equipment/weapons/composite-shortbow.png":"systems/pf2e/icons/equipment/weapons/composite-shortbow.jpg","systems/pf2e/icons/equipment/weapons/dagger.png":"systems/pf2e/icons/equipment/weapons/dagger.jpg","systems/pf2e/icons/equipment/weapons/katar.png":"systems/pf2e/icons/equipment/weapons/katar.jpg","systems/pf2e/icons/equipment/weapons/kukri.png":"systems/pf2e/icons/equipment/weapons/kukri.jpg","systems/pf2e/icons/equipment/weapons/shortbow.png":"systems/pf2e/icons/equipment/weapons/shortbow.jpg","systems/pf2e/icons/equipment/weapons/scimitar.png":"systems/pf2e/icons/equipment/weapons/scimitar.jpg","systems/pf2e/icons/equipment/weapons/hatchet.png":"systems/pf2e/icons/equipment/weapons/hatchet.jpg","systems/pf2e/icons/equipment/weapons/halfling-sling-staff.png":"systems/pf2e/icons/equipment/weapons/halfling-sling-staff.jpg","systems/pf2e/icons/equipment/weapons/halberd.png":"systems/pf2e/icons/equipment/weapons/halberd.jpg","systems/pf2e/icons/equipment/weapons/shield-spikes.png":"systems/pf2e/icons/equipment/weapons/shield-spikes.jpg","systems/pf2e/icons/equipment/weapons/light-mace.jpg":"systems/pf2e/icons/equipment/weapons/light-mace.jpg","systems/pf2e/icons/equipment/weapons/morningstar.png":"systems/pf2e/icons/equipment/weapons/morningstar.jpg","systems/pf2e/icons/equipment/weapons/sling.png":"systems/pf2e/icons/equipment/weapons/sling.jpg","systems/pf2e/icons/equipment/weapons/main-gauche.png":"systems/pf2e/icons/equipment/weapons/main-gauche.jpg","systems/pf2e/icons/equipment/weapons/bastard-sword.png":"systems/pf2e/icons/equipment/weapons/bastard-sword.jpg","systems/pf2e/icons/equipment/weapons/spear.png":"systems/pf2e/icons/equipment/weapons/spear.jpg","systems/pf2e/icons/equipment/weapons/staff.png":"systems/pf2e/icons/equipment/weapons/staff.jpg","systems/pf2e/icons/equipment/weapons/katana.png":"systems/pf2e/icons/equipment/weapons/katana.jpg","systems/pf2e/icons/equipment/weapons/elven-curve-blade.png":"systems/pf2e/icons/equipment/weapons/elven-curve-blade.jpg","systems/pf2e/icons/equipment/weapons/bo-staff.png":"systems/pf2e/icons/equipment/weapons/bo-staff.jpg","systems/pf2e/icons/equipment/weapons/clan-dagger.png":"systems/pf2e/icons/equipment/weapons/clan-dagger.jpg","systems/pf2e/icons/equipment/weapons/dogslicer.png":"systems/pf2e/icons/equipment/weapons/dogslicer.jpg","systems/pf2e/icons/equipment/weapons/falchion.png":"systems/pf2e/icons/equipment/weapons/falchion.jpg","systems/pf2e/icons/equipment/weapons/fist.png":"systems/pf2e/icons/equipment/weapons/fist.jpg","systems/pf2e/icons/equipment/weapons/gauntlet.png":"systems/pf2e/icons/equipment/weapons/gauntlet.jpg","systems/pf2e/icons/equipment/weapons/gnome-hooked-hammer.png":"systems/pf2e/icons/equipment/weapons/gnome-hooked-hammer.jpg","systems/pf2e/icons/equipment/weapons/greatpick.png":"systems/pf2e/icons/equipment/weapons/greatpick.jpg","systems/pf2e/icons/equipment/weapons/guisarme.png":"systems/pf2e/icons/equipment/weapons/guisarme.jpg","systems/pf2e/icons/equipment/weapons/horsechopper.png":"systems/pf2e/icons/equipment/weapons/horsechopper.jpg","systems/pf2e/icons/equipment/weapons/lance.png":"systems/pf2e/icons/equipment/weapons/lance.jpg","systems/pf2e/icons/equipment/weapons/maul.png":"systems/pf2e/icons/equipment/weapons/maul.jpg","systems/pf2e/icons/equipment/weapons/pick.png":"systems/pf2e/icons/equipment/weapons/pick.jpg","systems/pf2e/icons/equipment/weapons/ranseur.png":"systems/pf2e/icons/equipment/weapons/ranseur.jpg","systems/pf2e/icons/equipment/weapons/sai.png":"systems/pf2e/icons/equipment/weapons/sai.jpg","systems/pf2e/icons/equipment/weapons/sawtooth-saber.png":"systems/pf2e/icons/equipment/weapons/sawtooth-saber.jpg","systems/pf2e/icons/equipment/weapons/shield-bash.png":"systems/pf2e/icons/equipment/weapons/shield-bash.jpg","systems/pf2e/icons/equipment/weapons/shield-boss.png":"systems/pf2e/icons/equipment/weapons/shield-boss.jpg","systems/pf2e/icons/equipment/weapons/shuriken.png":"systems/pf2e/icons/equipment/weapons/shuriken.jpg","systems/pf2e/icons/equipment/weapons/spiked-gauntlet.png":"systems/pf2e/icons/equipment/weapons/spiked-gauntlet.jpg","systems/pf2e/icons/equipment/weapons/broom.png":"systems/pf2e/icons/equipment/held-items/broom-of-flying.jpg","systems/pf2e/icons/equipment/weapons/cutlass.png":"systems/pf2e/icons/equipment/weapons/scimitar.jpg","systems/pf2e/icons/equipment/weapons/scalpel.png":"systems/pf2e/icons/equipment/weapons/war-razor.jpg","systems/pf2e/icons/equipment/weapons/cane.png":"systems/pf2e/icons/equipment/weapons/cane.jpg"}}async updateItem(itemData){itemData.img in this.IMAGE_PATHS&&(itemData.img=this.IMAGE_PATHS[itemData.img])}}exports.Migration618MigrateItemImagePaths=Migration618MigrateItemImagePaths,Migration618MigrateItemImagePaths.version=.618},8807:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration619TraditionLowercaseAndRemoveWandScroll=void 0;const utils_1=__webpack_require__(4930),base_1=__webpack_require__(7569),LEGIT_TRADITIONS=["arcane","divine","occult","primal","focus","ritual","halcyon"];class Migration619TraditionLowercaseAndRemoveWandScroll extends base_1.MigrationBase{async updateItem(item,actorData){if(!actorData||"spellcastingEntry"!==item.type)return;if(item.data.tradition.value=item.data.tradition.value.toLowerCase(),utils_1.tupleHasValue(LEGIT_TRADITIONS,item.data.tradition.value))return;const highestTradition=actorData.items.filter((itemData=>"spellcastingEntry"===itemData.type)).reduce(((prev,current)=>{var _a;if(utils_1.tupleHasValue(LEGIT_TRADITIONS,current.data.tradition.value)){const value=null!==(_a=current.data.spelldc.value)&&void 0!==_a?_a:0;if(value>prev.value){return{name:current.data.tradition.value,value}}}return prev}),{name:"arcane",value:0});item.data.tradition.value=highestTradition.name}}exports.Migration619TraditionLowercaseAndRemoveWandScroll=Migration619TraditionLowercaseAndRemoveWandScroll,Migration619TraditionLowercaseAndRemoveWandScroll.version=.619},9354:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration620RenameToWebp=void 0;const base_1=__webpack_require__(7569);class Migration620RenameToWebp extends base_1.MigrationBase{constructor(){super(...arguments),this.regexp=/(\/?systems\/pf2e\/[^"]+)\.(?:jpg|png)\b/}renameToWebP(imgPath){return"string"==typeof imgPath&&this.regexp.test(imgPath)?imgPath.replace(this.regexp,"$1.webp"):null==imgPath?void 0:imgPath.replace("icons/svg/mystery-man.svg","systems/pf2e/icons/default-icons/mystery-man.svg")}isABCK(itemData){return["ancestry","background","class","kit"].includes(itemData.type)}async updateActor(actorData){var _a,_b;actorData.img=this.renameToWebP(actorData.img),"string"==typeof(null===(_a=actorData.token)||void 0===_a?void 0:_a.img)&&(actorData.token.img=this.renameToWebP(actorData.token.img));for(const effect of null!==(_b=actorData.effects)&&void 0!==_b?_b:[])effect.icon=this.renameToWebP(effect.icon);"character"!==actorData.type&&"npc"!==actorData.type||(actorData.data.details.deity.image=this.renameToWebP(actorData.data.details.deity.image))}async updateItem(itemData){var _a,_b,_c;itemData.img=this.renameToWebP(itemData.img);for(const effect of null!==(_a=itemData.effects)&&void 0!==_a?_a:[])effect.icon=this.renameToWebP(effect.icon);if("consumable"===itemData.type&&(null===(_b=itemData.data.spell)||void 0===_b?void 0:_b.data)){const embeddedSpell=itemData.data.spell.data;embeddedSpell.img=this.renameToWebP(embeddedSpell.img)}if("condition"===itemData.type&&(null===(_c=itemData.flags.pf2e)||void 0===_c?void 0:_c.condition)&&(itemData.data.hud.img.value=this.renameToWebP(itemData.data.hud.img.value)),this.isABCK(itemData)){const embedData=itemData.data.items,embeds=Object.values(embedData).filter((maybeEmbed=>!!maybeEmbed));for(const embed of embeds)if(embed.img=this.renameToWebP(embed.img),"items"in embed&&embed.items){const deepEmbeds=Object.values(embed.items).filter((maybeDeepEmbed=>!!maybeDeepEmbed));for(const deepEmbed of deepEmbeds)deepEmbed.img=this.renameToWebP(deepEmbed.img)}}}async updateMacro(macroData){macroData.img=this.renameToWebP(macroData.img)}async updateMessage(messageData){messageData.flavor=this.renameToWebP(messageData.flavor),messageData.content=this.renameToWebP(messageData.content)}async updateTable(tableData){tableData.img=this.renameToWebP(tableData.img);for(const result of tableData.results)result.img=this.renameToWebP(result.img)}async updateToken(tokenData){tokenData.img=this.renameToWebP(tokenData.img),tokenData.effects=tokenData.effects.filter((texture=>!this.regexp.test(texture)))}async updateUser(userData){userData.img=this.renameToWebP(userData.img)}}exports.Migration620RenameToWebp=Migration620RenameToWebp,Migration620RenameToWebp.version=.62},794:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration621RemoveConfigSpellSchools=void 0;const base_1=__webpack_require__(7569),utils_1=__webpack_require__(4930);class Migration621RemoveConfigSpellSchools extends base_1.MigrationBase{constructor(){super(...arguments),this.KEY_MAP={abj:"abjuration",con:"conjuration",div:"divination",enc:"enchantment",evo:"evocation",ill:"illusion",nec:"necromancy",trs:"transmutation"}}reassignSchool(abbreviation){return utils_1.objectHasKey(this.KEY_MAP,abbreviation)?this.KEY_MAP[abbreviation]:Object.values(this.KEY_MAP).includes(abbreviation)?abbreviation:this.KEY_MAP.evo}async updateItem(itemData){var _a,_b,_c;if("spell"==itemData.type){const school=null!==(_a=itemData.data.school)&&void 0!==_a?_a:{value:"evocation"};school.value=this.reassignSchool(school.value)}else if("consumable"===itemData.type&&(null===(_b=itemData.data.spell)||void 0===_b?void 0:_b.data)){const school=null!==(_c=itemData.data.spell.data.data.school)&&void 0!==_c?_c:{value:"evocation"};school.value=this.reassignSchool(school.value)}}}exports.Migration621RemoveConfigSpellSchools=Migration621RemoveConfigSpellSchools,Migration621RemoveConfigSpellSchools.version=.621},9617:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration622RemoveOldTokenEffectIcons=void 0;const base_1=__webpack_require__(7569);class Migration622RemoveOldTokenEffectIcons extends base_1.MigrationBase{async updateActor(actorData){var _a,_b,_c,_d,_e,_f,_g,_h;actorData.token.effects=null!==(_b=null===(_a=actorData.token.effects)||void 0===_a?void 0:_a.filter((fx=>!fx.startsWith("systems/pf2e/icons/conditions/"))))&&void 0!==_b?_b:[];const effects=null!==(_f=null===(_e=null===(_d=null===(_c=actorData.flags)||void 0===_c?void 0:_c.pf2e)||void 0===_d?void 0:_d.token)||void 0===_e?void 0:_e.effects)&&void 0!==_f?_f:{};for(const img of Object.keys(effects))(null===(_h=null===(_g=actorData.token.effects)||void 0===_g?void 0:_g.map((fx=>fx.replace(/[.]/g,"-"))))||void 0===_h?void 0:_h.includes(img))&&(actorData.token.effects=actorData.token.effects.filter((fx=>fx.replace(/[.]/g,"-")!==img)))}async updateToken(tokenData){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l;tokenData.effects=tokenData.effects.filter((fx=>!fx.startsWith("systems/pf2e/icons/conditions/")));const effects=null!==(_l=null!==(_e=null===(_d=null===(_c=null===(_b=null===(_a=tokenData.actorData)||void 0===_a?void 0:_a.flags)||void 0===_b?void 0:_b.pf2e)||void 0===_c?void 0:_c.token)||void 0===_d?void 0:_d.effects)&&void 0!==_e?_e:null===(_k=null===(_j=null===(_h=null===(_g=null===(_f=game.actors.get(tokenData.actorId))||void 0===_f?void 0:_f.data)||void 0===_g?void 0:_g.flags)||void 0===_h?void 0:_h.pf2e)||void 0===_j?void 0:_j.token)||void 0===_k?void 0:_k.effects)&&void 0!==_l?_l:{};for(const img of Object.keys(effects))tokenData.effects.map((fx=>fx.replace(/[.]/g,"-"))).includes(img)&&(tokenData.effects=tokenData.effects.filter((fx=>fx.replace(/[.]/g,"-")!==img)))}}exports.Migration622RemoveOldTokenEffectIcons=Migration622RemoveOldTokenEffectIcons,Migration622RemoveOldTokenEffectIcons.version=.622},7133:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration623NumifyPotencyRunes=void 0;const base_1=__webpack_require__(7569);class Migration623NumifyPotencyRunes extends base_1.MigrationBase{async updateItem(itemData){if("weapon"!==itemData.type&&"armor"!==itemData.type)return;const potencyRune=itemData.data.potencyRune;potencyRune?potencyRune.value=Number(itemData.data.potencyRune.value)||0:itemData.data.potencyRune={value:0}}}exports.Migration623NumifyPotencyRunes=Migration623NumifyPotencyRunes,Migration623NumifyPotencyRunes.version=.623},3701:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration624RemoveTokenEffectIconFlags=void 0;const base_1=__webpack_require__(7569);class Migration624RemoveTokenEffectIconFlags extends base_1.MigrationBase{async updateActor(actorData){var _a,_b,_c;(null===(_c=null===(_b=null===(_a=actorData.flags)||void 0===_a?void 0:_a.pf2e)||void 0===_b?void 0:_b.token)||void 0===_c?void 0:_c.effects)&&(delete actorData.flags.pf2e.token.effects,"game"in globalThis&&(actorData.flags.pf2e.token["-=effects"]=null))}async updateToken(tokenData){var _a,_b,_c,_d;(null===(_d=null===(_c=null===(_b=null===(_a=tokenData.actorData)||void 0===_a?void 0:_a.flags)||void 0===_b?void 0:_b.pf2e)||void 0===_c?void 0:_c.token)||void 0===_d?void 0:_d.effects)&&(delete tokenData.actorData.flags.pf2e.token.effects,"game"in globalThis&&(tokenData.actorData.flags.pf2e.token["-=effects"]=null))}}exports.Migration624RemoveTokenEffectIconFlags=Migration624RemoveTokenEffectIconFlags,Migration624RemoveTokenEffectIconFlags.version=.624},9102:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration625EnsurePresenceOfSaves=void 0;const base_1=__webpack_require__(7569);class Migration625EnsurePresenceOfSaves extends base_1.MigrationBase{async updateActor(actorData){var _a;if("npc"!==actorData.type)return;const saves=actorData.data.saves;for(const key of["fortitude","reflex","will"])null!==(_a=saves[key])&&void 0!==_a||(saves[key]={value:0,rank:0,saveDetail:""}),"number"!=typeof saves[key].value&&(saves[key].value=Number(saves[key].value)||0),"number"!=typeof saves[key].rank&&(saves[key].rank=Number(saves[key].rank)||0),"string"!=typeof saves[key].saveDetail&&(saves[key].saveDetail="")}}exports.Migration625EnsurePresenceOfSaves=Migration625EnsurePresenceOfSaves,Migration625EnsurePresenceOfSaves.version=.625},7569:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MigrationBase=void 0;exports.MigrationBase=class{constructor(){this.version=this.constructor.version,this.requiresFlush=!1}async updateActor(_actor){}async updateItem(_item,_actor){}async updateMacro(_macroData){}async updateMessage(_macroData){}async updateTable(_tableData){}async updateToken(_tokenData){}async updateUser(_userData){}async migrate(){}}},2087:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migrations=void 0;const _412_migrate_dying_condition_1=__webpack_require__(3659),_544_migrate_stamina_1=__webpack_require__(3721),_559_migrate_npc_item_damage_rolls_1=__webpack_require__(9165),_561_migrate_hitpoint_data_1=__webpack_require__(3875),_566_migrate_npc_item_attack_effects_1=__webpack_require__(334),_567_migrate_class_dc_1=__webpack_require__(10),_571_default_rarity_1=__webpack_require__(2391),_573_migrate_actor_languages_1=__webpack_require__(1528),_574_migrate_bulk_1=__webpack_require__(4043),_576_add_coins_1=__webpack_require__(2770),_578_migrate_item_image_paths_1=__webpack_require__(2555),_579_add_container_attributes_1=__webpack_require__(4791),_580_add_item_rarity_and_level_1=__webpack_require__(1277),_580_migrate_other_speeds_1=__webpack_require__(1978),_582_add_potency_rune_1=__webpack_require__(8093),_583_add_hp_threshold_hardness_1=__webpack_require__(1274),_583_migrate_actor_bonus_bulk_1=__webpack_require__(4480),_584_add_ethnicity_nationality_1=__webpack_require__(7533),_585_migrate_compendium_settings_1=__webpack_require__(5890),_586_add_splash_damage_1=__webpack_require__(5298),_588_migrate_npc_action_category_1=__webpack_require__(2930),_589_set_item_as_identified_1=__webpack_require__(31),_591_set_original_item_name_1=__webpack_require__(399),_592_copy_identification_data_1=__webpack_require__(3676),_593_make_ancestry_item_1=__webpack_require__(3094),_594_make_background_item_1=__webpack_require__(3217),_595_item_sizes_1=__webpack_require__(2433),_596_set_slugs_and_sourceIds_1=__webpack_require__(4411),_597_make_trait_traits_string_arrays_1=__webpack_require__(7148),_598_make_class_item_1=__webpack_require__(8707),_599_add_tradition_traits_to_generated_scrolls_wands_1=__webpack_require__(4527),_600_reach_1=__webpack_require__(6796),_601_migrate_effect_compendia_1=__webpack_require__(6193),_602_update_diehard_feat_1=__webpack_require__(2075),_603_reset_quick_roll_default_1=__webpack_require__(6572),_604_fix_class_items_1=__webpack_require__(1740),_605_catch_up_to_template_json_1=__webpack_require__(297),_606_signature_spells_1=__webpack_require__(3663),_607_melee_item_damage_rolls_1=__webpack_require__(6836),_608_delete_persisted_kits_1=__webpack_require__(3482),_609_loot_actor_traits_1=__webpack_require__(6685),_610_set_heritage_feat_type_1=__webpack_require__(1442),_611_update_toughness_mountains_stoutness_1=__webpack_require__(389),_612_normalize_rarities_1=__webpack_require__(6791),_613_remove_ammo_charges_1=__webpack_require__(3181),_614_numify_melee_bonuses_1=__webpack_require__(1688),_615_remove_instinct_trait_1=__webpack_require__(2929),_616_migrate_feat_prerequisites_1=__webpack_require__(5123),_617_fix_user_flags_1=__webpack_require__(6097),_618_migrate_item_img_paths_1=__webpack_require__(8590),_619_remove_wand_and_scroll_tradition_1=__webpack_require__(8807),_620_rename_to_webp_1=__webpack_require__(9354),_621_remove_config_spellSchools_1=__webpack_require__(794),_622_remove_old_token_effect_icons_1=__webpack_require__(9617),_623_numify_potency_runes_1=__webpack_require__(7133),_624_removed_token_effect_icon_flags_1=__webpack_require__(3701),_625_ensure_presence_of_saves_1=__webpack_require__(9102);class Migrations{static get latestVersion(){return Math.max(...this.list.map((Migration=>Migration.version)))}static constructAll(){return this.list.map((Migration=>new Migration))}static constructForWorld(version){return this.list.filter((Migration=>Migration.version>version)).map((Migration=>new Migration))}}exports.Migrations=Migrations,Migrations.list=[_412_migrate_dying_condition_1.Migration412MigrateDyingCondition,_544_migrate_stamina_1.Migration544MigrateStamina,_559_migrate_npc_item_damage_rolls_1.Migration559MigrateNpcItemDamageRolls,_561_migrate_hitpoint_data_1.Migration561MigrateHitpointData,_566_migrate_npc_item_attack_effects_1.Migration566MigrateNpcItemAttackEffects,_567_migrate_class_dc_1.Migration567MigrateClassDC,_571_default_rarity_1.Migration571AddDefaultRarity,_573_migrate_actor_languages_1.Migration573ActorLanguages,_574_migrate_bulk_1.Migration574MigrateBulk,_576_add_coins_1.Migration576AddCoins,_578_migrate_item_image_paths_1.Migration578MigrateItemImagePaths,_579_add_container_attributes_1.Migration579AddContainerAttributes,_580_add_item_rarity_and_level_1.Migration580AddItemRarityAndLevel,_580_migrate_other_speeds_1.Migration580MigrateOtherSpeeds,_582_add_potency_rune_1.Migration582AddPotencyRune,_583_add_hp_threshold_hardness_1.Migration583AddHpThresholdHardness,_583_migrate_actor_bonus_bulk_1.Migration583MigrateActorBonusBulk,_584_add_ethnicity_nationality_1.Migration584AddEthnicityNationality,_585_migrate_compendium_settings_1.Migration585MigrateCompendiumSettings,_586_add_splash_damage_1.Migration586AddSplashDamage,_588_migrate_npc_action_category_1.Migration588NpcActionCategory,_589_set_item_as_identified_1.Migration589SetItemAsIdentified,_591_set_original_item_name_1.Migration591SetOriginalItemName,_592_copy_identification_data_1.Migration592CopyIdentificationData,_593_make_ancestry_item_1.Migration593AddAncestryItem,_594_make_background_item_1.Migration594AddBackgroundItem,_595_item_sizes_1.Migration595AddItemSize,_596_set_slugs_and_sourceIds_1.Migration596SetSlugSourceIds,_597_make_trait_traits_string_arrays_1.Migration597MakeTraitTraitsArrays,_598_make_class_item_1.Migration598AddClassItem,_599_add_tradition_traits_to_generated_scrolls_wands_1.Migration599AddTraditionTraits,_600_reach_1.Migration600Reach,_601_migrate_effect_compendia_1.Migration601SplitEffectCompendia,_602_update_diehard_feat_1.Migration602UpdateDiehardFeat,_603_reset_quick_roll_default_1.Migration603ResetQuickRollDefault,_604_fix_class_items_1.Migration604FixClassItem,_605_catch_up_to_template_json_1.Migration605CatchUpToTemplateJSON,_606_signature_spells_1.Migration606SignatureSpells,_607_melee_item_damage_rolls_1.Migration607MeleeItemDamageRolls,_608_delete_persisted_kits_1.Migration608DeletePersistedKits,_609_loot_actor_traits_1.Migration609LootActorTraits,_610_set_heritage_feat_type_1.Migration610SetHeritageFeatType,_611_update_toughness_mountains_stoutness_1.Migration611UpdateToughnessMountainsStoutness,_612_normalize_rarities_1.Migration612NormalizeRarities,_613_remove_ammo_charges_1.Migration613RemoveAmmoCharges,_614_numify_melee_bonuses_1.Migration614NumifyMeleeBonuses,_615_remove_instinct_trait_1.Migration615RemoveInstinctTrait,_616_migrate_feat_prerequisites_1.Migration616MigrateFeatPrerequisites,_617_fix_user_flags_1.Migration617FixUserFlags,_618_migrate_item_img_paths_1.Migration618MigrateItemImagePaths,_619_remove_wand_and_scroll_tradition_1.Migration619TraditionLowercaseAndRemoveWandScroll,_620_rename_to_webp_1.Migration620RenameToWebp,_621_remove_config_spellSchools_1.Migration621RemoveConfigSpellSchools,_622_remove_old_token_effect_icons_1.Migration622RemoveOldTokenEffectIcons,_623_numify_potency_runes_1.Migration623NumifyPotencyRunes,_624_removed_token_effect_icon_flags_1.Migration624RemoveTokenEffectIconFlags,_625_ensure_presence_of_saves_1.Migration625EnsurePresenceOfSaves]},6243:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DamageDicePF2e=exports.DiceModifierPF2e=exports.ModifierPredicate=exports.CheckModifier=exports.StatisticModifier=exports.ProficiencyModifier=exports.LEGENDARY=exports.MASTER=exports.EXPERT=exports.TRAINED=exports.UNTRAINED=exports.AbilityModifier=exports.CHARISMA=exports.WISDOM=exports.INTELLIGENCE=exports.CONSTITUTION=exports.DEXTERITY=exports.STRENGTH=exports.ModifierPF2e=exports.MODIFIER_TYPE=exports.ensureProficiencyOption=exports.PROFICIENCY_RANK_OPTION=void 0;const damage_1=__webpack_require__(3586);exports.PROFICIENCY_RANK_OPTION=Object.freeze(["proficiency:untrained","proficiency:trained","proficiency:expert","proficiency:master","proficiency:legendary"]),exports.ensureProficiencyOption=function(options,proficiencyRank){proficiencyRank>=0&&!options.some((option=>option.toLowerCase().startsWith("proficiency:")))&&options.push(exports.PROFICIENCY_RANK_OPTION[proficiencyRank])},exports.MODIFIER_TYPE=Object.freeze({ABILITY:"ability",PROFICIENCY:"proficiency",CIRCUMSTANCE:"circumstance",ITEM:"item",POTENCY:"potency",STATUS:"status",UNTYPED:"untyped"});class ModifierPF2e{constructor(name,modifier,type,enabled=!0,source,notes){this.predicate=new ModifierPredicate,this.automation={key:null,enabled:!1};this.name=name,this.modifier=modifier,this.type=(type=>Object.values(exports.MODIFIER_TYPE).some((modifierType=>type===modifierType)))(type)?type:"untyped",this.enabled=enabled,this.ignored=!1,this.custom=!1,this.source=source,this.notes=notes}}exports.ModifierPF2e=ModifierPF2e,exports.STRENGTH=Object.freeze({withScore:score=>new ModifierPF2e("PF2E.AbilityStr",Math.floor((score-10)/2),exports.MODIFIER_TYPE.ABILITY)}),exports.DEXTERITY=Object.freeze({withScore:score=>new ModifierPF2e("PF2E.AbilityDex",Math.floor((score-10)/2),exports.MODIFIER_TYPE.ABILITY)}),exports.CONSTITUTION=Object.freeze({withScore:score=>new ModifierPF2e("PF2E.AbilityCon",Math.floor((score-10)/2),exports.MODIFIER_TYPE.ABILITY)}),exports.INTELLIGENCE=Object.freeze({withScore:score=>new ModifierPF2e("PF2E.AbilityInt",Math.floor((score-10)/2),exports.MODIFIER_TYPE.ABILITY)}),exports.WISDOM=Object.freeze({withScore:score=>new ModifierPF2e("PF2E.AbilityWis",Math.floor((score-10)/2),exports.MODIFIER_TYPE.ABILITY)}),exports.CHARISMA=Object.freeze({withScore:score=>new ModifierPF2e("PF2E.AbilityCha",Math.floor((score-10)/2),exports.MODIFIER_TYPE.ABILITY)}),exports.AbilityModifier=Object.freeze({fromAbilityScore:(ability,score)=>{switch(ability){case"str":return exports.STRENGTH.withScore(score);case"dex":return exports.DEXTERITY.withScore(score);case"con":return exports.CONSTITUTION.withScore(score);case"int":return exports.INTELLIGENCE.withScore(score);case"wis":return exports.WISDOM.withScore(score);case"cha":return exports.CHARISMA.withScore(score);default:return console.error(`invalid ability abbreviation: ${ability}`),new ModifierPF2e("PF2E.AbilityUnknown",0,exports.MODIFIER_TYPE.ABILITY)}}}),exports.UNTRAINED=Object.freeze({atLevel:_level=>{var _a;const modifier=null!==(_a=game.settings.get("pf2e","proficiencyUntrainedModifier"))&&void 0!==_a?_a:0;return new ModifierPF2e("PF2E.ProficiencyLevel0",modifier,exports.MODIFIER_TYPE.PROFICIENCY)}}),exports.TRAINED=Object.freeze({atLevel:level=>{var _a,_b;const rule=null!==(_a=game.settings.get("pf2e","proficiencyVariant"))&&void 0!==_a?_a:"ProficiencyWithLevel";let modifier=null!==(_b=game.settings.get("pf2e","proficiencyTrainedModifier"))&&void 0!==_b?_b:2;return"ProficiencyWithLevel"===rule&&(modifier+=level),new ModifierPF2e("PF2E.ProficiencyLevel1",modifier,exports.MODIFIER_TYPE.PROFICIENCY)}}),exports.EXPERT=Object.freeze({atLevel:level=>{var _a,_b;const rule=null!==(_a=game.settings.get("pf2e","proficiencyVariant"))&&void 0!==_a?_a:"ProficiencyWithLevel";let modifier=null!==(_b=game.settings.get("pf2e","proficiencyExpertModifier"))&&void 0!==_b?_b:4;return"ProficiencyWithLevel"===rule&&(modifier+=level),new ModifierPF2e("PF2E.ProficiencyLevel2",modifier,exports.MODIFIER_TYPE.PROFICIENCY)}}),exports.MASTER=Object.freeze({atLevel:level=>{var _a,_b;const rule=null!==(_a=game.settings.get("pf2e","proficiencyVariant"))&&void 0!==_a?_a:"ProficiencyWithLevel";let modifier=null!==(_b=game.settings.get("pf2e","proficiencyMasterModifier"))&&void 0!==_b?_b:6;return"ProficiencyWithLevel"===rule&&(modifier+=level),new ModifierPF2e("PF2E.ProficiencyLevel3",modifier,exports.MODIFIER_TYPE.PROFICIENCY)}}),exports.LEGENDARY=Object.freeze({atLevel:level=>{var _a,_b;const rule=null!==(_a=game.settings.get("pf2e","proficiencyVariant"))&&void 0!==_a?_a:"ProficiencyWithLevel";let modifier=null!==(_b=game.settings.get("pf2e","proficiencyLegendaryModifier"))&&void 0!==_b?_b:8;return"ProficiencyWithLevel"===rule&&(modifier+=level),new ModifierPF2e("PF2E.ProficiencyLevel4",modifier,exports.MODIFIER_TYPE.PROFICIENCY)}}),exports.ProficiencyModifier=Object.freeze({fromLevelAndRank:(level,rank)=>{switch(rank||0){case 0:return exports.UNTRAINED.atLevel(level);case 1:return exports.TRAINED.atLevel(level);case 2:return exports.EXPERT.atLevel(level);case 3:return exports.MASTER.atLevel(level);case 4:return exports.LEGENDARY.atLevel(level);default:throw new RangeError(`invalid proficiency rank: ${rank}`)}}});const HIGHER_BONUS=(a,b)=>a.modifier>=b.modifier,LOWER_PENALTY=(a,b)=>a.modifier<=b.modifier;function applyStacking(best,modifier,isBetter){const existing=best[modifier.type];return void 0===existing?(modifier.enabled=!0,best[modifier.type]=modifier,modifier.modifier):isBetter(modifier,existing)?(existing.enabled=!1,modifier.enabled=!0,best[modifier.type]=modifier,modifier.modifier-existing.modifier):(modifier.enabled=!1,0)}class StatisticModifier{constructor(name,modifiers){this.name=name,this._modifiers=null!=modifiers?modifiers:[];{const seen=[];this._modifiers.filter((m=>{const found=void 0!==seen.find((o=>o.name===m.name));return found||seen.push(m),found})),this._modifiers=seen}this.applyStackingRules()}get modifiers(){return Object.freeze([...this._modifiers])}push(modifier){void 0===this._modifiers.find((o=>o.name===modifier.name))&&(this._modifiers.push(modifier),this.applyStackingRules())}delete(modifierName){this._modifiers=this._modifiers.filter((m=>m.name!==modifierName)),this.applyStackingRules()}applyStackingRules(){this.totalModifier=function(modifiers){let total=0;const highestBonus={},lowestPenalty={};for(const modifier of modifiers)modifier.ignored?modifier.enabled=!1:modifier.type!==exports.MODIFIER_TYPE.UNTYPED?modifier.modifier<0?total+=applyStacking(lowestPenalty,modifier,LOWER_PENALTY):total+=applyStacking(highestBonus,modifier,HIGHER_BONUS):(modifier.enabled=!0,total+=modifier.modifier);return total}(this._modifiers)}}exports.StatisticModifier=StatisticModifier;exports.CheckModifier=class extends StatisticModifier{constructor(name,statistic,modifiers=[]){super(name,duplicate(statistic.modifiers).concat(modifiers))}};class ModifierPredicate{constructor(param={all:[],any:[],not:[]}){var _a,_b,_c;this.all=null!==(_a=param.all)&&void 0!==_a?_a:[],this.any=null!==(_b=param.any)&&void 0!==_b?_b:[],this.not=null!==(_c=param.not)&&void 0!==_c?_c:[]}static test(predicate={},options=[]){const{all,any,not}=predicate;let active=!0;return all&&all.length>0&&(active=active&&all.every((i=>options.includes(i)))),any&&any.length>0&&(active=active&&any.some((i=>options.includes(i)))),not&&not.length>0&&(active=active&&!not.some((i=>options.includes(i)))),active}test(options=[]){return ModifierPredicate.test(this,options)}}exports.ModifierPredicate=ModifierPredicate;class DiceModifierPF2e{constructor(param){var _a,_b,_c,_d,_e;if(!param.name)throw new Error("name is mandatory");this.name=param.name,this.label=param.label,this.diceNumber=null!==(_a=param.diceNumber)&&void 0!==_a?_a:0,this.dieSize=param.dieSize,this.critical=null!==(_b=param.critical)&&void 0!==_b&&_b,this.damageType=param.damageType,this.category=param.category,this.traits=null!==(_c=param.traits)&&void 0!==_c?_c:[],this.override=param.override,this.custom=null!==(_d=param.custom)&&void 0!==_d&&_d,this.damageType&&(null!==(_e=this.category)&&void 0!==_e||(this.category=damage_1.DamageCategory.fromDamageType(this.damageType))),this.predicate=new ModifierPredicate(null==param?void 0:param.predicate),this.ignored=ModifierPredicate.test(this.predicate),this.enabled=this.ignored}}exports.DiceModifierPF2e=DiceModifierPF2e;exports.DamageDicePF2e=class extends DiceModifierPF2e{constructor(params){if(super(params),!params.selector)throw new Error("selector is mandatory");this.selector=params.selector}}},1239:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2RollNote=void 0;exports.PF2RollNote=class{constructor(selector,text,predicate,outcome=[]){this.selector=selector,this.text=text,this.predicate=predicate,this.outcome=outcome}}},1046:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Progress=void 0;exports.Progress=class{constructor({steps=1}={}){this._steps=steps,this._counter=-1,this._label=""}advance(label){this._counter+=1,this._label=label,this._updateUI()}close(label=null){label&&(this._label=label),this._counter=this._steps,this._updateUI()}_updateUI(){const loader=document.getElementById("loading"),pct=Math.clamped(100*this._counter/this._steps,0,100);loader.querySelector("#context").textContent=this._label,loader.querySelector("#loading-bar").style.width=`${pct}%`,loader.querySelector("#progress").textContent=`${this._counter} / ${this._steps}`,loader.style.display="block",this._counter!==this._steps||loader.hidden||$(loader).fadeOut(2e3)}}},3055:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.identifyCreature=void 0;const utils_1=__webpack_require__(4930),dc_1=__webpack_require__(2292),identifySkills=new Map;function toKnowledgeDC(dc,rarity,loreAdjustment="normal"){const rarityAdjustment=dc_1.rarityToDCAdjustment(rarity),start=dc_1.combineDCAdjustments(rarityAdjustment,loreAdjustment),progression=dc_1.createDifficultyScale(dc,start);return{dc:dc_1.adjustDC(dc,start),progression,start}}identifySkills.set("aberration",["occ"]),identifySkills.set("animal",["nat"]),identifySkills.set("astral",["occ"]),identifySkills.set("beast",["arc","nat"]),identifySkills.set("celestial",["rel"]),identifySkills.set("construct",["arc","cra"]),identifySkills.set("dragon",["arc"]),identifySkills.set("elemental",["arc","nat"]),identifySkills.set("ethereal",["occ"]),identifySkills.set("fey",["nat"]),identifySkills.set("fiend",["rel"]),identifySkills.set("fungus",["nat"]),identifySkills.set("humanoid",["soc"]),identifySkills.set("monitor",["rel"]),identifySkills.set("ooze",["occ"]),identifySkills.set("plant",["nat"]),identifySkills.set("spirit",["occ"]),identifySkills.set("undead",["rel"]),exports.identifyCreature=function(creature,{proficiencyWithoutLevel=!1}={}){var _a,_b,_c;const rarity=null!==(_a=creature.data.traits.rarity.value)&&void 0!==_a?_a:"common",level=null!==(_c=utils_1.toNumber(null===(_b=creature.data.details.level)||void 0===_b?void 0:_b.value))&&void 0!==_c?_c:0,dc=dc_1.calculateDC(level,{proficiencyWithoutLevel}),traits=creature.data.traits.traits.value,skills=new Set(traits.flatMap((trait=>{var _a;return null!==(_a=identifySkills.get(trait))&&void 0!==_a?_a:[]})));return{specificLoreDC:toKnowledgeDC(dc,rarity,"very easy"),unspecificLoreDC:toKnowledgeDC(dc,rarity,"easy"),skill:toKnowledgeDC(dc,rarity,"normal"),skills}}},2650:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AutomaticBonusProgression=void 0;const modifiers_1=__webpack_require__(6243);exports.AutomaticBonusProgression=class{static concatModifiers(level,synthetics){if("noABP"===game.settings.get("pf2e","automaticBonusVariant"))return;const values=this.abpValues(level),ac=values.ac,perception=values.perception,save=values.save;if(save>0&&(synthetics.statisticsModifiers["saving-throw"]=(synthetics.statisticsModifiers["saving-throw"]||[]).concat(new modifiers_1.ModifierPF2e(game.i18n.localize("PF2E.AutomaticBonusProgression.savePotency"),save,modifiers_1.MODIFIER_TYPE.POTENCY))),ac>0&&(synthetics.statisticsModifiers.ac=(synthetics.statisticsModifiers.ac||[]).concat(new modifiers_1.ModifierPF2e(game.i18n.localize("PF2E.AutomaticBonusProgression.defensePotency"),ac,modifiers_1.MODIFIER_TYPE.POTENCY))),perception>0&&(synthetics.statisticsModifiers.perception=(synthetics.statisticsModifiers.perception||[]).concat(new modifiers_1.ModifierPF2e(game.i18n.localize("PF2E.AutomaticBonusProgression.perceptionPotency"),perception,modifiers_1.MODIFIER_TYPE.POTENCY))),"ABPRulesAsWritten"===game.settings.get("pf2e","automaticBonusVariant")){const values=this.abpValues(level),attack=values.attack,damage=values.damage;attack>0&&(synthetics.statisticsModifiers["mundane-attack"]=(synthetics.statisticsModifiers["mundane-attack"]||[]).concat(new modifiers_1.ModifierPF2e(game.i18n.localize("PF2E.AutomaticBonusProgression.attackPotency"),attack,modifiers_1.MODIFIER_TYPE.POTENCY))),damage>0&&(synthetics.damageDice.damage=(synthetics.damageDice.damage||[]).concat(new modifiers_1.DamageDicePF2e({name:game.i18n.localize("PF2E.AutomaticBonusProgression.devastatingAttacks"),selector:"damage",diceNumber:damage})))}if("ABPFundamentalPotency"===game.settings.get("pf2e","automaticBonusVariant")){const values=this.abpValues(level),attack=values.attack,damage=values.damage;if(damage>0){const s={label:game.i18n.localize("PF2E.AutomaticBonusProgression.devastatingAttacks"),bonus:damage};synthetics.striking["mundane-damage"]=(synthetics.striking["mundane-damage"]||[]).concat(s)}if(attack>0){const potency={label:game.i18n.localize("PF2E.AutomaticBonusProgression.attackPotency"),bonus:attack};synthetics.weaponPotency["mundane-attack"]=(synthetics.weaponPotency["mundane-attack"]||[]).concat(potency)}}}static abpValues(level){let attack,damage,ac,perception,save;return attack=level>=2&&level<10?1:level>=10&&level<16?2:level>=16?3:0,damage=level>=4&&level<12?1:level>=12&&level<19?2:level>=19?3:0,ac=level>=5&&level<11?1:level>=11&&level<18?2:level>=18?3:0,perception=level>=7&&level<13?1:level>=13&&level<19?2:level>=19?3:0,save=level>=8&&level<14?1:level>=14&&level<20?2:level>=20?3:0,{attack,damage,ac,perception,save}}}},2683:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2ActorTraits=void 0;const rule_element_1=__webpack_require__(9950);class PF2ActorTraits extends rule_element_1.PF2RuleElement{onBeforePrepareData(actorData){var _a;const add=null!==(_a=this.ruleData.add)&&void 0!==_a?_a:[];add.length>0?actorData.data.traits.traits.value.push(...add):console.warn("PF2E | Actor traits rule element requires at least a non-empty add field")}}exports.PF2ActorTraits=PF2ActorTraits},7833:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2BaseSpeedRuleElement=void 0;const rule_element_1=__webpack_require__(9950);class PF2BaseSpeedRuleElement extends rule_element_1.PF2RuleElement{onBeforePrepareData(actorData){const value=super.resolveValue(this.ruleData.value,this.ruleData,this.item,actorData),label=super.getDefaultLabel(this.ruleData,this.item);if(this.ruleData.selector&&label&&value){const selector=this.ruleData.selector.endsWith("-speed")?this.ruleData.selector.substring(-6):this.ruleData.selector,existing=actorData.data.attributes.speed.otherSpeeds.find((speed=>speed.type===selector));existing?existing.value<value&&(existing.value=value):actorData.data.attributes.speed.otherSpeeds.push({label:selector.charAt(0).toUpperCase()+selector.slice(1),type:selector,value})}else console.warn("PF2E | Base speed requires at least a selector field, a label field or item name, and a non-zero value field")}}exports.PF2BaseSpeedRuleElement=PF2BaseSpeedRuleElement},9660:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2DamageDiceRuleElement=void 0;const rule_element_1=__webpack_require__(9950),modifiers_1=__webpack_require__(6243);class PF2DamageDiceRuleElement extends rule_element_1.PF2RuleElement{onBeforePrepareData(actorData,{damageDice}){var _a;const value=duplicate(this.ruleData);if(delete value.key,this.ruleData.value){const bracketed=super.resolveValue(this.ruleData.value,this.ruleData,this.item,actorData,{});mergeObject(value,bracketed,{inplace:!0,overwrite:!0}),delete value.value}const selector=super.resolveInjectedProperties(value.selector,this.ruleData,this.item,actorData),label=super.getDefaultLabel(value,this.item);if(value.name=null!==(_a=this.ruleData.name)&&void 0!==_a?_a:label,value.label=label,selector&&value.name&&value){const dice=new modifiers_1.DamageDicePF2e(value);damageDice[selector]=(damageDice[selector]||[]).concat(dice)}else console.warn("PF2E | Damage dice requires at least a selector field, and a label field or item name")}}exports.PF2DamageDiceRuleElement=PF2DamageDiceRuleElement},1788:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2DexterityModifierCapRuleElement=void 0;const rule_element_1=__webpack_require__(9950);class PF2DexterityModifierCapRuleElement extends rule_element_1.PF2RuleElement{onBeforePrepareData(actorData){var _a;const label=super.getDefaultLabel(this.ruleData,this.item),value=super.resolveValue(this.ruleData.value,this.ruleData,this.item,actorData);label&&void 0!==value?actorData.data.attributes.dexCap=(null!==(_a=actorData.data.attributes.dexCap)&&void 0!==_a?_a:[]).concat({value,source:label}):console.warn("PF2E | Dexterity modifier cap requires at least a label field or item name, and a value")}}exports.PF2DexterityModifierCapRuleElement=PF2DexterityModifierCapRuleElement},1694:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2EffectTargetRuleElement=void 0;const rule_element_1=__webpack_require__(9950);class PF2EffectTargetRuleElement extends rule_element_1.PF2RuleElement{}exports.PF2EffectTargetRuleElement=PF2EffectTargetRuleElement},1580:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2FixedProficiencyRuleElement=void 0;const base_1=__webpack_require__(9978),modifiers_1=__webpack_require__(6243),rule_element_1=__webpack_require__(9950),KNOWN_TARGETS={ac:{ability:"dex",shortform:"ac"}};class PF2FixedProficiencyRuleElement extends rule_element_1.PF2RuleElement{onBeforePrepareData(actorData,{statisticsModifiers}){var _a,_b,_c,_d,_e;const selector=super.resolveInjectedProperties(this.ruleData.selector,this.ruleData,this.item,actorData);let value=this.resolveValue(this.ruleData.value,this.ruleData,this.item,actorData);"ac"===selector&&(value-=10);const label=this.getDefaultLabel(this.ruleData,this.item),ability=null!==(_c=null!==(_a=this.ruleData.ability)&&void 0!==_a?_a:null===(_b=KNOWN_TARGETS[selector])||void 0===_b?void 0:_b.ability)&&void 0!==_c?_c:null===(_d=base_1.SKILL_EXPANDED[selector])||void 0===_d?void 0:_d.ability;if(ability)if(value){const modifier=new modifiers_1.ModifierPF2e(null!==(_e=this.ruleData.name)&&void 0!==_e?_e:label,value-actorData.data.abilities[ability].mod,modifiers_1.MODIFIER_TYPE.PROFICIENCY);modifier.label=label,statisticsModifiers[selector]=(statisticsModifiers[selector]||[]).concat(modifier)}else console.warn("PF2E | Fixed modifier requires at least a non-zero value or formula field.");else console.warn("PF2E | Fixed modifier requires an ability field, or a known selector.")}onAfterPrepareData(actorData){var _a,_b,_c;const selector=super.resolveInjectedProperties(this.ruleData.selector,this.ruleData,this.item,actorData),{data}=actorData,skill=null!==(_b=null===(_a=base_1.SKILL_EXPANDED[selector])||void 0===_a?void 0:_a.shortform)&&void 0!==_b?_b:selector,target=null!==(_c=data.skills[skill])&&void 0!==_c?_c:data.attributes[skill],label=this.getDefaultLabel(this.ruleData,this.item),force=this.ruleData.force;if(target){for(const modifier of target.modifiers)[modifiers_1.MODIFIER_TYPE.ITEM,modifiers_1.MODIFIER_TYPE.UNTYPED].includes(modifier.type)&&modifier.modifier>0&&(modifier.ignored=!0),force&&modifier.type===modifiers_1.MODIFIER_TYPE.PROFICIENCY&&modifier.name!==label&&(modifier.ignored=!0);target.applyStackingRules(),target.value=target.totalModifier+("ac"===skill?10:0)}}}exports.PF2FixedProficiencyRuleElement=PF2FixedProficiencyRuleElement},5951:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2FlatModifierRuleElement=void 0;const rule_element_1=__webpack_require__(9950),modifiers_1=__webpack_require__(6243),base_1=__webpack_require__(9978);class PF2FlatModifierRuleElement extends rule_element_1.PF2RuleElement{onBeforePrepareData(actorData,{statisticsModifiers}){var _a,_b,_c;const selector=super.resolveInjectedProperties(this.ruleData.selector,this.ruleData,this.item,actorData),label=super.getDefaultLabel(this.ruleData,this.item),value=super.resolveValue(this.ruleData.value,this.ruleData,this.item,actorData);if(selector&&label&&value){const modifier=new modifiers_1.ModifierPF2e(null!==(_a=this.ruleData.name)&&void 0!==_a?_a:label,value,null!==(_b=this.ruleData.type)&&void 0!==_b?_b:modifiers_1.MODIFIER_TYPE.UNTYPED);modifier.label=label,this.ruleData.damageType&&(modifier.damageType=this.ruleData.damageType),this.ruleData.damageCategory&&(modifier.damageCategory=this.ruleData.damageCategory),this.ruleData.predicate&&(modifier.predicate=new modifiers_1.ModifierPredicate(this.ruleData.predicate),modifier.ignored=!modifiers_1.ModifierPredicate.test(modifier.predicate,base_1.ActorPF2e.getRollOptions(actorData.flags,null!==(_c=this.ruleData["roll-options"])&&void 0!==_c?_c:[]))),statisticsModifiers[selector]=(statisticsModifiers[selector]||[]).concat(modifier)}else 0===value||CONFIG.debug.ruleElement&&console.warn("PF2E | Flat modifier requires at least a selector field, a label field or item name, and a value field",this.ruleData,this.item,actorData)}}exports.PF2FlatModifierRuleElement=PF2FlatModifierRuleElement},9290:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2MultipleAttackPenaltyRuleElement=void 0;const rule_element_1=__webpack_require__(9950),modifiers_1=__webpack_require__(6243);class PF2MultipleAttackPenaltyRuleElement extends rule_element_1.PF2RuleElement{onBeforePrepareData(actorData,{multipleAttackPenalties}){const selector=super.resolveInjectedProperties(this.ruleData.selector,this.ruleData,this.item,actorData),label=super.resolveInjectedProperties(super.getDefaultLabel(this.ruleData,this.item),this.ruleData,this.item,actorData),value=super.resolveValue(this.ruleData.value,this.ruleData,this.item,actorData);if(selector&&label&&value){const map={label,penalty:value};this.ruleData.predicate&&(map.predicate=new modifiers_1.ModifierPredicate(this.ruleData.predicate)),multipleAttackPenalties[selector]=(multipleAttackPenalties[selector]||[]).concat(map)}else console.warn("PF2E | Multiple attack penalty requires at least a selector field and a non-empty value field")}}exports.PF2MultipleAttackPenaltyRuleElement=PF2MultipleAttackPenaltyRuleElement},2583:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2RollNoteRuleElement=void 0;const rule_element_1=__webpack_require__(9950),notes_1=__webpack_require__(1239),modifiers_1=__webpack_require__(6243),check_degree_of_success_1=__webpack_require__(9990);class PF2RollNoteRuleElement extends rule_element_1.PF2RuleElement{onBeforePrepareData(actorData,{rollNotes}){const selector=super.resolveInjectedProperties(this.ruleData.selector,this.ruleData,this.item,actorData),text=super.resolveInjectedProperties(this.ruleData.text,this.ruleData,this.item,actorData);if(selector&&text){const note=new notes_1.PF2RollNote(selector,text);this.ruleData.predicate&&(note.predicate=new modifiers_1.ModifierPredicate(this.ruleData.predicate)),Array.isArray(this.ruleData.outcome)&&(note.outcome=this.ruleData.outcome.filter((outcome=>check_degree_of_success_1.DegreeOfSuccessText.includes(outcome)))),rollNotes[selector]=(rollNotes[selector]||[]).concat(note)}else console.warn("PF2E | Roll note requires at least a selector field and a non-empty text field")}}exports.PF2RollNoteRuleElement=PF2RollNoteRuleElement},503:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2SenseRuleElement=void 0;const rule_element_1=__webpack_require__(9950);class PF2SenseRuleElement extends rule_element_1.PF2RuleElement{onBeforePrepareData(actorData){const label=super.getDefaultLabel(this.ruleData,this.item),range=super.resolveValue(this.ruleData.range,this.ruleData,this.item,actorData);if(this.ruleData.selector&&label){if(Array.from(actorData.data.traits.senses).some((s=>s.type===this.ruleData.selector))){const sense={label,type:this.ruleData.selector,value:""};range&&(sense.value=range),this.ruleData.acuity&&(sense.acuity=this.ruleData.acuity),actorData.data.traits.senses.push(sense)}}else console.warn("PF2E | Sense requires at least a selector field and a label field or item name")}}exports.PF2SenseRuleElement=PF2SenseRuleElement},2280:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2SetPropertyRuleElement=void 0;const rule_element_1=__webpack_require__(9950);class PF2SetPropertyRuleElement extends rule_element_1.PF2RuleElement{onCreate(actorData,_item,actorUpdates){var _a,_b;this.ruleData.property&&void 0!==(null===(_a=this.ruleData.on)||void 0===_a?void 0:_a.added)&&null!==(null===(_b=this.ruleData.on)||void 0===_b?void 0:_b.added)&&(actorUpdates[this.ruleData.property]=this.ruleData.on.added,this.ruleData.retain&&(actorUpdates[`flags.${game.system.id}.set-property.${this.getSafePropertyName()}`]=getProperty(actorData,this.ruleData.property)))}onDelete(actorData,_item,actorUpdates){var _a,_b;this.ruleData.property&&void 0!==(null===(_a=this.ruleData.on)||void 0===_a?void 0:_a.removed)&&null!==(null===(_b=this.ruleData.on)||void 0===_b?void 0:_b.removed)?actorUpdates[this.ruleData.property]=this.ruleData.on.removed:this.ruleData.property&&this.ruleData.retain&&(actorUpdates[this.ruleData.property]=getProperty(actorData,`flags.${game.system.id}.set-property.${this.getSafePropertyName()}`),actorUpdates[`flags.${game.system.id}.set-property.-=${this.getSafePropertyName()}`]=null)}getSafePropertyName(){return this.ruleData.property.replace(/\./g,"-").slugify()}}exports.PF2SetPropertyRuleElement=PF2SetPropertyRuleElement},6259:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2StrikeRuleElement=void 0;const rule_element_1=__webpack_require__(9950);class PF2StrikeRuleElement extends rule_element_1.PF2RuleElement{onBeforePrepareData(actorData,{strikes}){var _a,_b,_c,_d,_e;const label=super.getDefaultLabel(this.ruleData,this.item);strikes.push({_id:this.item._id,name:label,type:"npc"===actorData.type?"melee":"weapon",img:null!==(_a=this.ruleData.img)&&void 0!==_a?_a:this.item.img,data:{description:{value:"",chat:"",unidentified:""},ability:{value:this.ruleData.ability||"str"},weaponType:{value:this.ruleData.category||"unarmed"},group:{value:this.ruleData.group||"brawling"},damage:null!==(_c=null===(_b=this.ruleData.damage)||void 0===_b?void 0:_b.base)&&void 0!==_c?_c:{dice:1,die:"d4",damageType:"bludgeoning"},damageRolls:{},attackEffects:{value:[]},range:{value:this.ruleData.range||"melee"},strikingRune:{value:""},traits:{value:null!==(_d=this.ruleData.traits)&&void 0!==_d?_d:[],rarity:{value:"common"},custom:""},options:{value:null!==(_e=this.ruleData.options)&&void 0!==_e?_e:[]},equipped:{value:!0}}})}}exports.PF2StrikeRuleElement=PF2StrikeRuleElement},6230:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2StrikingRuleElement=void 0;const rule_element_1=__webpack_require__(9950),modifiers_1=__webpack_require__(6243);class PF2StrikingRuleElement extends rule_element_1.PF2RuleElement{onBeforePrepareData(actorData,{striking}){const selector=super.resolveInjectedProperties(this.ruleData.selector,this.ruleData,this.item,actorData),label=super.getDefaultLabel(this.ruleData,this.item),value=super.resolveValue(this.ruleData.value,this.ruleData,this.item,actorData);if(selector&&label&&value){const s={label,bonus:value};this.ruleData.predicate&&(s.predicate=new modifiers_1.ModifierPredicate(this.ruleData.predicate)),striking[selector]=(striking[selector]||[]).concat(s)}else console.warn("PF2E | Striking requires at least a selector field and a non-empty value field")}}exports.PF2StrikingRuleElement=PF2StrikingRuleElement},3965:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2TempHPRuleElement=void 0;const rule_element_1=__webpack_require__(9950);class PF2TempHPRuleElement extends rule_element_1.PF2RuleElement{onCreate(actorData,item,actorUpdates){const updatedActorData=mergeObject(actorData,actorUpdates,{inplace:!1}),value=this.resolveValue(this.ruleData.value,this.ruleData,this.item,updatedActorData);value||console.warn("PF2E | Temporary HP requires a non-zero value field or a formula field"),getProperty(updatedActorData,"data.attributes.hp.temp")<value&&mergeObject(actorUpdates,{"data.attributes.hp.temp":value,"data.attributes.hp.tempsource":item._id})}onDelete(actorData,item,actorUpdates){const updatedActorData=mergeObject(actorData,actorUpdates,{inplace:!1});getProperty(updatedActorData,"data.attributes.hp.tempsource")===item._id&&(mergeObject(actorUpdates,{"data.attributes.hp.temp":0}),getProperty(actorUpdates,"data.attributes.hp")["-=tempsource"]=null)}}exports.PF2TempHPRuleElement=PF2TempHPRuleElement},3625:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2TogglePropertyRuleElement=void 0;const rule_element_1=__webpack_require__(9950);class PF2TogglePropertyRuleElement extends rule_element_1.PF2RuleElement{onBeforePrepareData(actorData){const label=super.getDefaultLabel(this.ruleData,this.item);label&&this.ruleData.property?actorData.data.toggles.actions.push({label,inputName:this.ruleData.property,checked:getProperty(actorData,this.ruleData.property)}):console.warn("PF2E | Toggle flag requires at least a label field or item name, and a property field with the name of the property")}}exports.PF2TogglePropertyRuleElement=PF2TogglePropertyRuleElement},661:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2TokenEffectIconRuleElement=void 0;const rule_element_1=__webpack_require__(9950);class PF2TokenEffectIconRuleElement extends rule_element_1.PF2RuleElement{constructor(ruleData,item){super(ruleData,item)}onAfterPrepareData(actorData,synthetics){var _a,_b,_c,_d;super.onAfterPrepareData(actorData,synthetics);const icon=null!==(_b=null!==(_a=this.ruleData.value)&&void 0!==_a?_a:this.item.img)&&void 0!==_b?_b:"systems/pf2e/icons/default-icons/mystery-man.svg";null!==(_c=(_d=actorData.data).tokenEffects)&&void 0!==_c||(_d.tokenEffects=[]),actorData.data.tokenEffects.push(new rule_element_1.TokenEffect(icon))}}exports.PF2TokenEffectIconRuleElement=PF2TokenEffectIconRuleElement},4587:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2TokenImageRuleElement=void 0;const rule_element_1=__webpack_require__(9950);class PF2TokenImageRuleElement extends rule_element_1.PF2RuleElement{onCreate(actorData,item,actorUpdates,tokens){const value=this.ruleData.value;value||console.warn("PF2E | Token Image requires a non-empty value field"),tokens.forEach((token=>{token.img=value})),mergeObject(actorUpdates,{"token.img":value,"flags.pf2e.token.imgsource":item._id}),getProperty(actorData,"flags.pf2e.token.img")||mergeObject(actorUpdates,{"flags.pf2e.token.img":getProperty(actorData,"token.img")})}onDelete(actorData,item,actorUpdates,tokens){if(getProperty(actorData,"flags.pf2e.token.imgsource")===item._id){tokens.forEach((token=>{token.img=getProperty(actorData,"flags.pf2e.token.img")})),mergeObject(actorUpdates,{"token.img":getProperty(actorData,"flags.pf2e.token.img"),"flags.pf2e.token":{}});const token=getProperty(actorUpdates,"flags.pf2e.token");token["-=img"]=null,token["-=imgsource"]=null}}}exports.PF2TokenImageRuleElement=PF2TokenImageRuleElement},5536:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2TokenSizeRuleElement=void 0;const rule_element_1=__webpack_require__(9950),SIZES={tiny:.6,small:.8,medium:1,large:2,huge:3,gargantuan:4};class PF2TokenSizeRuleElement extends rule_element_1.PF2RuleElement{onCreate(actorData,item,actorUpdates,tokens){var _a;const value=null!==(_a=SIZES[this.ruleData.value])&&void 0!==_a?_a:this.resolveValue(this.ruleData.value,this.ruleData,this.item,actorData);value||console.warn("PF2E | Token Image requires a non-empty value field"),tokens.forEach((token=>{token.height=value,token.width=value})),mergeObject(actorUpdates,{"token.height":value,"token.width":value,"flags.pf2e.token.sizesource":item._id}),getProperty(actorData,"flags.pf2e.token.size")||mergeObject(actorUpdates,{"flags.pf2e.token.size":{height:getProperty(actorData,"token.height"),width:getProperty(actorData,"token.width")}})}onDelete(actorData,item,actorUpdates,tokens){if(getProperty(actorData,"flags.pf2e.token.sizesource")===item._id){tokens.forEach((token=>{token.height=getProperty(actorData,"flags.pf2e.token.size.height"),token.width=getProperty(actorData,"flags.pf2e.token.size.width")})),mergeObject(actorUpdates,{"token.height":getProperty(actorData,"flags.pf2e.token.size.height"),"token.width":getProperty(actorData,"flags.pf2e.token.size.width"),"flags.pf2e.token":{}});const token=getProperty(actorUpdates,"flags.pf2e.token");token["-=size"]=null,token["-=sizesource"]=null}}}exports.PF2TokenSizeRuleElement=PF2TokenSizeRuleElement},3726:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2WeaponPotencyRuleElement=void 0;const rule_element_1=__webpack_require__(9950),modifiers_1=__webpack_require__(6243);class PF2WeaponPotencyRuleElement extends rule_element_1.PF2RuleElement{onBeforePrepareData(actorData,{weaponPotency}){const selector=super.resolveInjectedProperties(this.ruleData.selector,this.ruleData,this.item,actorData),label=super.getDefaultLabel(this.ruleData,this.item),value=super.resolveValue(this.ruleData.value,this.ruleData,this.item,actorData);if(selector&&label&&value){const potency={label,bonus:value};this.ruleData.predicate&&(potency.predicate=new modifiers_1.ModifierPredicate(this.ruleData.predicate)),weaponPotency[selector]=(weaponPotency[selector]||[]).concat(potency)}else console.warn("PF2E | Weapon potency requires at least a selector field and a non-empty value field")}}exports.PF2WeaponPotencyRuleElement=PF2WeaponPotencyRuleElement},4647:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2RecoveryCheckDCRuleElement=void 0;const rule_element_1=__webpack_require__(9950);class PF2RecoveryCheckDCRuleElement extends rule_element_1.PF2RuleElement{onBeforePrepareData(actorData){const slug=this.ruleData.slug||this.item.data.slug;if(slug){let recoveryModifier=getProperty(actorData.data.attributes,"dying.recoveryMod")||0;const synergizers=getProperty(actorData.data.attributes,"dying.synergizers")||[];synergizers.includes(slug)||synergizers.push(slug);const toughness=synergizers.includes("toughness"),mountainsStoutness=synergizers.includes("mountains-stoutness")||synergizers.includes("mountainsStoutness");toughness&&mountainsStoutness?recoveryModifier=-4:(toughness||mountainsStoutness)&&(recoveryModifier=-1),setProperty(actorData.data.attributes,"dying.recoveryMod",recoveryModifier),setProperty(actorData.data.attributes,"dying.synergizers",synergizers)}else console.warn("PF2E | Recovery check DC requires at least a slug field or item slug")}}exports.PF2RecoveryCheckDCRuleElement=PF2RecoveryCheckDCRuleElement},9950:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2RuleElement=exports.TokenEffect=void 0;exports.TokenEffect=class{constructor(icon,overlay=!1,tint){this.data={disabled:!1,icon:"",tint:""},this.isTemporary=!0,this.flags={},this.data.icon=icon,tint&&(this.data.tint=tint),this.flags.core={overlay}}getFlag(scope,flag){var _a;return null===(_a=this.flags[scope])||void 0===_a?void 0:_a[flag]}};exports.PF2RuleElement=class{constructor(ruleData,item){this.ruleData=ruleData,this.item=item}onCreate(_actorData,_item,_actorUpdates,_tokens){}onDelete(_actorData,_item,_actorUpdates,_tokens){}onBeforePrepareData(_actorData,_synthetics){}onAfterPrepareData(_actorData,_synthetics){}onCreateToken(_actorData,_item,_token){}getDefaultLabel(ruleData,item){var _a;return game.i18n.localize(null!==(_a=ruleData.label)&&void 0!==_a?_a:null==item?void 0:item.name)}resolveInjectedProperties(source,ruleData,itemData,actorData){const objects={actor:actorData,item:itemData,rule:ruleData};return(null!=source?source:"").replace(/{(actor|item|rule)\|(.*?)}/g,((_match,obj,prop)=>{var _a;return getProperty(null!==(_a=objects[obj])&&void 0!==_a?_a:itemData,prop)}))}resolveValue(valueData,ruleData,item,actorData,defaultValue=0){var _a,_b,_c;let value=valueData;if("object"==typeof valueData){let bracket=getProperty(actorData,"data.details.level.value");if(valueData.field){const field=String(valueData.field),separator=field.indexOf("|");switch(field.substring(0,separator)){case"actor":bracket=getProperty(actorData,field.substring(separator+1));break;case"item":bracket=getProperty(item,field.substring(separator+1));break;case"rule":bracket=getProperty(ruleData,field.substring(separator+1));break;default:bracket=getProperty(actorData,field.substring(0))}}value=null!==(_c=null===(_b=(null!==(_a=valueData.brackets)&&void 0!==_a?_a:[]).find((b=>{var _a;return(null!==(_a=b.start)&&void 0!==_a?_a:0)<=bracket&&(!b.end||b.end>=bracket)})))||void 0===_b?void 0:_b.value)&&void 0!==_c?_c:defaultValue}if("string"==typeof value){const roll=new Roll(value,Object.assign(Object.assign({},actorData.data),{item:item.data}));roll.roll(),value=roll.total}return Number.isInteger(Number(value))&&(value=Number(value)),value}}},8094:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RuleElements=exports.PF2RuleElement=void 0;const rule_element_1=__webpack_require__(9950);Object.defineProperty(exports,"PF2RuleElement",{enumerable:!0,get:function(){return rule_element_1.PF2RuleElement}});const flatmodifier_1=__webpack_require__(5951),mage_armor_1=__webpack_require__(4109),fixed_proficiency_1=__webpack_require__(1580),temphp_1=__webpack_require__(3965),dexterity_modifier_cap_1=__webpack_require__(1788),damage_dice_1=__webpack_require__(9660),toggle_property_1=__webpack_require__(3625),token_image_1=__webpack_require__(4587),token_size_1=__webpack_require__(5536),base_speed_1=__webpack_require__(7833),sense_1=__webpack_require__(503),token_effect_icon_1=__webpack_require__(661),strike_1=__webpack_require__(6259),set_property_1=__webpack_require__(2280),roll_note_1=__webpack_require__(2583),weapon_potency_1=__webpack_require__(3726),striking_1=__webpack_require__(6230),multiple_attack_penalty_1=__webpack_require__(9290),effect_target_1=__webpack_require__(1694),actor_traits_1=__webpack_require__(2683),recovery_check_dc_1=__webpack_require__(4647);class RuleElements{static fromOwnedItem(item){var _a,_b;return this.fromRuleElementData(null!==(_b=null===(_a=item.data)||void 0===_a?void 0:_a.rules)&&void 0!==_b?_b:[],item)}static fromRuleElementData(ruleData,item){var _a;const rules=[];for(const data of ruleData){const rule=null!==(_a=this.custom[data.key])&&void 0!==_a?_a:this.builtin[data.key];rule?rules.push(rule(data,item)):console.warn(`PF2E | Unknown rule element ${data.key}`)}return rules}}exports.RuleElements=RuleElements,RuleElements.builtin=Object.freeze({"PF2E.RuleElement.FlatModifier":(ruleData,item)=>new flatmodifier_1.PF2FlatModifierRuleElement(ruleData,item),"PF2E.RuleElement.MageArmor":(ruleData,item)=>new mage_armor_1.PF2MageArmorRuleElement(ruleData,item),"PF2E.RuleElement.DexterityModifierCap":(ruleData,item)=>new dexterity_modifier_cap_1.PF2DexterityModifierCapRuleElement(ruleData,item),"PF2E.RuleElement.FixedProficiency":(ruleData,item)=>new fixed_proficiency_1.PF2FixedProficiencyRuleElement(ruleData,item),"PF2E.RuleElement.TempHP":(ruleData,item)=>new temphp_1.PF2TempHPRuleElement(ruleData,item),"PF2E.RuleElement.DamageDice":(ruleData,item)=>new damage_dice_1.PF2DamageDiceRuleElement(ruleData,item),"PF2E.RuleElement.ToggleProperty":(ruleData,item)=>new toggle_property_1.PF2TogglePropertyRuleElement(ruleData,item),"PF2E.RuleElement.TokenEffectIcon":(ruleData,item)=>new token_effect_icon_1.PF2TokenEffectIconRuleElement(ruleData,item),"PF2E.RuleElement.TokenImage":(ruleData,item)=>new token_image_1.PF2TokenImageRuleElement(ruleData,item),"PF2E.RuleElement.TokenSize":(ruleData,item)=>new token_size_1.PF2TokenSizeRuleElement(ruleData,item),"PF2E.RuleElement.BaseSpeed":(ruleData,item)=>new base_speed_1.PF2BaseSpeedRuleElement(ruleData,item),"PF2E.RuleElement.Sense":(ruleData,item)=>new sense_1.PF2SenseRuleElement(ruleData,item),"PF2E.RuleElement.SetProperty":(ruleData,item)=>new set_property_1.PF2SetPropertyRuleElement(ruleData,item),"PF2E.RuleElement.Strike":(ruleData,item)=>new strike_1.PF2StrikeRuleElement(ruleData,item),"PF2E.RuleElement.Striking":(ruleData,item)=>new striking_1.PF2StrikingRuleElement(ruleData,item),"PF2E.RuleElement.Note":(ruleData,item)=>new roll_note_1.PF2RollNoteRuleElement(ruleData,item),"PF2E.RuleElement.MultipleAttackPenalty":(ruleData,item)=>new multiple_attack_penalty_1.PF2MultipleAttackPenaltyRuleElement(ruleData,item),"PF2E.RuleElement.EffectTarget":(ruleData,item)=>new effect_target_1.PF2EffectTargetRuleElement(ruleData,item),"PF2E.RuleElement.WeaponPotency":(ruleData,item)=>new weapon_potency_1.PF2WeaponPotencyRuleElement(ruleData,item),"PF2E.RuleElement.ActorTraits":(ruleData,item)=>new actor_traits_1.PF2ActorTraits(ruleData,item),"PF2E.RuleElement.RecoveryCheckDC":(ruleData,item)=>new recovery_check_dc_1.PF2RecoveryCheckDCRuleElement(ruleData,item)}),RuleElements.custom={}},4109:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2MageArmorRuleElement=void 0;const modifiers_1=__webpack_require__(6243),rule_element_1=__webpack_require__(9950);class PF2MageArmorRuleElement extends rule_element_1.PF2RuleElement{onBeforePrepareData(actorData,{statisticsModifiers}){var _a,_b,_c,_d,_e,_f;const label=null!==(_a=this.ruleData.label)&&void 0!==_a?_a:this.item.name,level=null!==(_e=null!==(_d=null===(_c=null===(_b=this.item.data)||void 0===_b?void 0:_b.level)||void 0===_c?void 0:_c.value)&&void 0!==_d?_d:this.ruleData.level)&&void 0!==_e?_e:1;if(label){let ac,save=0;level>=10?(ac=3,save=3):level>=8?(ac=2,save=2):level>=6?(ac=2,save=1):level>=4?(ac=1,save=1):ac=1,statisticsModifiers.ac=(statisticsModifiers.ac||[]).concat(new modifiers_1.ModifierPF2e(label,ac,modifiers_1.MODIFIER_TYPE.ITEM)),save>0&&(statisticsModifiers["saving-throw"]=(statisticsModifiers["saving-throw"]||[]).concat(new modifiers_1.ModifierPF2e(label,save,modifiers_1.MODIFIER_TYPE.ITEM))),actorData.data.attributes.dexCap=(null!==(_f=actorData.data.attributes.dexCap)&&void 0!==_f?_f:[]).concat({value:5,source:label})}else console.warn("PF2E | Mage armor requires at least a label field or item name")}}exports.PF2MageArmorRuleElement=PF2MageArmorRuleElement},7416:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.prepareCleanup=void 0;const base_1=__webpack_require__(7569),utils_1=__webpack_require__(4930);exports.prepareCleanup=function(listKey,deletions){return new class extends base_1.MigrationBase{async updateActor(actorData){if("character"===actorData.type||"npc"===actorData.type)switch(listKey){case"creatureTraits":{const traits=actorData.data.traits.traits;traits.value=traits.value.filter((trait=>!deletions.includes(trait)));break}case"languages":{const languages=actorData.data.traits.languages;languages.value=languages.value.filter((language=>!deletions.includes(language)));break}case"weaponCategories":if("character"===actorData.type)for(const key of deletions)utils_1.objectHasKey(actorData.data.martial,key)&&(delete actorData.data.martial[key],actorData.data.martial[`-=${key}`]=null);break;case"weaponGroups":if("character"===actorData.type){const proficiencyKeys=deletions.map((deletion=>`weapon-group-${deletion}`));for(const key of proficiencyKeys)delete actorData.data.martial[key],actorData.data.martial[`-=${key}`]=null}break;case"baseWeapons":if("character"===actorData.type){const proficiencyKeys=deletions.map((deletion=>`weapon-base-${deletion}`));for(const key of proficiencyKeys)delete actorData.data.martial[key],actorData.data.martial[`-=${key}`]=null}}}async updateItem(itemData){var _a,_b,_c;switch(listKey){case"creatureTraits":{const traits=itemData.data.traits;traits.value=traits.value.filter((trait=>!deletions.includes(trait)));break}case"featTraits":if("feat"===itemData.type){const traits=itemData.data.traits;traits.value=traits.value.filter((trait=>!deletions.includes(trait)))}break;case"magicSchools":if("spell"===itemData.type){const school=itemData.data.school;school.value=deletions.includes(null!==(_a=school.value)&&void 0!==_a?_a:"")?"evocation":school.value}break;case"spellTraits":if("spell"===itemData.type){const traits=itemData.data.traits;traits.value=traits.value.filter((trait=>!deletions.includes(trait)))}break;case"weaponCategories":if("weapon"===itemData.type){const category=itemData.data.weaponType;category.value=deletions.includes(null!==(_b=category.value)&&void 0!==_b?_b:"")?null:category.value}break;case"weaponGroups":if("weapon"===itemData.type){const group=itemData.data.group;group.value=deletions.includes(null!==(_c=group.value)&&void 0!==_c?_c:"")?null:group.value}break;case"baseWeapons":if("weapon"===itemData.type){const base=itemData.data.baseItem;itemData.data.baseItem=deletions.includes(null!=base?base:"")?null:base}}}}}},6173:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.HomebrewElements=void 0;const menu_1=__webpack_require__(810),tagify_1=__importDefault(__webpack_require__(8901)),cleanup_migration_1=__webpack_require__(7416),localize_1=__webpack_require__(1608),migration_runner_1=__webpack_require__(749);__webpack_require__(4546);const character_1=__webpack_require__(3919);class HomebrewElements extends menu_1.SettingsMenuPF2e{static get defaultOptions(){return mergeObject(super.defaultOptions,{title:"PF2E.SETTINGS.Homebrew.Name",id:"homebrew-settings",template:"systems/pf2e/templates/system/settings/homebrew.html",width:550,height:"auto",closeOnSubmit:!0})}static get settings(){return this.SETTINGS.map((key=>({key,value:{name:CONFIG.PF2E.SETTINGS.homebrew[key].name,hint:CONFIG.PF2E.SETTINGS.homebrew[key].hint,scope:"world",config:!1,default:[],type:Object}}))).reduce(((settings,setting)=>mergeObject(settings,{[setting.key]:setting.value})),{})}getData(){const data=super.getData();for(const setting of data.settings)setting.value=JSON.stringify(setting.value);return data}activateListeners($form){super.activateListeners($form),$form.find('button[name="reset"]').on("click",(()=>{this.render()}));for(const key of HomebrewElements.SETTINGS){const $input=$form.find(`input[name="${key}"]`);new tagify_1.default($input[0],{editTags:1,hooks:{beforeRemoveTag:tags=>{const translations=localize_1.LocalizePF2e.translations.PF2E.SETTINGS.Homebrew.ConfirmDelete,response=(async()=>{const content=game.i18n.format(translations.Message,{element:tags[0].data.value});return await Dialog.confirm({title:translations.Title,content:`<p>${content}</p>`})})();return(async()=>await response?Promise.resolve():Promise.reject())()}}})}}async _onSubmit(event,{updateData=null,preventClose=!1,preventRender=!1}={}){return $(this.form).find("tags ~ input").each(((_i,input)=>{""===input.value&&(input.value="[]")})),super._onSubmit(event,{updateData,preventClose,preventRender})}async _updateObject(_event,data){const cleanupTasks=HomebrewElements.SETTINGS.map((key=>{var _a;for(const tag of data[key])null!==(_a=tag.id)&&void 0!==_a||(tag.id=randomID(16));return this.processDeletions(key,data[key])})).filter((task=>!!task));await(new migration_runner_1.MigrationRunner).runMigrations(cleanupTasks),await super._updateObject(_event,data),HomebrewElements.refreshTags()}processDeletions(listKey,newTagList){const oldTagList=game.settings.get("pf2e",`homebrew.${listKey}`),newIDList=newTagList.map((tag=>tag.id)),deletions=oldTagList.flatMap((oldTag=>newIDList.includes(oldTag.id)?[]:oldTag.id)),coreElements="baseWeapons"===listKey?localize_1.LocalizePF2e.translations.PF2E.Weapon.Base:CONFIG.PF2E[listKey];for(const id of deletions)delete coreElements[id];return game.user.isGM&&deletions.length>0?cleanup_migration_1.prepareCleanup(listKey,deletions):null}static refreshTags(){var _a,_b;for(const key of HomebrewElements.SETTINGS){const coreElements="baseWeapons"===key?localize_1.LocalizePF2e.translations.PF2E.Weapon.Base:CONFIG.PF2E[key],settingsKey=`homebrew.${key}`,elements=game.settings.get("pf2e",settingsKey);for(const element of elements)coreElements[element.id]=element.value}if(this.initialRefresh)this.initialRefresh=!1;else{const characters=null!==(_b=null===(_a=game.actors.entities)||void 0===_a?void 0:_a.filter((actor=>actor instanceof character_1.CharacterPF2e)))&&void 0!==_b?_b:[];for(const character of characters)character.prepareData(),character.sheet.render(!1)}}}exports.HomebrewElements=HomebrewElements,HomebrewElements.namespace="homebrew",HomebrewElements.initialRefresh=!0,HomebrewElements.SETTINGS=["creatureTraits","featTraits","languages","magicSchools","spellTraits","weaponCategories","weaponGroups","baseWeapons"]},8103:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.registerSettings=void 0;const compendium_browser_1=__webpack_require__(4610),variant_rules_1=__webpack_require__(1014),migrations_1=__webpack_require__(2087),world_clock_1=__webpack_require__(2366),character_1=__webpack_require__(3919),homebrew_1=__webpack_require__(6173),status_effects_1=__webpack_require__(7839),utils_1=__webpack_require__(4930);exports.registerSettings=function(){game.settings.register("pf2e","worldSchemaVersion",{name:"PF2E.SETTINGS.WorldSchemaVersion.Name",hint:"PF2E.SETTINGS.WorldSchemaVersion.Hint",scope:"world",config:!0,default:migrations_1.Migrations.latestVersion,type:Number}),game.settings.register("pf2e","defaultTokenSettings",{name:"PF2E.SETTINGS.DefaultTokenSettings.Name",hint:"PF2E.SETTINGS.DefaultTokenSettings.Hint",scope:"world",config:!0,default:!0,type:Boolean}),game.settings.register("pf2e","defaultTokenSettingsName",{name:"PF2E.SETTINGS.DefaultTokenSettingsName.Name",hint:"PF2E.SETTINGS.DefaultTokenSettingsName.Hint",scope:"world",config:!0,default:CONST.TOKEN_DISPLAY_MODES.OWNER_HOVER,type:Number,choices:{[CONST.TOKEN_DISPLAY_MODES.NONE]:"TOKEN.DISPLAY_NONE",[CONST.TOKEN_DISPLAY_MODES.CONTROL]:"TOKEN.DISPLAY_CONTROL",[CONST.TOKEN_DISPLAY_MODES.OWNER_HOVER]:"TOKEN.DISPLAY_OWNER_HOVER",[CONST.TOKEN_DISPLAY_MODES.HOVER]:"TOKEN.DISPLAY_HOVER",[CONST.TOKEN_DISPLAY_MODES.OWNER]:"TOKEN.DISPLAY_OWNER",[CONST.TOKEN_DISPLAY_MODES.ALWAYS]:"TOKEN.DISPLAY_ALWAYS"}}),game.settings.register("pf2e","defaultTokenSettingsBar",{name:"PF2E.SETTINGS.DefaultTokenSettingsBar.Name",hint:"PF2E.SETTINGS.DefaultTokenSettingsBar.Hint",scope:"world",config:!0,default:CONST.TOKEN_DISPLAY_MODES.OWNER_HOVER,type:Number,choices:{[CONST.TOKEN_DISPLAY_MODES.NONE]:"TOKEN.DISPLAY_NONE",[CONST.TOKEN_DISPLAY_MODES.CONTROL]:"TOKEN.DISPLAY_CONTROL",[CONST.TOKEN_DISPLAY_MODES.OWNER_HOVER]:"TOKEN.DISPLAY_OWNER_HOVER",[CONST.TOKEN_DISPLAY_MODES.HOVER]:"TOKEN.DISPLAY_HOVER",[CONST.TOKEN_DISPLAY_MODES.OWNER]:"TOKEN.DISPLAY_OWNER",[CONST.TOKEN_DISPLAY_MODES.ALWAYS]:"TOKEN.DISPLAY_ALWAYS"}}),game.settings.register("pf2e","automation.lootableNPCs",{name:"PF2E.SETTINGS.Automation.LootableNPCs.Name",hint:"PF2E.SETTINGS.Automation.LootableNPCs.Hint",scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register("pf2e","ignoreCoinBulk",{name:"PF2E.SETTINGS.IgnoreCoinBulk.Name",hint:"PF2E.SETTINGS.IgnoreCoinBulk.Hint",scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register("pf2e","ignoreContainerOverflow",{name:"PF2E.SETTINGS.IgnoreContainerOverflow.Name",hint:"PF2E.SETTINGS.IgnoreContainerOverflow.Hint",scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register("pf2e","identifyMagicNotMatchingTraditionModifier",{name:"PF2E.SETTINGS.IdentifyMagicNotMatchingTraditionModifier.Name",hint:"PF2E.SETTINGS.IdentifyMagicNotMatchingTraditionModifier.Hint",choices:{0:"PF2E.SETTINGS.IdentifyMagicNotMatchingTraditionModifier.Choices.0",2:"PF2E.SETTINGS.IdentifyMagicNotMatchingTraditionModifier.Choices.2",5:"PF2E.SETTINGS.IdentifyMagicNotMatchingTraditionModifier.Choices.5",10:"PF2E.SETTINGS.IdentifyMagicNotMatchingTraditionModifier.Choices.10"},type:Number,default:5,scope:"world",config:!0}),game.settings.register("pf2e","critRule",{name:"PF2E.SETTINGS.CritRule.Name",hint:"PF2E.SETTINGS.CritRule.Hint",scope:"world",config:!0,default:"doubledamage",type:String,choices:{doubledamage:"PF2E.SETTINGS.CritRule.Choices.Doubledamage",doubledice:"PF2E.SETTINGS.CritRule.Choices.Doubledice"}}),game.settings.register("pf2e","compendiumBrowserPacks",{name:"PF2E.SETTINGS.CompendiumBrowserPacks.Name",hint:"PF2E.SETTINGS.CompendiumBrowserPacks.Hint",default:"{}",type:String,scope:"world",onChange:()=>{compendium_browser_1.compendiumBrowser.loadSettings()}}),game.settings.register("pf2e","pfsSheetTab",{name:"PF2E.SETTINGS.PFSSheetTab.Name",hint:"PF2E.SETTINGS.PFSSheetTab.Hint",scope:"world",config:!0,default:!0,type:Boolean,onChange:()=>{const sheets=game.actors.filter((actor=>actor instanceof character_1.CharacterPF2e)).flatMap((actor=>Object.values(actor.apps)));for(const sheet of sheets)sheet.render()}}),game.settings.register("pf2e","enabledRulesUI",{name:"PF2E.SETTINGS.EnabledRulesUI.Name",hint:"PF2E.SETTINGS.EnabledRulesUI.Hint",scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register("pf2e","critFumbleButtons",{name:game.i18n.localize("PF2E.SETTINGS.critFumbleCardButtons.name"),hint:game.i18n.localize("PF2E.SETTINGS.critFumbleCardButtons.hint"),scope:"world",config:!0,default:!1,type:Boolean,onChange:()=>{window.location.reload()}}),game.settings.register("pf2e","drawCritFumble",{name:game.i18n.localize("PF2E.SETTINGS.critFumbleCards.name"),hint:game.i18n.localize("PF2E.SETTINGS.critFumbleCards.hint"),scope:"world",config:!0,default:!1,type:Boolean,onChange:()=>{window.location.reload()}});const iconChoices={blackWhite:"PF2E.SETTINGS.statusEffectType.blackWhite",default:"PF2E.SETTINGS.statusEffectType.default",legacy:"PF2E.SETTINGS.statusEffectType.legacy"};game.settings.register("pf2e","statusEffectType",{name:"PF2E.SETTINGS.statusEffectType.name",hint:"PF2E.SETTINGS.statusEffectType.hint",scope:"world",config:!0,default:"blackWhite",type:String,choices:iconChoices,onChange:(iconType="")=>{utils_1.objectHasKey(iconChoices,iconType)&&status_effects_1.StatusEffects.migrateStatusEffectUrls(iconType)}}),game.settings.register("pf2e","statusEffectShowCombatMessage",{name:"PF2E.SETTINGS.statusEffectShowCombatMessage.name",hint:"PF2E.SETTINGS.statusEffectShowCombatMessage.hint",scope:"client",config:!0,default:!0,type:Boolean}),game.settings.registerMenu("pf2e","variantRules",{name:"PF2E.SETTINGS.Variant.Name",label:"PF2E.SETTINGS.Variant.Label",hint:"PF2E.SETTINGS.Variant.Hint",icon:"fas fa-book",type:variant_rules_1.VariantRulesSettings,restricted:!0}),variant_rules_1.VariantRulesSettings.registerSettings(),game.settings.registerMenu("pf2e","homebrew",{name:"PF2E.SETTINGS.Homebrew.Name",label:"PF2E.SETTINGS.Homebrew.Label",hint:"PF2E.SETTINGS.Homebrew.Hint",icon:"fas fa-beer",type:homebrew_1.HomebrewElements,restricted:!0}),homebrew_1.HomebrewElements.registerSettings(),game.settings.registerMenu("pf2e","worldClock",{name:game.i18n.localize(CONFIG.PF2E.SETTINGS.worldClock.name),label:game.i18n.localize(CONFIG.PF2E.SETTINGS.worldClock.label),hint:game.i18n.localize(CONFIG.PF2E.SETTINGS.worldClock.hint),icon:"far fa-clock",type:world_clock_1.WorldClockSettings,restricted:!0}),world_clock_1.WorldClockSettings.registerSettings(),game.settings.register("pf2e","RAI.TreatWoundsAltSkills",{name:"PF2E.SETTINGS.RAI.TreatWoundsAltSkills.Name",hint:"PF2E.SETTINGS.RAI.TreatWoundsAltSkills.Hint",scope:"world",config:!0,default:!0,type:Boolean})}},810:function(__unused_webpack_module,exports){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.SettingsMenuPF2e=void 0;class SettingsMenuPF2e extends FormApplication{get namespace(){return this.constructor.namespace}static get settings(){return{}}static registerSettings(){const settings=this.settings;for(const setting of this.SETTINGS)game.settings.register("pf2e",`${this.namespace}.${setting}`,settings[setting])}getData(){const settings=this.constructor.settings,templateData=Object.entries(settings).map((([key,setting])=>{const value=game.settings.get("pf2e",`${this.namespace}.${key}`);return Object.assign(Object.assign({},setting),{key,value})}));return mergeObject(super.getData(),{settings:templateData})}async _updateObject(_event,data){var e_1,_a;try{for(var _c,_b=__asyncValues(this.constructor.SETTINGS);!(_c=await _b.next()).done;){const key=_c.value,settingKey=`${this.namespace}.${key}`;await game.settings.set("pf2e",settingKey,data[key])}}catch(e_1_1){e_1={error:e_1_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&await _a.call(_b)}finally{if(e_1)throw e_1.error}}}}exports.SettingsMenuPF2e=SettingsMenuPF2e},1014:function(__unused_webpack_module,exports){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.VariantRulesSettings=void 0;const SETTINGS={staminaVariant:{name:"PF2E.SETTINGS.Variant.Stamina.Name",hint:"PF2E.SETTINGS.Variant.Stamina.Hint",scope:"world",config:!1,default:0,type:Number,choices:{0:"PF2E.SETTINGS.Variant.Stamina.Choices.0",1:"PF2E.SETTINGS.Variant.Stamina.Choices.1"}},ancestryParagonVariant:{name:"PF2E.SETTINGS.Variant.AncestryParagon.Name",hint:"PF2E.SETTINGS.Variant.AncestryParagon.Hint",scope:"world",config:!1,default:0,type:Boolean},freeArchetypeVariant:{name:"PF2E.SETTINGS.Variant.FreeArchetype.Name",hint:"PF2E.SETTINGS.Variant.FreeArchetype.Hint",scope:"world",config:!1,default:0,type:Boolean},automaticBonusVariant:{name:"PF2E.SETTINGS.Variant.AutomaticBonus.Name",hint:"PF2E.SETTINGS.Variant.AutomaticBonus.Hint",scope:"world",config:!1,default:"noABP",type:String,choices:{noABP:"PF2E.SETTINGS.Variant.AutomaticBonus.Choices.noABP",ABPRulesAsWritten:"PF2E.SETTINGS.Variant.AutomaticBonus.Choices.ABPRulesAsWritten",ABPFundamentalPotency:"PF2E.SETTINGS.Variant.AutomaticBonus.Choices.ABPFundamentalPotency"}},proficiencyVariant:{name:"PF2E.SETTINGS.Variant.Proficiency.Name",hint:"PF2E.SETTINGS.Variant.Proficiency.Hint",scope:"world",config:!1,default:"ProficiencyWithLevel",type:String,choices:{ProficiencyWithLevel:"PF2E.SETTINGS.Variant.Proficiency.Choices.ProficiencyWithLevel",ProficiencyWithoutLevel:"PF2E.SETTINGS.Variant.Proficiency.Choices.ProficiencyWithoutLevel"}},proficiencyUntrainedModifier:{name:"PF2E.SETTINGS.Variant.UntrainedModifier.Name",hint:"PF2E.SETTINGS.Variant.UntrainedModifier.Hint",scope:"world",config:!1,default:0,type:Number},proficiencyTrainedModifier:{name:"PF2E.SETTINGS.Variant.TrainedModifier.Name",hint:"PF2E.SETTINGS.Variant.TrainedModifier.Hint",scope:"world",config:!1,default:2,type:Number},proficiencyExpertModifier:{name:"PF2E.SETTINGS.Variant.ExpertModifier.Name",hint:"PF2E.SETTINGS.Variant.ExpertModifier.Hint",scope:"world",config:!1,default:4,type:Number},proficiencyMasterModifier:{name:"PF2E.SETTINGS.Variant.MasterModifier.Name",hint:"PF2E.SETTINGS.Variant.MasterModifier.Hint",scope:"world",config:!1,default:6,type:Number},proficiencyLegendaryModifier:{name:"PF2E.SETTINGS.Variant.LegendaryModifier.Name",hint:"PF2E.SETTINGS.Variant.LegendaryModifier.Hint",scope:"world",config:!1,default:8,type:Number}};class VariantRulesSettings extends FormApplication{static get defaultOptions(){return mergeObject(super.defaultOptions,{title:"PF2E.SETTINGS.Variant.Title",id:"variant-rules-settings",template:"systems/pf2e/templates/system/settings/variant-rules-settings.html",width:550,height:"auto",closeOnSubmit:!0})}getData(){const data={};for(const[k,v]of Object.entries(SETTINGS))data[k]={value:game.settings.get("pf2e",k),setting:v};return data}static registerSettings(){for(const[k,v]of Object.entries(SETTINGS))game.settings.register("pf2e",k,v)}activateListeners(html){super.activateListeners(html),html.find('button[name="reset"]').on("click",(event=>this.onResetDefaults(event)))}async onResetDefaults(event){var e_1,_a;event.preventDefault();try{for(var _c,_b=__asyncValues(Object.entries(SETTINGS));!(_c=await _b.next()).done;){const[k,v]=_c.value;await game.settings.set("pf2e",k,null==v?void 0:v.default)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&await _a.call(_b)}finally{if(e_1)throw e_1.error}}return this.render()}async _onSubmit(event,options={}){return event.preventDefault(),super._onSubmit(event,options)}async _updateObject(_event,data){var e_2,_a;try{for(var _c,_b=__asyncValues(Object.keys(SETTINGS));!(_c=await _b.next()).done;){const key=_c.value;game.settings.set("pf2e",key,data[key])}}catch(e_2_1){e_2={error:e_2_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&await _a.call(_b)}finally{if(e_2)throw e_2.error}}}}exports.VariantRulesSettings=VariantRulesSettings},2366:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.WorldClockSettings=void 0;const luxon_1=__webpack_require__(6429),localize_1=__webpack_require__(1608);class WorldClockSettings extends FormApplication{static get defaultOptions(){return mergeObject(super.defaultOptions,{title:CONFIG.PF2E.SETTINGS.worldClock.name,id:"world-clock-settings",template:"systems/pf2e/templates/system/settings/world-clock/index.html",width:550,height:"auto",closeOnSubmit:!0})}getData(){const settings=Object.entries(WorldClockSettings.settings).filter((([key])=>"worldCreatedOn"!==key)).map((([key,setting])=>{const value=(()=>{const rawValue=game.settings.get("pf2e",`worldClock.${key}`);return"worldCreatedOn"===key&&"string"==typeof rawValue?luxon_1.DateTime.fromISO(rawValue).toFormat("yyyy-MM-dd'T'HH:mm"):rawValue})(),usingCalendarWeather=game.pf2e.worldClock.usingCalendarWeather;return Object.assign(Object.assign({},setting),{key,value,isDisabled:usingCalendarWeather&&["dateTheme","timeConvention"].includes(key),isSelect:"choices"in setting,isCheckbox:setting.type===Boolean,isDateTime:setting.type===String&&!("choices"in setting)})}));return mergeObject(super.getData(),{settings,usingCalendarWeather:game.pf2e.worldClock.usingCalendarWeather})}static registerSettings(){game.settings.register("pf2e","worldClock.dateTheme",this.settings.dateTheme),game.settings.register("pf2e","worldClock.timeConvention",this.settings.timeConvention),game.settings.register("pf2e","worldClock.playersCanView",this.settings.playersCanView),game.settings.register("pf2e","worldClock.syncDarkness",this.settings.syncDarkness),game.settings.register("pf2e","worldClock.worldCreatedOn",this.settings.worldCreatedOn)}activateListeners($html){super.activateListeners($html);const title=localize_1.LocalizePF2e.translations.PF2E.SETTINGS.WorldClock.ResetWorldTime.Name;renderTemplate("systems/pf2e/templates/system/settings/world-clock/confirm-reset.html").then((template=>{$html.find("button.reset-world-time").on("click",(()=>{Dialog.confirm({title,content:template,yes:()=>{game.time.advance(-1*game.time.worldTime),this.close()},defaultYes:!1})}))}))}async _updateObject(_event,data){var e_1,_a;const keys=["dateTheme","timeConvention","playersCanView","syncDarkness"];try{for(var keys_1_1,keys_1=__asyncValues(keys);!(keys_1_1=await keys_1.next()).done;){const key=keys_1_1.value,settingKey=`worldClock.${key}`,newValue="worldCreatedOn"===key?luxon_1.DateTime.fromISO(data[key]).toUTC():data[key];await game.settings.set("pf2e",settingKey,newValue)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{keys_1_1&&!keys_1_1.done&&(_a=keys_1.return)&&await _a.call(keys_1)}finally{if(e_1)throw e_1.error}}game.pf2e.worldClock.render(!1)}static get settings(){const syncDarknessFormatting=Object.defineProperty({},"globalLight",{get:()=>canvas.lighting.globalLight?game.i18n.localize(CONFIG.PF2E.SETTINGS.worldClock.syncDarkness.globalLightOn):game.i18n.localize(CONFIG.PF2E.SETTINGS.worldClock.syncDarkness.globalLightOff)});return{dateTheme:{name:CONFIG.PF2E.SETTINGS.worldClock.dateTheme.name,hint:CONFIG.PF2E.SETTINGS.worldClock.dateTheme.hint,scope:"world",config:!1,default:"AR",type:String,choices:{AR:CONFIG.PF2E.SETTINGS.worldClock.dateTheme.AR,AD:CONFIG.PF2E.SETTINGS.worldClock.dateTheme.AD,CE:CONFIG.PF2E.SETTINGS.worldClock.dateTheme.CE}},timeConvention:{name:CONFIG.PF2E.SETTINGS.worldClock.timeConvention.name,hint:CONFIG.PF2E.SETTINGS.worldClock.timeConvention.hint,scope:"world",config:!1,default:24,type:Number,choices:{24:CONFIG.PF2E.SETTINGS.worldClock.timeConvention.twentyFour,12:CONFIG.PF2E.SETTINGS.worldClock.timeConvention.twelve}},playersCanView:{name:CONFIG.PF2E.SETTINGS.worldClock.playersCanView.name,hint:CONFIG.PF2E.SETTINGS.worldClock.playersCanView.hint,scope:"world",config:!1,default:!1,type:Boolean},syncDarkness:{name:CONFIG.PF2E.SETTINGS.worldClock.syncDarkness.name,hint:game.i18n.format(CONFIG.PF2E.SETTINGS.worldClock.syncDarkness.hint,syncDarknessFormatting),scope:"world",config:!1,default:!1,type:Boolean},worldCreatedOn:{name:CONFIG.PF2E.SETTINGS.worldClock.worldCreatedOn.name,hint:CONFIG.PF2E.SETTINGS.worldClock.worldCreatedOn.hint,scope:"world",config:!1,default:luxon_1.DateTime.utc().toISO(),type:String}}}}exports.WorldClockSettings=WorldClockSettings},6908:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.balance=void 0;const actions_1=__webpack_require__(4258);exports.balance=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"acrobatics");actions_1.ActionsPF2e.simpleRollActionCheck(options.actors,property,null!==(_b=options.glyph)&&void 0!==_b?_b:"A","PF2E.Actions.Balance",subtitle,options.modifiers,["all",checkType,stat,"action:balance"],["action:balance"],["move"],checkType,options.event)}},671:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.maneuverInFlight=void 0;const actions_1=__webpack_require__(4258);exports.maneuverInFlight=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"acrobatics");actions_1.ActionsPF2e.simpleRollActionCheck(options.actors,property,null!==(_b=options.glyph)&&void 0!==_b?_b:"A","PF2E.Actions.ManeuverInFlight",subtitle,options.modifiers,["all",checkType,stat,"action:maneuver-in-flight"],["action:maneuver-in-flight"],["move"],checkType,options.event)}},6059:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.squeeze=void 0;const actions_1=__webpack_require__(4258);exports.squeeze=function(options){var _a;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"acrobatics");actions_1.ActionsPF2e.simpleRollActionCheck(options.actors,property,options.glyph,"PF2E.Actions.Squeeze",subtitle,options.modifiers,["all",checkType,stat,"action:squeeze"],["action:squeeze"],["exploration","move"],checkType,options.event)}},4144:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.tumbleThrough=void 0;const actions_1=__webpack_require__(4258);exports.tumbleThrough=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"acrobatics");actions_1.ActionsPF2e.simpleRollActionCheck(options.actors,property,null!==(_b=options.glyph)&&void 0!==_b?_b:"A","PF2E.Actions.TumbleThrough",subtitle,options.modifiers,["all",checkType,stat,"action:tumble-through"],["action:tumble-through"],["move"],checkType,options.event)}},4258:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActionsPF2e=void 0;const base_1=__webpack_require__(9978),modifiers_1=__webpack_require__(6243),rolls_1=__webpack_require__(7540),seek_1=__webpack_require__(4211),balance_1=__webpack_require__(6908),maneuver_in_flight_1=__webpack_require__(671),squeeze_1=__webpack_require__(6059),tumble_through_1=__webpack_require__(4144),climb_1=__webpack_require__(3054),disarm_1=__webpack_require__(7038),force_open_1=__webpack_require__(3320),grapple_1=__webpack_require__(2972),high_jump_1=__webpack_require__(3022),long_jump_1=__webpack_require__(1185),shove_1=__webpack_require__(761),swim_1=__webpack_require__(6174),trip_1=__webpack_require__(7516),create_a_diversion_1=__webpack_require__(3730),feint_1=__webpack_require__(4214),impersonate_1=__webpack_require__(1754),lie_1=__webpack_require__(4907),gather_information_1=__webpack_require__(177),make_an_impression_1=__webpack_require__(602),request_1=__webpack_require__(3953),coerce_1=__webpack_require__(9613),demoralize_1=__webpack_require__(7441);exports.ActionsPF2e=class{static exposeActions(actions){actions.seek=seek_1.seek,actions.balance=balance_1.balance,actions.maneuverInFlight=maneuver_in_flight_1.maneuverInFlight,actions.squeeze=squeeze_1.squeeze,actions.tumbleThrough=tumble_through_1.tumbleThrough,actions.climb=climb_1.climb,actions.disarm=disarm_1.disarm,actions.forceOpen=force_open_1.forceOpen,actions.grapple=grapple_1.grapple,actions.highJump=high_jump_1.highJump,actions.longJump=long_jump_1.longJump,actions.shove=shove_1.shove,actions.swim=swim_1.swim,actions.trip=trip_1.trip,actions.createADiversion=create_a_diversion_1.createADiversion,actions.feint=feint_1.feint,actions.impersonate=impersonate_1.impersonate,actions.lie=lie_1.lie,actions.gatherInformation=gather_information_1.gatherInformation,actions.makeAnImpression=make_an_impression_1.makeAnImpression,actions.request=request_1.request,actions.coerce=coerce_1.coerce,actions.demoralize=demoralize_1.demoralize}static resolveStat(stat){var _a,_b;switch(stat){case"perception":return{checkType:"perception-check",property:"data.data.attributes.perception",stat,subtitle:"PF2E.ActionsCheck.perception"};default:return{checkType:"skill-check",property:`data.data.skills.${null!==(_b=null===(_a=base_1.SKILL_EXPANDED[stat])||void 0===_a?void 0:_a.shortform)&&void 0!==_b?_b:stat}`,stat,subtitle:`PF2E.ActionsCheck.${stat}`}}}static simpleRollActionCheck(actors,statName,actionGlyph,title,subtitle,modifiers,rollOptions,extraOptions,traits,checkType,event){const rollers=[];actors&&Array.isArray(actors)&&actors.length?rollers.push(...actors):actors instanceof base_1.ActorPF2e?rollers.push(actors):canvas.tokens.controlled.length?rollers.push(...canvas.tokens.controlled.map((token=>token.actor))):game.user.character&&rollers.push(game.user.character),rollers.length?rollers.forEach((actor=>{var _a,_b;let flavor="";actionGlyph&&(flavor+=`<span class="pf2-icon">${actionGlyph}</span> `),flavor+=`<b>${game.i18n.localize(title)}</b>`,flavor+=` <p class="compact-text">(${game.i18n.localize(subtitle)})</p>`;const stat=getProperty(actor,statName),check=new modifiers_1.CheckModifier(flavor,stat,null!=modifiers?modifiers:[]),finalOptions=actor.getRollOptions(rollOptions).concat(extraOptions).concat(traits);modifiers_1.ensureProficiencyOption(finalOptions,null!==(_a=stat.rank)&&void 0!==_a?_a:-1),rolls_1.CheckPF2e.roll(check,{actor,type:checkType,options:finalOptions,notes:null!==(_b=stat.notes)&&void 0!==_b?_b:[],traits,title:`${game.i18n.localize(title)} - ${game.i18n.localize(subtitle)}`},event)})):ui.notifications.warn(game.i18n.localize("PF2E.ActionsWarning.NoActor"))}}},3054:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.climb=void 0;const actions_1=__webpack_require__(4258);exports.climb=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");actions_1.ActionsPF2e.simpleRollActionCheck(options.actors,property,null!==(_b=options.glyph)&&void 0!==_b?_b:"A","PF2E.Actions.Climb",subtitle,options.modifiers,["all",checkType,stat,"action:climb"],["action:climb"],["move"],checkType,options.event)}},7038:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.disarm=void 0;const actions_1=__webpack_require__(4258);exports.disarm=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");actions_1.ActionsPF2e.simpleRollActionCheck(options.actors,property,null!==(_b=options.glyph)&&void 0!==_b?_b:"A","PF2E.Actions.Disarm",subtitle,options.modifiers,["all",checkType,stat,"action:disarm"],["action:disarm"],["attack"],checkType,options.event)}},3320:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.forceOpen=void 0;const actions_1=__webpack_require__(4258);exports.forceOpen=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");actions_1.ActionsPF2e.simpleRollActionCheck(options.actors,property,null!==(_b=options.glyph)&&void 0!==_b?_b:"A","PF2E.Actions.ForceOpen",subtitle,options.modifiers,["all",checkType,stat,"action:force-open"],["action:force-open"],["attack"],checkType,options.event)}},2972:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.grapple=void 0;const actions_1=__webpack_require__(4258);exports.grapple=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");actions_1.ActionsPF2e.simpleRollActionCheck(options.actors,property,null!==(_b=options.glyph)&&void 0!==_b?_b:"A","PF2E.Actions.Grapple",subtitle,options.modifiers,["all",checkType,stat,"action:grapple"],["action:grapple"],["attack"],checkType,options.event)}},3022:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.highJump=void 0;const actions_1=__webpack_require__(4258);exports.highJump=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");actions_1.ActionsPF2e.simpleRollActionCheck(options.actors,property,null!==(_b=options.glyph)&&void 0!==_b?_b:"D","PF2E.Actions.HighJump",subtitle,options.modifiers,["all",checkType,stat,"action:stride","action:leap","action:high-jump"],["action:stride","action:leap","action:high-jump"],["move"],checkType,options.event)}},1185:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.longJump=void 0;const actions_1=__webpack_require__(4258);exports.longJump=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");actions_1.ActionsPF2e.simpleRollActionCheck(options.actors,property,null!==(_b=options.glyph)&&void 0!==_b?_b:"D","PF2E.Actions.LongJump",subtitle,options.modifiers,["all",checkType,stat,"action:stride","action:leap","action:long-jump"],["action:stride","action:leap","action:long-jump"],["move"],checkType,options.event)}},761:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.shove=void 0;const actions_1=__webpack_require__(4258);exports.shove=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");actions_1.ActionsPF2e.simpleRollActionCheck(options.actors,property,null!==(_b=options.glyph)&&void 0!==_b?_b:"A","PF2E.Actions.Shove",subtitle,options.modifiers,["all",checkType,stat,"action:shove"],["action:shove"],["attack"],checkType,options.event)}},6174:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.swim=void 0;const actions_1=__webpack_require__(4258);exports.swim=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");actions_1.ActionsPF2e.simpleRollActionCheck(options.actors,property,null!==(_b=options.glyph)&&void 0!==_b?_b:"A","PF2E.Actions.Swim",subtitle,options.modifiers,["all",checkType,stat,"action:swim"],["action:swim"],["move"],checkType,options.event)}},7516:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.trip=void 0;const actions_1=__webpack_require__(4258);exports.trip=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");actions_1.ActionsPF2e.simpleRollActionCheck(options.actors,property,null!==(_b=options.glyph)&&void 0!==_b?_b:"A","PF2E.Actions.Trip",subtitle,options.modifiers,["all",checkType,stat,"action:trip"],["action:trip"],["attack"],checkType,options.event)}},4211:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.seek=void 0;const actions_1=__webpack_require__(4258);exports.seek=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"perception");actions_1.ActionsPF2e.simpleRollActionCheck(options.actors,property,null!==(_b=options.glyph)&&void 0!==_b?_b:"A","PF2E.Actions.Seek",subtitle,options.modifiers,["all",checkType,stat,"action:seek"],["action:seek"],["concentrate","secret"],checkType,options.event)}},3730:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.createADiversion=void 0;const actions_1=__webpack_require__(4258);exports.createADiversion=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"deception");let title="PF2E.Actions.CreateADiversion.";const traits=["mental"];switch(options.variant){case"distracting-words":title+="DistractingWords",traits.push("auditory","linguistic");break;case"gesture":title+="Gesture",traits.push("manipulate");break;case"trick":title+="Trick",traits.push("manipulate");break;default:{const msg=game.i18n.format("PF2E.ActionsWarning.DeceptionUnknownVariant",{variant:options.variant});return void ui.notifications.error(msg)}}actions_1.ActionsPF2e.simpleRollActionCheck(options.actors,property,null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title,subtitle,options.modifiers,["all",checkType,stat,"action:create-a-diversion"],["action:create-a-diversion",options.variant],traits.sort(),checkType,options.event)}},4214:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.feint=void 0;const actions_1=__webpack_require__(4258);exports.feint=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"deception");actions_1.ActionsPF2e.simpleRollActionCheck(options.actors,property,null!==(_b=options.glyph)&&void 0!==_b?_b:"A","PF2E.Actions.Feint",subtitle,options.modifiers,["all",checkType,stat,"action:feint"],["action:feint"],["mental"],checkType,options.event)}},1754:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.impersonate=void 0;const actions_1=__webpack_require__(4258);exports.impersonate=function(options){var _a;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"deception");actions_1.ActionsPF2e.simpleRollActionCheck(options.actors,property,options.glyph,"PF2E.Actions.Impersonate",subtitle,options.modifiers,["all",checkType,stat,"action:impersonate"],["action:impersonate"],["concentrate","exploration","manipulate","secret"],checkType,options.event)}},4907:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.lie=void 0;const actions_1=__webpack_require__(4258);exports.lie=function(options){var _a;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"deception");actions_1.ActionsPF2e.simpleRollActionCheck(options.actors,property,options.glyph,"PF2E.Actions.Lie",subtitle,options.modifiers,["all",checkType,stat,"action:lie"],["action:lie"],["auditory","concentrate","linguistic","mental","secret"],checkType,options.event)}},177:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.gatherInformation=void 0;const actions_1=__webpack_require__(4258);exports.gatherInformation=function(options){var _a;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"diplomacy");actions_1.ActionsPF2e.simpleRollActionCheck(options.actors,property,options.glyph,"PF2E.Actions.GatherInformation",subtitle,options.modifiers,["all",checkType,stat,"action:gather-information"],["action:gather-information"],["exploration","secret"],checkType,options.event)}},602:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.makeAnImpression=void 0;const actions_1=__webpack_require__(4258);exports.makeAnImpression=function(options){var _a;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"diplomacy");actions_1.ActionsPF2e.simpleRollActionCheck(options.actors,property,options.glyph,"PF2E.Actions.MakeAnImpression",subtitle,options.modifiers,["all",checkType,stat,"action:make-an-impression"],["action:make-an-impression"],["auditory","concentrate","exploration","linguistic","mental"],checkType,options.event)}},3953:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.request=void 0;const actions_1=__webpack_require__(4258);exports.request=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"diplomacy");actions_1.ActionsPF2e.simpleRollActionCheck(options.actors,property,null!==(_b=options.glyph)&&void 0!==_b?_b:"A","PF2E.Actions.Request",subtitle,options.modifiers,["all",checkType,stat,"action:request"],["action:request"],["auditory","concentrate","linguistic","mental"],checkType,options.event)}},9613:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.coerce=void 0;const actions_1=__webpack_require__(4258);exports.coerce=function(options){var _a;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"intimidation");actions_1.ActionsPF2e.simpleRollActionCheck(options.actors,property,options.glyph,"PF2E.Actions.Coerce",subtitle,options.modifiers,["all",checkType,stat,"action:coerce"],["action:coerce"],["auditory","concentrate","emotion","exploration","linguistic","mental"],checkType,options.event)}},7441:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.demoralize=void 0;const actions_1=__webpack_require__(4258);exports.demoralize=function(options){var _a,_b;const{checkType,property,stat,subtitle}=actions_1.ActionsPF2e.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"intimidation");actions_1.ActionsPF2e.simpleRollActionCheck(options.actors,property,null!==(_b=options.glyph)&&void 0!==_b?_b:"A","PF2E.Actions.Demoralize",subtitle,options.modifiers,["all",checkType,stat,"action:demoralize"],["action:demoralize"],["auditory","concentrate","emotion","mental"],checkType,options.event)}},9990:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getDegreeOfSuccess=exports.DegreeOfSuccessText=void 0;const degree_of_success_1=__webpack_require__(2130),PREFIXES=Object.freeze({all:-1,criticalFailure:degree_of_success_1.DegreeOfSuccess.CRITICAL_FAILURE,failure:degree_of_success_1.DegreeOfSuccess.FAILURE,success:degree_of_success_1.DegreeOfSuccess.SUCCESS,criticalSuccess:degree_of_success_1.DegreeOfSuccess.CRITICAL_SUCCESS}),ADJUSTMENTS=Object.freeze({"one-degree-better":degree_of_success_1.DegreeAdjustment.INCREASE,"one-degree-worse":degree_of_success_1.DegreeAdjustment.LOWER});exports.DegreeOfSuccessText=["criticalFailure","failure","success","criticalSuccess"],exports.getDegreeOfSuccess=function(roll,checkDC){var _a,_b;const dieRoll={dieValue:null!==(_a=roll.terms[0].total)&&void 0!==_a?_a:0,modifier:roll.data.totalModifier};let value=degree_of_success_1.calculateDegreeOfSuccess(dieRoll,checkDC.value);const degreeAdjustment=function(value,modifiers){for(const[k,v]of Object.entries(modifiers)){const condition=PREFIXES[k],adjustment=ADJUSTMENTS[v];if(void 0!==condition&&void 0!==adjustment&&!(value===degree_of_success_1.DegreeOfSuccess.CRITICAL_SUCCESS&&adjustment===degree_of_success_1.DegreeAdjustment.INCREASE||value===degree_of_success_1.DegreeOfSuccess.CRITICAL_FAILURE&&adjustment===degree_of_success_1.DegreeAdjustment.LOWER)){if(condition===PREFIXES.all)return adjustment;if(value===condition)return adjustment}}return}(value,null!==(_b=checkDC.modifiers)&&void 0!==_b?_b:{});return void 0!==degreeAdjustment&&(value=degree_of_success_1.adjustDegreeOfSuccess(degreeAdjustment,value)),{value,degreeAdjustment}}},2804:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CheckModifiersDialog=void 0;const modifiers_1=__webpack_require__(6243),check_degree_of_success_1=__webpack_require__(9990),localize_1=__webpack_require__(1608);class CheckModifiersDialog extends Application{constructor(check,context,callback){var _a;super({title:(null==context?void 0:context.title)||check.name,template:"systems/pf2e/templates/chat/check-modifiers-dialog.html",classes:["dice-checks","dialog"],popOut:!0,width:380}),this.check=check,this.context=null!=context?context:{},this.callback=callback,this.context.secret?this.context.rollMode="blindroll":this.context.rollMode=null!==(_a=game.settings.get("core","rollMode"))&&void 0!==_a?_a:"roll"}static async roll(check,context,callback){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k;const options=[],ctx=null!==(_a=context)&&void 0!==_a?_a:{};let dice="1d20";"misfortune"===ctx.fate?(dice="2d20kl",options.push("PF2E.TraitMisfortune")):"fortune"===ctx.fate&&(dice="2d20kh",options.push("PF2E.TraitFortune"));const speaker={};ctx.actor&&(speaker.actor=ctx.actor,ctx.actor=ctx.actor._id),ctx.token&&(ctx.token=ctx.token._id),ctx.user&&(ctx.user=ctx.user._id),ctx.item&&(ctx.item=ctx.item._id),ctx.rollMode=null!==(_d=null!==(_c=null!==(_b=ctx.rollMode)&&void 0!==_b?_b:ctx.secret?"blindroll":void 0)&&void 0!==_c?_c:game.settings.get("core","rollMode"))&&void 0!==_d?_d:"roll";const modifierBreakdown=check.modifiers.filter((m=>m.enabled)).map((m=>{var _a;return`<span class="tag tag_alt">${game.i18n.localize(null!==(_a=m.label)&&void 0!==_a?_a:m.name)} ${m.modifier<0?"":"+"}${m.modifier}</span>`})).join(""),optionBreakdown=options.map((o=>`<span style="white-space: nowrap; margin: 0 2px 2px 0; padding: 0 3px; font-size: 10px; line-height: 16px; border: 1px solid #000000; border-radius: 3px; color: white; background: var(--secondary);">${game.i18n.localize(o)}</span>`)).join(""),notes=(null!==(_e=ctx.notes)&&void 0!==_e?_e:[]).map((note=>TextEditor.enrichHTML(note.text))).join("<br />"),totalModifierPart=0===check.totalModifier?"":`+${check.totalModifier}`,roll=new Roll(`${dice}${totalModifierPart}`,check).roll();let flavor=`<strong>${check.name}</strong>`;if("spell-attack-roll"===ctx.type&&(null===(_f=game.modules.get("pf2qr"))||void 0===_f?void 0:_f.active)&&(flavor=flavor.replace(/^<strong>/,'<strong data-pf2qr-hint="Attack Roll">')),void 0!==ctx.dc){flavor+=`<div data-visibility="${null!==(_g=ctx.dc.visibility)&&void 0!==_g?_g:"all"}">`;const degreeOfSuccess=check_degree_of_success_1.getDegreeOfSuccess(roll,ctx.dc);roll.data.degreeOfSuccess=degreeOfSuccess.value;flavor+=`<div><b>${game.i18n.localize(null!==(_h=ctx.dc.label)&&void 0!==_h?_h:"PF2E.DCLabel")}: ${ctx.dc.value}</b></div>`;const degreeOfSuccessText=check_degree_of_success_1.DegreeOfSuccessText[degreeOfSuccess.value];let adjustmentLabel="";void 0!==degreeOfSuccess.degreeAdjustment&&(adjustmentLabel=degreeOfSuccess.degreeAdjustment?game.i18n.localize("PF2E.OneDegreeBetter"):game.i18n.localize("PF2E.OneDegreeWorse"),adjustmentLabel=` (${adjustmentLabel})`);flavor+=`<div class="degree-of-success"><b>${game.i18n.localize("PF2E.ResultLabel")}:<span class="${degreeOfSuccessText}"> ${game.i18n.localize(`PF2E.${null!==(_j=ctx.dc.scope)&&void 0!==_j?_j:"CheckOutcome"}.${degreeOfSuccessText}`)}</span></b>${adjustmentLabel}</div>`,flavor+="</div>"}if(ctx.traits){flavor+=`<div class="tags">${ctx.traits.map((trait=>`<span class="tag">${trait}</span>`)).join("")}</div><hr>`}flavor+=`<div class="tags">${modifierBreakdown}${optionBreakdown}</div>${notes}`,await roll.toMessage({speaker:ChatMessage.getSpeaker(speaker),flavor,flags:{core:{canPopout:!0},pf2e:{canReroll:!["fortune","misfortune"].includes(ctx.fate),context:ctx,unsafe:flavor}}},{rollMode:null!==(_k=ctx.rollMode)&&void 0!==_k?_k:"roll"}),callback&&callback(roll)}getData(){var _a,_b;const fortune="fortune"===(null===(_a=null==this?void 0:this.context)||void 0===_a?void 0:_a.fate),misfortune="misfortune"===(null===(_b=null==this?void 0:this.context)||void 0===_b?void 0:_b.fate),none=fortune===misfortune;return{appId:this.id,check:this.check,rollModes:CONFIG.Dice.rollModes,rollMode:this.context.rollMode,showRollDialogs:game.user.getFlag("pf2e","settings.showRollDialogs"),fortune,none,misfortune}}activateListeners(html){html.find(".roll").on("click",(_event=>{this.context.fate=html.find("input[type=radio][name=fate]:checked").val(),CheckModifiersDialog.roll(this.check,this.context,this.callback),this.close()})),html.find(".modifier-container").on("click","input[type=checkbox]",(event=>{const index=Number(event.currentTarget.getAttribute("data-modifier-index"));this.check.modifiers[index].ignored=event.currentTarget.checked,this.check.applyStackingRules(),this.render()})),html.find(".add-modifier-panel").on("click",".add-modifier",(event=>this.onAddModifier(event))),html.find("[name=rollmode]").on("change",(event=>this.onChangeRollMode(event)));const $tooltip=html.closest(`#${this.id}`).find("a.header-button.settings").attr({"data-tooltip-content":`#${this.id}-settings`}).tooltipster({animation:"fade",trigger:"click",arrow:!1,contentAsHTML:!0,debug:!1,interactive:!0,side:["top"],theme:"crb-hover",minWidth:165});html.find(".settings-list input.quick-rolls-submit").on("change",(async event=>{const $checkbox=$(event.delegateTarget);await game.user.setFlag("pf2e","settings.showRollDialogs",$checkbox[0].checked),$tooltip.tooltipster("close")}))}onAddModifier(event){const parent=$(event.currentTarget).parents(".add-modifier-panel"),value=Number(parent.find(".add-modifier-value").val()),type=`${parent.find(".add-modifier-type").val()}`;let name=`${parent.find(".add-modifier-name").val()}`;const errors=[];Number.isNaN(value)?errors.push("Modifier value must be a number."):0===value&&errors.push("Modifier value must not be zero."),type&&type.trim().length||errors.push("Modifier type is required."),name&&name.trim()||(name=game.i18n.localize(value<0?`PF2E.PenaltyLabel.${type}`:`PF2E.BonusLabel.${type}`)),errors.length>0?ui.notifications.error(errors.join(" ")):(this.check.push(new modifiers_1.ModifierPF2e(name,value,type)),this.render())}onChangeRollMode(event){var _a;this.context.rollMode=null!==(_a=$(event.currentTarget).val())&&void 0!==_a?_a:"roll"}_getHeaderButtons(){const buttons=super._getHeaderButtons();return[{label:localize_1.LocalizePF2e.translations.PF2E.SETTINGS.Settings,class:"settings",icon:"fas fa-cog",onclick:()=>null},...buttons]}}exports.CheckModifiersDialog=CheckModifiersDialog},5963:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CombatTrackerPF2e=void 0;class CombatTrackerPF2e extends CombatTracker{static get defaultOptions(){return mergeObject(super.defaultOptions,{template:"systems/pf2e/templates/system/combat-tracker.html",baseApplication:"CombatTracker"})}}exports.CombatTrackerPF2e=CombatTrackerPF2e},7428:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DamageRollModifiersDialog=void 0;const modifiers_1=__webpack_require__(6243);class DamageRollModifiersDialog extends Application{constructor(damage,context,callback){super({title:damage.name,template:"systems/pf2e/templates/chat/check-modifiers-dialog.html",classes:["dice-checks","dialog"],popOut:!0,width:380}),this.damage=damage,this.context=context,this.callback=callback}static roll(damage,context,callback){var _a,_b,_c,_d,_e,_f,_g,_h,_j;const ctx=null!=context?context:{},outcome=null!==(_a=ctx.outcome)&&void 0!==_a?_a:"success";ctx.rollMode=null!==(_d=null!==(_c=null!==(_b=ctx.rollMode)&&void 0!==_b?_b:ctx.secret?"blindroll":void 0)&&void 0!==_c?_c:game.settings.get("core","rollMode"))&&void 0!==_d?_d:"roll";let damageBaseModifier="";damage.base.modifier&&(damageBaseModifier=damage.base.modifier>0?` + ${damage.base.modifier}`:` - ${Math.abs(damage.base.modifier)}`);const outcomeLabel=game.i18n.localize(`PF2E.CheckOutcome.${outcome}`);let flavor=`<b>${damage.name}</b> (${outcomeLabel})`;if(damage.traits){flavor+=`<div class="tags">${damage.traits.map((trait=>{var _a;return null!==(_a=game.i18n.localize(CONFIG.PF2E.weaponTraits[trait]))&&void 0!==_a?_a:trait})).map((trait=>`<span class="tag">${trait}</span>`)).join("")}</div><hr>`}flavor+=`<div style="display: flex; flex-wrap: wrap;">${`<span class="damage-tag damage-tag-base">${game.i18n.localize("Base")} ${damage.base.diceNumber}${damage.base.dieSize}${damageBaseModifier} ${damage.base.damageType}</span>`}${[].concat(damage.diceModifiers.filter((m=>0!==m.diceNumber))).concat(damage.numericModifiers).filter((m=>m.enabled)).filter((m=>!m.critical||"criticalSuccess"===outcome)).map((m=>{var _a;return`<span class="damage-tag damage-tag-modifier">${game.i18n.localize(null!==(_a=m.label)&&void 0!==_a?_a:m.name)}${m instanceof modifiers_1.ModifierPF2e?` ${m.modifier<0?"":"+"}${m.modifier}`:""}${m.damageType&&m.damageType!==damage.base.damageType?` ${m.damageType}`:""}</span>`})).join("")}</div>`;flavor+=`${(null!==(_e=damage.notes)&&void 0!==_e?_e:[]).filter((note=>0===note.outcome.length||note.outcome.includes(outcome))).map((note=>TextEditor.enrichHTML(note.text))).join("<br />")}`;const formula=duplicate(damage.formula[outcome]);if(!formula)return void ui.notifications.error(game.i18n.format("PF2E.UI.noDamageInfoForOutcome",{outcome}));const rollData={outcome,rollMode:null!==(_f=ctx.rollMode)&&void 0!==_f?_f:"roll",traits:null!==(_g=damage.traits)&&void 0!==_g?_g:[],types:{},total:0,diceResults:{},baseDamageDice:damage.effectDice},rolls=[];let content=`\n    <div class="dice-roll">\n        <div class="dice-result">\n            <div class="dice-formula">${formula.formula}</div>\n            <div class="dice-tooltip" style="display: none;">`;for(const[damageType,categories]of Object.entries(formula.partials)){content+=`<div class="damage-type ${damageType}">`,content+=`<h3 class="flexrow"><span>${damageType}</span><i class="fa fa-${DamageRollModifiersDialog.getDamageTypeIcon(damageType)}"></i></h3>`,rollData.diceResults[damageType]={};for(const[damageCategory,partial]of Object.entries(categories)){const roll=new Roll(partial,formula.data).roll();rolls.push(roll);const damageValue=null!==(_h=rollData.types[damageType])&&void 0!==_h?_h:{};damageValue[damageCategory]=roll.total,rollData.types[damageType]=damageValue,rollData.total+=roll.total,rollData.diceResults[damageType][damageCategory]=[];const dice=roll.dice.flatMap((d=>d.results.map((r=>(rollData.diceResults[damageType][damageCategory].push(r.result),`<li class="roll die d${d.faces}">${r.result}</li>`))))).join("\n");content+=`\n            <section class="tooltip-part">\n                <div class="dice">\n                    <header class="part-header flexrow">\n                        <span class="part-formula">${partial}</span>\n                        <span class="part-flavor">${damageCategory}</span>\n                        <span class="part-total">${roll.total}</span>\n                    </header>\n                    <ol class="dice-rolls">${dice}</ol>\n                </div>\n            </section>\n            `}content+="</div>"}content+=`</div><h4 class="dice-total"><span id="value">${rollData.total}</span></h4></div></div>`;const roll=(()=>{const pool=new DicePool({rolls}).evaluate(),roll=Roll.create(pool.formula).evaluate();return roll.terms=[pool],roll.results=[pool.total],roll._total=pool.total,roll._rolled=!0,roll})();ChatMessage.create({type:CONST.CHAT_MESSAGE_TYPES.ROLL,speaker:ChatMessage.getSpeaker(),flavor,content:content.trim(),roll,flags:{core:{canPopout:!0},[game.system.id]:{damageRoll:rollData}}},{rollMode:null!==(_j=ctx.rollMode)&&void 0!==_j?_j:"roll"}),Hooks.call(`${game.system.id}.damageRoll`,rollData),callback&&callback(rollData)}getData(){return{damage:this.damage}}static getDamageTypeIcon(damageType){var _a;return null!==(_a=DamageRollModifiersDialog.DAMAGE_TYPE_ICONS[damageType])&&void 0!==_a?_a:damageType}}exports.DamageRollModifiersDialog=DamageRollModifiersDialog,DamageRollModifiersDialog.DAMAGE_TYPE_ICONS=Object.freeze({acid:"vial",bludgeoning:"hammer",chaotic:"dizzy",cold:"snowflake",electricity:"bolt",evil:"crow",fire:"fire",force:"hand-sparkles",good:"dove",lawful:"balance-scale",mental:"brain",negative:"skull",piercing:"bow-arrow",poison:"spider",positive:"sun",slashing:"swords",sonic:"volume-up"})},3586:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CUSTOM_DAMAGE_TYPES_TO_CATEGORIES=exports.BASE_DAMAGE_TYPES_TO_CATEGORIES=exports.DamageCategory=void 0;const utils_1=__webpack_require__(4930);exports.DamageCategory=Object.freeze({PHYSICAL:"physical",ENERGY:"energy",ALIGNMENT:"alignment",fromDamageType:damageType=>exports.CUSTOM_DAMAGE_TYPES_TO_CATEGORIES[damageType]||exports.BASE_DAMAGE_TYPES_TO_CATEGORIES[damageType]||damageType,addCustomDamageType:(category,type)=>{exports.CUSTOM_DAMAGE_TYPES_TO_CATEGORIES[type]=category},removeCustomDamageType:type=>delete exports.CUSTOM_DAMAGE_TYPES_TO_CATEGORIES[type],allCategories:()=>new Set([].concat(Object.values(exports.BASE_DAMAGE_TYPES_TO_CATEGORIES)).concat(Object.values(exports.CUSTOM_DAMAGE_TYPES_TO_CATEGORIES))),baseCategories:()=>new Set(Object.values(exports.BASE_DAMAGE_TYPES_TO_CATEGORIES)),customCategories:()=>{const result=new Set(Object.values(exports.CUSTOM_DAMAGE_TYPES_TO_CATEGORIES));for(const base of exports.DamageCategory.baseCategories())result.delete(base);return result},currentTypeMappings:()=>utils_1.combineObjects(exports.BASE_DAMAGE_TYPES_TO_CATEGORIES,exports.CUSTOM_DAMAGE_TYPES_TO_CATEGORIES,((_first,second)=>second)),toDamageTypes:category=>{const types=Object.entries(exports.DamageCategory.currentTypeMappings()).filter((([_key,value])=>value===category)).map((([key])=>key));return new Set(types)},clearCustom:()=>Object.keys(exports.CUSTOM_DAMAGE_TYPES_TO_CATEGORIES).forEach((key=>{delete exports.CUSTOM_DAMAGE_TYPES_TO_CATEGORIES[key]}))}),exports.BASE_DAMAGE_TYPES_TO_CATEGORIES=Object.freeze({bludgeoning:exports.DamageCategory.PHYSICAL,piercing:exports.DamageCategory.PHYSICAL,slashing:exports.DamageCategory.PHYSICAL,acid:exports.DamageCategory.ENERGY,cold:exports.DamageCategory.ENERGY,electricity:exports.DamageCategory.ENERGY,fire:exports.DamageCategory.ENERGY,sonic:exports.DamageCategory.ENERGY,positive:exports.DamageCategory.ENERGY,negative:exports.DamageCategory.ENERGY,force:exports.DamageCategory.ENERGY,chaotic:exports.DamageCategory.ALIGNMENT,evil:exports.DamageCategory.ALIGNMENT,good:exports.DamageCategory.ALIGNMENT,lawful:exports.DamageCategory.ALIGNMENT}),exports.CUSTOM_DAMAGE_TYPES_TO_CATEGORIES={}},7370:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2WeaponDamage=void 0;const modifiers_1=__webpack_require__(6243),runes_1=__webpack_require__(8468),damage_1=__webpack_require__(3586);function isNonPhysicalDamage(damageType){return void 0!==damageType&&""!==damageType&&damage_1.DamageCategory.fromDamageType(damageType)!==damage_1.DamageCategory.PHYSICAL}class PF2WeaponDamage{static calculateStrikeNPC(weapon,actor,traits=[],statisticsModifiers,damageDice,proficiencyRank=0,options=[],rollNotes){var _a,_b,_c,_d,_e;damageDice=duplicate(damageDice),weapon.data.range||(weapon.data.range={value:"ranged"===(null===(_b=null===(_a=weapon.data)||void 0===_a?void 0:_a.weaponType)||void 0===_b?void 0:_b.value)?"ranged":"melee"}),weapon.data.damage=null!==(_c=weapon.data.damage)&&void 0!==_c?_c:{};const damageRolls=Array.isArray(weapon.data.damageRolls)?weapon.data.damageRolls:Object.values(weapon.data.damageRolls);let parsedBaseDamage=!1;for(const dmg of damageRolls){let dice=null,die=null,modifier=0;const parts=dmg.damage.split("");let digits="",operator=null;for(const part of parts)"d"===part?(dice=Number(digits),digits=""):"+-".includes(part)?(operator?"-"===operator?modifier-=Number(digits):"+"===operator&&(modifier+=Number(digits)):die=`d${digits}`,digits="",operator=part):Number.isNaN(Number(part))||(digits+=part);if(dice&&!die?die=`d${digits}`:"-"===operator?modifier-=Number(digits):modifier+=Number(digits),parsedBaseDamage){if(dice&&die){const dd=null!==(_d=damageDice.damage)&&void 0!==_d?_d:[];dd.push({selector:"damage",name:"Base",diceNumber:dice,dieSize:die,damageType:dmg.damageType}),damageDice.damage=dd}if(modifier){const modifiers=null!==(_e=statisticsModifiers.damage)&&void 0!==_e?_e:[],dm=new modifiers_1.ModifierPF2e("Base",modifier,"untyped");dm.damageType=dmg.damageType,modifiers.push(dm),statisticsModifiers.damage=modifiers}}else weapon.data.damage.dice=dice,weapon.data.damage.die=die,("ranged"!==weapon.data.range.value||traits.some((trait=>trait.name.startsWith("thrown"))))&&(modifier-=actor.data.abilities.str.mod),weapon.data.damage.modifier=modifier,weapon.data.damage.damageType=dmg.damageType,parsedBaseDamage=!0}return PF2WeaponDamage.calculate(weapon,actor,traits,statisticsModifiers,damageDice,proficiencyRank,options,rollNotes,null,{})}static calculate(weapon,actor,traits=[],statisticsModifiers,damageDice,proficiencyRank=-1,options=[],rollNotes,weaponPotency,striking){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u,_v,_w,_x,_y;let effectDice=null!==(_a=weapon.data.damage.dice)&&void 0!==_a?_a:1;const diceModifiers=[],numericModifiers=[];let baseDamageDie=weapon.data.damage.die,baseDamageType=weapon.data.damage.damageType;options=traits.filter((trait=>!trait.toggle)).map((t=>t.name)).concat(options),proficiencyRank>=0&&options.push(modifiers_1.PROFICIENCY_RANK_OPTION[proficiencyRank]);let ability=null;{let modifier=0;const melee=["melee","reach",""].includes(null===(_d=null===(_c=null===(_b=weapon.data)||void 0===_b?void 0:_b.range)||void 0===_c?void 0:_c.value)||void 0===_d?void 0:_d.trim())||traits.some((t=>t.name.startsWith("thrown")));if(melee?(ability="str",modifier=Math.floor((actor.data.abilities.str.value-10)/2),options.push("melee")):options.push("ranged"),traits.some((t=>"propulsive"===t.name))){ability="str";const strengthModifier=Math.floor((actor.data.abilities.str.value-10)/2);modifier=strengthModifier<0?strengthModifier:Math.floor(strengthModifier/2)}actor.items.some((i=>"feat"===i.type&&"thief-racket"===i.data.slug))&&!traits.some((t=>"unarmed"===t.name))&&traits.some((t=>"finesse"===t.name))&&melee&&Math.floor((actor.data.abilities.dex.value-10)/2)>modifier&&(ability="dex",modifier=Math.floor((actor.data.abilities.dex.value-10)/2)),ability&&numericModifiers.push(new modifiers_1.ModifierPF2e(CONFIG.PF2E.abilities[ability],modifier,modifiers_1.MODIFIER_TYPE.ABILITY))}const selectors=PF2WeaponDamage.getSelectors(weapon,ability,proficiencyRank),twoHandTrait=traits.find((t=>t.name.toLowerCase().startsWith("two-hand-")));twoHandTrait&&options.some((o=>o===twoHandTrait.rollOption))&&(baseDamageDie=twoHandTrait.name.substring(twoHandTrait.name.lastIndexOf("-")+1));const versatileTrait=traits.find((t=>t.name.toLowerCase().startsWith("versatile-")));if(versatileTrait&&options.some((o=>o===versatileTrait.rollOption))){baseDamageType={b:"bludgeoning",p:"piercing",s:"slashing"}[versatileTrait.name.substring(versatileTrait.name.lastIndexOf("-")+1)]}const normalDice=null!==(_g=null===(_f=null===(_e=weapon.data)||void 0===_e?void 0:_e.property1)||void 0===_f?void 0:_f.dice)&&void 0!==_g?_g:0;if(normalDice>0){const damageType=null!==(_k=null===(_j=null===(_h=weapon.data)||void 0===_h?void 0:_h.property1)||void 0===_j?void 0:_j.damageType)&&void 0!==_k?_k:baseDamageType;diceModifiers.push(new modifiers_1.DiceModifierPF2e({name:"PF2E.WeaponCustomDamageLabel",diceNumber:normalDice,dieSize:null===(_m=null===(_l=weapon.data)||void 0===_l?void 0:_l.property1)||void 0===_m?void 0:_m.die,damageType,traits:isNonPhysicalDamage(damageType)?[damageType]:[]}))}const critDice=null!==(_q=null===(_p=null===(_o=weapon.data)||void 0===_o?void 0:_o.property1)||void 0===_p?void 0:_p.critDice)&&void 0!==_q?_q:0;if(critDice>0){const damageType=null!==(_t=null===(_s=null===(_r=weapon.data)||void 0===_r?void 0:_r.property1)||void 0===_s?void 0:_s.critDamageType)&&void 0!==_t?_t:baseDamageType;diceModifiers.push(new modifiers_1.DiceModifierPF2e({name:"PF2E.WeaponCustomDamageLabel",diceNumber:critDice,dieSize:null===(_v=null===(_u=weapon.data)||void 0===_u?void 0:_u.property1)||void 0===_v?void 0:_v.critDie,damageType,critical:!0,traits:isNonPhysicalDamage(damageType)?[damageType]:[]}))}const potency=null!==(_w=null==weaponPotency?void 0:weaponPotency.bonus)&&void 0!==_w?_w:0;let strikingDice=0;{const strikingList=[];selectors.forEach((key=>{var _a;(null!==(_a=striking[key])&&void 0!==_a?_a:[]).filter((wp=>modifiers_1.ModifierPredicate.test(wp.predicate,options))).forEach((wp=>strikingList.push(wp)))}));const strikingRune="weapon"===weapon.type?runes_1.getStrikingDice(weapon.data):null;if(strikingRune&&strikingList.push({label:"PF2E.StrikingRuneLabel",bonus:strikingRune}),strikingList.length>0){const s=strikingList.reduce(((highest,current)=>highest.bonus>current.bonus?highest:current),strikingList[0]);effectDice+=s.bonus,strikingDice=s.bonus,diceModifiers.push(new modifiers_1.DiceModifierPF2e({name:s.label,diceNumber:s.bonus,traits:["magical"]}))}}if(runes_1.getPropertyRuneModifiers(weapon).forEach((modifier=>diceModifiers.push(modifier))),runes_1.hasGhostTouchRune(weapon)&&diceModifiers.push(new modifiers_1.DiceModifierPF2e({name:"PF2E.WeaponPropertyRuneGhostTouch",traits:["ghostTouch"]})),traits.some((t=>"backstabber"===t.name))&&options.includes("target:flatFooted")){const modifier=new modifiers_1.ModifierPF2e(CONFIG.PF2E.weaponTraits.backstabber,potency>2?2:1,modifiers_1.MODIFIER_TYPE.UNTYPED);modifier.damageCategory="precision",numericModifiers.push(modifier)}traits.filter((t=>t.name.startsWith("deadly-"))).forEach((t=>{const deadly=t.name.substring(t.name.indexOf("-")+1),diceNumber=deadly.match(/\d+d\d+/)?parseInt(deadly.substring(0,deadly.indexOf("d")),10):strikingDice>1?strikingDice:1;diceModifiers.push(new modifiers_1.DiceModifierPF2e({name:CONFIG.PF2E.weaponTraits[t.name],diceNumber,dieSize:deadly.substring(deadly.indexOf("d")),critical:!0}))})),traits.filter((t=>t.name.startsWith("fatal-"))).forEach((t=>{const dieSize=t.name.substring(t.name.indexOf("-")+1);diceModifiers.push(new modifiers_1.DiceModifierPF2e({name:CONFIG.PF2E.weaponTraits[t.name],diceNumber:1,dieSize,critical:!0,enabled:!0,override:{dieSize}}))}));const weaponSpecializationDamage=proficiencyRank>1?proficiencyRank:0;weaponSpecializationDamage>0&&(actor.items.some((i=>"feat"===i.type&&i.name.startsWith("Greater Weapon Specialization")))?numericModifiers.push(new modifiers_1.ModifierPF2e("PF2E.GreaterWeaponSpecialization",2*weaponSpecializationDamage,modifiers_1.MODIFIER_TYPE.UNTYPED)):actor.items.some((i=>"feat"===i.type&&i.name.startsWith("Weapon Specialization")))&&numericModifiers.push(new modifiers_1.ModifierPF2e("PF2E.WeaponSpecialization",weaponSpecializationDamage,modifiers_1.MODIFIER_TYPE.UNTYPED)));const splashDamage=Number(null===(_x=weapon.data.splashDamage)||void 0===_x?void 0:_x.value)||0;splashDamage>0&&numericModifiers.push(new modifiers_1.ModifierPF2e("PF2E.WeaponSplashDamageLabel",splashDamage,modifiers_1.MODIFIER_TYPE.UNTYPED));const bonusDamage=Number(null===(_y=weapon.data.bonusDamage)||void 0===_y?void 0:_y.value)||0;bonusDamage>0&&numericModifiers.push(new modifiers_1.ModifierPF2e("PF2E.WeaponBonusDamageLabel",bonusDamage,modifiers_1.MODIFIER_TYPE.UNTYPED));const notes=[];selectors.forEach((key=>{var _a;(statisticsModifiers[key]||[]).map((m=>duplicate(m))).forEach((m=>{var _a;const modifier=new modifiers_1.ModifierPF2e(game.i18n.localize(m.name),m.modifier,m.type);modifier.label=m.label,m.damageType&&(modifier.damageType=m.damageType),m.damageCategory&&(modifier.damageCategory=m.damageCategory),modifier.ignored=!new modifiers_1.ModifierPredicate(null!==(_a=m.predicate)&&void 0!==_a?_a:{}).test(options),numericModifiers.push(modifier)})),(null!==(_a=rollNotes[key])&&void 0!==_a?_a:[]).map((note=>duplicate(note))).filter((note=>modifiers_1.ModifierPredicate.test(note.predicate,options))).forEach((note=>notes.push(note)))}));const damage={name:`Damage Roll: ${weapon.name}`,base:{diceNumber:weapon.data.damage.dice,dieSize:baseDamageDie,modifier:weapon.data.damage.modifier,category:damage_1.DamageCategory.fromDamageType(baseDamageType),damageType:baseDamageType,traits:[]},effectDice,diceModifiers,numericModifiers,traits:(null!=traits?traits:[]).map((t=>t.name)),formula:{}};{const stats=[];stats.push(`${weapon.name.slugify()}-damage`),stats.concat([`${weapon._id}-damage`,"damage"]).forEach((key=>{(damageDice[key]||[]).map((d=>new modifiers_1.DamageDicePF2e(d))).forEach((d=>{d.enabled=d.predicate.test(options),diceModifiers.push(d)}))}))}return diceModifiers.forEach((d=>{var _a;d.name=game.i18n.localize(d.name),d.diceNumber>0&&d.dieSize?d.name+=` +${d.diceNumber}${d.dieSize}`:d.diceNumber>0?d.name+=` +${d.diceNumber}${damage.base.dieSize}`:d.dieSize&&(d.name+=` ${d.dieSize}`),!d.category||!(d.diceNumber>0||d.dieSize)||d.damageType&&d.damageType!==damage.base.damageType||(d.name+=` ${d.category}`),d.label=d.name,d.enabled=new modifiers_1.ModifierPredicate(null!==(_a=d.predicate)&&void 0!==_a?_a:{}).test(options),d.ignored=!d.enabled})),damage.formula.success=this.getFormula(damage,!1),damage.formula.criticalSuccess=this.getFormula(damage,!0),damage.notes=notes,damage}static getFormula(damage,critical){var _a,_b;const base=duplicate(damage.base),diceModifiers=damage.diceModifiers;diceModifiers.filter((dm=>dm.enabled)).filter((dm=>dm.override)).forEach((dm=>{var _a,_b,_c,_d,_e,_f,_g,_h;critical&&dm.critical?(base.dieSize=null!==(_b=null===(_a=dm.override)||void 0===_a?void 0:_a.dieSize)&&void 0!==_b?_b:base.dieSize,base.damageType=null!==(_d=null===(_c=dm.override)||void 0===_c?void 0:_c.damageType)&&void 0!==_d?_d:base.damageType):dm.critical||(base.dieSize=null!==(_f=null===(_e=dm.override)||void 0===_e?void 0:_e.dieSize)&&void 0!==_f?_f:base.dieSize,base.damageType=null!==(_h=null===(_g=dm.override)||void 0===_g?void 0:_g.damageType)&&void 0!==_h?_h:base.damageType)}));const dicePool={},critPool={};dicePool[base.damageType]={base:!0,categories:{[null!==(_a=base.category)&&void 0!==_a?_a:damage_1.DamageCategory.fromDamageType(base.damageType)]:{dice:{[base.dieSize]:base.diceNumber},modifier:null!==(_b=base.modifier)&&void 0!==_b?_b:0}}},diceModifiers.filter((dm=>dm.enabled)).filter((dm=>!dm.critical||critical)).forEach((dm=>{var _a,_b,_c,_d,_e,_f;critical&&dm.critical?(dm.diceNumber&&this.addDice(critPool,null!==(_a=dm.damageType)&&void 0!==_a?_a:base.damageType,dm.category,null!==(_b=dm.dieSize)&&void 0!==_b?_b:base.dieSize,dm.diceNumber),(null!==(_c=dm.traits)&&void 0!==_c?_c:[]).forEach((t=>{damage.traits.includes(t)||damage.traits.push(t)}))):dm.critical||(dm.diceNumber&&this.addDice(dicePool,null!==(_d=dm.damageType)&&void 0!==_d?_d:base.damageType,dm.category,null!==(_e=dm.dieSize)&&void 0!==_e?_e:base.dieSize,dm.diceNumber),(null!==(_f=dm.traits)&&void 0!==_f?_f:[]).forEach((t=>{damage.traits.includes(t)||damage.traits.push(t)})))}));{const modifiers=[];damage.numericModifiers.filter((nm=>nm.enabled)).filter((nm=>!nm.critical||critical)).forEach((nm=>{critical&&nm.critical?modifiers.push(nm):nm.critical||modifiers.push(nm)})),Object.entries(modifiers.reduce(((accumulator,current)=>{var _a,_b;const dmg=null!==(_a=current.damageType)&&void 0!==_a?_a:base.damageType;return accumulator[dmg]=(null!==(_b=accumulator[dmg])&&void 0!==_b?_b:[]).concat(current),accumulator}),{})).map((([damageType,damageTypeModifiers])=>new modifiers_1.StatisticModifier(`${damageType}-damage-stacking-rules`,damageTypeModifiers).modifiers)).flatMap((nm=>nm)).filter((nm=>nm.enabled)).filter((nm=>!nm.critical||critical)).forEach((nm=>{var _a,_b,_c,_d,_e;const damageType=null!==(_a=nm.damageType)&&void 0!==_a?_a:base.damageType;let pool=dicePool[damageType];pool||(pool={categories:{}},dicePool[damageType]=pool);let category=pool.categories[null!==(_b=nm.damageCategory)&&void 0!==_b?_b:damage_1.DamageCategory.fromDamageType(damageType)];category||(category={},pool.categories[null!==(_c=nm.damageCategory)&&void 0!==_c?_c:damage_1.DamageCategory.fromDamageType(damageType)]=category),category.modifier=(null!==(_d=category.modifier)&&void 0!==_d?_d:0)+nm.modifier,(null!==(_e=nm.traits)&&void 0!==_e?_e:[]).filter((t=>!damage.traits.includes(t))).forEach((t=>{damage.traits.push(t)}))}))}const partials={};let formula=this.buildFormula(dicePool,partials);if(critical){formula=this.doubleFormula(formula);for(const[damageType,categories]of Object.entries(partials))for(const[damageCategory,f]of Object.entries(categories))partials[damageType][damageCategory]=this.doubleFormula(f);const critFormula=this.buildFormula(critPool,partials);critFormula&&(formula+=` + ${critFormula}`)}return{formula,partials,data:{effectiveDamageDice:damage.effectDice}}}static addDice(pool,damageType,category,dieSize,count){var _a;pool[damageType]=pool[damageType]||{categories:{}};const damagePool=pool[damageType];damagePool.categories[null!=category?category:damage_1.DamageCategory.fromDamageType(damageType)]=damagePool.categories[null!=category?category:damage_1.DamageCategory.fromDamageType(damageType)]||{};const damageCategory=damagePool.categories[null!=category?category:damage_1.DamageCategory.fromDamageType(damageType)];return damageCategory.dice=damageCategory.dice||{},damageCategory.dice[dieSize]=(null!==(_a=damageCategory.dice[dieSize])&&void 0!==_a?_a:0)+count,pool}static buildFormula(pool,partials={}){var _a,_b;const parts=[];let minValue=0;for(const[type,cats]of Object.entries(pool))for(const[category,info]of Object.entries(cats.categories)){const p=[];for(const[dieSize,count]of Object.entries(null!==(_a=info.dice)&&void 0!==_a?_a:{}))minValue+=count,parts.push(`${count}${dieSize}`),p.push(`${count}${dieSize}`);info.modifier&&(minValue+=info.modifier,parts.push(info.modifier.toString()),p.push(info.modifier.toString())),partials[type]=null!==(_b=partials[type])&&void 0!==_b?_b:{};let formula=partials[type][category],offset=0;formula||(formula=p[0],offset=1),partials[type][category]=[formula].concat(p.slice(offset).flatMap((part=>part.startsWith("-")?["-",part.substring(1)]:["+",part]))).join(" ")}if(0===parts.length)return"";const formula=[parts[0]].concat(parts.slice(1).flatMap((part=>part.startsWith("-")?["-",part.substring(1)]:["+",part]))).join(" ");return minValue<=0?`{${formula}, 1}kh`:formula}static doubleFormula(formula){if("doubledamage"===game.settings.get("pf2e","critRule"))return`2 * (${formula})`;return new Roll(formula,{}).alter(2,0,{multiplyNumeric:!0}).formula}static getSelectors(weapon,ability,proficiencyRank){var _a;const selectors=[];if((null===(_a=weapon.data.group)||void 0===_a?void 0:_a.value)&&selectors.push(`${weapon.data.group.value.toLowerCase()}-weapon-group-damage`),ability&&selectors.push(`${ability}-damage`),proficiencyRank>=0){const proficiencies=["untrained","trained","expert","master","legendary"];selectors.push(`${proficiencies[proficiencyRank]}-damage`)}return selectors.push(`${weapon.name.slugify()}-damage`),selectors.concat([`${weapon._id}-damage`,"mundane-damage","damage"])}}exports.PF2WeaponDamage=PF2WeaponDamage},9692:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.EffectPanel=void 0;const conditions_1=__webpack_require__(5330),others_1=__webpack_require__(5079),effect_1=__webpack_require__(541);class EffectPanel extends Application{constructor(){super(...arguments),this.timeout=void 0}static get defaultOptions(){return mergeObject(super.defaultOptions,{popOut:!1,template:"systems/pf2e/templates/system/effect-panel.html"})}refresh(){this.timeout&&window.clearTimeout(this.timeout),this.timeout=window.setTimeout((()=>{this.render(!1)}),100)}getData(options){var _a,_b,_c,_d,_e,_f,_g,_h,_j;const data=super.getData(options);if(data.conditions=[],data.effects=[],data.actor=EffectPanel.actor,data.actor)for(const item of data.actor.items)if(item instanceof others_1.ConditionPF2e&&item.fromSystem)data.conditions.push(item.data);else if(item instanceof effect_1.EffectPF2e){const effect=duplicate(item.data),duration=EffectPanel.getEffectDuration(effect);if(duration<0)effect.data.expired=!1,effect.data.remaining=game.i18n.localize("PF2E.EffectPanel.UnlimitedDuration");else{const remaining=(null!==(_b=null===(_a=effect.data.start)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:0)+duration-game.time.worldTime;effect.data.expired=remaining<=0;let initiative=0;0===remaining&&(null===(_d=null===(_c=game.combat)||void 0===_c?void 0:_c.data)||void 0===_d?void 0:_d.active)&&(null===(_f=null===(_e=game.combat)||void 0===_e?void 0:_e.turns)||void 0===_f?void 0:_f.length)>(null===(_g=game.combat)||void 0===_g?void 0:_g.turn)&&(initiative=game.combat.turns[game.combat.turn].initiative,initiative===effect.data.start.initiative?"turn-start"===effect.data.duration.expiry?effect.data.expired=!0:"turn-end"===effect.data.duration.expiry?effect.data.expired=!1:(effect.data.expired=!0,console.warn(`Unknown value ${effect.data.duration.expiry} for duration expiry field in effect "${null==effect?void 0:effect.name}".`)):effect.data.expired=initiative<(null!==(_h=effect.data.start.initiative)&&void 0!==_h?_h:0)),effect.data.remaining=effect.data.expired?game.i18n.localize("PF2E.EffectPanel.Expired"):EffectPanel.getRemainingDurationLabel(remaining,null!==(_j=effect.data.start.initiative)&&void 0!==_j?_j:0,effect.data.duration.expiry)}data.effects.push(effect)}return data.conditions=conditions_1.ConditionManager.getFlattenedConditions(data.conditions).map((c=>(c.locked=c.parents.length>0,c.breakdown=EffectPanel.getParentConditionsBreakdown(c.parents),c))),data}activateListeners(html){super.activateListeners(html),$(html).on("contextmenu",'[data-item-id]:not([data-item-id=""])',(async event=>{var _a;const actor=EffectPanel.actor;if(!actor)return;const effect=actor.items.get(null!==(_a=event.currentTarget.dataset.itemId)&&void 0!==_a?_a:"");effect instanceof others_1.ConditionPF2e?await actor.removeOrReduceCondition(effect):effect instanceof effect_1.EffectPF2e&&await effect.delete()}))}static get actor(){var _a,_b,_c;return null!==(_b=null===(_a=canvas.tokens.controlled[0])||void 0===_a?void 0:_a.actor)&&void 0!==_b?_b:null===(_c=game.user)||void 0===_c?void 0:_c.character}static getParentConditionsBreakdown(conditions){let breakdown="";if((null!=conditions?conditions:[]).length>0){const list=Array.from(new Set(conditions.map((p=>p.name)))).sort().join(", ");breakdown=`${game.i18n.format("PF2E.EffectPanel.AppliedBy",{"condition-list":list})}`}return breakdown}static getEffectDuration(effect){var _a;const{duration}=effect.data;return"unlimited"===duration.unit?-1:duration.value*(null!==(_a=this.UNITS[duration.unit])&&void 0!==_a?_a:0)}static getRemainingDurationLabel(remaining,initiative,expiry){if(remaining>=63072e3)return game.i18n.format("PF2E.EffectPanel.RemainingDuration.MultipleYears",{years:Math.floor(remaining/31536e3)});if(remaining>=31536e3)return game.i18n.localize("PF2E.EffectPanel.RemainingDuration.SingleYear");if(remaining>=1209600)return game.i18n.format("PF2E.EffectPanel.RemainingDuration.MultipleWeeks",{weeks:Math.floor(remaining/604800)});if(remaining>604800)return game.i18n.localize("PF2E.EffectPanel.RemainingDuration.SingleWeek");if(remaining>=172800)return game.i18n.format("PF2E.EffectPanel.RemainingDuration.MultipleDays",{days:Math.floor(remaining/86400)});if(remaining>7200)return game.i18n.format("PF2E.EffectPanel.RemainingDuration.MultipleHours",{hours:Math.floor(remaining/3600)});if(remaining>120)return game.i18n.format("PF2E.EffectPanel.RemainingDuration.MultipleMinutes",{minutes:Math.floor(remaining/60)});if(remaining>=12)return game.i18n.format("PF2E.EffectPanel.RemainingDuration.MultipleRounds",{rounds:Math.floor(remaining/6)});if(remaining>=6)return game.i18n.localize("PF2E.EffectPanel.RemainingDuration.SingleRound");if(remaining>=2)return game.i18n.format("PF2E.EffectPanel.RemainingDuration.MultipleSeconds",{seconds:remaining});if(1===remaining)return game.i18n.localize("PF2E.EffectPanel.RemainingDuration.SingleSecond");{const key="turn-end"===expiry?"PF2E.EffectPanel.RemainingDuration.ZeroRoundsExpireTurnEnd":"PF2E.EffectPanel.RemainingDuration.ZeroRoundsExpireTurnStart";return game.i18n.format(key,{initiative})}}}exports.EffectPanel=EffectPanel,EffectPanel.UNITS={rounds:6,minutes:60,hours:3600,days:86400}},1608:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LocalizePF2e=void 0;class LocalizePF2e{static get translations(){if(!this.ready)throw Error("PF2e System | TranslationsPF2e instantiated too early");return void 0===this._translations&&(this._translations=mergeObject(game.i18n._fallback,game.i18n.translations,{enforceTypes:!0})),this._translations}}exports.LocalizePF2e=LocalizePF2e,LocalizePF2e.ready=!1},8916:()=>{function degtorad(degrees){return degrees*Math.PI/180}TemplateLayer.prototype._onDragLeftStart=function(event){PlaceablesLayer.prototype._onDragLeftStart.call(this,event);const tool=game.activeTool,origin=event.data.origin;let pos;pos=(["cone","circle"].includes(tool),canvas.grid.getSnappedPosition(origin.x,origin.y,2)),origin.x=pos.x,origin.y=pos.y;const data={user:game.user._id,t:tool,x:pos.x,y:pos.y,distance:0,direction:0,fillColor:game.user.data.color||"#FF0000"};"cone"===tool?data.angle=90:"ray"===tool&&(data.width=5);const template=new MeasuredTemplate(data);event.data.preview=this.preview.addChild(template),template.draw()},TemplateLayer.prototype._onDragLeftMove=function(event){if(PlaceablesLayer.prototype._onDragLeftMove.call(this,event),event.data.createState>=1){const dest=event.data.destination,{x,y}=canvas.grid.getSnappedPosition(dest.x,dest.y,2);dest.x=x,dest.y=y;const template=event.data.preview,ray=new Ray(event.data.origin,event.data.destination),ratio=canvas.dimensions.size/canvas.dimensions.distance;if(["cone","circle"].includes(template.data.t)){const direction=ray.angle;template.data.direction=toDegrees(Math.floor((direction+.125*Math.PI)/(.25*Math.PI))*(.25*Math.PI));const distance=ray.distance/ratio;template.data.distance=Math.floor(distance/canvas.dimensions.distance)*canvas.dimensions.distance}else template.data.direction=toDegrees(ray.angle),template.data.distance=ray.distance/ratio;template.refresh(),event.data.createState=2}};const MeasuredTemplateHighlightGrid=MeasuredTemplate.prototype.highlightGrid;MeasuredTemplate.prototype.highlightGrid=function(){if(!["circle","cone"].includes(this.data.t))return void MeasuredTemplateHighlightGrid.call(this);const grid=canvas.grid,d=canvas.dimensions,bc=this.borderColor,fc=this.fillColor;if(!this.id||!this.shape)return;const hl=grid.getHighlightLayer(`Template.${this.id}`);hl.clear();const nr=Math.ceil(1.5*this.data.distance/d.distance/(d.size/grid.h)),nc=Math.ceil(1.5*this.data.distance/d.distance/(d.size/grid.w)),x=this.data.x,y=this.data.y,[cx,cy]=grid.getCenter(x,y),[col0,row0]=grid.grid.getGridPositionFromPixels(cx,cy),minAngle=(360+(this.data.direction-.5*this.data.angle)%360)%360,maxAngle=(360+(this.data.direction+.5*this.data.angle)%360)%360,measureDistance=(p0,p1)=>{const gs=canvas.dimensions.size,ray=new Ray(p0,p1),nx=Math.ceil(Math.abs(ray.dx/gs)),ny=Math.ceil(Math.abs(ray.dy/gs)),nDiagonal=Math.min(nx,ny),nStraight=Math.abs(ny-nx);return Math.floor(1.5*nDiagonal+nStraight)*canvas.dimensions.distance},originOffset={x:0,y:0};if("cone"===this.data.t){const dir=(this.data.direction>=0?360-this.data.direction:-this.data.direction)%360,xOffset=this.data.x%d.size!=0?Math.sign(1*Math.round(100*Math.cos(degtorad(dir)))/100)/2:0,yOffset=this.data.y%d.size!=0?-Math.sign(1*Math.round(100*Math.sin(degtorad(dir)))/100)/2:0;originOffset.x=xOffset,originOffset.y=yOffset}let origin={x:this.data.x+originOffset.x*d.size,y:this.data.y+originOffset.y*d.size};for(let a=-nc;a<nc;a++)for(let b=-nr;b<nr;b++){const[gx,gy]=canvas.grid.grid.getPixelsFromGridPosition(col0+a,row0+b),[cellCenterX,cellCenterY]=[gx+.5*d.size,gy+.5*d.size];origin={x:this.data.x,y:this.data.y},origin.x+=originOffset.x*d.size,origin.y+=originOffset.y*d.size;const ray=new Ray(origin,{x:cellCenterX,y:cellCenterY}),rayAngle=(360+ray.angle/(Math.PI/180)%360)%360;if("cone"===this.data.t&&ray.distance>0&&(value=(360+(value=rayAngle)%360)%360,!((min=(360+(min=minAngle)%360)%360)<(max=(360+(max=maxAngle)%360)%360)?value>=min&&value<=max:value>=min||value<=max)))continue;measureDistance({x:cellCenterX,y:cellCenterY},origin)<=this.data.distance&&grid.grid.highlightGridPosition(hl,{x:gx,y:gy,color:fc,border:bc})}var min,max,value}},6159:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.NPCSkillsEditor=void 0;const base_1=__webpack_require__(9978),utils_1=__webpack_require__(4930);class NPCSkillsEditor extends FormApplication{constructor(actor,options){super(actor,options)}get npc(){return this.object}static get defaultOptions(){const options=super.defaultOptions;return options.id="npc-skills-selector",options.classes=["pf2e","npc"],options.title=game.i18n.localize("PF2E.NPC.SkillsEditor.TitleLabel"),options.template="systems/pf2e/templates/actors/npc/forms/npc-skills-editor.html",options.width="auto",options.height=700,options.scrollY=[".skills-list"],options}getData(){const skills={},missingSkills={};for(const skillId of Object.keys(this.npc.data.data.skills)){const skill=this.object.data.data.skills[skillId];this.isLoreSkill(skillId)?(skill.isLore=!0,skills[skillId]=skill):skill.visible?(skill.label=game.i18n.localize("PF2E.Skill"+skill.name),skills[skillId]=skill):missingSkills[skillId]=skill}return Object.assign(Object.assign({},super.getData()),{skills,missingSkills})}activateListeners(html){super.activateListeners(html),html.find(".delete").on("click",(event=>this.onRemoveSkillClicked(event))),html.find(".add-lore-button").on("click",(event=>this.onAddLoreSkillClicked(event))),html.find(".item-edit").on("click",(event=>this.onEditSkillClicked(event))),html.find(".add-skill-button").on("click",(event=>this.onAddSkillClicked(event)))}async onAddSkillClicked(eventData){eventData.preventDefault();const skillId=$(eventData.currentTarget).parents("#skill-selector").find("select").val(),itemName=this.findSkillName(skillId).replace(/-/g," ").titleCase();await this.npc.createOwnedItem({name:itemName,type:"lore"}),this.render(!0)}async onRemoveSkillClicked(event){event.preventDefault();const skillContainer=$(event.currentTarget).parents(".skill"),skillId=skillContainer.attr("data-skill"),skillItem=this.findSkillItem(skillId);skillItem?(skillContainer.remove(),await this.npc.deleteOwnedItem(skillItem._id),this.render(!0)):console.error("Unable to delete skill, couldn't find skill item.")}async onAddLoreSkillClicked(event){event.preventDefault();const loreName=$(event.currentTarget).parents("#lore-skill-creator").find("input").val(),data={name:loreName,type:"lore",label:loreName,data:{mod:{value:0}}};await this.npc.createOwnedItem(data),this.render(!0)}onEditSkillClicked(event){const skillId=$(event.currentTarget).parents(".skill").attr("data-skill"),item=this.findSkillItem(skillId);if(!item)throw utils_1.ErrorPF2e(`Unable to find item for skill ${skillId}. Can't edit the skill.`);item.sheet.render(!0)}async _updateObject(_event,formData){for(const[key,skillData]of Object.entries(formData)){const skillId=key,value=parseInt(skillData,10),skillItem=this.findSkillItem(skillId);if(!skillItem)return;skillItem.data.data.mod.value!==value&&value>0&&await skillItem.update({"data.mod.value":value})}}isLoreSkill(skillId){return!this.isRegularSkill(skillId)}isRegularSkill(skillId){for(const key of Object.keys(base_1.SKILL_EXPANDED)){if(key===skillId)return!0;if(base_1.SKILL_EXPANDED[key].shortform===skillId)return!0}return!1}findSkillName(skillId){for(const skillDataId of Object.keys(base_1.SKILL_EXPANDED)){if(base_1.SKILL_EXPANDED[skillDataId].shortform==skillId)return skillDataId}return skillId}findSkillItem(skillId){const skill=this.npc.data.data.skills[skillId];return void 0===skill?(console.error(`No skill found with skill id ${skillId}`),null):void 0===skill.itemID?(console.error("Skill has no itemID defined."),null):this.npc.itemTypes.lore.find((item=>item.id===skill.itemID))}}exports.NPCSkillsEditor=NPCSkillsEditor},7540:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.adaptRoll=exports.PF2DamageRoll=exports.CheckPF2e=void 0;const check_modifiers_dialog_1=__webpack_require__(2804),damage_roll_modifiers_dialog_1=__webpack_require__(7428),modifiers_1=__webpack_require__(6243);class CheckPF2e{static roll(check,context={},event,callback){var _a,_b;if((null===(_a=context.options)||void 0===_a?void 0:_a.length)&&(check.modifiers.forEach((modifier=>{modifier.ignored=!modifiers_1.ModifierPredicate.test(modifier.predicate,context.options)})),check.applyStackingRules(),context.options.map((o=>o.toLowerCase())).includes("secret")&&(context.secret=!0)),context){const visible=note=>{var _a;return modifiers_1.ModifierPredicate.test(note.predicate,null!==(_a=context.options)&&void 0!==_a?_a:[])};context.notes=(null!==(_b=context.notes)&&void 0!==_b?_b:[]).filter(visible)}((null==event?void 0:event.ctrlKey)||(null==event?void 0:event.metaKey))&&(context.secret=!0);!game.user.getFlag("pf2e","settings.showRollDialogs")!==(null==event?void 0:event.shiftKey)?check_modifiers_dialog_1.CheckModifiersDialog.roll(check,context,callback):new check_modifiers_dialog_1.CheckModifiersDialog(check,context,callback).render(!0)}static async rerollFromMessage(message,{heroPoint=!1,keep="new"}={}){var _a,_b,_c,_d,_e;if(!message.isAuthor&&!game.user.isGM)return void ui.notifications.error(game.i18n.localize("PF2E.RerollMenu.ErrorCantDelete"));const actor=game.actors.get(null!==(_a=message.data.speaker.actor)&&void 0!==_a?_a:"");let rerollFlavor=game.i18n.localize(`PF2E.RerollMenu.MessageKeep.${keep}`);if(heroPoint){if(!actor)return void ui.notifications.error(game.i18n.localize("PF2E.RerollMenu.ErrorNoActor"));{const heroPointCount=actor.data.data.attributes.heroPoints.rank;if(!heroPointCount)return void ui.notifications.warn(game.i18n.format("PF2E.RerollMenu.WarnNoHeroPoint",{name:actor.name}));await actor.update({"data.attributes.heroPoints.rank":Math.clamped(heroPointCount-1,0,3)}),rerollFlavor=game.i18n.format("PF2E.RerollMenu.MessageHeroPoint",{name:actor.name})}}await message.delete();const oldRoll=message.roll,newRoll=oldRoll.reroll();let keepRoll=newRoll,[oldRollClass,newRollClass]=["pf2e-reroll-discard",""];("best"===keep&&oldRoll.total>newRoll.total||"worst"===keep&&oldRoll.total<newRoll.total)&&([oldRollClass,newRollClass]=[newRollClass,oldRollClass],keepRoll=oldRoll);const newMessage=await ChatMessage.create({roll:keepRoll,content:`<div class="${oldRollClass}">${await CheckPF2e.renderReroll(oldRoll)}</div><div class='pf2e-reroll-second ${newRollClass}'>${await CheckPF2e.renderReroll(newRoll)}</div>`,flavor:`<i class='fa fa-dice pf2e-reroll-indicator' title="${rerollFlavor}"></i>${message.data.flavor}`,sound:CONFIG.sounds.dice,speaker:message.data.speaker},{rollMode:null!==(_e=null===(_d=null===(_c=null===(_b=message.data.flags)||void 0===_b?void 0:_b.pf2e)||void 0===_c?void 0:_c.context)||void 0===_d?void 0:_d.rollMode)&&void 0!==_e?_e:"roll"});await newMessage.setFlag("pf2e","canReroll",!1)}static async renderReroll(roll){let rollHtml=await roll.render();if(0===roll.dice.length)return rollHtml;const die=roll.dice[0];return 20==die.total?rollHtml=CheckPF2e.insertNatOneAndNatTwentyIntoRollTemplate(rollHtml,"success"):1==die.total&&(rollHtml=CheckPF2e.insertNatOneAndNatTwentyIntoRollTemplate(rollHtml,"failure")),rollHtml}static insertNatOneAndNatTwentyIntoRollTemplate(rollHtml,classToInsert){const locationOfDiceRoll=rollHtml.search("dice-total"),partBeforeClass=rollHtml.substr(0,locationOfDiceRoll),partAfterClass=rollHtml.substr(locationOfDiceRoll,rollHtml.length);return partBeforeClass.concat(classToInsert," ",partAfterClass)}}exports.CheckPF2e=CheckPF2e;exports.PF2DamageRoll=class{static roll(damage,context={},_event,callback){var _a;(null===(_a=null==context?void 0:context.options)||void 0===_a?void 0:_a.length)>0&&context.options.map((o=>o.toLowerCase())).includes("secret")&&(context.secret=!0),damage_roll_modifiers_dialog_1.DamageRollModifiersDialog.roll(damage,context,callback)}},exports.adaptRoll=function(actualRoll){return(event,options,callback)=>{let param=event;(isObjectEmpty(null!=event?event:{})||"shiftKey"in event)&&(console.warn("You are using the old roll parameters. Use roll({event, options?, callback?}) instead."),param={event,options:null!=options?options:[],callback}),actualRoll(param)}}},5629:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TraitSelectorBase=void 0;class TraitSelectorBase extends FormApplication{constructor(object,options={}){super(object,options),this.objectProperty="",this.choices=this.getChoices()}static get defaultOptions(){return mergeObject(super.defaultOptions,{id:"trait-selector",classes:["pf2e"],width:"auto",height:700})}getChoices(){const choices=this.configTypes.reduce(((types,key)=>mergeObject(types,CONFIG.PF2E[key])),{});return this.sortChoices(choices)}sortChoices(choices){const sorted={};return Object.keys(choices).sort(((a,b)=>choices[a].localeCompare(choices[b]))).forEach((key=>{sorted[key]=game.i18n.localize(choices[key])})),sorted}}exports.TraitSelectorBase=TraitSelectorBase},2145:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TraitSelectorBasic=void 0;const base_1=__webpack_require__(5629);class TraitSelectorBasic extends base_1.TraitSelectorBase{constructor(object,options){var _a;super(object,options),this.searchString="",this.filterTimeout=null,this.objectProperty=options.objectProperty,this.allowCustom=null===(_a=options.allowCustom)||void 0===_a||_a,options.customChoices&&(mergeObject(this.choices,options.customChoices),this.choices=this.sortChoices(this.choices))}get configTypes(){var _a;return null!==(_a=this.options.configTypes)&&void 0!==_a?_a:[]}static get defaultOptions(){return mergeObject(super.defaultOptions,{template:"systems/pf2e/templates/system/trait-selector/basic.html",title:"PF2E.BrowserFilterTraits",height:710})}getData(){var _a;const property=getProperty(this.object.data,this.objectProperty),chosen=(null!==(_a=property.value)&&void 0!==_a?_a:[]).map((prop=>prop.toString())),custom=this.allowCustom?property.custom:null,choices=Object.keys(this.choices).reduce(((accumulated,type)=>(accumulated[type]={label:this.choices[type],selected:chosen.includes(type)||chosen.includes(type.toLowerCase())},accumulated)),{});return Object.assign(Object.assign({},super.getData()),{choices,allowCustom:this.allowCustom,custom})}activateListeners($html){super.activateListeners($html),$html.find('input[id="search"]').on("keyup",(event=>this.onFilterResults(event))),this.searchString&&this.search(this.searchString)}async _updateObject(_event,formData){const value=this.getUpdateData(formData);this.allowCustom&&"custom"in formData?this.object.update({[this.objectProperty]:{value,custom:formData.custom}}):this.object.update({[`${this.objectProperty}.value`]:value})}getUpdateData(formData){const choices=[];return Object.entries(formData).forEach((([language,selected])=>{selected&&choices.push(language)})),choices}search(searchString){const query=new RegExp(RegExp.escape(searchString),"i");this.element.find("li.trait-item").each(((_i,li)=>{var _a;const name=null!==(_a=li.getElementsByClassName("trait-label")[0].textContent)&&void 0!==_a?_a:"";li.style.display=query.test(name)?"flex":"none"})),this.searchString=searchString}onFilterResults(event){event.preventDefault();const input=event.currentTarget;this.filterTimeout&&(clearTimeout(this.filterTimeout),this.filterTimeout=null),this.filterTimeout=window.setTimeout((()=>this.search(input.value)),100)}}exports.TraitSelectorBasic=TraitSelectorBasic},8477:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SELECTABLE_TAG_FIELDS=exports.TAG_SELECTOR_TYPES=exports.TraitSelectorWeaknesses=exports.TraitSelectorSpeeds=exports.TraitSelectorSenses=exports.TraitSelectorResistances=exports.TraitSelectorBasic=void 0;var basic_1=__webpack_require__(2145);Object.defineProperty(exports,"TraitSelectorBasic",{enumerable:!0,get:function(){return basic_1.TraitSelectorBasic}});var resistances_1=__webpack_require__(1360);Object.defineProperty(exports,"TraitSelectorResistances",{enumerable:!0,get:function(){return resistances_1.TraitSelectorResistances}});var senses_1=__webpack_require__(7028);Object.defineProperty(exports,"TraitSelectorSenses",{enumerable:!0,get:function(){return senses_1.TraitSelectorSenses}});var speeds_1=__webpack_require__(7251);Object.defineProperty(exports,"TraitSelectorSpeeds",{enumerable:!0,get:function(){return speeds_1.TraitSelectorSpeeds}});var weaknesses_1=__webpack_require__(9834);Object.defineProperty(exports,"TraitSelectorWeaknesses",{enumerable:!0,get:function(){return weaknesses_1.TraitSelectorWeaknesses}}),exports.TAG_SELECTOR_TYPES=["basic","resistances","senses","speed-types","weaknesses"],exports.SELECTABLE_TAG_FIELDS=["abilities","skills","martialSkills","currencies","saves","armorTraits","preciousMaterialGrades","armorPotencyRunes","armorResiliencyRunes","armorPropertyRunes","weaponPotencyRunes","weaponStrikingRunes","weaponPropertyRunes","rarityTraits","damageTypes","weaponDamage","healingTypes","weaponTypes","weaponGroups","consumableTraits","weaponDescriptions","weaponTraits","traitsDescriptions","weaponHands","equipmentTraits","itemBonuses","damageDie","weaponRange","weaponMAP","weaponReload","armorTypes","armorGroups","consumableTypes","magicTraditions","preparationType","spellTraits","featTraits","areaTypes","areaSizes","classTraits","ancestryTraits","alignment","skillList","spellComponents","spellTypes","spellTraditions","spellLevels","featTypes","featActionTypes","actionTypes","actionTypes","actionsNumber","actionCategories","proficiencyLevels","heroPointLevels","actorSizes","bulkTypes","conditionTypes","immunityTypes","resistanceTypes","weaknessTypes","languages","creatureTraits","monsterTraits","spellScalingModes","attackEffects","hazardTraits","attributes","speedTypes","senses","preciousMaterials","prerequisitePlaceholders","ancestryItemTraits","levels","dcAdjustments"]},1360:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TraitSelectorResistances=void 0;const base_1=__webpack_require__(9978),npc_1=__webpack_require__(5975),base_2=__webpack_require__(5629);class TraitSelectorResistances extends base_2.TraitSelectorBase{constructor(){super(...arguments),this.objectProperty="data.traits.dr"}static get defaultOptions(){return mergeObject(super.defaultOptions,{id:"trait-selector",classes:["pf2e"],template:"systems/pf2e/templates/system/trait-selector/resistances.html",title:"PF2E.ResistancesLabel",width:"auto",height:700})}get configTypes(){return["resistanceTypes"]}getData(){const data=super.getData();(this.object instanceof npc_1.NPCPF2e||this.object instanceof base_1.HazardPF2e)&&(data.hasExceptions=!0);const choices={},resistances=getProperty(this.object.data,this.objectProperty);return Object.entries(this.choices).forEach((([type,label])=>{var _a,_b;const res=resistances.find((res=>res.type===type));choices[type]={label,selected:void 0!==res,value:null!==(_a=null==res?void 0:res.value)&&void 0!==_a?_a:"",exceptions:null!==(_b=null==res?void 0:res.exceptions)&&void 0!==_b?_b:""}})),data.choices=choices,data}activateListeners($html){super.activateListeners($html),$html.find("input[id^=input_value]").on("focusin",(event=>{$(event.currentTarget).prev().prev().prop("checked",!0)})).on("focusout",(event=>{const input=$(event.currentTarget);input.val()||input.prev().prev().prop("checked",!1)}))}async _updateObject(_event,formData){const update=this.getUpdateData(formData);update&&this.object.update({[this.objectProperty]:update})}getUpdateData(formData){var _a;const choices=[];for(const[k,v]of Object.entries(formData))if(v.length>1&&v[0]&&!Number.isNaN(Number(v[1]))&&""!==v[1]){const label=this.choices[k],exceptions=null!==(_a=v[2])&&void 0!==_a?_a:"";choices.push({type:k,label,value:v[1],exceptions})}return choices}}exports.TraitSelectorResistances=TraitSelectorResistances},7028:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TraitSelectorSenses=void 0;const npc_1=__webpack_require__(5975),base_1=__webpack_require__(5629);class TraitSelectorSenses extends base_1.TraitSelectorBase{constructor(){super(...arguments),this.objectProperty="data.traits.senses"}static get defaultOptions(){return mergeObject(super.defaultOptions,{template:"systems/pf2e/templates/system/trait-selector/senses.html",title:"PF2E.Senses"})}get configTypes(){return["senses"]}getData(){const data=super.getData();this.object instanceof npc_1.NPCPF2e&&(data.hasExceptions=!0);const choices={},resistances=getProperty(this.object.data,this.objectProperty);return Object.entries(this.choices).forEach((([type,label])=>{var _a;const res=resistances.find((res=>res.type===type));choices[type]={label,selected:void 0!==res,value:null!==(_a=null==res?void 0:res.value)&&void 0!==_a?_a:""}})),data.choices=choices,data}activateListeners($html){super.activateListeners($html),$html.find("input[id^=input_value]").on("focusin",(event=>{$(event.currentTarget).prev().prev().prop("checked",!0)})).on("focusout",(event=>{const input=$(event.currentTarget);input.val()||input.prev().prev().prop("checked",!1)}))}async _updateObject(_event,formData){const update=this.getUpdateData(formData);update&&this.object.update({[this.objectProperty]:update})}getUpdateData(formData){const choices=[];for(const[k,v]of Object.entries(formData))if(v.length>1&&v[0]&&!Number.isNaN(Number(v[1]))){const label=this.choices[k];choices.push({type:k,label,value:v[1]})}return choices}}exports.TraitSelectorSenses=TraitSelectorSenses},7251:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TraitSelectorSpeeds=void 0;const npc_1=__webpack_require__(5975),base_1=__webpack_require__(5629);class TraitSelectorSpeeds extends base_1.TraitSelectorBase{constructor(){super(...arguments),this.objectProperty="data.attributes.speed.otherSpeeds"}static get defaultOptions(){return mergeObject(super.defaultOptions,{template:"systems/pf2e/templates/system/trait-selector/speed-types.html",title:"PF2E.SpeedTypes"})}get configTypes(){return["speedTypes"]}getData(){const data=super.getData();this.object instanceof npc_1.NPCPF2e&&(data.hasExceptions=!0);const choices={},resistances=getProperty(this.object.data,this.objectProperty);return Object.entries(this.choices).forEach((([type,label])=>{var _a;const res=resistances.find((res=>res.type===type));choices[type]={label,selected:void 0!==res,value:null!==(_a=null==res?void 0:res.value)&&void 0!==_a?_a:""}})),data.choices=choices,data}activateListeners($html){super.activateListeners($html),$html.find("input[id^=input_value]").on("focusin",(event=>{$(event.currentTarget).prev().prev().prop("checked",!0)})).on("focusout",(event=>{const input=$(event.currentTarget);input.val()||input.prev().prev().prop("checked",!1)}))}async _updateObject(_event,formData){const update=this.getUpdateData(formData);update&&this.object.update({[this.objectProperty]:update})}getUpdateData(formData){const choices=[];for(const[k,v]of Object.entries(formData))if(v.length>1&&Array.isArray(v)&&v[0]&&!Number.isNaN(Number(v[1]))&&v[1]){const label=this.choices[k];choices.push({type:k,label,value:v[1]})}return choices}}exports.TraitSelectorSpeeds=TraitSelectorSpeeds},9834:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TraitSelectorWeaknesses=void 0;const npc_1=__webpack_require__(5975),base_1=__webpack_require__(5629);class TraitSelectorWeaknesses extends base_1.TraitSelectorBase{constructor(){super(...arguments),this.objectProperty="data.traits.dv"}static get defaultOptions(){return mergeObject(super.defaultOptions,{template:"systems/pf2e/templates/system/trait-selector/weaknesses.html",title:"PF2E.WeaknessesLabel"})}get configTypes(){return["weaknessTypes"]}getData(){const data=super.getData();this.object instanceof npc_1.NPCPF2e&&(data.hasExceptions=!0);const choices={},resistances=getProperty(this.object.data,this.objectProperty);return Object.entries(this.choices).forEach((([type,label])=>{var _a;const res=resistances.find((res=>res.type===type));choices[type]={label,selected:void 0!==res,value:null!==(_a=null==res?void 0:res.value)&&void 0!==_a?_a:""}})),data.choices=choices,data}activateListeners($html){super.activateListeners($html),$html.find("input[id^=input_value]").on("focusin",(event=>{$(event.currentTarget).prev().prev().prop("checked",!0)})).on("focusout",(event=>{const input=$(event.currentTarget);input.val()||input.prev().prev().prop("checked",!1)}))}async _updateObject(_event,formData){const update=this.getUpdateData(formData);update&&this.object.update({[this.objectProperty]:update})}getUpdateData(formData){const choices=[];for(const[k,v]of Object.entries(formData))if(v.length>1&&v[0]&&!Number.isNaN(Number(v[1]))&&""!==v[1]){const label=this.choices[k];choices.push({type:k,label,value:v[1]})}return choices}}exports.TraitSelectorWeaknesses=TraitSelectorWeaknesses},9731:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __asyncValues=this&&this.__asyncValues||function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o="function"==typeof __values?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.animateDarkness=void 0;const luxon_1=__webpack_require__(6429),dayInSeconds=luxon_1.Duration.fromObject({hours:24}).as("seconds");function darknessLevelAtTime(time){const secondsElapsed=time.diff(time.startOf("day")).as("seconds"),radians=2*Math.PI*(secondsElapsed/dayInSeconds),lightnessLevel=-1*Math.cos(radians),rad18degrees=toRadians(18);return 1-(lightnessLevel>0?1:lightnessLevel<-rad18degrees?0:Math.sin((lightnessLevel+rad18degrees)/rad18degrees*Math.PI/2))}async function runAnimation(transition){if(canvas.lighting.darknessLevel===transition.target)return;const duration=Math.min(Math.trunc(100*transition.duration)/100,6e3);await canvas.lighting.animateDarkness(transition.target,{duration}),game.user.isGM&&await canvas.scene.update({darkness:transition.target})}exports.animateDarkness=async function(timeDiff){var e_1,_a;if(!this.syncDarkness||!canvas.lighting.globalLight)return;const newTime=this.usingCalendarWeather?(()=>{const aboutTimeDate=window.Gametime.DTNow();return luxon_1.DateTime.fromObject({year:aboutTimeDate.years,month:aboutTimeDate.months+1,day:aboutTimeDate.days,hour:aboutTimeDate.hours,minute:aboutTimeDate.minutes,second:aboutTimeDate.seconds})})():this.worldTime,oldTime=newTime.minus({seconds:timeDiff}),fullInterval=luxon_1.Interval.fromDateTimes(oldTime,newTime);if(!fullInterval.isValid)return void await runAnimation({target:darknessLevelAtTime(newTime),duration:100,interval:fullInterval});const compactInterval=(()=>{if(fullInterval.length("hours")>24){const adjustedOldTime=newTime.minus({hours:24});return luxon_1.Interval.fromDateTimes(adjustedOldTime,newTime)}return fullInterval})(),transitionTimes=[4.75,18].map((hour=>compactInterval.start.set({hour,minute:0,second:0}))).concat([4.75,18].map((hour=>compactInterval.end.set({hour,minute:0,second:0})))).filter((dateTime=>compactInterval.contains(dateTime))).concat([compactInterval.start,compactInterval.end]).sort(((dtA,dtB)=>dtA<dtB?-1:dtA>dtB?1:0)),transitions=transitionTimes.reduce(((pairs,dateTime)=>{const index=transitionTimes.indexOf(dateTime);if(0===index)return[];return[...pairs,[transitionTimes[index-1],dateTime]]}),[]).map((pair=>luxon_1.Interval.fromDateTimes(pair[0],pair[1]))).filter((interval=>interval.length()>0)).map((interval=>function(interval,compactInterval){const currentDarkness=canvas.lighting.darknessLevel,targetDarkness=darknessLevelAtTime(interval.end);return{target:targetDarkness,duration:(.5*Math.abs((null!=currentDarkness?currentDarkness:targetDarkness)-targetDarkness)+compactInterval.length("seconds")/dayInSeconds)/2*6e3,interval}}(interval,compactInterval)));try{for(var transitions_1_1,transitions_1=__asyncValues(transitions);!(transitions_1_1=await transitions_1.next()).done;){const transition=transitions_1_1.value;await runAnimation(transition)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{transitions_1_1&&!transitions_1_1.done&&(_a=transitions_1.return)&&await _a.call(transitions_1)}finally{if(e_1)throw e_1.error}}}},1845:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.WorldClock=void 0;const luxon_1=__webpack_require__(6429),animate_darkness_1=__webpack_require__(9731),localize_1=__webpack_require__(1608);class WorldClock extends Application{constructor(){var _a;super(),this.translations=localize_1.LocalizePF2e.translations.PF2E.WorldClock,this.animateDarkness=animate_darkness_1.animateDarkness,this.usingCalendarWeather=(()=>{const calendarWeather=game.modules.get("calendar-weather");return void 0!==calendarWeather&&calendarWeather.active})();const settingValue=game.settings.get("pf2e","worldClock.worldCreatedOn"),defaultValue=null===(_a=game.settings.settings.get("pf2e.worldClock.worldCreatedOn"))||void 0===_a?void 0:_a.default;"string"==typeof settingValue&&settingValue===defaultValue?game.settings.set("pf2e","worldClock.worldCreatedOn",settingValue):luxon_1.DateTime.fromISO(settingValue).isValid||game.settings.set("pf2e","worldClock.worldCreatedOn",defaultValue),this.usingCalendarWeather&&console.debug("PF2e System | Deferring to Calendar/Weather module for date/time management")}get dateTheme(){return game.settings.get("pf2e","worldClock.dateTheme")}get timeConvention(){const setting=game.settings.get("pf2e","worldClock.timeConvention");if(24!==setting&&12!==setting)throw Error("PF2e System | Unrecognized time convention");return setting}get syncDarkness(){return game.settings.get("pf2e","worldClock.syncDarkness")}get worldCreatedOn(){const value=game.settings.get("pf2e","worldClock.worldCreatedOn");return"string"==typeof value?luxon_1.DateTime.fromISO(value).toUTC():luxon_1.DateTime.utc()}get worldTime(){return this.worldCreatedOn.plus({seconds:game.time.worldTime})}static get defaultOptions(){return mergeObject(super.defaultOptions,{id:"world-clock",width:550,template:"systems/pf2e/templates/system/world-clock.html",title:"PF2E.WorldClock.Title"})}get era(){switch(this.dateTheme){case"AR":return this.translations.AR.Era;case"AD":return this.worldTime.toFormat("G");default:return""}}get year(){const actualYear=this.worldTime.year;switch(this.dateTheme){case"AR":return actualYear+CONFIG.PF2E.worldClock.AR.yearOffset;case"AD":return Math.abs(actualYear+CONFIG.PF2E.worldClock.AD.yearOffset);default:return actualYear}}get month(){switch(this.dateTheme){case"AR":{const month=this.worldTime.setLocale("en-US").monthLong;return this.translations.AR.Months[month]}default:return this.worldTime.monthLong}}get weekday(){switch(this.dateTheme){case"AR":{const weekday=this.worldTime.setLocale("en-US").weekdayLong;return this.translations.AR.Weekdays[weekday]}default:return this.worldTime.weekdayLong}}get ordinalSuffix(){const rule=new Intl.PluralRules(game.i18n.lang,{type:"ordinal"}).select(this.worldTime.day),ruleKey=rule[0].toUpperCase()+rule.slice(1);return this.translations.OrdinalSuffixes[ruleKey]}getData(options){if(this.usingCalendarWeather){const $app=$("#calendar-time-container"),calendarDate=$app.find("span#calendar-date").text().trim();return{date:`${$app.find("span#calendar-weekday").text().trim()}, ${calendarDate}`,time:$app.find("div#start-stop-clock .calendar-time-disp").text().trim(),options,user:game.user}}return{date:"CE"===this.dateTheme?this.worldTime.toLocaleString(luxon_1.DateTime.DATE_HUGE):game.i18n.format(this.translations.Date,{era:this.era,year:this.year,month:this.month,day:this.worldTime.day,weekday:this.weekday,ordinalSuffix:this.ordinalSuffix}),time:24===this.timeConvention?this.worldTime.toFormat("HH:mm:ss"):this.worldTime.toLocaleString(luxon_1.DateTime.TIME_WITH_SECONDS),options,user:game.user}}_getHeaderButtons(){return(game.user.isGM?[{label:"PF2E.SETTINGS.Settings",class:"configure-settings",icon:"fas fa-cog",onclick:()=>{const menu=game.settings.menus.get("pf2e.worldClock");if(void 0===menu)throw Error("PF2e System | World Clock Settings application not found");(new menu.type).render(!0)}}]:[]).concat(...super._getHeaderButtons())}activateListeners($html){super.activateListeners($html),$html.on("click","button[data-advance-time]",(event=>{var _a;const $button=$(event.currentTarget),increment=Number(null!==(_a=$button.data("advanceTime"))&&void 0!==_a?_a:0);0!==increment&&game.time.advance(increment)})),$html.on("click",'button[name="advance"]',(()=>{const value=$html.find('input[type=number][name="diff-value"]').val(),unit=$html.find('select[name="diff-unit"]').val(),increment=Number(value)*Number(unit);game.time.advance(increment)}))}}exports.WorldClock=WorldClock},7304:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.loadPF2ETemplates=void 0,exports.loadPF2ETemplates=function(){return loadTemplates(["systems/pf2e/templates/system/effect-panel.html","systems/pf2e/templates/system/world-clock.html","systems/pf2e/templates/actors/crb-style/partials/modifiers-tooltip.html","systems/pf2e/templates/actors/crb-style/sidebar/actor-armorclass.html","systems/pf2e/templates/actors/crb-style/sidebar/actor-class-dc.html","systems/pf2e/templates/actors/crb-style/sidebar/actor-health.html","systems/pf2e/templates/actors/crb-style/sidebar/actor-stamina.html","systems/pf2e/templates/actors/crb-style/sidebar/actor-resistances.html","systems/pf2e/templates/actors/crb-style/sidebar/actor-perception.html","systems/pf2e/templates/actors/crb-style/sidebar/actor-initiative.html","systems/pf2e/templates/actors/crb-style/sidebar/actor-saves.html","systems/pf2e/templates/actors/crb-style/sidebar/actor-ability-scores.html","systems/pf2e/templates/actors/crb-style/actor-header.html","systems/pf2e/templates/actors/crb-style/tabs/actor-character.html","systems/pf2e/templates/actors/crb-style/tabs/actor-actions.html","systems/pf2e/templates/actors/crb-style/tabs/actor-biography.html","systems/pf2e/templates/actors/crb-style/tabs/actor-effects.html","systems/pf2e/templates/actors/crb-style/tabs/actor-feats.html","systems/pf2e/templates/actors/crb-style/tabs/inventory.html","systems/pf2e/templates/actors/crb-style/tabs/actor-pfs.html","systems/pf2e/templates/actors/crb-style/tabs/actor-skills.html","systems/pf2e/templates/actors/crb-style/tabs/actor-spellbook.html","systems/pf2e/templates/actors/crb-style/tabs/item-line.html","systems/pf2e/templates/actors/crb-style/character-traits.html","systems/pf2e/templates/actors/crb-style/character-background.html","systems/pf2e/templates/actors/crb-style/character-abilities.html","systems/pf2e/templates/actors/npc/partials/npc-header.html","systems/pf2e/templates/actors/npc/partials/npc-side-bar.html","systems/pf2e/templates/actors/npc/partials/npc-main-tab.html","systems/pf2e/templates/actors/npc/partials/npc-inventory-tab.html","systems/pf2e/templates/actors/npc/partials/npc-spells-tab.html","systems/pf2e/templates/actors/npc/partials/npc-notes-tab.html","systems/pf2e/templates/actors/npc/partials/npc-action.html","systems/pf2e/templates/actors/npc/partials/npc-attack.html","systems/pf2e/templates/actors/npc/partials/npc-item.html","systems/pf2e/templates/items/ae-tab.html","systems/pf2e/templates/items/rules-panel.html","systems/pf2e/templates/items/action-details.html","systems/pf2e/templates/items/action-sidebar.html","systems/pf2e/templates/items/ancestry-details.html","systems/pf2e/templates/items/ancestry-sidebar.html","systems/pf2e/templates/items/armor-details.html","systems/pf2e/templates/items/armor-sidebar.html","systems/pf2e/templates/items/background-details.html","systems/pf2e/templates/items/background-sidebar.html","systems/pf2e/templates/items/backpack-details.html","systems/pf2e/templates/items/backpack-sidebar.html","systems/pf2e/templates/items/treasure-sidebar.html","systems/pf2e/templates/items/class-details.html","systems/pf2e/templates/items/consumable-details.html","systems/pf2e/templates/items/consumable-sidebar.html","systems/pf2e/templates/items/condition-details.html","systems/pf2e/templates/items/condition-sidebar.html","systems/pf2e/templates/items/effect-sidebar.html","systems/pf2e/templates/items/equipment-details.html","systems/pf2e/templates/items/equipment-sidebar.html","systems/pf2e/templates/items/feat-details.html","systems/pf2e/templates/items/feat-sidebar.html","systems/pf2e/templates/items/kit-details.html","systems/pf2e/templates/items/kit-sidebar.html","systems/pf2e/templates/items/lore-details.html","systems/pf2e/templates/items/lore-sidebar.html","systems/pf2e/templates/items/mystify-panel.html","systems/pf2e/templates/items/spell-details.html","systems/pf2e/templates/items/spell-sidebar.html","systems/pf2e/templates/items/melee-details.html","systems/pf2e/templates/items/weapon-details.html","systems/pf2e/templates/items/weapon-sidebar.html","systems/pf2e/templates/actors/loot/loot-avatar.html","systems/pf2e/templates/actors/loot/inventory.html","systems/pf2e/templates/actors/vehicle/vehicle-sheet.html","systems/pf2e/templates/actors/vehicle/vehicle-header.html","systems/pf2e/templates/actors/vehicle/sidebar/vehicle-health.html","systems/pf2e/templates/actors/vehicle/sidebar/vehicle-armorclass.html","systems/pf2e/templates/actors/vehicle/sidebar/vehicle-saves.html","systems/pf2e/templates/actors/vehicle/sidebar/vehicle-resistances.html","systems/pf2e/templates/actors/vehicle/tabs/vehicle-details.html","systems/pf2e/templates/actors/vehicle/tabs/vehicle-actions.html","systems/pf2e/templates/actors/vehicle/tabs/vehicle-inventory.html","systems/pf2e/templates/actors/vehicle/tabs/vehicle-description.html","systems/pf2e/templates/packs/action-browser.html","systems/pf2e/templates/packs/bestiary-browser.html","systems/pf2e/templates/packs/inventory-browser.html","systems/pf2e/templates/packs/feat-browser.html","systems/pf2e/templates/packs/hazard-browser.html","systems/pf2e/templates/packs/spell-browser.html","systems/pf2e/templates/packs/browser-settings.html"])}},1457:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PlayerConfigPF2e=void 0;const USER_SETTINGS_KEYS=["uiTheme","showEffectPanel","showRollDialogs"];class PlayerConfigPF2e extends FormApplication{constructor(){super(),this.settings=mergeObject(PlayerConfigPF2e.defaultSettings,game.user.getFlag("pf2e","settings"))}static async init(){void 0===game.user.getFlag("pf2e","settings")&&await game.user.setFlag("pf2e","settings",PlayerConfigPF2e.defaultSettings)}static get defaultOptions(){return mergeObject(super.defaultOptions,{id:"pf2e-player-config-panel",title:"PF2e Player Settings",template:"systems/pf2e/templates/user/player-config.html",classes:["sheet"],width:500,height:"auto",resizable:!1})}getData(){return Object.assign(Object.assign({},super.getData()),this.settings)}static activateColorScheme(){var _a;console.debug("PF2e System | Activating Player Configured color scheme");const cssLink=`<link id="pf2e-color-scheme" href="systems/pf2e/styles/user/color-scheme-${null!==(_a=game.user.getFlag("pf2e","settings.uiTheme"))&&void 0!==_a?_a:PlayerConfigPF2e.defaultSettings.uiTheme}.css" rel="stylesheet" type="text/css">`;$("head").append(cssLink)}static hookOnRenderSettings(){Hooks.on("renderSettings",((_app,html)=>{const configButton=$(`<button id="pf2e-player-config" data-action="pf2e-player-config">\n                    <i class="fas fa-cogs"></i> ${PlayerConfigPF2e.defaultOptions.title}\n                 </button>`);html.find("#settings-game").prepend(configButton),configButton.on("click",(()=>{(new PlayerConfigPF2e).render(!0)}))}))}async _updateObject(_event,formData){const settings=USER_SETTINGS_KEYS.reduce(((currentSettings,key)=>{var _a;return currentSettings[key]=null!==(_a=formData[key])&&void 0!==_a?_a:this.settings[key],currentSettings}),this.settings);await game.user.setFlag("pf2e","settings",settings),$("link#pf2e-color-scheme").attr({href:`systems/pf2e/styles/user/color-scheme-${formData.uiTheme}.css`})}}exports.PlayerConfigPF2e=PlayerConfigPF2e,PlayerConfigPF2e.defaultSettings={uiTheme:"blue",showEffectPanel:!0,showRollDialogs:!0}},4930:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ErrorPF2e=exports.sluggify=exports.tupleHasValue=exports.objectHasKey=exports.applyNTimes=exports.zip=exports.sum=exports.addSign=exports.add=exports.toNumber=exports.isBlank=exports.combineMaps=exports.combineObjects=exports.padArray=exports.groupBy=void 0,exports.groupBy=function(array,criterion){const result=new Map;for(const elem of array){const key=criterion(elem),group=result.get(key);group?group.push(elem):result.set(key,[elem])}return result},exports.padArray=function(array,requiredLength,padWith){const result=[...array];for(let i=array.length;i<requiredLength;i+=1)result.push(padWith);return result},exports.combineObjects=function(first,second,mergeFunction){const combinedKeys=new Set([...Object.keys(first),...Object.keys(second)]),combinedObject={};for(const name of combinedKeys)name in first&&name in second?combinedObject[name]=mergeFunction(first[name],second[name]):name in first?combinedObject[name]=first[name]:name in second&&(combinedObject[name]=second[name]);return combinedObject},exports.combineMaps=function(first,second,mergeFunction){const combinedKeys=new Set([...first.keys(),...second.keys()]),combinedMap=new Map;for(const name of combinedKeys)first.has(name)&&second.has(name)?combinedMap.set(name,mergeFunction(first.get(name),second.get(name))):first.has(name)?combinedMap.set(name,first.get(name)):second.has(name)&&combinedMap.set(name,second.get(name));return combinedMap},exports.isBlank=function(text){return null==text||""===text.trim()},exports.toNumber=function(value){if(null==value||"number"==typeof value)return value;const result=parseInt(value,10);return Number.isNaN(result)?void 0:result},exports.add=function(x,y){return x+y},exports.addSign=function(number){return number<0?`${number}`:number>0?`+${number}`:"0"},exports.sum=function(values){return values.reduce(((a,b)=>a+b),0)},exports.zip=function(a,b,zipFunction){return a.length>b.length?b.map(((elem,index)=>zipFunction(a[index],elem))):a.map(((elem,index)=>zipFunction(elem,b[index])))},exports.applyNTimes=function(func,times,start){let result=start;for(let i=0;i<times;i+=1)result=func(result);return result},exports.objectHasKey=function(obj,key){return key in obj},exports.tupleHasValue=function(array,value){return array.includes(value)},exports.sluggify=function(entityName){return entityName.toLowerCase().replace(/'/g,"").replace(/[^a-z0-9]+/gi," ").trim().replace(/[-\s]+/g,"-")},exports.ErrorPF2e=function(message){return Error(`PF2e System | ${message}`)}},6295:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";const rolls_1=__webpack_require__(7540),rules_1=__webpack_require__(8094),update_minions_1=__webpack_require__(7492),hooks_1=__webpack_require__(3857),base_1=__webpack_require__(9978),npc_1=__webpack_require__(5975);__webpack_require__(8916),__webpack_require__(1854);const creature_1=__webpack_require__(2542);function preCreateOwnedItem(_parent,child,_options,userID){var _a,_b;if(userID===game.userId&&"effect"===child.type){const data=child.data;data.start=null!==(_a=data.start)&&void 0!==_a?_a:{value:0,initiative:null},data.start.value=game.time.worldTime,game.combat&&(null===(_b=game.combat.turns)||void 0===_b?void 0:_b.length)>game.combat.turn&&(data.start.initiative=game.combat.turns[game.combat.turn].initiative)}}function createOwnedItem(parent,child,options,userID){parent instanceof base_1.ActorPF2e&&(userID===game.userId&&parent.onCreateOwnedItem(child,options,userID),game.pf2e.effectPanel.refresh())}function deleteOwnedItem(parent,child,options,userID){parent instanceof base_1.ActorPF2e&&(userID===game.userId&&parent.onDeleteOwnedItem(child,options,userID),game.pf2e.effectPanel.refresh())}__webpack_require__(1361),hooks_1.PF2E.Hooks.listen(),Hooks.on("getChatLogEntryContext",((_html,options)=>{const canApplyDamage=li=>{const{messageId}=li.data(),message=game.messages.get(messageId);return!!(canvas.tokens.controlled.length&&message.isRoll&&message.data&&message.data.flavor&&message.data.flavor.includes("Damage"))},canReroll=li=>{const message=game.messages.get(li.data("messageId")),actorId=message.data.speaker.actor;if(message.getFlag("pf2e","canReroll")&&actorId){return game.actors.get(actorId).owner&&(message.isAuthor||game.user.isGM)}return!1};options.push({name:"Apply Damage",icon:'<i class="fas fa-user-minus"></i>',condition:canApplyDamage,callback:li=>base_1.ActorPF2e.applyDamage(li,1)},{name:"Apply Healing",icon:'<i class="fas fa-user-plus"></i>',condition:li=>{const{messageId}=li.data(),message=game.messages.get(messageId);return!!(canvas.tokens.controlled.length&&message.isRoll&&message.data&&message.data.flavor&&message.data.flavor.includes("Healing"))},callback:li=>base_1.ActorPF2e.applyDamage(li,-1)},{name:"Double Damage",icon:'<i class="fas fa-user-injured"></i>',condition:canApplyDamage,callback:li=>base_1.ActorPF2e.applyDamage(li,2)},{name:"Half Damage",icon:'<i class="fas fa-user-shield"></i>',condition:canApplyDamage,callback:li=>base_1.ActorPF2e.applyDamage(li,.5)},{name:"Set as Initiative",icon:'<i class="fas fa-fist-raised"></i>',condition:li=>{var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k;const{messageId}=li.data(),message=game.messages.get(messageId),validActor=null!==(_e="npc"===(null===(_d=null===(_c=null===(_b=null===(_a=canvas.tokens.controlled)||void 0===_a?void 0:_a[0])||void 0===_b?void 0:_b.actor)||void 0===_c?void 0:_c.data)||void 0===_d?void 0:_d.type))&&void 0!==_e&&_e,validRollType=null!==(_k=(null===(_g=null===(_f=null==message?void 0:message.data)||void 0===_f?void 0:_f.flavor)||void 0===_g?void 0:_g.includes("Skill Check"))||(null===(_j=null===(_h=null==message?void 0:message.data)||void 0===_h?void 0:_h.flavor)||void 0===_j?void 0:_j.includes("Perception Check")))&&void 0!==_k&&_k;return validActor&&message.isRoll&&validRollType},callback:li=>base_1.ActorPF2e.setCombatantInitiative(li)},{name:"PF2E.RerollMenu.HeroPoint",icon:'<i class="fas fa-hospital-symbol"></i>',condition:li=>{var _a;const message=game.messages.get(li.data("messageId")),actorId=message.data.speaker.actor;if(message.getFlag("pf2e","canReroll")&&actorId){const actor=game.actors.get(actorId);return actor.owner&&(null===(_a=actor.data.data.attributes.heroPoints)||void 0===_a?void 0:_a.rank)>=1&&(message.isAuthor||game.user.isGM)}return!1},callback:li=>rolls_1.CheckPF2e.rerollFromMessage(game.messages.get(li.data("messageId")),{heroPoint:!0})},{name:"PF2E.RerollMenu.KeepNew",icon:'<i class="fas fa-dice"></i>',condition:canReroll,callback:li=>rolls_1.CheckPF2e.rerollFromMessage(game.messages.get(li.data("messageId")))},{name:"PF2E.RerollMenu.KeepWorst",icon:'<i class="fas fa-dice-one"></i>',condition:canReroll,callback:li=>rolls_1.CheckPF2e.rerollFromMessage(game.messages.get(li.data("messageId")),{keep:"worst"})},{name:"PF2E.RerollMenu.KeepBest",icon:'<i class="fas fa-dice-six"></i>',condition:canReroll,callback:li=>rolls_1.CheckPF2e.rerollFromMessage(game.messages.get(li.data("messageId")),{keep:"best"})})})),Hooks.on("preCreateItem",(itemData=>{itemData.img=void 0!==itemData.img?itemData.img:CONFIG.PF2E.Item.entityClasses[itemData.type].defaultImg})),Hooks.on("updateActor",((actor,_data,_options,userID)=>{userID===game.userId&&update_minions_1.updateMinionActors(actor)})),Hooks.on("preCreateOwnedItem",preCreateOwnedItem),Hooks.on("createOwnedItem",createOwnedItem),Hooks.on("deleteOwnedItem",deleteOwnedItem),Hooks.on("updateOwnedItem",(parent=>{parent instanceof base_1.ActorPF2e&&game.pf2e.effectPanel.refresh()})),Hooks.on("updateUser",(()=>{game.pf2e.effectPanel.refresh()})),Hooks.on("preCreateToken",((_scene,token)=>{const actor=game.actors.get(token.actorId);actor&&actor.items.forEach((item=>{var _a;const rules=rules_1.RuleElements.fromRuleElementData(null!==(_a=item.data.data.rules)&&void 0!==_a?_a:[],item.data);for(const rule of rules)rule.onCreateToken(actor.data,item.data,token)}))})),Hooks.on("preUpdateToken",((_scene,token,data,options,userID)=>{var _a,_b,_c,_d,_e,_f,_g,_h;if(!token.actorLink&&(null===(_a=data.actorData)||void 0===_a?void 0:_a.items)){options.pf2e={items:{added:null!==(_d=null===(_c=null===(_b=data.actorData)||void 0===_b?void 0:_b.items)||void 0===_c?void 0:_c.filter((i=>{var _a,_b,_c;return!(null===(_c=null===(_b=null===(_a=token.actorData)||void 0===_a?void 0:_a.items)||void 0===_b?void 0:_b.map((x=>x._id)))||void 0===_c?void 0:_c.includes(i._id))})))&&void 0!==_d?_d:[],removed:null!==(_g=null===(_f=null===(_e=token.actorData)||void 0===_e?void 0:_e.items)||void 0===_f?void 0:_f.filter((i=>{var _a,_b,_c;return!(null===(_c=null===(_b=null===(_a=data.actorData)||void 0===_a?void 0:_a.items)||void 0===_b?void 0:_b.map((x=>x._id)))||void 0===_c?void 0:_c.includes(i._id))})))&&void 0!==_g?_g:[]}};const actor=null===(_h=canvas.tokens.get(token._id))||void 0===_h?void 0:_h.actor;actor&&options.pf2e.items.added.forEach((item=>{preCreateOwnedItem(0,item,0,userID)}))}})),Hooks.on("updateToken",((_scene,token,data,options,userID)=>{var _a,_b,_c;if(!token.actorLink&&(null===(_a=options.pf2e)||void 0===_a?void 0:_a.items)){const actor=null===(_b=canvas.tokens.get(token._id))||void 0===_b?void 0:_b.actor;actor&&(options.pf2e.items.added.forEach((item=>{createOwnedItem(actor,item,options,userID)})),options.pf2e.items.removed.forEach((item=>{deleteOwnedItem(actor,item,options,userID)})),actor instanceof creature_1.CreaturePF2e&&actor.redrawTokenEffects())}if("disposition"in data&&game.userId===userID){const actor=null===(_c=canvas.tokens.get(token._id))||void 0===_c?void 0:_c.actor;actor instanceof npc_1.NPCPF2e&&actor.updateNPCAttitudeFromDisposition(data.disposition)}game.pf2e.effectPanel.refresh()})),Hooks.on("controlToken",(()=>{var _a;null===(_a=game.pf2e)||void 0===_a||_a.effectPanel.refresh()})),Hooks.on("getSceneControlButtons",(controls=>{controls.find((c=>"token"===c.name)).tools.push({name:"worldclock",title:"CONTROLS.WorldClock",icon:"fas fa-clock",visible:game.user.isGM||game.settings.get("pf2e","worldClock.playersCanView"),onClick:()=>game.pf2e.worldClock.render(!0),button:!0})})),Hooks.on("updateCombat",(()=>{var _a;null===(_a=game.pf2e.effectPanel)||void 0===_a||_a.refresh()})),Hooks.on("renderChatMessage",((message,html)=>{var _a;game.user.isGM||html.find('[data-visibility="gm"]').remove();const actor=(null===(_a=message.data.speaker)||void 0===_a?void 0:_a.actor)?game.actors.get(message.data.speaker.actor):void 0;actor&&actor.owner||game.user.isGM||message.isAuthor||html.find('[data-visibility="owner"]').remove(),html.find('[data-pf2-dc]:not([data-pf2-dc=""])[data-pf2-show-dc]:not([data-pf2-show-dc=""])').each(((_idx,elem)=>{const dc=elem.dataset.pf2Dc.trim(),role=elem.dataset.pf2ShowDc.trim();("all"===role||"gm"===role&&game.user.isGM||"owner"===role&&(actor&&actor.owner||game.user.isGM||message.isAuthor))&&(elem.innerHTML=game.i18n.format("PF2E.DCWithValue",{dc,text:elem.innerHTML}),elem.removeAttribute("data-pf2-show-dc"))}))}))},7839:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.StatusEffects=void 0;const base_1=__webpack_require__(9978),conditions_1=__webpack_require__(5330),localize_1=__webpack_require__(1608);class StatusEffects{static init(){if(CONFIG.PF2E.statusEffects.overruledByModule)return;console.log("PF2e System | Initializing Status Effects Module"),this.hookIntoFoundry();const statusEffectType=game.settings.get("pf2e","statusEffectType");CONFIG.PF2E.statusEffects.lastIconType=statusEffectType,CONFIG.PF2E.statusEffects.effectsIconFolder=StatusEffects.SETTINGOPTIONS.iconTypes[statusEffectType].effectsIconFolder,CONFIG.PF2E.statusEffects.effectsIconFileType=StatusEffects.SETTINGOPTIONS.iconTypes[statusEffectType].effectsIconFileType,CONFIG.PF2E.statusEffects.foundryStatusEffects=CONFIG.statusEffects,this._updateStatusIcons()}static get conditions(){return localize_1.LocalizePF2e.translations.PF2E.condition}static get SETTINGOPTIONS(){return{iconTypes:{default:{effectsIconFolder:"systems/pf2e/icons/conditions/",effectsIconFileType:"webp"},blackWhite:{effectsIconFolder:"systems/pf2e/icons/conditions-2/",effectsIconFileType:"webp"},legacy:{effectsIconFolder:"systems/pf2e/icons/conditions-3/",effectsIconFileType:"webp"}}}}static hookIntoFoundry(){if(Hooks.on("renderTokenHUD",((app,html,data)=>{console.log("PF2e System | Rendering PF2e customized status effects"),StatusEffects._hookOnRenderTokenHUD(app,html,data)})),Hooks.on("onTokenHUDClear",((tokenHUD,token)=>{var _a,_b;token=tokenHUD.token,tokenHUD._state===(null===(_b=null===(_a=null==tokenHUD?void 0:tokenHUD.constructor)||void 0===_a?void 0:_a.RENDER_STATES)||void 0===_b?void 0:_b.NONE)&&!0===(null==token?void 0:token.statusEffectChanged)&&(console.log("PF2e System | StatusEffects were updated - Message to chat"),token.statusEffectChanged=!1,StatusEffects._createChatMessage(token))})),game.user.isGM&&game.settings.get("pf2e","statusEffectShowCombatMessage")){let lastTokenId="";Hooks.on("updateCombat",(combat=>{const combatant=null==combat?void 0:combat.combatant,tokenId=null==combatant?void 0:combatant.tokenId;if(tokenId!==lastTokenId&&(null==combat?void 0:combat.started)&&null!=(null==combatant?void 0:combatant.initiative)&&!(null==combatant?void 0:combatant.defeated)){const token=canvas.tokens.get(tokenId);lastTokenId=tokenId,this._createChatMessage(token,combatant.hidden)}(null==combat?void 0:combat.started)||""===lastTokenId||(lastTokenId="")}))}}static setPF2eStatusEffectControls(html,token){const effects=html.find(".status-effects");effects.on("click",".pf2e-effect-control",this._setStatusValue.bind(token)).on("contextmenu",".pf2e-effect-control",this._setStatusValue.bind(token)).on("mouseover mouseout",".pf2e-effect-control",this._showStatusDescr),effects.off("click",".effect-control").on("click",".effect-control",this._toggleStatus.bind(token)),effects.off("contextmenu",".effect-control").on("contextmenu",".effect-control",this._toggleStatus.bind(token)).on("mouseover mouseout",".effect-control",this._showStatusDescr)}static _updateStatusIcons(){const effects=[];Array.from(conditions_1.ConditionManager.conditions.values()).filter((c=>"detection"!==c.data.group&&"attitudes"!==c.data.group)).sort(((a,b)=>a.name.localeCompare(b.name))).forEach((c=>{effects.push(c.data.hud.img.useStatusName?`${CONFIG.PF2E.statusEffects.effectsIconFolder}${c.data.hud.statusName}.${CONFIG.PF2E.statusEffects.effectsIconFileType}`:c.data.hud.img.value)})),CONFIG.statusEffects=effects}static async _hookOnRenderTokenHUD(app,html,tokenData){var _a,_b;const token=canvas.tokens.get(tokenData._id);if(!token)throw Error(`PF2E | StatusEffects | Could not find token with id: ${tokenData._id}`);const statusIcons=html.find("img.effect-control"),affectingConditions=null!==(_b=null===(_a=token.actor)||void 0===_a?void 0:_a.data.items.filter((i=>{var _a;return(null===(_a=i.flags.pf2e)||void 0===_a?void 0:_a.condition)&&"condition"===i.type&&i.data.active&&i.data.sources.hud})))&&void 0!==_b?_b:[];html.find("div.status-effects").append('<div class="status-effect-summary"></div>'),this.setPF2eStatusEffectControls(html,token),app.token=token;for(let i of statusIcons){i=$(i);const src=i.attr("src");if(src.includes(CONFIG.PF2E.statusEffects.effectsIconFolder)){const statusName=this._getStatusFromImg(src),condition=conditions_1.ConditionManager.getConditionByStatusName(statusName);if(void 0===condition)continue;i.attr("data-effect",statusName),i.attr("data-condition",condition.name);const effect=affectingConditions.find((e=>e.data.hud.statusName===statusName));if(condition.data.value.isValued){i.removeClass("effect-control").addClass("pf2e-effect-control"),i.wrap("<div class='pf2e-effect-img-container'></div>");const v=$("<div class='pf2e-effect-value' style='display:none'>0</div>");i.parent().append(v),void 0!==effect&&(i.attr("data-value",effect.data.value.value),effect.data.value.value>0&&$(v).removeAttr("style").text(effect.data.value.value))}i.hasClass("active")&&void 0===effect?i.removeClass("active"):i.hasClass("active")||void 0===effect||i.addClass("active")}}}static async _updateHUD(html,token){const statusIcons=html.find("img.effect-control, img.pf2e-effect-control"),appliedConditions=token.actor.data.items.filter((i=>{var _a;return(null===(_a=i.flags.pf2e)||void 0===_a?void 0:_a.condition)&&"condition"===i.type&&i.data.active&&i.data.sources.hud}));for(const i of statusIcons){const $i=$(i),status=$i.attr("data-effect"),conditionName=$i.attr("data-condition");if(conditionName&&status){const condition=appliedConditions.find((e=>e.name===conditionName)),conditionBase=conditions_1.ConditionManager.getConditionByStatusName(status);if(null==conditionBase?void 0:conditionBase.data.value.isValued){const v=$i.siblings("div.pf2e-effect-value").first();$i.hasClass("active")?void 0===condition||void 0!==condition&&!condition.data.active||void 0!==condition&&condition.data.value.value<1?($i.removeClass("active"),v.attr("style","display:none").text("0")):void 0!==condition&&condition.data.value.value>0&&v.text(condition.data.value.value):void 0!==condition&&condition.data.active&&condition.data.value.value>0&&($i.addClass("active"),v.removeAttr("style").text(condition.data.value.value))}else $i.hasClass("active")?(void 0===condition||void 0!==condition&&!condition.data.active)&&$i.removeClass("active"):void 0!==condition&&condition.data.active&&$i.addClass("active")}}}static _showStatusDescr(event){var _a,_b;const f=$(event.currentTarget),statusDescr=$("div.status-effect-summary");if(null===(_a=f.attr("src"))||void 0===_a?void 0:_a.includes(CONFIG.PF2E.statusEffects.effectsIconFolder)){const statusName=null!==(_b=f.attr("data-effect"))&&void 0!==_b?_b:"undefined",conditions=StatusEffects.conditions,conditionKeys=Object.keys(conditions);if("string"==typeof statusName&&conditionKeys.includes(statusName)){const conditionInfo=conditions[statusName];statusDescr.text("name"in conditionInfo?conditionInfo.name:"").toggleClass("active")}}}static async _setStatusValue(event){var _a;if(event.preventDefault(),event.shiftKey)return void StatusEffects._onToggleOverlay(event,this);const f=$(event.currentTarget),status=null!==(_a=f.attr("data-condition"))&&void 0!==_a?_a:"undefined";if(!(this.actor instanceof base_1.ActorPF2e))return;const condition=this.actor.data.items.find((i=>{var _a;return(null===(_a=i.flags.pf2e)||void 0===_a?void 0:_a.condition)&&"condition"===i.type&&i.name===status&&i.data.sources.hud&&void 0===i.data.references.parent}));if("contextmenu"===event.type)if(event.ctrlKey){const conditionIds=[];this.statusEffectChanged=!0,this.actor.data.items.filter((i=>{var _a;return(null===(_a=i.flags.pf2e)||void 0===_a?void 0:_a.condition)&&"condition"===i.type&&i.data.base===status})).forEach((i=>conditionIds.push(i._id))),await conditions_1.ConditionManager.removeConditionFromToken(conditionIds,this)}else condition&&(this.statusEffectChanged=!0,await conditions_1.ConditionManager.updateConditionValue(condition._id,this,condition.data.value.value-1),this.data.actorLink&&StatusEffects._updateHUD(f.parent().parent(),this));else if("click"===event.type)if(this.statusEffectChanged=!0,condition)await conditions_1.ConditionManager.updateConditionValue(condition._id,this,condition.data.value.value+1),this.data.actorLink&&StatusEffects._updateHUD(f.parent().parent(),this);else{const newCondition=conditions_1.ConditionManager.getCondition(status);newCondition.data.sources.hud=!0,await conditions_1.ConditionManager.addConditionToToken(newCondition,this)}}static async _toggleStatus(event){event.preventDefault();const token=this;if(event.shiftKey)return void StatusEffects._onToggleOverlay(event,token);const f=$(event.currentTarget),status=f.attr("data-condition"),src=f.attr("src"),condition=token.actor.data.items.find((i=>{var _a;return(null===(_a=i.flags.pf2e)||void 0===_a?void 0:_a.condition)&&"condition"===i.type&&i.name===status&&i.data.sources.hud&&void 0===i.data.references.parent})),conditionIds=[];if("contextmenu"===event.type)event.ctrlKey?token.actor.data.items.filter((i=>{var _a;return(null===(_a=i.flags.pf2e)||void 0===_a?void 0:_a.condition)&&"condition"===i.type&&i.data.base===status})).forEach((i=>conditionIds.push(i._id))):condition&&conditionIds.push(condition._id),conditionIds.length>0?(token.statusEffectChanged=!0,await conditions_1.ConditionManager.removeConditionFromToken(conditionIds,token)):token.data.effects.includes(src)&&await token.toggleEffect(src);else if("click"===event.type&&!condition&&status){const newCondition=conditions_1.ConditionManager.getCondition(status);newCondition.data.sources.hud=!0,token.statusEffectChanged=!0,await conditions_1.ConditionManager.addConditionToToken(newCondition,token)}}static _onToggleOverlay(event,token){event.preventDefault();const f=$(event.currentTarget);token.toggleOverlay(f.attr("src")),f.siblings().removeClass("overlay"),f.toggleClass("overlay")}static _createChatMessage(token,whisper=!1){let statusEffectList="";for(const condition of token.actor.data.items.filter((i=>{var _a;return(null===(_a=i.flags.pf2e)||void 0===_a?void 0:_a.condition)&&i.data.active&&"condition"===i.type}))){const conditionInfo=StatusEffects.conditions[condition.data.hud.statusName],summary="summary"in conditionInfo?conditionInfo.summary:"";statusEffectList+=`\n                <li><img src="${CONFIG.PF2E.statusEffects.effectsIconFolder+condition.data.hud.statusName}.${CONFIG.PF2E.statusEffects.effectsIconFileType}" title="${summary}">\n                    <span class="statuseffect-li">\n                        <span class="statuseffect-li-text">${condition.name} ${condition.data.value.isValued?condition.data.value.value:""}</span>\n                        <div class="statuseffect-rules"><h2>${condition.name}</h2>${condition.data.description.value}</div>\n                    </span>\n                </li>`}if(""===statusEffectList)return;const message=`\n            <div class="dice-roll">\n                <div class="dice-result">\n                    <div class="dice-total statuseffect-message">\n                        <ul>${statusEffectList}</ul>\n                    </div>\n                </div>\n            </div>\n        `,chatData={user:game.user._id,speaker:{alias:game.i18n.format("PF2E.StatusEffects",{name:token.name})},content:message,type:CONST.CHAT_MESSAGE_TYPES.OTHER};whisper&&(chatData.whisper=ChatMessage.getWhisperRecipients("GM")),ChatMessage.create(chatData)}static async migrateStatusEffectUrls(chosenSetting){if(CONFIG.PF2E.statusEffects.overruledByModule)return console.log("PF2e System | The PF2eStatusEffect icons are overruled by a module"),void ui.notifications.error("Changing this setting has no effect, as the icon types are overruled by a module.",{permanent:!0});console.debug("PF2e System | Changing status effect icon types");const iconType=StatusEffects.SETTINGOPTIONS.iconTypes[chosenSetting],lastIconType=StatusEffects.SETTINGOPTIONS.iconTypes[CONFIG.PF2E.statusEffects.lastIconType],promises=[];for(const scene of game.scenes.values()){const tokenUpdates=[];for(const tokenData of scene.data.tokens){const update=duplicate(tokenData);for(const url of tokenData.effects)if(url.includes(lastIconType.effectsIconFolder)){const statusName=this._getStatusFromImg(url),newUrl=`${iconType.effectsIconFolder+statusName}.${iconType.effectsIconFileType}`;console.log(`PF2e System | Migrating effect ${statusName} of Token ${tokenData.name} on scene ${scene.data.name} | '${url}' to '${newUrl}'`);const index=update.effects.indexOf(url);index>-1&&update.effects.splice(index,1,newUrl)}tokenUpdates.push(update)}promises.push(scene.updateEmbeddedEntity("Token",tokenUpdates))}await Promise.all(promises),CONFIG.PF2E.statusEffects.effectsIconFolder=iconType.effectsIconFolder,CONFIG.PF2E.statusEffects.effectsIconFileType=iconType.effectsIconFileType,CONFIG.PF2E.statusEffects.lastIconType=chosenSetting,StatusEffects._updateStatusIcons()}static _changeYouToI(content){return content=(content=(content=(content=(content=(content=(content=(content=(content=(content=(content=(content=(content=(content=content.replace(/you're/g,"I'm")).replace(/You're/g,"I'm")).replace(/Your/g,"My")).replace(/your/g,"my")).replace(/You are/g,"I am")).replace(/you are/g,"I am")).replace(/You can't/g,"I can't")).replace(/you can't/g,"I can't")).replace(/You can/g,"I can")).replace(/you can/g,"I can")).replace(/You have/g,"I have")).replace(/you have/g,"I have")).replace(/You/g,"I")).replace(/you/g,"me")}static _getStatusFromImg(url){return url.substring(url.lastIndexOf("/")+1,url.length-CONFIG.PF2E.statusEffects.effectsIconFileType.length-1)}static async setStatus(token,effects=[]){for(const status of Object.values(effects)){const statusName=status.name,value=status.value,source=status.source?status.source:"PF2eStatusEffects.setStatus",condition=conditions_1.ConditionManager.getConditionByStatusName(statusName);if(!condition){console.log(`PF2e System | '${statusName}' is not a vaild condition!`);continue}const effect=token.actor.data.items.find((i=>i.data.source.value===source&&"condition"===i.type&&i.data.hud.statusName===statusName));if("string"==typeof value&&condition.data.value.isValued)if(effect){let newValue=0;if(newValue=value.startsWith("+")||value.startsWith("-")?Number(effect.data.value.value)+Number(value):Number(value),Number.isNaN(newValue)){console.log(`PF2e System | '${value}' is not a number!`);continue}await conditions_1.ConditionManager.updateConditionValue(effect._id,token,newValue)}else Number(value)>0&&(condition.data.source.value=source,condition.data.value.value=Number(value),await conditions_1.ConditionManager.addConditionToToken(condition,token));else if(!value){if(condition.data.value.isValued){console.log(`PF2e System | '${statusName}' must have a value.`);continue}void 0!==effect&&status.toggle?await conditions_1.ConditionManager.removeConditionFromToken([effect._id],token):void 0===effect&&(condition.data.source.value=source,await conditions_1.ConditionManager.addConditionToToken(condition,token))}}this._createChatMessage(token)}}exports.StatusEffects=StatusEffects},7492:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.updateMinionActors=void 0,exports.updateMinionActors=function(master){game.actors.entities.filter((actor=>["familiar","animalCompanion"].includes(actor.data.type))).filter((minion=>{var _a,_b;return!!(null===(_b=null===(_a=minion.data.data)||void 0===_a?void 0:_a.master)||void 0===_b?void 0:_b.id)})).filter((minion=>!master||minion.data.data.master.id===master.data._id)).filter((minion=>minion.can(game.user,"update"))).forEach((minion=>minion.update({"data.master.updated":(new Date).toISOString()})))}},9759:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CritFumbleCardsPF2e=void 0;exports.CritFumbleCardsPF2e=class{static async init(){var _a;const rollableTables=game.packs.get("pf2e.rollable-tables");if(this.critTable=await rollableTables.getEntity("FTEpsIWWVrDj0jNG"),this.fumbleTable=await rollableTables.getEntity("WzMGWMIrrPvSp75D"),this.diceSoNice=!!(null===(_a=game.modules.get("dice-so-nice"))||void 0===_a?void 0:_a.active),game.settings.get("pf2e","drawCritFumble")){const hooksOn=this.diceSoNice?"diceSoNiceRollComplete":"createChatMessage";Hooks.on(hooksOn,this.handleRoll.bind(this))}game.settings.get("pf2e","critFumbleButtons")&&Hooks.on("renderChatMessage",((message,html)=>{var _a;if(message.isAuthor&&message.isRoll&&message.isContentVisible){const context=message.getFlag("pf2e","context");if(20===(null===(_a=message.roll.dice[0])||void 0===_a?void 0:_a.faces)&&"attack-roll"===(null==context?void 0:context.type)){const critButton=$(`<button class="dice-total-fullDamage-btn" style="width: 22px; height:22px; font-size:10px;line-height:1px"><i class="fas fa-thumbs-up" title="${game.i18n.localize("PF2E.CriticalHitCardButtonTitle")}"></i></button>`),fumbleButton=$(`<button class="dice-total-fullDamage-btn" style="width: 22px; height:22px; font-size:10px;line-height:1px"><i class="fas fa-thumbs-down" title="${game.i18n.localize("PF2E.CriticalFumbleCardButtonTitle")}"></i></button>`),btnContainer1=$('<span class="dmgBtn-container" style="position:absolute; right:0; bottom:1px;"></span>');btnContainer1.append(critButton),btnContainer1.append(fumbleButton),critButton.on("click",(event=>{event.stopPropagation(),this.critTable.draw(),event.currentTarget.blur()})),fumbleButton.on("click",(event=>{event.stopPropagation(),this.fumbleTable.draw(),event.currentTarget.blur()})),html.find(".dice-total").wrapInner('<span id="value"></span>').append(btnContainer1)}}}))}static handleRoll(messageOrId){const chatMessage="string"==typeof messageOrId?game.messages.get(messageOrId):messageOrId;if(chatMessage&&chatMessage.isAuthor&&chatMessage.isRoll&&chatMessage.isContentVisible){const context=chatMessage.getFlag("pf2e","context");if("attack-roll"===(null==context?void 0:context.type)){const die=chatMessage.roll.dice[0];20===die.faces&&(20===die.total?this.drawCard(this.critTable,chatMessage):1===die.total&&this.drawCard(this.fumbleTable,chatMessage))}}}static drawCard(table,chatMessage){this.diceSoNice||mergeObject(chatMessage.data,{"-=sound":null}),table.draw()}}},6813:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2ECONFIG=void 0;const base_1=__webpack_require__(9978),vehicle_1=__webpack_require__(6636),character_1=__webpack_require__(3919),loot_1=__webpack_require__(4436),npc_1=__webpack_require__(5975),familiar_1=__webpack_require__(3283),action_1=__webpack_require__(1021),ancestry_1=__webpack_require__(939),armor_1=__webpack_require__(8425),background_1=__webpack_require__(1899),class_1=__webpack_require__(2769),consumable_1=__webpack_require__(8280),feat_1=__webpack_require__(5103),spell_1=__webpack_require__(802),spellcasting_entry_1=__webpack_require__(1337),weapon_1=__webpack_require__(9385),others_1=__webpack_require__(5079),effect_1=__webpack_require__(541),animal_companion_1=__webpack_require__(2952),ancestryTraits={aasimar:"PF2E.TraitAasimar",aberration:"PF2E.TraitAberration",android:"PF2E.TraitAndroid",aphorite:"PF2E.TraitAphorite",azarketi:"PF2E.TraitAzarketi",beastkin:"PF2E.TraitBeastkin",catfolk:"PF2E.TraitCatfolk",changeling:"PF2E.TraitChangeling",conrasu:"PF2E.TraitConrasu",dhampir:"PF2E.TraitDhampir",duskwalker:"PF2E.TraitDuskwalker",dwarf:"PF2E.TraitDwarf",elf:"PF2E.TraitElf",fetchling:"PF2E.TraitFetchling",fleshwarp:"PF2E.TraitFleshwarp",ganzi:"PF2E.TraitGanzi",geniekin:"PF2E.TraitGeniekin",gnome:"PF2E.TraitGnome",goblin:"PF2E.TraitGoblin",grippli:"PF2E.TraitGrippli","half-elf":"PF2E.TraitHalfElf",halfling:"PF2E.TraitHalfling","half-orc":"PF2E.TraitHalfOrc",human:"PF2E.TraitHuman",hobgoblin:"PF2E.TraitHobgoblin",kitsune:"PF2E.TraitKitsune",kobold:"PF2E.TraitKobold",ifrit:"PF2E.TraitIfrit",leshy:"PF2E.TraitLeshy",lizardfolk:"PF2E.TraitLizardfolk",orc:"PF2E.TraitOrc",oread:"PF2E.TraitOread",ratfolk:"PF2E.TraitRatfolk",shoony:"PF2E.TraitShoony",sprite:"PF2E.TraitSprite",strix:"PF2E.TraitStrix",suli:"PF2E.TraitSuli",sylph:"PF2E.TraitSylph",tengu:"PF2E.TraitTengu",tiefling:"PF2E.TraitTiefling",undine:"PF2E.TraitUndine",amphibious:"PF2E.TraitAmphibious",fey:"PF2E.TraitFey",humanoid:"PF2E.TraitHumanoid",plant:"PF2E.TraitPlant"},classTraits={alchemist:"PF2E.TraitAlchemist",barbarian:"PF2E.TraitBarbarian",bard:"PF2E.TraitBard",champion:"PF2E.TraitChampion",cleric:"PF2E.TraitCleric",druid:"PF2E.TraitDruid",fighter:"PF2E.TraitFighter",investigator:"PF2E.TraitInvestigator",monk:"PF2E.TraitMonk",oracle:"PF2E.TraitOracle",ranger:"PF2E.TraitRanger",rogue:"PF2E.TraitRogue",sorcerer:"PF2E.TraitSorcerer",swashbuckler:"PF2E.TraitSwashbuckler",witch:"PF2E.TraitWitch",wizard:"PF2E.TraitWizard"},damageTypes={acid:"PF2E.DamageTypeAcid",bleed:"PF2E.DamageTypeBleed",bludgeoning:"PF2E.DamageTypeBludgeoning",chaotic:"PF2E.DamageTypeChaotic",cold:"PF2E.DamageTypeCold",electricity:"PF2E.DamageTypeElectricity",energy:"PF2E.DamageTypeEnergy",evil:"PF2E.DamageTypeEvil",fire:"PF2E.DamageTypeFire",force:"PF2E.DamageTypeForce",good:"PF2E.DamageTypeGood",lawful:"PF2E.DamageTypeLawful",mental:"PF2E.DamageTypeMental",negative:"PF2E.DamageTypeNegative",piercing:"PF2E.DamageTypePiercing",poison:"PF2E.DamageTypePoison",positive:"PF2E.DamageTypePositive",precision:"PF2E.DamageTypePrecision",slashing:"PF2E.DamageTypeSlashing",sonic:"PF2E.DamageTypeSonic"},spellTraditions={arcane:"PF2E.TraitArcane",divine:"PF2E.TraitDivine",occult:"PF2E.TraitOccult",primal:"PF2E.TraitPrimal"},magicSchools={abjuration:"PF2E.TraitAbjuration",conjuration:"PF2E.TraitConjuration",divination:"PF2E.TraitDivination",enchantment:"PF2E.TraitEnchantment",evocation:"PF2E.TraitEvocation",illusion:"PF2E.TraitIllusion",necromancy:"PF2E.TraitNecromancy",transmutation:"PF2E.TraitTransmutation"},weaponCategories={simple:"PF2E.WeaponTypeSimple",martial:"PF2E.WeaponTypeMartial",advanced:"PF2E.WeaponTypeAdvanced",unarmed:"PF2E.WeaponTypeUnarmed"},traitsDescriptions={common:"PF2E.TraitDescriptionCommon",uncommon:"PF2E.TraitDescriptionUncommon",rare:"PF2E.TraitDescriptionRare",unique:"PF2E.TraitDescriptionUnique",agile:"PF2E.TraitDescriptionAgile",attached:"PF2E.TraitDescriptionAttached",backstabber:"PF2E.TraitDescriptionBackstabber",backswing:"PF2E.TraitDescriptionBackswing",bomb:"PF2E.TraitDescriptionBomb","deadly-d6":"PF2E.TraitDescriptionDeadlyD6","deadly-d8":"PF2E.TraitDescriptionDeadlyD8","deadly-d10":"PF2E.TraitDescriptionDeadlyD10","deadly-d12":"PF2E.TraitDescriptionDeadlyD12",disarm:"PF2E.TraitDescriptionDisarm",dwarf:"PF2E.TraitDescriptionDwarf",elf:"PF2E.TraitDescriptionElf","fatal-d8":"PF2E.TraitDescriptionFatalD8","fatal-d10":"PF2E.TraitDescriptionFatalD10","fatal-d12":"PF2E.TraitDescriptionFatalD12",finesse:"PF2E.TraitDescriptionFinesse",forceful:"PF2E.TraitDescriptionForceful","free-hand":"PF2E.TraitDescriptionFreeHand",fungus:"PF2E.TraitDescriptionFungus",gnome:"PF2E.TraitDescriptionGnome",goblin:"PF2E.TraitDescriptionGoblin",grapple:"PF2E.TraitDescriptionGrapple",halfling:"PF2E.TraitDescriptionHalfling","jousting-d6":"PF2E.TraitDescriptionJoustingD6",nonlethal:"PF2E.TraitDescriptionNonlethal",olfactory:"PF2E.TraitDescrpitionOlfactory",orc:"PF2E.TraitDescriptionOrc",parry:"PF2E.TraitDescriptionParry",plant:"PF2E.TraitDescriptionPlant",propulsive:"PF2E.TraitDescriptionPropulsive",range:"PF2E.TraitDescriptionRange","ranged-trip":"PF2E.TraitDescriptionRangedTrip",reach:"PF2E.TraitDescriptionReach","reach-10":"PF2E.TraitDescriptionReach10","reach-15":"PF2E.TraitDescriptionReach15","reach-20":"PF2E.TraitDescriptionReach20","reach-25":"PF2E.TraitDescriptionReach25","reach-30":"PF2E.TraitDescriptionReach30",repeating:"PF2E.TraitDescriptionRepeating",shove:"PF2E.TraitDescriptionShove",sweep:"PF2E.TraitDescriptionSweep",tethered:"PF2E.TraitDescriptionTethered","thrown-10":"PF2E.TraitDescriptionThrown10","thrown-20":"PF2E.TraitDescriptionThrown20","thrown-30":"PF2E.TraitDescriptionThrown30","thrown-40":"PF2E.TraitDescriptionThrown40",trip:"PF2E.TraitDescriptionTrip",twin:"PF2E.TraitDescriptionTwin","two-hand-d8":"PF2E.TraitDescriptionTwoHandD8","two-hand-d10":"PF2E.TraitDescriptionTwoHandD10","two-hand-d12":"PF2E.TraitDescriptionTwoHandD12",unarmed:"PF2E.TraitDescriptionUnarmed","versatile-s":"PF2E.TraitDescriptionVersatileS","versatile-p":"PF2E.TraitDescriptionVersatileP","versatile-b":"PF2E.TraitDescriptionVersatileB","volley-30":"PF2E.TraitDescriptionVolley30",attack:"PF2E.TraitDescriptionAttack",consumable:"PF2E.TraitDescriptionConsumable",death:"PF2E.TraitDescriptionDeath",disease:"PF2E.TraitDescriptionDisease",downtime:"PF2E.TraitDescriptionDowntime",drug:"PF2E.TraitDescriptionDrug",environement:"PF2E.TraitDescriptionEnvironement",extradimensional:"PF2E.TraitDescriptionExtradimensional",focused:"PF2E.TraitDescriptionFocused",fortune:"PF2E.TraitDescriptionFortune",general:"PF2E.TraitDescriptionGeneral",haunt:"PF2E.TraitDescriptionHaunt",healing:"PF2E.TraitDescriptionHealing",incorporeal:"PF2E.TraitDescriptionIncorporeal",infused:"PF2E.TraitDescriptionInfused",leshy:"PF2E.TraitDescriptionLeshy",light:"PF2E.TraitDescriptionLight",linguistic:"PF2E.TraitDescriptionLinguistic",litany:"PF2E.TraitDescriptionLitany",mechanical:"PF2E.TraitDescriptionMechanical",mental:"PF2E.TraitDescriptionMental",minion:"PF2E.TraitDescriptionMinion",misfortune:"PF2E.TraitDescriptionMisfortune",move:"PF2E.TraitDescriptionMove",possession:"PF2E.TraitDescriptionPossession",precious:"PF2E.TraitDescriptionPrecious",prediction:"PF2E.TraitDescriptionPrediction",reload:"PF2E.TraitDescriptionReload",revelation:"PF2E.TraitDescriptionRevelation",scrying:"PF2E.TraitDescriptionScrying",shadow:"PF2E.TraitDescriptionShadow",shoony:"PF2E.TraitDescriptionShoony",sleep:"PF2E.TraitDescriptionSleep",splash:"PF2E.TraitDescriptionSplash",summoned:"PF2E.TraitDescriptionSummoned",tattoo:"PF2E.TraitDescriptionTattoo",teleportation:"PF2E.TraitDescriptionTeleportation",trap:"PF2E.TraitDescriptionTrap",virulent:"PF2E.TraitDescriptionVirulent",skill:"PF2E.TraitDescriptionSkill","half-elf":"PF2E.TraitDescriptionHalfElf","half-orc":"PF2E.TraitDescriptionHalfOrc",human:"PF2E.TraitDescriptionHuman",manipulate:"PF2E.TraitDescriptionManipulate",additive1:"PF2E.TraitDescriptionAdditive1",additive2:"PF2E.TraitDescriptionAdditive2",additive3:"PF2E.TraitDescriptionAdditive3",alchemical:"PF2E.TraitDescriptionAlchemical",archetype:"PF2E.TraitDescriptionArchetype",auditory:"PF2E.TraitDescriptionAuditory",aura:"PF2E.TraitDescriptionAura",cantrip:"PF2E.TraitDescriptionCantrip",companion:"PF2E.TraitDescriptionCompanion",composition:"PF2E.TraitDescriptionComposition",concentrate:"PF2E.TraitDescriptionConcentrate",consecration:"PF2E.TraitDescriptionConsecration",contact:"PF2E.TraitDescriptionContact",curse:"PF2E.TraitDescriptionCurse",darkness:"PF2E.TraitDescriptionDarkness",dedication:"PF2E.TraitDescriptionDedication",detection:"PF2E.TraitDescriptionDetection",emotion:"PF2E.TraitDescriptionEmotion",exploration:"PF2E.TraitDescriptionExploration",fear:"PF2E.TraitDescriptionFear",flourish:"PF2E.TraitDescriptionFlourish",incapacitation:"PF2E.TraitDescriptionIncapacitation",magical:"PF2E.TraitDescriptionMagical",metamagic:"PF2E.TraitDescriptionMetamagic",morph:"PF2E.TraitDescriptionMorph",multiclass:"PF2E.TraitDescriptionMulticlass",oath:"PF2E.TraitDescriptionOath",open:"PF2E.TraitDescriptionOpen",polymorph:"PF2E.TraitDescriptionPolymorph",press:"PF2E.TraitDescriptionPress",rage:"PF2E.TraitDescriptionRage",secret:"PF2E.TraitDescriptionSecret",stance:"PF2E.TraitDescriptionStance",visual:"PF2E.TraitDescriptionVisual",chaotic:"PF2E.TraitDescriptionChaotic",evil:"PF2E.TraitDescriptionEvil",good:"PF2E.TraitDescriptionGood",lawful:"PF2E.TraitDescriptionLawful",arcane:"PF2E.TraitDescriptionArcane",divine:"PF2E.TraitDescriptionDivine",occult:"PF2E.TraitDescriptionOccult",primal:"PF2E.TraitDescriptionPrimal",air:"PF2E.TraitDescriptionAir",earth:"PF2E.TraitDescriptionEarth",fire:"PF2E.TraitDescriptionFire",water:"PF2E.TraitDescriptionWater",abjuration:"PF2E.TraitDescriptionAbjuration",conjuration:"PF2E.TraitDescriptionConjuration",divination:"PF2E.TraitDescriptionDivination",enchantment:"PF2E.TraitDescriptionEnchantment",evocation:"PF2E.TraitDescriptionEvocation",illusion:"PF2E.TraitDescriptionIllusion",necromancy:"PF2E.TraitDescriptionNecromancy",transmutation:"PF2E.TraitDescriptionTransmutation",acid:"PF2E.TraitDescriptionAcid",cold:"PF2E.TraitDescriptionCold",electricity:"PF2E.TraitDescriptionElectricity",force:"PF2E.TraitDescriptionForce",positive:"PF2E.TraitDescriptionPositive",sonic:"PF2E.TraitDescriptionSonic",negative:"PF2E.TraitDescriptionNegative",complex:"PF2E.TraitDescriptionComplex",alchemist:"PF2E.TraitDescriptionAlchemist",barbarian:"PF2E.TraitDescriptionBarbarian",bard:"PF2E.TraitDescriptionBard",champion:"PF2E.TraitDescriptionChampion",cleric:"PF2E.TraitDescriptionCleric",druid:"PF2E.TraitDescriptionDruid",fighter:"PF2E.TraitDescriptionFighter",investigator:"PF2E.TraitDescriptionInvestigator",monk:"PF2E.TraitDescriptionMonk",oracle:"PF2E.TraitDescriptionOracle",ranger:"PF2E.TraitDescriptionRanger",rogue:"PF2E.TraitDescriptionRogue",sorcerer:"PF2E.TraitDescriptionSorcerer",swashbuckler:"PF2E.TraitDescriptionSwashbuckler",witch:"PF2E.TraitDescriptionWitch",wizard:"PF2E.TraitDescriptionWizard",bulwark:"PF2E.TraitDescriptionBulwark",comfort:"PF2E.TraitDescriptionComfort",flexible:"PF2E.TraitDescriptionFlexible",noisy:"PF2E.TraitDescriptionNoisy",ingested:"PF2E.TraitDescriptionIngested",inhaled:"PF2E.TraitDescriptionInhaled",injury:"PF2E.TraitDescriptionInjury",poison:"PF2E.TraitDescriptionPoison",finisher:"PF2E.TraitDescriptionFinisher",cursebound:"PF2E.TraitDescriptionCursebound",hex:"PF2E.TraitDescriptionHex"},damageTraits=Object.fromEntries(Object.entries(damageTypes).filter((entry=>entry[0]in traitsDescriptions))),creatureTraits=Object.assign(Object.assign(Object.assign({},ancestryTraits),damageTraits),{aberration:"PF2E.TraitAberration",acid:"PF2E.TraitAcid",aeon:"PF2E.TraitAeon",aesir:"PF2E.TraitAesir",agathion:"PF2E.TraitAgathion",air:"PF2E.TraitAir",alchemical:"PF2E.TraitAlchemical",amphibious:"PF2E.TraitAmphibious",anadi:"PF2E.TraitAnadi",angel:"PF2E.TraitAngel",animal:"PF2E.TraitAnimal",aquatic:"PF2E.TraitAquatic",archon:"PF2E.TraitArchon",astral:"PF2E.TraitAstral",asura:"PF2E.TraitAsura",azata:"PF2E.TraitAzata",beast:"PF2E.TraitBeast",boggard:"PF2E.TraitBoggard",caligni:"PF2E.TraitCaligni",celestial:"PF2E.TraitCelestial","charau-ka":"PF2E.TraitCharauKa",clockwork:"PF2E.TraitClockwork",cold:"PF2E.TraitCold",couatl:"PF2E.TraitCouatl",construct:"PF2E.TraitConstruct",daemon:"PF2E.TraitDaemon",demon:"PF2E.TraitDemon",dero:"PF2E.TraitDero",devil:"PF2E.TraitDevil",dhampir:"PF2E.TraitDhampir",div:"PF2E.TraitDiv",dinosaur:"PF2E.TraitDinosaur",dragon:"PF2E.TraitDragon",dream:"PF2E.TraitDream",drow:"PF2E.TraitDrow",duergar:"PF2E.TraitDuergar",duskwalker:"PF2E.TraitDuskwalker",earth:"PF2E.TraitEarth",elemental:"PF2E.TraitElemental",ethereal:"PF2E.TraitEthereal",fetchling:"PF2E.TraitFetchling",fey:"PF2E.TraitFey",fiend:"PF2E.TraitFiend",fungus:"PF2E.TraitFungus",genie:"PF2E.TraitGenie",ghoran:"PF2E.TraitGhoran",ghost:"PF2E.TraitGhost",ghoul:"PF2E.TraitGhoul",giant:"PF2E.TraitGiant",gnoll:"PF2E.TraitGnoll",golem:"PF2E.TraitGolem",gremlin:"PF2E.TraitGremlin",grioth:"PF2E.TraitGrioth",grippli:"PF2E.TraitGrippli",hag:"PF2E.TraitHag",herald:"PF2E.TraitHerald",humanoid:"PF2E.TraitHumanoid",ifrit:"PF2E.TraitIfrit",incorporeal:"PF2E.TraitIncorporeal",inevitable:"PF2E.TraitInevitable",kami:"PF2E.TraitKami",kobold:"PF2E.TraitKobold",kovintus:"PF2E.TraitKovintus",locathah:"PF2E.TraitLocathah",merfolk:"PF2E.TraitMerfolk",mindless:"PF2E.TraitMindless",minion:"PF2E.TraitMinion",monitor:"PF2E.TraitMonitor",mortic:"PF2E.TraitMortic",mummy:"PF2E.TraitMummy",munavri:"PF2E.TraitMunavri",mutant:"PF2E.TraitMutant",nagaji:"PF2E.TraitNagaji",nymph:"PF2E.TraitNymph",oni:"PF2E.TraitOni",ooze:"PF2E.TraitOoze",orc:"PF2E.TraitOrc",oread:"PF2E.TraitOread",paaridar:"PF2E.TraitPaaridar",petitioner:"PF2E.TraitPetitioner",phanton:"PF2E.TraitPhantom",plant:"PF2E.TraitPlant",protean:"PF2E.TraitProtean",psychopomp:"PF2E.TraitPsychopomp",qlippoth:"PF2E.TraitQlippoth",rakshasa:"PF2E.TraitRakshasa",ratfolk:"PF2E.TraitRatfolk",sahkil:"PF2E.TraitSahkil",samsaran:"PF2E.TraitSamsaran","sea devil":"PF2E.TraitSeaDevil",serpentfolk:"PF2E.TraitSerpentfolk",shabti:"PF2E.TraitShabti",shadow:"PF2E.TraitShadow",siktempora:"PF2E.TraitSiktempora",skeleton:"PF2E.TraitSkeleton",skelm:"PF2E.TraitSkelm",skulk:"PF2E.TraitSkulk",soulbound:"PF2E.TraitSoulbound",spirit:"PF2E.TraitSpirit",spriggan:"PF2E.TraitSpriggan",sprite:"PF2E.TraitSprite",stheno:"PF2E.TraitStheno",suli:"PF2E.TraitSuli",swarm:"PF2E.TraitSwarm",sylph:"PF2E.TraitSylph",tane:"PF2E.TraitTane",tanggal:"PF2E.TraitTanggal",tengu:"PF2E.TraitTengu",time:"PF2E.TraitTime",titan:"PF2E.TraitTitan",troll:"PF2E.TraitTroll",undead:"PF2E.TraitUndead",undine:"PF2E.TraitUndine",urdefhan:"PF2E.TraitUrdefhan",vampire:"PF2E.TraitVampire",vanara:"PF2E.TraitVanara",velstrac:"PF2E.TraitVelstrac",vishkanya:"PF2E.TraitVishkanya",water:"PF2E.TraitWater",wayang:"PF2E.TraitWayang",werecreature:"PF2E.TraitWerecreature",wight:"PF2E.TraitWight",wraith:"PF2E.TraitWraith",wyrwood:"PF2E.TraitWyrwood",xulgath:"PF2E.TraitXulgath",zombie:"PF2E.TraitZombie"}),spellTraits=Object.assign(Object.assign(Object.assign(Object.assign({},classTraits),damageTraits),spellTraditions),{air:"PF2E.TraitAir",attack:"PF2E.TraitAttack",auditory:"PF2E.TraitAuditory",aura:"PF2E.TraitAura",cantrip:"PF2E.TraitCantrip",composition:"PF2E.TraitComposition",concentrate:"PF2E.TraitConcentrate",curse:"PF2E.TraitCurse",cursebound:"PF2E.TraitCursebound",darkness:"PF2E.TraitDarkness",death:"PF2E.TraitDeath",detection:"PF2E.TraitDetection",disease:"PF2E.TraitDisease",earth:"PF2E.TraitEarth",emotion:"PF2E.TraitEmotion",extradimensional:"PF2E.TraitExtradimensional",fear:"PF2E.TraitFear",fortune:"PF2E.TraitFortune",fungus:"PF2E.TraitFungus",healing:"PF2E.TraitHealing",hex:"PF2E.TraitHex",incapacitation:"PF2E.TraitIncapacitation",inhaled:"PF2E.TraitInhaled",light:"PF2E.TraitLight",linguistic:"PF2E.TraitLinguistic",litany:"PF2E.TraitLitany",metamagic:"PF2E.TraitMetamagic",misfortune:"PF2E.TraitMisfortune",morph:"PF2E.TraitMorph",move:"PF2E.TraitMove",nonlethal:"PF2E.TraitNonlethal",olfactory:"PF2E.TraitOlfactory",plant:"PF2E.TraitPlant",possession:"PF2E.TraitPossession",polymorph:"PF2E.TraitPolymorph",prediction:"PF2E.TraitPrediction",revelation:"PF2E.TraitRevelation",scrying:"PF2E.TraitScrying",shadow:"PF2E.TraitShadow",sleep:"PF2E.TraitSleep",stance:"PF2E.TraitStance",teleportation:"PF2E.TraitTeleportation",visual:"PF2E.TraitVisual",water:"PF2E.TraitWater"});exports.PF2ECONFIG={chatDamageButtonShieldToggle:!1,statusEffects:{overruledByModule:!1,lastIconType:"default",effectsIconFolder:"systems/pf2e/icons/conditions/",effectsIconFileType:"webp",keepFoundryStatusEffects:!0,foundryStatusEffects:[]},levels:{1:"PF2E.Level1",2:"PF2E.Level2",3:"PF2E.Level3",4:"PF2E.Level4",5:"PF2E.Level5",6:"PF2E.Level6",7:"PF2E.Level7",8:"PF2E.Level8",9:"PF2E.Level9",10:"PF2E.Level10",11:"PF2E.Level11",12:"PF2E.Level12",13:"PF2E.Level13",14:"PF2E.Level14",15:"PF2E.Level15",16:"PF2E.Level16",17:"PF2E.Level17",18:"PF2E.Level18",19:"PF2E.Level19",20:"PF2E.Level20"},abilities:{str:"PF2E.AbilityStr",dex:"PF2E.AbilityDex",con:"PF2E.AbilityCon",int:"PF2E.AbilityInt",wis:"PF2E.AbilityWis",cha:"PF2E.AbilityCha"},attributes:{perception:"PF2E.PerceptionLabel",stealth:"PF2E.StealthLabel",initiative:"PF2E.PerceptionLabel"},dcAdjustments:{"incredibly easy":"PF2E.DCAdjustmentIncrediblyEasy","very easy":"PF2E.DCAdjustmentVeryEasy",easy:"PF2E.DCAdjustmentEasy",normal:"PF2E.DCAdjustmentNormal",hard:"PF2E.DCAdjustmentHard","very hard":"PF2E.DCAdjustmentVeryHard","incredibly hard":"PF2E.DCAdjustmentIncrediblyHard"},skills:{acr:"PF2E.SkillAcr",arc:"PF2E.SkillArc",ath:"PF2E.SkillAth",cra:"PF2E.SkillCra",dec:"PF2E.SkillDec",dip:"PF2E.SkillDip",itm:"PF2E.SkillItm",med:"PF2E.SkillMed",nat:"PF2E.SkillNat",occ:"PF2E.SkillOcc",prf:"PF2E.SkillPrf",rel:"PF2E.SkillRel",soc:"PF2E.SkillSoc",ste:"PF2E.SkillSte",sur:"PF2E.SkillSur",thi:"PF2E.SkillThi"},martialSkills:{unarmored:"PF2E.MartialUnarmored",light:"PF2E.MartialLight",medium:"PF2E.MartialMedium",heavy:"PF2E.MartialHeavy",simple:"PF2E.MartialSimple",martial:"PF2E.MartialMartial",advanced:"PF2E.MartialAdvanced",unarmed:"PF2E.MartialUnarmed"},saves:{fortitude:"PF2E.SavesFortitude",reflex:"PF2E.SavesReflex",will:"PF2E.SavesWill"},savingThrowDefaultAbilities:{fortitude:"con",reflex:"dex",will:"wis"},currencies:{pp:"PF2E.CurrencyPP",gp:"PF2E.CurrencyGP",sp:"PF2E.CurrencySP",cp:"PF2E.CurrencyCP"},preciousMaterialGrades:{low:"PF2E.PreciousMaterialLowGrade",standard:"PF2E.PreciousMaterialStandardGrade",high:"PF2E.PreciousMaterialHighGrade"},preciousMaterials:{adamantine:"PF2E.PreciousMaterialAdamantine",coldIron:"PF2E.PreciousMaterialColdIron",darkwood:"PF2E.PreciousMaterialDarkwood",dragonhide:"PF2E.PreciousMaterialDragonhide",mithral:"PF2E.PreciousMaterialMithral",orichalcum:"PF2E.PreciousMaterialOrichalcum",silver:"PF2E.PreciousMaterialSilver","sovereign steel":"PF2E.PreciousMaterialSovereignSteel",warpglass:"PF2E.PreciousMaterialWarpglass"},armorPotencyRunes:{1:"PF2E.ArmorPotencyRune1",2:"PF2E.ArmorPotencyRune2",3:"PF2E.ArmorPotencyRune3",4:"PF2E.ArmorPotencyRune4"},armorResiliencyRunes:{resilient:"PF2E.ArmorResilientRune",greaterResilient:"PF2E.ArmorGreaterResilientRune",majorResilient:"PF2E.ArmorMajorResilientRune"},armorPropertyRunes:{ready:"PF2E.ArmorPropertyRuneReady",slick:"PF2E.ArmorPropertyRuneSlick",shadow:"PF2E.ArmorPropertyRuneShadow",glamered:"PF2E.ArmorPropertyRuneGlamered",acidResistant:"PF2E.ArmorPropertyRuneAcidResistant",coldResistant:"PF2E.ArmorPropertyRuneColdResistant",electricityResistant:"PF2E.ArmorPropertyRuneElectricityResistant",fireResistant:"PF2E.ArmorPropertyRuneFireResistant",greaterSlick:"PF2E.ArmorPropertyRuneGreaterSlick",invisibility:"PF2E.ArmorPropertyRuneInvisibility",sinisterKnight:"PF2E.ArmorPropertyRuneSinisterKnight",greaterReady:"PF2E.ArmorPropertyRuneGreaterReady",greaterShadow:"PF2E.ArmorPropertyRuneGreaterShadow",greaterInvisibility:"PF2E.ArmorPropertyRuneGreaterInvisibility",greaterAcidResistant:"PF2E.ArmorPropertyRuneGreaterAcidResistant",greaterColdResistant:"PF2E.ArmorPropertyRuneGreaterColdResistant",greaterElectricityResistant:"PF2E.ArmorPropertyRuneGreaterElectricityResistant",greaterFireResistant:"PF2E.ArmorPropertyRuneGreaterFireResistant",fortification:"PF2E.ArmorPropertyRuneFortification",winged:"PF2E.ArmorPropertyRuneWinged",rockBraced:"PF2E.ArmorPropertyRuneRockBraced",soaring:"PF2E.ArmorPropertyRuneSoaring",antimagic:"PF2E.ArmorPropertyRuneAntimagic",majorSlick:"PF2E.ArmorPropertyRuneMajorSlick",ethereal:"PF2E.ArmorPropertyRuneEthereal",majorShadow:"PF2E.ArmorPropertyRuneMajorShadow",greaterFortification:"PF2E.ArmorPropertyRuneGreaterFortification",greaterWinged:"PF2E.ArmorPropertyRuneGreaterWinged"},weaponPotencyRunes:{1:"PF2E.WeaponPotencyRune1",2:"PF2E.WeaponPotencyRune2",3:"PF2E.WeaponPotencyRune3",4:"PF2E.WeaponPotencyRune4"},weaponStrikingRunes:{striking:"PF2E.ArmorStrikingRune",greaterStriking:"PF2E.ArmorGreaterStrikingRune",majorStriking:"PF2E.ArmorMajorStrikingRune"},weaponPropertyRunes:{kinWarding:"PF2E.WeaponPropertyRuneKinWarding",returning:"PF2E.WeaponPropertyRuneReturning",ghostTouch:"PF2E.WeaponPropertyRuneGhostTouch",disrupting:"PF2E.WeaponPropertyRuneDisrupting",pacifying:"PF2E.WeaponPropertyRunePacifying",fearsome:"PF2E.WeaponPropertyRuneFearsome",shifting:"PF2E.WeaponPropertyRuneShifting",conducting:"PF2E.WeaponPropertyRuneConducting",wounding:"PF2E.WeaponPropertyRuneWounding",bloodbane:"PF2E.WeaponPropertyRuneBloodbane",corrosive:"PF2E.WeaponPropertyRuneCorrosive",flaming:"PF2E.WeaponPropertyRuneFlaming",frost:"PF2E.WeaponPropertyRuneFrost",shock:"PF2E.WeaponPropertyRuneShock",thundering:"PF2E.WeaponPropertyRuneThundering",grievous:"PF2E.WeaponPropertyRuneGrievous",serrating:"PF2E.WeaponPropertyRuneSerrating",anarchic:"PF2E.WeaponPropertyRuneAnarchic",axiomatic:"PF2E.WeaponPropertyRuneAxiomatic",holy:"PF2E.WeaponPropertyRuneHoly",unholy:"PF2E.WeaponPropertyRuneUnholy",greaterFearsome:"PF2E.WeaponPropertyRuneGreaterFearsome",dancing:"PF2E.WeaponPropertyRuneDancing",spellStoring:"PF2E.WeaponPropertyRuneSpellStoring",greaterBloodbane:"PF2E.WeaponPropertyRuneGreaterBloodbane",keen:"PF2E.WeaponPropertyRuneKeen",greaterDisrupting:"PF2E.WeaponPropertyRuneGreaterDisrupting",greaterCorrosive:"PF2E.WeaponPropertyRuneGreaterCorrosive",greaterFlaming:"PF2E.WeaponPropertyRuneGreaterFlaming",greaterFrost:"PF2E.WeaponPropertyRuneGreaterFrost",greaterShock:"PF2E.WeaponPropertyRuneGreaterShock",greaterThundering:"PF2E.WeaponPropertyRuneGreaterThundering",ancestralEchoing:"PF2E.WeaponPropertyRuneAncestralEchoing",speed:"PF2E.WeaponPropertyRuneSpeed",vorpal:"PF2E.WeaponPropertyRuneVorpal"},damageTypes,resistanceTypes:{acid:"PF2E.DamageTypeAcid",air:"PF2E.TraitAir",all:"PF2E.ResistanceTypeAll",bleed:"PF2E.DamageTypeBleed",bludgeoning:"PF2E.DamageTypeBludgeoning",chaotic:"PF2E.DamageTypeChaotic",cold:"PF2E.DamageTypeCold","critical-hits":"PF2E.ResistanceTypeCriticalHits",earth:"PF2E.TraitEarth",electricity:"PF2E.DamageTypeElectricity",evil:"PF2E.DamageTypeEvil",fire:"PF2E.DamageTypeFire",force:"PF2E.DamageTypeForce",good:"PF2E.DamageTypeGood",lawful:"PF2E.DamageTypeLawful",mental:"PF2E.DamageTypeMental",negative:"PF2E.DamageTypeNegative",physical:"PF2E.ResistanceTypePhysical",piercing:"PF2E.DamageTypePiercing",plant:"PF2E.TraitPlant",poison:"PF2E.DamageTypePoison",positive:"PF2E.DamageTypePositive",precision:"PF2E.DamageTypePrecision","protean anatomy":"PF2E.ResistanceTypeProteanAnatomy",slashing:"PF2E.DamageTypeSlashing",sonic:"PF2E.DamageTypeSonic",water:"PF2E.TraitWater",weapon:"PF2E.ResistanceTypeWeapon"},stackGroups:{bolts:"PF2E.StackGroupBolts",arrows:"PF2E.StackGroupArrows",slingBullets:"PF2E.StackGroupSlingBullets",blowgunDarts:"PF2E.StackGroupBlowgunDarts",woodenTaws:"PF2E.StackGroupWoodenTaws",rations:"PF2E.StackGroupRations",coins:"PF2E.StackGroupCoins",gems:"PF2E.StackGroupGems",sacks:"PF2E.StackGroupSacks"},weaknessTypes:{acid:"PF2E.DamageTypeAcid",adamantine:"PF2E.WeaknessTypeAdamantine",air:"PF2E.TraitAir","area-damage":"PF2E.WeaknessTypeAreaDamage",bleed:"PF2E.DamageTypeBleed",bludgeoning:"PF2E.DamageTypeBludgeoning",chaotic:"PF2E.DamageTypeChaotic",cold:"PF2E.DamageTypeCold",coldiron:"PF2E.WeaknessTypeColdIron",darkwood:"PF2E.WeaknessTypeDarkwood",earth:"PF2E.TraitEarth",electricity:"PF2E.DamageTypeElectricity",emotion:"PF2E.TraitEmotion",evil:"PF2E.DamageTypeEvil",good:"PF2E.DamageTypeGood",fire:"PF2E.DamageTypeFire",force:"PF2E.DamageTypeForce",lawful:"PF2E.DamageTypeLawful",light:"PF2E.DamageTypeLight",mental:"PF2E.DamageTypeMental",mithral:"PF2E.WeaknessTypeMithral",negative:"PF2E.DamageTypeNegative",orichalcum:"PF2E.WeaknessTypeOrichalcum",piercing:"PF2E.DamageTypePiercing",poison:"PF2E.DamageTypePoison",positive:"PF2E.DamageTypePositive",precision:"PF2E.DamageTypePrecision",salt:"PF2E.WeaknessTypeSalt","salt water":"PF2E.WeaknessTypeSaltWater",silver:"PF2E.WeaknessTypeSilver",slashing:"PF2E.DamageTypeSlashing",sonic:"PF2E.DamageTypeSonic","splash-damage":"PF2E.WeaknessTypeSplashDamage","vampire weaknesses":"PF2E.WeaknessTypeVampireWeaknesses",vorpal:"PF2E.WeaknessTypeVorpal","vorpal fear":"PF2E.WeaknessTypeVorpalFear",warpglass:"PF2E.PreciousMaterialWarpglass",water:"PF2E.TraitWater"},weaponDamage:{bludgeoning:"PF2E.DamageTypeBludgeoning",piercing:"PF2E.DamageTypePiercing",slashing:"PF2E.DamageTypeSlashing",modular:"PF2E.DamageTypeModular"},healingTypes:{healing:"PF2E.HealingTypeHealing",temphp:"PF2E.HealingTypeTemporaryHealing"},weaponCategories,weaponTypes:weaponCategories,weaponGroups:{club:"PF2E.WeaponGroupClub",knife:"PF2E.WeaponGroupKnife",brawling:"PF2E.WeaponGroupBrawling",spear:"PF2E.WeaponGroupSpear",sword:"PF2E.WeaponGroupSword",axe:"PF2E.WeaponGroupAxe",flail:"PF2E.WeaponGroupFlail",polearm:"PF2E.WeaponGroupPolearm",pick:"PF2E.WeaponGroupPick",hammer:"PF2E.WeaponGroupHammer",shield:"PF2E.WeaponGroupShield",dart:"PF2E.WeaponGroupDart",bow:"PF2E.WeaponGroupBow",sling:"PF2E.WeaponGroupSling",bomb:"PF2E.WeaponGroupBomb"},weaponDescriptions:{club:"PF2E.WeaponDescriptionClub",knife:"PF2E.WeaponDescriptionKnife",brawling:"PF2E.WeaponDescriptionBrawling",spear:"PF2E.WeaponDescriptionSpear",sword:"PF2E.WeaponDescriptionSword",axe:"PF2E.WeaponDescriptionAxe",flail:"PF2E.WeaponDescriptionFlail",polearm:"PF2E.WeaponDescriptionPolearm",pick:"PF2E.WeaponDescriptionPick",hammer:"PF2E.WeaponDescriptionHammer",shield:"PF2E.WeaponDescriptionShield",dart:"PF2E.WeaponDescriptionDart",bow:"PF2E.WeaponDescriptionBow",sling:"PF2E.WeaponDescriptionSling",bomb:"PF2E.WeaponDescriptionBomb"},usageTraits:{"held-in-one-hand":"PF2E.TraitHeldOneHand","held-in-two-hands":"PF2E.TraitHeldTwoHands","affixed-to-armor":"PF2E.TraitAffixedToArmor","affixed-to-weapon":"PF2E.TraitAffixedToWeapon","affixed-to-a-shield":"PF2E.TraitAffixedToAShield",bonded:"PF2E.TraitBonded",worn:"PF2E.TraitWorn",wornamulet:"PF2E.TraitWornAmulet",wornanklets:"PF2E.TraitWornAnklets",wornbackpack:"PF2E.TraitWornBackpack",wornbarding:"PF2E.TraitWornBarding",wornbelt:"PF2E.TraitWornBelt",wornbracers:"PF2E.TraitWornBracers",wornbracelet:"PF2E.TraitWornOnWrists",worncloak:"PF2E.TraitWornCloak",worncirclet:"PF2E.TraitWornCirclet",worncollar:"PF2E.TraitWornCollar",wornepaulet:"PF2E.TraitWornEpaulet",worneyepiece:"PF2E.TraitWornEyepiece",worngarment:"PF2E.TraitWornGarment",worngloves:"PF2E.TraitWornGloves",wornheadwear:"PF2E.TraitWornHeadwear",wornmask:"PF2E.TraitWornMask",wornnecklace:"PF2E.TraitWornNecklace",wornonbelt:"PF2E.TraitWornOnBelt",wornring:"PF2E.TraitWornRing",wornshoes:"PF2E.TraitWornShoes",wornhorseshoes:"PF2E.TraitWornHorseshoes",wornsaddle:"PF2E.TraitWornSaddle","etched-onto-armor":"PF2E.TraitEtchedOntoAArmor","etched-onto-a-weapon":"PF2E.TraitEtchedOntoAWeapon",wornwrist:"PF2E.TraitWornOnWrists","etched-onto-thrown-weapon":"PF2E.TraitEtchedOntoAThrownWeapon","etched-onto-melee-weapon":"PF2E.TraitEtchedOntoAMeleeWeapon","etched-onto-clan-dagger":"PF2E.TraitEtchedOntoAClanDagger","etched-onto-lm-nonmetal-armor":"PF2E.TraitEtchedOntoLightMedNMArmor"},rarityTraits:{common:"PF2E.TraitCommon",uncommon:"PF2E.TraitUncommon",rare:"PF2E.TraitRare",unique:"PF2E.TraitUnique"},spellTraditions,spellOtherTraits:{acid:"PF2E.TraitAcid",air:"PF2E.TraitAir",attack:"PF2E.TraitAttack",auditory:"PF2E.TraitAuditory",aura:"PF2E.TraitAura",chaotic:"PF2E.TraitChaotic",cold:"PF2E.TraitCold",concentrate:"PF2E.TraitConcentrate",consecration:"PF2E.TraitConsecration",curse:"PF2E.TraitCurse",darkness:"PF2E.TraitDarkness",death:"PF2E.TraitDeath",detection:"PF2E.TraitDetection",disease:"PF2E.TraitDisease",divination:"PF2E.TraitDivination",earth:"PF2E.TraitEarth",electricity:"PF2E.TraitElectricity",emotion:"PF2E.TraitEmotion",evil:"PF2E.TraitEvil",extradimensional:"PF2E.TraitExtradimensional",fear:"PF2E.TraitFear",fire:"PF2E.TraitFire",force:"PF2E.TraitForce",fortune:"PF2E.TraitFortune",fungus:"PF2E.TraitFungus",good:"PF2E.TraitGood",healing:"PF2E.TraitHealing",hex:"PF2E.TraitHex",incapacitation:"PF2E.TraitIncapacitation",inhaled:"PF2E.TraitInhaled",light:"PF2E.TraitLight",linguistic:"PF2E.TraitLinguistic",litany:"PF2E.TraitLitany",mental:"PF2E.TraitMental",metamagic:"PF2E.TraitMetamagic",mindless:"PF2E.TraitMindless",misfortune:"PF2E.TraitMisfortune",morph:"PF2E.TraitMorph",move:"PF2E.TraitMove",necromancy:"PF2E.TraitNecromancy",negative:"PF2E.TraitNegative",nonlethal:"PF2E.TraitNonlethal",olfactory:"PF2E.TraitOlfactory",plant:"PF2E.TraitPlant",poison:"PF2E.TraitPoison",polymorph:"PF2E.TraitPolymorph",positive:"PF2E.TraitPositive",possession:"PF2E.TraitPossession",prediction:"PF2E.TraitPrediction",revelation:"PF2E.TraitRevelation",scrying:"PF2E.TraitScrying",shadow:"PF2E.TraitShadow",sleep:"PF2E.TraitSleep",sonic:"PF2E.TraitSonic",stance:"PF2E.TraitStance",teleportation:"PF2E.TraitTeleportation",visual:"PF2E.TraitVisual",water:"PF2E.TraitWater"},magicTraditions:{arcane:"PF2E.TraitArcane",divine:"PF2E.TraitDivine",occult:"PF2E.TraitOccult",primal:"PF2E.TraitPrimal",focus:"PF2E.TraitFocus",ritual:"PF2E.TraitRitual",halcyon:"PF2E.TraitHalcyon"},magicSchools,classTraits,ancestryTraits,ancestryItemTraits:ancestryTraits,weaponTraits:Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},ancestryTraits),classTraits),magicSchools),spellTraditions),{acid:"PF2E.TraitAcid",adamantine:"PF2E.PreciousMaterialAdamantine",air:"PF2E.TraitAir",alchemical:"PF2E.TraitAlchemical",agile:"PF2E.TraitAgile",artifact:"PF2E.TraitArtifact",attached:"PF2E.TraitAttached",backstabber:"PF2E.TraitBackstabber",backswing:"PF2E.TraitBackswing",bomb:"PF2E.TraitBomb",brutal:"PF2E.TraitBrutal",chaotic:"PF2E.TraitChaotic",climbing:"PF2E.TraitClimbing",cold:"PF2E.TraitCold",coldiron:"PF2E.TraitColdiron",concealable:"PF2E.TraitConcealable",consumable:"PF2E.TraitConsumable",cursed:"PF2E.TraitCursed","deadly-d6":"PF2E.TraitDeadlyD6","deadly-d8":"PF2E.TraitDeadlyD8","deadly-2d8":"PF2E.TraitDeadly2D8","deadly-d10":"PF2E.TraitDeadlyD10","deadly-2d10":"PF2E.TraitDeadly2D10","deadly-3d10":"PF2E.TraitDeadly3D10","deadly-d12":"PF2E.TraitDeadlyD12","deadly-2d12":"PF2E.TraitDeadly2D12","deadly-3d12":"PF2E.TraitDeadly3D12",death:"PF2E.TraitDeath",disarm:"PF2E.TraitDisarm",earth:"PF2E.TraitEarth",electricity:"PF2E.TraitElectricity",emotion:"PF2E.TraitEmotion",evil:"PF2E.TraitEvil","fatal-d8":"PF2E.TraitFatalD8","fatal-d10":"PF2E.TraitFatalD10","fatal-d12":"PF2E.TraitFatalD12",fear:"PF2E.TraitFear",finesse:"PF2E.TraitFinesse",fire:"PF2E.TraitFire",force:"PF2E.TraitForce",forceful:"PF2E.TraitForceful",fortune:"PF2E.TraitFortune","free-hand":"PF2E.TraitFreeHand",fungus:"PF2E.TraitFungus",ghostTouch:"PF2E.WeaponPropertyRuneGhostTouch",good:"PF2E.TraitGood",grapple:"PF2E.TraitGrapple",hampering:"PF2E.TraitHampering",improvised:"PF2E.TraitImprovised",infused:"PF2E.TraitInfused",intelligent:"PF2E.TraitIntelligent",invested:"PF2E.TraitInvested","jousting-d6":"PF2E.TraitJoustingD6",lawful:"PF2E.TraitLawful",light:"PF2E.TraitLight",magical:"PF2E.TraitMagical",mental:"PF2E.TraitMental",negative:"PF2E.TraitNegative",nonlethal:"PF2E.TraitNonlethal",parry:"PF2E.TraitParry",poison:"PF2E.TraitPoison",positive:"PF2E.TraitPositive",propulsive:"PF2E.TraitPropulsive",range:"PF2E.TraitRange","range-increment-5":"PF2E.TraitRangeIncrement5","range-increment-10":"PF2E.TraitRangeIncrement10","range-increment-15":"PF2E.TraitRangeIncrement15","range-increment-20":"PF2E.TraitRangeIncrement20","range-increment-30":"PF2E.TraitRangeIncrement30","range-increment-40":"PF2E.TraitRangeIncrement40","range-increment-50":"PF2E.TraitRangeIncrement50","range-increment-60":"PF2E.TraitRangeIncrement60","range-increment-70":"PF2E.TraitRangeIncrement70","range-increment-80":"PF2E.TraitRangeIncrement80","range-increment-90":"PF2E.TraitRangeIncrement90","range-increment-100":"PF2E.TraitRangeIncrement100","range-increment-110":"PF2E.TraitRangeIncrement110","range-increment-120":"PF2E.TraitRangeIncrement120","range-increment-130":"PF2E.TraitRangeIncrement130","range-increment-140":"PF2E.TraitRangeIncrement140","range-increment-150":"PF2E.TraitRangeIncrement150","range-increment-160":"PF2E.TraitRangeIncrement160","range-increment-170":"PF2E.TraitRangeIncrement170","range-increment-180":"PF2E.TraitRangeIncrement180","range-increment-190":"PF2E.TraitRangeIncrement190","range-increment-200":"PF2E.TraitRangeIncrement200","range-increment-210":"PF2E.TraitRangeIncrement210","range-increment-220":"PF2E.TraitRangeIncrement220","range-increment-230":"PF2E.TraitRangeIncrement230","range-increment-240":"PF2E.TraitRangeIncrement240","range-increment-250":"PF2E.TraitRangeIncrement250","range-increment-260":"PF2E.TraitRangeIncrement260","range-increment-270":"PF2E.TraitRangeIncrement270","range-increment-280":"PF2E.TraitRangeIncrement280","range-increment-290":"PF2E.TraitRangeIncrement290","range-increment-300":"PF2E.TraitRangeIncrement300","range-increment-310":"PF2E.TraitRangeIncrement310","range-increment-320":"PF2E.TraitRangeIncrement320","ranged-trip":"PF2E.TraitRangedTrip",reach:"PF2E.TraitReach","reach-10":"PF2E.TraitReach10","reach-15":"PF2E.TraitReach15","reach-20":"PF2E.TraitReach20","reach-25":"PF2E.TraitReach25","reach-30":"PF2E.TraitReach30","reach-40":"PF2E.TraitReach40","reach-60":"PF2E.TraitReach60","reload-0":"PF2E.TraitReload0","reload-1":"PF2E.TraitReload1","reload-2":"PF2E.TraitReload2",repeating:"PF2E.TraitRepeating",resonant:"PF2E.TraitResonant",shove:"PF2E.TraitShove",silver:"PF2E.PreciousMaterialSilver",staff:"PF2E.TraitStaff",sonic:"PF2E.TraitSonic",splash:"PF2E.TraitSplash",sweep:"PF2E.TraitSweep",teleportation:"PF2E.TraitTeleportation",tethered:"PF2E.TraitTethered","thrown-10":"PF2E.TraitThrown10","thrown-20":"PF2E.TraitThrown20","thrown-30":"PF2E.TraitThrown30","thrown-40":"PF2E.TraitThrown40","thrown-60":"PF2E.TraitThrown60",trip:"PF2E.TraitTrip",twin:"PF2E.TraitTwin","two-hand-d8":"PF2E.TraitTwoHandD8","two-hand-d10":"PF2E.TraitTwoHandD10","two-hand-d12":"PF2E.TraitTwoHandD12",unarmed:"PF2E.TraitUnarmed","versatile-s":"PF2E.TraitVersatileS","versatile-p":"PF2E.TraitVersatileP","versatile-b":"PF2E.TraitVersatileB","volley-30":"PF2E.TraitVolley30",water:"PF2E.TraitWater","modular-b-P-or-s":"PF2E.TraitModular"}),armorTraits:Object.assign(Object.assign(Object.assign({},magicSchools),spellTraditions),{apex:"PF2E.TraitApex",artifact:"PF2E.TraitArtifact",bulwark:"PF2E.TraitBulwark",comfort:"PF2E.TraitComfort",cursed:"PF2E.TraitCursed",evil:"PF2E.TraitEvil",force:"PF2E.TraitForce",flexible:"PF2E.TraitFlexible",good:"PF2E.TraitGood",intelligent:"PF2E.TraitIntelligent",invested:"PF2E.TraitInvested",light:"PF2E.TraitLight",magical:"PF2E.TraitMagical",noisy:"PF2E.TraitNoisy"}),equipmentTraits:Object.assign(Object.assign(Object.assign(Object.assign({},ancestryTraits),magicSchools),spellTraditions),{acid:"PF2E.TraitAcid",air:"PF2E.TraitAir",alchemical:"PF2E.TraitAlchemical",apex:"PF2E.TraitApex",artifact:"PF2E.TraitArtifact",auditory:"PF2E.TraitAuditory",companion:"PF2E.TraitCompanion",chaotic:"PF2E.TraitChaotic",cold:"PF2E.TraitCold",contract:"PF2E.TraitContract",cursed:"PF2E.TraitCursed",darkness:"PF2E.TraitDarkness",death:"PF2E.TraitDeath",earth:"PF2E.TraitEarth",electricity:"PF2E.TraitElectricity",emotion:"PF2E.TraitEmotion",evil:"PF2E.TraitEvil",extradimensional:"PF2E.TraitExtradimensional",fear:"PF2E.TraitFear",fire:"PF2E.TraitFire",focused:"PF2E.TraitFocused",force:"PF2E.TraitForce",fortune:"PF2E.TraitFortune",good:"PF2E.TraitGood",healing:"PF2E.TraitHealing",infused:"PF2E.TraitInfused",intelligent:"PF2E.TraitIntelligent",invested:"PF2E.TraitInvested",lawful:"PF2E.TraitLawful",light:"PF2E.TraitLight",magical:"PF2E.TraitMagical",mental:"PF2E.TraitMental",misfortune:"PF2E.TraitMisfortune",negative:"PF2E.TraitNegative",nonlethal:"PF2E.TraitNonlethal",poison:"PF2E.TraitPoison",positive:"PF2E.TraitPositive",precious:"PF2E.TraitPrecious",revelation:"PF2E.TraitRevelation",saggorak:"PF2E.TraitSaggorak",scrying:"PF2E.TraitScrying",sonic:"PF2E.TraitSonic",staff:"PF2E.TraitStaff",structure:"PF2E.TraitStructure",tattoo:"PF2E.TraitTattoo",teleportation:"PF2E.TraitTeleportation",visual:"PF2E.TraitVisual",wand:"PF2E.TraitWand",water:"PF2E.TraitWater"}),consumableTraits:Object.assign(Object.assign(Object.assign({},magicSchools),spellTraditions),{acid:"PF2E.TraitAcid",air:"PF2E.TraitAir",alchemical:"PF2E.TraitAlchemical",auditory:"PF2E.TraitAuditory",bomb:"PF2E.TraitBomb",cold:"PF2E.TraitCold",consumable:"PF2E.TraitConsumable",contact:"PF2E.TraitContact",drug:"PF2E.TraitDrug",electricity:"PF2E.TraitElectricity",elixir:"PF2E.TraitElixir",emotion:"PF2E.TraitEmotion",evil:"PF2E.TraitEvil",fear:"PF2E.TraitFear",fire:"PF2E.TraitFire",force:"PF2E.TraitForce",fortune:"PF2E.TraitFortune",good:"PF2E.TraitGood",healing:"PF2E.TraitHealing",incapacitation:"PF2E.TraitIncapacitation",infused:"PF2E.TraitInfused",ingested:"PF2E.TraitIngested",inhaled:"PF2E.TraitInhaled",injury:"PF2E.TraitInjury",light:"PF2E.TraitLight",magical:"PF2E.TraitMagical",mechanical:"PF2E.TraitMechanical",mental:"PF2E.TraitMental",misfortune:"PF2E.TraitMisfortune",morph:"PF2E.TraitMorph",mutagen:"PF2E.TraitMutagen",negative:"PF2E.TraitNegative",olfactory:"PF2E.TraitOlfactory",oil:"PF2E.TraitOil",poison:"PF2E.TraitPoison",polymorph:"PF2E.TraitPolymorph",positive:"PF2E.TraitPositive",potion:"PF2E.TraitPotion",precious:"PF2E.TraitPrecious",scroll:"PF2E.TraitScroll",scrying:"PF2E.TraitScrying",sleep:"PF2E.TraitSleep",snare:"PF2E.TraitSnare",splash:"PF2E.TraitSplash",talisman:"PF2E.TraitTalisman",trap:"PF2E.TraitTrap",wand:"PF2E.TraitWand",virulent:"PF2E.TraitVirulent",visual:"PF2E.TraitVisual"}),spellTraits,featTraits:Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},ancestryTraits),classTraits),damageTraits),magicSchools),spellTraditions),spellTraits),{move:"PF2E.TraitMove",manipulate:"PF2E.TraitManipulate",concentrate:"PF2E.TraitConcentrate",rage:"PF2E.TraitRage",general:"PF2E.TraitGeneral",skill:"PF2E.TraitSkill",fortune:"PF2E.TraitFortune",downtime:"PF2E.TraitDowntime",secret:"PF2E.TraitSecret",additive1:"PF2E.TraitAdditive1",additive2:"PF2E.TraitAdditive2",additive3:"PF2E.TraitAdditive3",air:"PF2E.TraitAir",archetype:"PF2E.TraitArchetype",auditory:"PF2E.TraitAuditory",dedication:"PF2E.TraitDedication",detection:"PF2E.TraitDetection",emotion:"PF2E.TraitEmotion",exploration:"PF2E.TraitExploration",fear:"PF2E.TraitFear",flourish:"PF2E.TraitFlourish",magical:"PF2E.TraitMagical",metamagic:"PF2E.TraitMetamagic",multiclass:"PF2E.TraitMulticlass",oath:"PF2E.TraitOath",open:"PF2E.TraitOpen",press:"PF2E.TraitPress",stance:"PF2E.TraitStance",stamina:"PF2E.TraitStamina",alchemical:"PF2E.TraitAlchemical",interact:"PF2E.TraitInteract",aura:"PF2E.TraitAura",olfactory:"PF2E.TraitOlfactory",finisher:"PF2E.TraitFinisher",lineage:"PF2E.TraitLineage",vigilante:"PF2E.TraitVigilante",heritage:"PF2E.TraitHeritage","versatile heritage":"PF2E.TraitVersatileHeritage"}),creatureTraits,monsterTraits:creatureTraits,hazardTraits:Object.assign(Object.assign(Object.assign({},damageTraits),magicSchools),{alchemical:"PF2E.TraitAlchemical",auditory:"PF2E.TraitAuditory",environmental:"PF2E.TraitEnvironmental",curse:"PF2E.TraitCurse",fungus:"PF2E.TraitFungus",haunt:"PF2E.TraitHaunt",inhaled:"PF2E.TraitInhaled",magic:"PF2E.TraitMagic",magical:"PF2E.TraitMagical",mechanical:"PF2E.TraitMechanical",summon:"PF2E.TraitSummon",trap:"PF2E.TraitTrap"}),traitsDescriptions,weaponHands:{1:"PF2E.WeaponHands1","1+":"PF2E.WeaponHands1Plus",2:"PF2E.WeaponHands2"},itemBonuses:{"-2":"PF2E.ItemBonusMinus2",0:"PF2E.ItemBonus0",1:"PF2E.ItemBonus1",2:"PF2E.ItemBonus2",3:"PF2E.ItemBonus3"},damageDice:{0:"0",1:"1",2:"2",3:"3",4:"4"},damageDie:{d4:"PF2E.DamageDieD4",d6:"PF2E.DamageDieD6",d8:"PF2E.DamageDieD8",d10:"PF2E.DamageDieD10",d12:"PF2E.DamageDieD12"},weaponRange:{melee:"PF2E.WeaponRangeMelee",reach:"PF2E.WeaponRangeReach",10:"PF2E.WeaponRange10",20:"PF2E.WeaponRange20",30:"PF2E.WeaponRange30",40:"PF2E.WeaponRange40",50:"PF2E.WeaponRange50",60:"PF2E.WeaponRange60",80:"PF2E.WeaponRange80",100:"PF2E.WeaponRange100",120:"PF2E.WeaponRange120",140:"PF2E.WeaponRange140"},weaponMAP:{1:"-1/-2",2:"-2/-4",3:"-3/-6",4:"-4/-8",5:"-5/-10"},weaponReload:{"-":"-",0:"0",1:"1",2:"2",3:"3"},armorTypes:{unarmored:"PF2E.ArmorTypeUnarmored",light:"PF2E.ArmorTypeLight",medium:"PF2E.ArmorTypeMedium",heavy:"PF2E.ArmorTypeHeavy",shield:"PF2E.ArmorTypeShield"},armorGroups:{leather:"PF2E.ArmorGroupLeather",composite:"PF2E.ArmorGroupComposite",chain:"PF2E.ArmorGroupChain",plate:"PF2E.ArmorGroupPlate"},consumableTypes:{ammo:"PF2E.ConsumableTypeAmmo",bomb:"PF2E.ConsumableTypeBomb",potion:"PF2E.ConsumableTypePotion",oil:"PF2E.ConsumableTypeOil",scroll:"PF2E.ConsumableTypeScroll",talasman:"PF2E.ConsumableTypeTalisman",snare:"PF2E.ConsumableTypeSnare",drug:"PF2E.ConsumableTypeDrug",elixir:"PF2E.ConsumableTypeElixir",mutagen:"PF2E.ConsumableTypeMutagen",other:"PF2E.ConsumableTypeOther",poison:"PF2E.ConsumableTypePoison",tool:"PF2E.ConsumableTypeTool",wand:"PF2E.ConsumableTypeWand"},preparationType:{prepared:"PF2E.PreparationTypePrepared",spontaneous:"PF2E.PreparationTypeSpontaneous",innate:"PF2E.PreparationTypeInnate"},areaTypes:{burst:"PF2E.AreaTypeBurst",cone:"PF2E.AreaTypeCone",emanation:"PF2E.AreaTypeEmanation",line:"PF2E.AreaTypeLine"},areaSizes:{5:"PF2E.AreaSize5",10:"PF2E.AreaSize10",15:"PF2E.AreaSize15",20:"PF2E.AreaSize20",30:"PF2E.AreaSize30",40:"PF2E.AreaSize40",50:"PF2E.AreaSize50",60:"PF2E.AreaSize60",100:"PF2E.AreaSize100",120:"PF2E.AreaSize120"},alignment:{LG:"PF2E.AlignmentLG",NG:"PF2E.AlignmentNG",CG:"PF2E.AlignmentCG",LN:"PF2E.AlignmentLN",N:"PF2E.AlignmentN",CN:"PF2E.AlignmentCN",LE:"PF2E.AlignmentLE",NE:"PF2E.AlignmentNE",CE:"PF2E.AlignmentCE"},attitude:{hostile:"PF2E.Attitudes.Hostile",unfriendly:"PF2E.Attitudes.Unfriendly",indifferent:"PF2E.Attitudes.Indifferent",friendly:"PF2E.Attitudes.Friendly",helpful:"PF2E.Attitudes.Helpful"},skillList:{acrobatics:"PF2E.SkillAcrobatics",arcana:"PF2E.SkillArcana",athletics:"PF2E.SkillAthletics",crafting:"PF2E.SkillCrafting",deception:"PF2E.SkillDeception",diplomacy:"PF2E.SkillDiplomacy",intimidation:"PF2E.SkillIntimidation",medicine:"PF2E.SkillMedicine",nature:"PF2E.SkillNature",occultism:"PF2E.SkillOccultism",performance:"PF2E.SkillPerformance",religion:"PF2E.SkillReligion",society:"PF2E.SkillSociety",stealth:"PF2E.SkillStealth",survival:"PF2E.SkillSurvival",thievery:"PF2E.SkillThievery",lore:"PF2E.SkillLore"},spellComponents:{V:"PF2E.SpellComponentV",S:"PF2E.SpellComponentS",M:"PF2E.SpellComponentM"},spellCategories:{spell:"PF2E.SpellCategorySpell",focus:"PF2E.SpellCategoryFocus",ritual:"PF2E.SpellCategoryRitual"},spellTypes:{attack:"PF2E.SpellTypeAttack",save:"PF2E.SpellTypeSave",heal:"PF2E.SpellTypeHeal",utility:"PF2E.SpellTypeUtility",focus:"PF2E.SpellTypeFocus",ritual:"PF2E.SpellTypeRitual"},spellLevels:{0:"PF2E.SpellLevel0",1:"PF2E.SpellLevel1",2:"PF2E.SpellLevel2",3:"PF2E.SpellLevel3",4:"PF2E.SpellLevel4",5:"PF2E.SpellLevel5",6:"PF2E.SpellLevel6",7:"PF2E.SpellLevel7",8:"PF2E.SpellLevel8",9:"PF2E.SpellLevel9",10:"PF2E.SpellLevel10"},featTypes:{ancestry:"PF2E.FeatTypeAncestry",ancestryfeature:"PF2E.FeatTypeAncestryfeature",class:"PF2E.FeatTypeClass",classfeature:"PF2E.FeatTypeClassfeature",heritage:"PF2E.FeatTypeHeritage",skill:"PF2E.FeatTypeSkill",general:"PF2E.FeatTypeGeneral",archetype:"PF2E.FeatTypeArchetype",bonus:"PF2E.FeatTypeBonus",pfsboon:"PF2E.FeatPFSBoonHeader",deityboon:"PF2E.FeatDeityBoonHeader",curse:"PF2E.FeatCurseHeader",variantrule:"PF2E.FeatVariantRule"},featActionTypes:{passive:"PF2E.FeatActionTypePassive",action:"PF2E.FeatActionTypeAction",reaction:"PF2E.FeatActionTypeReaction",free:"PF2E.FeatActionTypeFree"},actionTypes:{action:"PF2E.ActionTypeAction",reaction:"PF2E.ActionTypeReaction",free:"PF2E.ActionTypeFree",passive:"PF2E.ActionTypePassive"},actionsNumber:{1:"PF2E.ActionNumber1",2:"PF2E.ActionNumber2",3:"PF2E.ActionNumber3"},actionCategories:{interaction:"PF2E.ActionCategoryInteraction",defensive:"PF2E.ActionCategoryDefensive",offensive:"PF2E.ActionCategoryOffensive"},proficiencyLevels:Object.freeze(["PF2E.ProficiencyLevel0","PF2E.ProficiencyLevel1","PF2E.ProficiencyLevel2","PF2E.ProficiencyLevel3","PF2E.ProficiencyLevel4"]),heroPointLevels:{0:"PF2E.HeroPointLevel0",1:"PF2E.HeroPointLevel1",2:"PF2E.HeroPointLevel2",3:"PF2E.HeroPointLevel3"},actorSizes:{tiny:"PF2E.ActorSizeTiny",sm:"PF2E.ActorSizeSmall",med:"PF2E.ActorSizeMedium",lg:"PF2E.ActorSizeLarge",huge:"PF2E.ActorSizeHuge",grg:"PF2E.ActorSizeGargantuan"},speedTypes:{swim:"PF2E.SpeedTypesSwim",climb:"PF2E.SpeedTypesClimb",fly:"PF2E.SpeedTypesFly",burrow:"PF2E.SpeedTypesBurrow"},prerequisitePlaceholders:{prerequisite1:"PF2E.Prerequisite1",prerequisite2:"PF2E.Prerequisite2",prerequisite3:"PF2E.Prerequisite3",prerequisite4:"PF2E.Prerequisite4",prerequisite5:"PF2E.Prerequisite5"},senses:{darkvision:"PF2E.SensesDarkvision",greaterDarkvision:"PF2E.SensesGreaterDarkvision",lowLightVision:"PF2E.SensesLowLightVision",motionsense:"PF2E.SensesMotionsense",scent:"PF2E.SensesScent",Tremorsense:"PF2E.SensesTremorsense",tremorsense:"PF2E.SensesTremorsense",lifesense:"PF2E.SensesLifesense",wavesense:"PF2E.SensesWavesense"},bulkTypes:{L:"PF2E.BulkTypeLight",1:"1",2:"2",3:"3",4:"4",5:"5",6:"6",7:"7",8:"8",9:"9",10:"10",11:"11",12:"12",13:"13",14:"14",15:"15",16:"16",17:"17",18:"18",19:"19",20:"20",21:"21",22:"22",23:"23",24:"24",25:"25",26:"26",27:"27",28:"28",29:"29",30:"30",31:"31",32:"32",33:"33",34:"34",35:"35",36:"36",37:"37",38:"38",39:"39",40:"40",41:"41",42:"42",43:"43",44:"44",45:"45",46:"46",47:"47",48:"48",49:"49",50:"50"},conditionTypes:{blinded:"PF2E.ConditionTypeBlinded",broken:"PF2E.ConditionTypeBroken",clumsy:"PF2E.ConditionTypeClumsy",concealed:"PF2E.ConditionTypeConcealed",confused:"PF2E.ConditionTypeConfused",controlled:"PF2E.ConditionTypeControlled",dazzled:"PF2E.ConditionTypeDazzled",deafened:"PF2E.ConditionTypeDeafened",doomed:"PF2E.ConditionTypeDoomed",drained:"PF2E.ConditionTypeDrained",dying:"PF2E.ConditionTypeDying",encumbered:"PF2E.ConditionTypeEncumbered",enfeebled:"PF2E.ConditionTypeEnfeebled",fascinated:"PF2E.ConditionTypeFascinated",fatigued:"PF2E.ConditionTypeFatigued","flat-footed":"PF2E.ConditionTypeFlatFooted",fleeing:"PF2E.ConditionTypeFleeing",friendly:"PF2E.ConditionTypeFriendly",frightened:"PF2E.ConditionTypeFrightened",grabbed:"PF2E.ConditionTypeGrabbed",helpful:"PF2E.ConditionTypeHelpful",hidden:"PF2E.ConditionTypeHidden",hostile:"PF2E.ConditionTypeHostile",immobilized:"PF2E.ConditionTypeImmobilized",indifferent:"PF2E.ConditionTypeIndifferent",invisible:"PF2E.ConditionTypeInvisible",observed:"PF2E.ConditionTypeObserved",paralyzed:"PF2E.ConditionTypeParalyzed",persistent:"PF2E.ConditionTypePersistent",petrified:"PF2E.ConditionTypePetrified",prone:"PF2E.ConditionTypeProne",quickened:"PF2E.ConditionTypeQuickened",restrained:"PF2E.ConditionTypeRestrained",sickened:"PF2E.ConditionTypeSickened",slowed:"PF2E.ConditionTypeSlowed",stunned:"PF2E.ConditionTypeStunned",stupefied:"PF2E.ConditionTypeStupefied",unconscious:"PF2E.ConditionTypeUnconscious",undetected:"PF2E.ConditionTypeUndetected",unfriendly:"PF2E.ConditionTypeUnfriendly",unnoticed:"PF2E.ConditionTypeUnnoticed",wounded:"PF2E.ConditionTypeWounded"},pfsFactions:{EA:"PF2E.PFS.Factions.EA",GA:"PF2E.PFS.Factions.GA",HH:"PF2E.PFS.Factions.HH",VS:"PF2E.PFS.Factions.VS",RO:"PF2E.PFS.Factions.RO",VW:"PF2E.PFS.Factions.VW"},pfsSchools:{none:"PF2E.PFS.School.None",scrolls:"PF2E.PFS.School.Scrolls",spells:"PF2E.PFS.School.Spells",swords:"PF2E.PFS.School.Swords"},immunityTypes:{acid:"PF2E.DamageTypeAcid",auditory:"PF2E.ImmunityTypeAuditory",bleed:"PF2E.DamageTypeBleed",blinded:"PF2E.ConditionTypeBlinded",bludgeoning:"PF2E.DamageTypeBludgeoning",broken:"PF2E.ConditionTypeBroken",chaotic:"PF2E.DamageTypeChaotic",clumsy:"PF2E.ConditionTypeClumsy",cold:"PF2E.DamageTypeCold",concealed:"PF2E.ConditionTypeConcealed",confused:"PF2E.ConditionTypeConfused",confusion:"PF2E.DamageTypeConfusion",controlled:"PF2E.ConditionTypeControlled","critical-hits":"PF2E.ImmunityTypeCriticalHits",curse:"PF2E.DamageTypeCurse",dazzled:"PF2E.ConditionTypeDazzled",deafened:"PF2E.ConditionTypeDeafened",detection:"PF2E.TraitDetection","death effects":"PF2E.ImmunityTypeDeathEffects",disease:"PF2E.ImmunityTypeDisease",doomed:"PF2E.ConditionTypeDoomed",drained:"PF2E.ConditionTypeDrained",dying:"PF2E.ConditionTypeDying",electricity:"PF2E.DamageTypeElectricity",emotion:"PF2E.DamageTypeEmotion",encumbered:"PF2E.ConditionTypeEncumbered",enfeebled:"PF2E.ConditionTypeEnfeebled",evil:"PF2E.DamageTypeEvil",evocation:"PF2E.TraitEvocation",fascinated:"PF2E.ConditionTypeFascinated",fatigued:"PF2E.ConditionTypeFatigued","fear effects":"PF2E.ImmunityTypeFearEffects",fire:"PF2E.DamageTypeFire","flat-footed":"PF2E.ConditionTypeFlatFooted",fleeing:"PF2E.ConditionTypeFleeing",force:"PF2E.DamageTypeForce",friendly:"PF2E.ConditionTypeFriendly",frightened:"PF2E.ConditionTypeFrightened",good:"PF2E.DamageTypeGood",grabbed:"PF2E.ConditionTypeGrabbed",healing:"PF2E.ImmunityTypeHealing",helpful:"PF2E.ConditionTypeHelpful",hidden:"PF2E.ConditionTypeHidden",hostile:"PF2E.ConditionTypeHostile",immobilized:"PF2E.ConditionTypeImmobilized",indifferent:"PF2E.ConditionTypeIndifferent",inhaled:"PF2E.TraitInhaled",invisible:"PF2E.ConditionTypeInvisible",lawful:"PF2E.DamageTypeLawful",light:"PF2E.DamageTypeLight",magic:"PF2E.ImmunityTypeMagic",mental:"PF2E.DamageTypeMental",necromancy:"PF2E.ImmunityTypeNecromancy",negative:"PF2E.DamageTypeNegative","nonlethal attacks":"PF2E.ImmunityTypeNonlethalAttacks","object-immunities":"PF2E.ImmunityTypeObjectImmunities",observed:"PF2E.ConditionTypeObserved",olfactory:"PF2E.DamageTypeOlfactory",paralyzed:"PF2E.ConditionTypeParalyzed",persistent:"PF2E.ConditionTypePersistent",petrified:"PF2E.ConditionTypePetrified",piercing:"PF2E.DamageTypePiercing",poison:"PF2E.DamageTypePoison",positive:"PF2E.DamageTypePositive",possession:"PF2E.DamageTypePosession",precision:"PF2E.DamageTypePrecision",prone:"PF2E.ConditionTypeProne",quickened:"PF2E.ConditionTypeQuickened",restrained:"PF2E.ConditionTypeRestrained",scrying:"PF2E.TraitScrying",sickened:"PF2E.ConditionTypeSickened",slashing:"PF2E.DamageTypeSlashing",sleep:"PF2E.ImmunityTypeSleep",slowed:"PF2E.ConditionTypeSlowed",sonic:"PF2E.DamageTypeSonic",spellDeflection:"PF2E.ImmunityTypeSpellDeflection",stunned:"PF2E.ConditionTypeStunned",stupefied:"PF2E.ConditionTypeStupefied","swarm attacks":"PF2E.DamageTypeSwarmAttacks","swarm-mind":"PF2E.ImmunityTypeSwarmMind",unconscious:"PF2E.ConditionTypeUnconscious",undetected:"PF2E.ConditionTypeUndetected",unfriendly:"PF2E.ConditionTypeUnfriendly",unnoticed:"PF2E.ConditionTypeUnnoticed",visual:"PF2E.ImmunityTypeVisual",wounded:"PF2E.ConditionTypeWounded"},languages:{common:"PF2E.LanguageCommon",draconic:"PF2E.LanguageDraconic",dwarven:"PF2E.LanguageDwarven",elven:"PF2E.LanguageElven",gnomish:"PF2E.LanguageGnomish",goblin:"PF2E.LanguageGoblin",halfling:"PF2E.LanguageHalfling",jotun:"PF2E.LanguageJotun",orcish:"PF2E.LanguageOrcish",sylvan:"PF2E.LanguageSylvan",undercommon:"PF2E.LanguageUndercommon",ysoki:"PF2E.LanguageYsoki",abyssal:"PF2E.LanguageAbyssal",adlet:"PF2E.LanguageAdlet",aklo:"PF2E.LanguageAklo",algollthu:"PF2E.LanguageAlghollthu",amurrun:"PF2E.LanguageAmurrun",anadi:"PF2E.LanguageAnadi",aquan:"PF2E.LanguageAquan",arboreal:"PF2E.LanguageArboreal",auran:"PF2E.LanguageAuran",boggard:"PF2E.LanguageBoggard",caligni:"PF2E.LanguageCaligni",celestial:"PF2E.LanguageCelestial",cyclops:"PF2E.LanguageCyclops",daemonic:"PF2E.LanguageDaemonic",destrachan:"PF2E.LanguageDestrachan",dziriak:"PF2E.LanguageDziriak",erutaki:"PF2E.LanguageErutaki",garundi:"PF2E.LanguageGarundi",giant:"PF2E.LanguageGiant",girtablilu:"PF2E.LanguageGirtablilu",gnoll:"PF2E.LanguageGnoll",grippli:"PF2E.LanguageGrippli",hallit:"PF2E.LanguageHallit",ignan:"PF2E.LanguageIgnan",infernal:"PF2E.LanguageInfernal",iruxi:"PF2E.LanguageIruxi",jistkan:"PF2E.LanguageJistkan",jyoti:"PF2E.LanguageJyoti",kelish:"PF2E.LanguageKelish",mwangi:"PF2E.LanguageMwangi",necril:"PF2E.LanguageNecril",osiriani:"PF2E.LanguageOsiriani",protean:"PF2E.LanguageProtean",requian:"PF2E.LanguageRequian",shadowtongue:"PF2E.LanguageShadowtongue",shoanti:"PF2E.LanguageShoanti",shoony:"PF2E.LanguageShoony",skald:"PF2E.LanguageSkald",sphinx:"PF2E.LanguageSphinx",strix:"PF2E.LanguageStrix",tengu:"PF2E.LanguageTengu",terran:"PF2E.LanguageTerran",thassilonian:"PF2E.LanguageThassilonian",tien:"PF2E.LanguageTien",utopian:"PF2E.LanguageUtopian",vanara:"PF2E.LanguageVanara",varisian:"PF2E.LanguageVarisian",varki:"PF2E.LanguageVarki",vishkanyan:"PF2E.LanguageVishkanyan",vudrani:"PF2E.LanguageVudrani",androffan:"PF2E.LanguageAndroffan",azlanti:"PF2E.LanguageAzlanti",grioth:"PF2E.LanguageGrioth",kovintal:"PF2E.LanguageKovintal",migo:"PF2E.LanguageMiGo",munavri:"PF2E.LanguageMunavri",samsaran:"PF2E.LanguageSamsaran",sasquatch:"PF2E.LanguageSasquatch",shae:"PF2E.LanguageShae",yithian:"PF2E.LanguageYithian",druidic:"PF2E.LanguageDruidic"},spellScalingModes:{none:"PF2E.SpellScalingModeNone",level1:"PF2E.SpellScalingModeLevel1",level2:"PF2E.SpellScalingModeLevel2",level3:"PF2E.SpellScalingModeLevel3",level4:"PF2E.SpellScalingModeLevel4",levelsecond:"PF2E.SpellScalingModeLevelsecond",levelthird:"PF2E.SpellScalingModeLevelthird",levelfourth:"PF2E.SpellScalingModeLevelfourth",levelfifth:"PF2E.SpellScalingModeLevelfifth",levelsixth:"PF2E.SpellScalingModeLevelsixth",levelseventh:"PF2E.SpellScalingModeLevelseventh",leveleighth:"PF2E.SpellScalingModeLeveleighth",levelninth:"PF2E.SpellScalingModeLevelninth",leveltenth:"PF2E.SpellScalingModeLeveltenth"},attackEffects:{Grab:"PF2E.AttackEffectGrab","Improved Grab":"PF2E.AttackEffectImprovedGrab",Constrict:"PF2E.AttackEffectConstrict","Greater Constrict":"PF2E.AttackEffectGreaterConstrict",Knockdown:"PF2E.AttackEffectKnockdown","Improved Knockdown":"PF2E.AttackEffectImprovedKnockdown",Push:"PF2E.AttackEffectPush","Improved Push":"PF2E.AttackEffectImprovedPush",Trip:"PF2E.AttackEffectTrip"},worldClock:{AR:{yearOffset:2700},IC:{yearOffset:5200},AD:{yearOffset:-95},CE:{yearOffset:0}},monsterAbilities:()=>({"All-Around Vision":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br>This monster can see in all directions simultaneously, and therefore can\'t be flanked.'},"Aquatic Ambush":{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br><b>Requirements</b> The monster is hiding in water and a creature that hasn\'t detected it is within the listed number of feet. <b>Effect</b> The monster moves up to its swim Speed + 10 feet toward the triggering creature, traveling on water and on land. Once the creature is in reach, the monster makes a Strike against it. The creature is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=16">flat-footed</a> against this Strike.'},"Attack of Opportunity":{actionType:"reaction",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br><b>Trigger</b> A creature within the monster\'s reach uses a manipulate action or a move action, makes a ranged attack, or leaves a square during a move action it\'s using. <b>Effect</b> The monster attempts a melee Strike against the triggering creature. If the attack is a critical hit and the trigger was a manipulate action, the monster disrupts that action. This Strike doesn\'t count toward the monster\'s multiple attack penalty, and its multiple attack penalty doesn\'t apply to this Strike.'},"At-Will Spells":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br>The monster can cast its at-will spells any number of times without using up spell slots.'},Aura:{actionType:"passive",actionCost:1,description:"<b>Source</b> <a href=\"https://paizo.com/products/btq01y0m?Pathfinder-Bestiary\" target=\"_blank\" class=\"external-link\"><i>Bestiary pg. 342</i></a><br>A monster's aura automatically affects everything within a specified emanation around that monster. The monster doesn't need to spend actions on the aura; rather, the aura's effects are applied at specific times, such as when a creature ends its turn in the aura or when creatures enter the aura.<br><br> If an aura does nothing but deal damage, its entry lists only the radius, damage, and saving throw. Such auras deal this damage to a creature when the creature enters the aura and when a creature starts its turn in the aura. A creature can take damage from the aura only once per round.<br><br> The GM might determine that a monster's aura doesn't affect its own allies. For example, a creature might be immune to a monster's frightful presence if they have been around each other for a long time."},Buck:{actionType:"reaction",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br>Most monsters that serve as mounts can attempt to\nbuck off unwanted or annoying riders, but most mounts\nwill not use this reaction against a trusted creature unless\nthe mounts are spooked or mistreated. <b>Trigger</b> A creature\nMounts or uses the Command an Animal action while riding\nthe monster. <b>Effect</b> The triggering creature must succeed\nat a Reflex saving throw against the listed DC or fall off the\ncreature and land prone. If the save is a critical failure, the\ntriggering creature also takes 1d6 bludgeoning damage in\naddition to the normal damage for the fall.'},"Catch Rock":{actionType:"reaction",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br><b>Requirements</b> The monster must have a free hand but can Release anything it\'s holding as part of this reaction. <b>Trigger</b> The monster is targeted with a thrown rock Strike or a rock would fall on the monster. <b>Effect</b> The monster gains a +4 circumstance bonus to its AC against the triggering attack or to any defense against the falling rock. If the attack misses or the monster successfully defends against the falling rock, the monster catches the rock, takes no damage, and is now holding the rock.'},"Change Shape":{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br>(<a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=32">concentrate</a>, [magical tradition], <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=127">polymorph</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=157">transmutation</a>) The monster changes its shape indefinitely. It can use this action again to return to its natural shape or adopt a new shape. Unless otherwise noted, a monster cannot use Change Shape to appear as a specific individual. Using Change Shape counts as creating a disguise for the Impersonate use of Deception. The monster\'s transformation automatically defeats Perception DCs to determine whether the creature is a member of the ancestry or creature type into which it transformed, and it gains a +4 status bonus to its Deception DC to prevent others from seeing through its disguise. Change Shape abilities specify what shapes the monster can adopt. The monster doesn\'t gain any special abilities of the new shape, only its physical form. For example, in each shape, it replaces its normal Speeds and Strikes, and might potentially change its senses or size. Any changes are listed in its stat block.'},"Constant Spells":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br>A constant spell affects the monster without the monster needing to cast it, and its duration is unlimited. If a constant spell gets counteracted, the monster can reactivate it by spending the normal spellcasting actions the spellrequires.'},Constrict:{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br>The monster deals the listed amount of damage to any number of creatures grabbed or restrained by it. Each of those creatures can attempt a basic Fortitude save with the listed DC.'},Coven:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br>(<a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=47">divination</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=106">mental</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=120">occult</a>) This monster can form a coven with two or more other creatures who also have the coven ability. This involves performing an 8-hour ceremony with all prospective coven members. After the coven is formed, each of its members gains elite adjustments (page 6), adjusting their levels accordingly. Coven members can sense other members\' locations and conditions by spending a single action, which has the concentrate trait, and can sense what another coven member is sensing as a two-action activity, which has the concentrate trait as well.<br><br> Covens also grant spells and rituals to their members, but these can be cast only in cooperation between three coven members who are all within 30 feet of one another. A coven member can contribute to a coven spell with a single-action spellcasting activity that has a single verbal component. If two coven members have contributed these actions within the last round, a third member can cast a coven spell on her turn by spending the normal spellcasting actions. A coven can cast its coven spells an unlimited number of times but can cast only one coven spell each round. All covens grant the 8th-level <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=17">baleful polymorph</a></i> spell and all the following spells, which the coven can cast at any level up to 5th: <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=15">augury</a></i>, <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=34">charm</a></i>, <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=39">clairaudience</a></i>, <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=40">clairvoyance</a></i>, <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=90">dream message</a></i>, <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=159">illusory disguise</a></i>, <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=161">illusory scene</a></i>, <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=239">prying eye</a></i>, and <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=329">talking corpse</a></i>. Individual creatures with the coven ability also grant additional spells to any coven they join. A coven can also cast the <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Rituals.aspx?ID=9">control weather</a></i> ritual, with a DC of 23 instead of the standard DC.<br><br> If a coven member leaving the coven or the death of a coven member brings the coven below three members, the remaining members keep their elite adjustments for 24 hours, but without enough members to contribute the necessary actions, they can\'t cast coven spells.'},Darkvision:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>A monster with darkvision can see perfectly well in areas of darkness and dim light, though such vision is in black and white only. Some forms of magical darkness, such as a 4th-level <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=59">darkness</a></i> spell, block normal darkvision. A monster with greater darkvision, however, can see through even these forms of magical darkness.'},Disease:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>When a creature is exposed to a monster\'s disease, it attempts a Fortitude save or succumbs to the disease. The level of a disease is the level of the monster in icting the disease. The disease follows the <a style="text-decoration:underline" href="https://2e.aonprd.com/Rules.aspx?ID=361">rules for afflictions</a>.'},Engulf:{actionType:"action",actionCost:2,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>The monster Strides up to double its Speed and can move through the spaces of any creatures in its path. Any creature of the monster\'s size or smaller whose space the monster moves through can attempt a Reflex save with the listed DC to avoid being engulfed. A creature unable to act automatically critically fails this save. If a creature succeeds at its save, it can choose to be either pushed aside (out of the monster\'s path) or pushed in front of the monster to the end of the monster\'s movement. The monster can attempt to Engulf the same creature only once in a single use of Engulf. The monster can contain as many creatures as can fit in its space.<br><br> A creature that fails its save is pulled into the monster\'s body. It is grabbed, is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=35">slowed 1</a>, and has to hold its breath or start suffocating. The creature takes the listed amount of damage when first engulfed and at the end of each of its turns while it\'s engulfed. An engulfed creature can get free by Escaping against the listed escape DC. An engulfed creature can attack the monster engulfing it, but only with unarmed attacks or with weapons of light Bulk or less. The engulfing creature is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=16">flat-footed</a> against the attack. If the monster takes piercing or slashing damage equaling or exceeding the listed Rupture value from a single attack or spell, the engulfed creature cuts itself free. A creature that gets free by either method can immediately breathe and exits the swallowing monster\'s space.<br><br> If the monster dies, all creatures it has engulfed are automatically released as the monster\'s form loses cohesion.'},"Fast Healing":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>A monster with this ability regains the given number of Hit Points each round at the beginning of its turn.'},Ferocity:{actionType:"reaction",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br><b>Trigger</b> The monster is reduced to 0 HP. <b>Effect</b> The monster avoids being knocked out and remains at 1 HP, but its <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=42">wounded</a> value increases by 1. When it is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=42">wounded 3</a>, it can no longer use this ability.'},"Frightful Presence":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>(<a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=206">aura</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=60">emotion</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=68">fear</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=106">mental</a>) A creature that first enters the area must attempt a Will save. Regardless of the result of the saving throw, the creature is temporarily immune to this monster\'s Frightful Presence for 1 minute.<br><br> <b>Critical Success</b> The creature is unaffected by the presence.<br> <b>Success</b> The creature is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=19">frightened 1</a>.<br> <b>Failure</b> The creature is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=19">frightened 2</a>.<br> <b>Critical Failure</b> The creature is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=19">frightened 4</a>.'},Grab:{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br><b>Requirements</b> The monster\'s last action was a success with a Strike that lists Grab in its damage entry, or it has a creature grabbed using this action. <b>Effect</b> The monster automatically Grabs the target until the end of the monster\'s next turn. The creature is grabbed by whichever body part the monster attacked with, and that body part can\'t be used to Strike creatures until the grab is ended.<br><br> Using Grab extends the duration of the monster\'s Grab until the end of its next turn for all creatures grabbed by it. A grabbed creature can use the <a style="text-decoration:underline" href="https://2e.aonprd.com/Actions.aspx?ID=79">Escape</a> action to get out of the grab, and the Grab ends for a grabbed creatures if the monster moves away from it.'},"Greater Constrict":{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>The monster deals the listed amount of damage to any number of creatures grabbed or restrained by it. Each of those creatures can attempt a basic Fortitude save with the listed DC. A creature that fails this save falls <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=38">unconscious</a>, and a creature that succeeds is then temporarily immune to falling <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=38">unconscious</a> from Greater Constrict for 1 minute.'},"Improved Grab":{actionType:"free",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>The monster can use Grab as a free action triggered by a hit with its initial attack. A monster with Improved Grab still needs to spend an action to extend the duration for creatures it already has grabbed.'},"Improved Knockdown":{actionType:"free",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>The monster can use Knockdown as a free action triggered by a hit with its initial attack.'},"Improved Push":{actionType:"free",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>The monster can use Push as a free action triggered by a hit with its initial attack.'},Knockdown:{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br><b>Requirements</b> The monster\'s last action was a success with a Strike that lists Knockdown in its damage entry. <b>Effect</b> The monster knocks the target prone.'},Lifesense:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>Lifesense allows a monster to sense the vital essence of living and undead creatures within the listed range. The sense can distinguish between the positive energy animating living creatures and the negative energy animating undead creatures, much as sight distinguishes colors.'},"Light Blindness":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>When first exposed to bright light, the monster is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=1">blinded</a> until the end of its next turn. After this exposure, light doesn\'t blind the monster again until after it spends 1 hour in darkness. However, as long as the monster is in an area of bright light, it\'s <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=7">dazzled</a>.'},"Low-Light Vision":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>The monster can see in dim light as though it were bright light, so it ignores the <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=4">concealed</a> condition due to dim light.'},Poison:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>When a creature is exposed to a monster\'s poison, it attempts a Fortitude save to avoid becoming poisoned. The level of a poison is the level of the monster inflicting the poison. The poison follows the <a style="text-decoration:underline" href="https://2e.aonprd.com/Rules.aspx?ID=361">rules for afflictions</a>.'},Push:{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br><b>Requirements</b> The monster\'s last action was a success with a Strike that lists Push in its damage entry. <b>Effect</b> The monster automatically knocks the target away from the monster. Unless otherwise noted in the ability description, the creature is pushed 5 feet. If the attack was a critical hit, this distance is doubled.'},Regeneration:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>This monster regains the listed number of Hit Points each round at the beginning of its turn. Its <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=11">dying</a> condition never increases beyond <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=11">dying 3</a> as long as its regeneration is active. However, if it takes damage of a type listed in the regeneration entry, its regeneration deactivates until the end of its next turn. Deactivate the regeneration before applying any damage of a listed type, since that damage might kill the monster by bringing it to <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=11">dying 4</a>.'},Rend:{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>A Rend entry lists a Strike the monster has. <b>Requirements</b> The monster hit the same enemy with two consecutive Strikes of the listed type in the same round. <b>Effect</b> The monster automatically deals that Strike\'s damage again to the enemy.'},"Retributive Strike":{actionType:"reaction",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br><b>Trigger</b> An enemy damages the monster\'s ally, and both are within 15 feet of the monster. <b>Effect</b> The ally gains resistance to all damage against the triggering damage equal to 2 + the monster\'s level. If the foe is within reach, the monster makes a melee Strike against it.'},Scent:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>Scent involves sensing creatures or objects by smell, and is usually a vague sense. The range is listed in the ability, and it functions only if the creature or object being detected emits an aroma (for instance, incorporeal creatures usually do not exude an aroma).<br><br> If a creature emits a heavy aroma or is upwind, the GM can double or even triple the range of scent abilities used to detect that creature, and the GM can reduce the range if a creature is downwind.'},"Shield Block":{actionType:"reaction",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br><b>Trigger</b> The monster has its shield raised and takes damage from a physical attack. <b>Effect</b> The monster snaps its shield into place to deflect a blow. The shield prevents the monster from taking an amount of damage up to the shield\'s Hardness. The monster and the shield each take any remaining damage, possibly breaking or destroying the shield.'},"Sneak Attack":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>When the monster Strikes a creature that has the <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=16">flat-footed</a> condition with an <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=170">agile</a> or <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=179">finesse</a> melee weapon, an <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=170">agile</a> or <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=179">finesse</a> unarmed attack, or a ranged weapon attack, it also deals the listed precision damage. For a ranged attack with a thrown weapon, that weapon must also be an <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=170">agile</a> or <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=179">finesse</a> weapon.'},"Swallow Whole":{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>(<a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=15">attack</a>) The monster attempts to swallow a creature of the listed size or smaller that it has grabbed in its jaws or mouth. If a swallowed creature is of the maximum size listed, the monster can\'t use Swallow Whole again. If the creature is smaller than the maximum, the monster can usually swallow more creatures; the GM determines the maximum. The monster attempts an <a style="text-decoration:underline" href="https://2e.aonprd.com/Skills.aspx?ID=3">Athletics</a> check opposed by the grabbed creature\'s Reflex DC. If it succeeds, it swallows the creature. The monster\'s mouth or jaws no longer grab a creature it has swallowed, so the monster is free to use them to Strike or Grab once again. The monster can\'t attack creatures it has swallowed.<br><br> A swallowed creature is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=20">grabbed</a>, is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=35">slowed 1</a>, and has to hold its breath or start suffocating. The swallowed creature takes the listed amount of damage when first swallowed and at the end of each of its turns while it\'s swallowed. If the victim Escapes this ability\'s grabbed condition, it exits through the monster\'s mouth. This frees any other creature grabbed in the monster\'s mouth or jaws. A swallowed creature can attack the monster that has swallowed it, but only with unarmed attacks or with weapons of light Bulk or less. The engulfing creature is flat-footed against the attack. If the monster takes piercing or slashing damage equaling or exceeding the listed Rupture value from a single attack or spell, the engulfed creature cuts itself free. A creature that gets free by either Escaping or cutting itself free can immediately breathe and exits the swallowing monster\'s space.<br><br> If the monster dies, a swallowed creature can be freed by creatures adjacent to the corpse if they spend a combined total of 3 actions cutting the monster open with a weapon or unarmed attack that deals piercing or slashing damage.'},"Swarm Mind":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>This monster doesn\'t have a single mind (typically because it\'s a swarm of smaller creatures), and is immune to mental effects that target only a specific number of creatures. It is still subject to mental effects that affect all creatures in an area.'},Telepathy:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>(<a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=206">aura</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=47">divination</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=103">magical</a>) A monster with telepathy can communicate mentally with any creatures within the listed radius, as long as they share a language. This doesn\'t give any special access to their thoughts, and communicates no more information than normal speech would.'},"Throw Rock":{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>The monster picks up a rock within reach or retrieves a stowed rock and throws it, making a ranged Strike.'},Trample:{actionType:"action",actionCost:3,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>The monster Strides up to double its Speed and can move through the spaces of creatures of the listed size, Trampling each creature whose space it enters. The monster can attempt to Trample the same creature only once in a single use of Trample. The monster deals the damage of the listed Strike, but trampled creatures can attempt a basic Reflex save at the listed DC (no damage on a critical success, half damage on a success, double damage on a critical failure).'},Tremorsense:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>Tremorsense allows a monster to feel the vibrations through a solid surface caused by movement. It is an imprecise sense with a limited range (listed in the ability). Tremorsense functions only if the monster is on the same surface as the subject, and only if the subject is moving along (or burrowing through) the surface.'},Wavesense:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>This sense allows a monster to feel vibrations caused by movement through a liquid. It\'s an imprecise sense with a limited range (listed in the ability). Wavesense functions only if monster and the subject are in the same body of liquid, and only if the subject is moving through the liquid.'}}),SETTINGS:{homebrew:{creatureTraits:{name:"PF2E.SETTINGS.Homebrew.CreatureTraits.Name",hint:"PF2E.SETTINGS.Homebrew.CreatureTraits.Hint"},featTraits:{name:"PF2E.SETTINGS.Homebrew.FeatTraits.Name",hint:"PF2E.SETTINGS.Homebrew.FeatTraits.Hint"},languages:{name:"PF2E.SETTINGS.Homebrew.Languages.Name",hint:"PF2E.SETTINGS.Homebrew.Languages.Hint"},magicSchools:{name:"PF2E.SETTINGS.Homebrew.MagicSchools.Name",hint:"PF2E.SETTINGS.Homebrew.MagicSchools.Hint"},spellTraits:{name:"PF2E.SETTINGS.Homebrew.SpellTraits.Name",hint:"PF2E.SETTINGS.Homebrew.SpellTraits.Hint"},weaponCategories:{name:"PF2E.SETTINGS.Homebrew.WeaponCategories.Name",hint:"PF2E.SETTINGS.Homebrew.WeaponCategories.Hint"},weaponGroups:{name:"PF2E.SETTINGS.Homebrew.WeaponGroups.Name",hint:"PF2E.SETTINGS.Homebrew.WeaponGroups.Hint"},baseWeapons:{name:"PF2E.SETTINGS.Homebrew.BaseWeapons.Name",hint:"PF2E.SETTINGS.Homebrew.BaseWeapons.Hint"}},worldClock:{name:"PF2E.SETTINGS.WorldClock.Name",label:"PF2E.SETTINGS.WorldClock.Label",hint:"PF2E.SETTINGS.WorldClock.Hint",dateTheme:{name:"PF2E.SETTINGS.WorldClock.DateTheme.Name",hint:"PF2E.SETTINGS.WorldClock.DateTheme.Hint",AR:"PF2E.SETTINGS.WorldClock.DateTheme.AR",AD:"PF2E.SETTINGS.WorldClock.DateTheme.AD",CE:"PF2E.SETTINGS.WorldClock.DateTheme.CE"},timeConvention:{name:"PF2E.SETTINGS.WorldClock.TimeConvention.Name",hint:"PF2E.SETTINGS.WorldClock.TimeConvention.Hint",twentyFour:"PF2E.SETTINGS.WorldClock.TimeConvention.TwentyFour",twelve:"PF2E.SETTINGS.WorldClock.TimeConvention.Twelve"},playersCanView:{name:"PF2E.SETTINGS.WorldClock.PlayersCanView.Name",hint:"PF2E.SETTINGS.WorldClock.PlayersCanView.Hint"},syncDarkness:{name:"PF2E.SETTINGS.WorldClock.SyncDarkness.Name",hint:"PF2E.SETTINGS.WorldClock.SyncDarkness.Hint",globalLightOn:"PF2E.SETTINGS.WorldClock.SyncDarkness.GlobalLightOn",globalLightOff:"PF2E.SETTINGS.WorldClock.SyncDarkness.GlobalLightOff"},worldCreatedOn:{name:"PF2E.SETTINGS.WorldClock.WorldCreatedOn.Name",hint:"PF2E.SETTINGS.WorldClock.WorldCreatedOn.Hint"}}},Actor:{entityClasses:{character:character_1.CharacterPF2e,npc:npc_1.NPCPF2e,hazard:base_1.HazardPF2e,loot:loot_1.LootPF2e,familiar:familiar_1.FamiliarPF2e,animalCompanion:animal_companion_1.AnimalCompanionPF2e,vehicle:vehicle_1.VehiclePF2e}},Item:{entityClasses:{backpack:others_1.ContainerPF2e,treasure:others_1.TreasurePF2e,weapon:weapon_1.WeaponPF2e,armor:armor_1.ArmorPF2e,kit:others_1.KitPF2e,melee:others_1.MeleePF2e,consumable:consumable_1.ConsumablePF2e,equipment:others_1.EquipmentPF2e,effect:effect_1.EffectPF2e,ancestry:ancestry_1.AncestryPF2e,background:background_1.BackgroundPF2e,class:class_1.ClassPF2e,feat:feat_1.FeatPF2e,lore:others_1.LorePF2e,martial:others_1.MartialPF2e,action:action_1.ActionPF2e,spell:spell_1.SpellPF2e,spellcastingEntry:spellcasting_entry_1.SpellcastingEntryPF2e,condition:others_1.ConditionPF2e}}}},1459:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DicePF2e=exports.FormulaPreservingRoll=void 0;class FormulaPreservingRoll extends Roll{toJSON(){const jsonData=super.toJSON();return jsonData.class="Roll",jsonData}}exports.FormulaPreservingRoll=FormulaPreservingRoll;exports.DicePF2e=class{static async d20Roll({event,parts,data,template,title,speaker,flavor,onClose,dialogOptions,rollMode,rollType=""}){rollMode=rollMode||game.settings.get("core","rollMode");const userSettingQuickD20Roll=!game.user.getFlag("pf2e","settings.settings.showRollDialogs"),_roll=(rollParts,adv,form)=>{let flav=flavor instanceof Function?flavor(rollParts,data):title;1===adv?(rollParts[0]=["2d20kh"],flav=`${title} (Fortune)`):-1===adv&&(rollParts[0]=["2d20kl"],flav=`${title} (Misfortune)`),form&&(data.itemBonus=form.find('[name="itemBonus"]').val()),data.itemBonus&&0!==data.itemBonus||-1===rollParts.indexOf("@itemBonus")||rollParts.splice(rollParts.indexOf("@itemBonus"),1),form&&(data.statusBonus=form.find('[name="statusBonus"]').val()),data.statusBonus&&0!==data.statusBonus||-1===rollParts.indexOf("@statusBonus")||rollParts.splice(rollParts.indexOf("@statusBonus"),1),form&&(data.circumstanceBonus=form.find('[name="circumstanceBonus"]').val()),data.circumstanceBonus&&0!==data.circumstanceBonus||-1===rollParts.indexOf("@circumstanceBonus")||rollParts.splice(rollParts.indexOf("@circumstanceBonus"),1);const roll=new Roll(rollParts.join("+"),data).roll();return roll.toMessage({speaker,flavor:flav,flags:{pf2e:{context:{type:rollType}}}},{rollMode:form?form.find('[name="rollMode"]').val():rollMode}),roll};if(parts=["1d20"].concat(parts),userSettingQuickD20Roll&&!event.altKey&&!event.ctrlKey&&!event.metaKey&&!event.shiftKey||!userSettingQuickD20Roll&&event.shiftKey)return _roll(parts,0);if(event.ctrlKey||event.metaKey)return rollMode="blindroll",_roll(parts,0);if(event.shiftKey||!userSettingQuickD20Roll){-1===parts.indexOf("@circumstanceBonus")&&(parts=parts.concat(["@circumstanceBonus"])),-1===parts.indexOf("@itemBonus")&&(parts=parts.concat(["@itemBonus"])),-1===parts.indexOf("@statusBonus")&&(parts=parts.concat(["@statusBonus"])),template=template||"systems/pf2e/templates/chat/roll-dialog.html";const dialogData={data,rollMode,formula:parts.join(" + "),rollModes:CONFIG.Dice.rollModes},content=await renderTemplate(template,dialogData);let roll;return new Promise((resolve=>{new Dialog({title,content,buttons:{advantage:{label:"Fortune",callback:html=>{roll=_roll(parts,1,html)}},normal:{label:"Normal",callback:html=>{roll=_roll(parts,0,html)}},disadvantage:{label:"Misfortune",callback:html=>{roll=_roll(parts,-1,html)}}},default:"normal",close:html=>{onClose&&onClose(html,parts,data),resolve(roll)}},dialogOptions).render(!0)}))}return _roll(parts,0)}static damageRoll({event,partsCritOnly=[],parts,data,template,title,speaker,flavor,critical=!1,onClose,dialogOptions}){const rollMode=game.settings.get("core","rollMode"),userSettingQuickD20Roll=!game.user.getFlag("pf2e","settings.settings.showRollDialogs");let rolled=!1;const _roll=(rollParts,crit,form)=>{form&&(data.itemBonus=form.find('[name="itemBonus"]').val(),data.statusBonus=form.find('[name="statusBonus"]').val(),data.circumstanceBonus=form.find('[name="circumstanceBonus"]').val());for(const key of["itemBonus","statusBonus","circumstanceBonus"])if(!data[key]||0===data[key]){let index;const part=`@${key}`;index=rollParts.indexOf(part),-1!==index&&rollParts.splice(index,1),index=partsCritOnly.indexOf(part),-1!==index&&partsCritOnly.splice(index,1)}const rule=game.settings.get("pf2e","critRule");if(crit){if("doubledamage"===rule)rollParts=[`(${rollParts.join("+")}) * 2`];else{const critRoll=new Roll(rollParts.join("+"),data).alter(2,0,{multiplyNumeric:!0});rollParts=[critRoll.formula]}rollParts=rollParts.concat(partsCritOnly)}const roll=new FormulaPreservingRoll(rollParts.join("+"),data),flav=flavor instanceof Function?flavor(rollParts,data):title;return roll.toMessage({speaker,flavor:flav},{rollMode:form?form.find('[name="rollMode"]').val():rollMode}),rolled=!0,roll};if(userSettingQuickD20Roll&&!event.shiftKey&&!event.ctrlKey&&!event.metaKey)return _roll(parts,event.altKey||critical);if(!userSettingQuickD20Roll&&(event.shiftKey||event.ctrlKey||event.metaKey))return _roll(parts,event.altKey||critical);parts.includes("@circumstanceBonus")||parts.push("@circumstanceBonus"),parts.includes("@itemBonus")||parts.push("@itemBonus"),parts.includes("@statusBonus")||parts.push("@statusBonus"),template=template||"systems/pf2e/templates/chat/roll-dialog.html";const dialogData={data,rollMode,formula:parts.join(" + "),rollModes:CONFIG.Dice.rollModes};let roll;return new Promise((resolve=>{renderTemplate(template,dialogData).then((content=>{new Dialog({title,content,buttons:{critical:{condition:critical,label:"Critical Hit",callback:html=>{roll=_roll(parts,!0,html)}},normal:{label:critical?"Normal":"Roll",callback:html=>{roll=_roll(parts,!1,html)}}},default:"normal",close:html=>{onClose&&onClose(html,parts,data),resolve(!!rolled&&roll)}},dialogOptions).render(!0)}))}))}alter(add,multiply){var _a,_b;const rgx=new RegExp(Roll.rgx.dice,"g");if(this._rolled)throw new Error("You may not alter a Roll which has already been rolled");return this.terms=null===(_a=this.terms)||void 0===_a?void 0:_a.map((t=>t.replace(rgx,((_match,nd,d,mods)=>`${nd=nd*(multiply||1)+(add||0)}d${d}${mods=mods||""}`)))),this._formula=null===(_b=this.terms)||void 0===_b?void 0:_b.join(" "),this}}},2113:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.listen=void 0;const MonkeyPatch=__importStar(__webpack_require__(8317));exports.listen=function(){Hooks.on("canvasInit",(async canvas=>{SquareGrid.prototype.measureDistances=function(segments,options={}){if(!options.gridSpaces)return BaseGrid.prototype.measureDistances.call(this,segments,options);let nDiagonal=0;const d=canvas.dimensions;return segments.map((s=>{const r=s.ray,nx=Math.abs(Math.ceil(r.dx/d.size)),ny=Math.abs(Math.ceil(r.dy/d.size)),nd=Math.min(nx,ny),ns=Math.abs(ny-nx);nDiagonal+=nd;const nd10=Math.floor(nDiagonal/2)-Math.floor((nDiagonal-nd)/2);return(2*nd10+(nd-nd10)+ns)*canvas.dimensions.distance}))},MonkeyPatch.patchTokenClasses()}))}},2311:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.listen=void 0;const conditions_1=__webpack_require__(5330),status_effects_1=__webpack_require__(7839);exports.listen=function(){Hooks.once("canvasReady",(async()=>{await conditions_1.ConditionManager.init(),status_effects_1.StatusEffects.init()})),Hooks.on("canvasReady",(()=>{var _a;(null===(_a=game.user.getFlag("pf2e","settings.showEffectPanel"))||void 0===_a||_a)&&game.pf2e.effectPanel.render(!0)}))}},4490:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.listen=void 0,exports.listen=function(){Hooks.on("closeWorldClockSettings",(()=>{game.user.isGM&&game.socket.emit("system.pf2e",{request:"refreshSceneControls",data:{layer:"TokenLayer"}})}))}},5470:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.listen=void 0;const hotbar_1=__webpack_require__(7221),effect_1=__webpack_require__(541);exports.listen=function(){Hooks.on("hotbarDrop",(async(_bar,data,slot)=>{const slotInt=Number(slot);let item;if("Item"===data.type&&data.id){const prefix=data.pack?`Compendium.${data.pack}`:"Item";item=await fromUuid(`${prefix}.${data.id}`)}if(item instanceof effect_1.EffectPF2e)hotbar_1.createToggleEffectMacro(data.pack,item,slotInt);else{if("Item"===data.type)return hotbar_1.createItemMacro(data.data,slotInt),!1;if("Action"===data.type)return hotbar_1.createActionMacro(data.index,data.actorId,slotInt),!1;"Skill"===data.type?hotbar_1.createSkillMacro(data.skill,data.skillName,data.actorId,slotInt):"Toggle"===data.type&&hotbar_1.createTogglePropertyMacro(data.property,data.label,data.actorId,slotInt)}return!0}))}},3857:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2E=void 0;const CanvasInit=__importStar(__webpack_require__(2113)),CanvasReady=__importStar(__webpack_require__(2311)),CloseWorldClockSettings=__importStar(__webpack_require__(4490)),Init=__importStar(__webpack_require__(872)),HotbarDrop=__importStar(__webpack_require__(5470)),Ready=__importStar(__webpack_require__(3106)),RenderSettings=__importStar(__webpack_require__(9404)),Setup=__importStar(__webpack_require__(7369)),UpdateScene=__importStar(__webpack_require__(2465)),UpdateWorldTime=__importStar(__webpack_require__(5953)),RenderChatLog=__importStar(__webpack_require__(4439)),RenderChatMessage=__importStar(__webpack_require__(6070));!function(PF2E){PF2E.Hooks={listen(){CanvasInit.listen(),CanvasReady.listen(),CloseWorldClockSettings.listen(),Init.listen(),HotbarDrop.listen(),Ready.listen(),RenderChatLog.listen(),RenderChatMessage.listen(),RenderSettings.listen(),Setup.listen(),UpdateScene.listen(),UpdateWorldTime.listen()}}}(exports.PF2E||(exports.PF2E={}))},872:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.listen=void 0;const base_1=__webpack_require__(9978),base_2=__webpack_require__(5180),active_effect_1=__webpack_require__(6700),conditions_1=__webpack_require__(5330),handlebars_1=__webpack_require__(847),modifiers_1=__webpack_require__(6243),settings_1=__webpack_require__(8103),combat_tracker_1=__webpack_require__(5963),rolls_1=__webpack_require__(7540),templates_1=__webpack_require__(7304),player_config_1=__webpack_require__(1457),compendium_directory_1=__webpack_require__(4136),status_effects_1=__webpack_require__(7839),config_1=__webpack_require__(6813),dice_1=__webpack_require__(1459),MonkeyPatch=__importStar(__webpack_require__(8317)),combat_1=__webpack_require__(2985),chat_message_1=__webpack_require__(915),macro_1=__webpack_require__(4157);exports.listen=function(){Hooks.once("init",(()=>{var _a,_b,_c,_d;console.log("PF2e System | Initializing Pathfinder 2nd Edition System"),CONFIG.PF2E=config_1.PF2ECONFIG,null!==(_a=(_d=CONFIG.debug).ruleElement)&&void 0!==_a||(_d.ruleElement=!1),CONFIG.Item.entityClass=base_2.ItemPF2e,CONFIG.ActiveEffect.entityClass=active_effect_1.ActiveEffectPF2e,CONFIG.Actor.entityClass=base_1.ActorPF2e,CONFIG.ChatMessage.entityClass=chat_message_1.ChatMessagePF2e,CONFIG.Combat.entityClass=combat_1.CombatPF2e,CONFIG.Macro.entityClass=macro_1.MacroPF2e,CONFIG.time.roundTime=6,CONFIG.Combat.initiative.decimals=1,CONFIG.ui.combat=combat_tracker_1.CombatTrackerPF2e,CONFIG.ui.compendium=compendium_directory_1.CompendiumDirectoryPF2e,CONFIG.TinyMCE.extended_valid_elements="pf2-action[action|glyph]",CONFIG.TinyMCE.content_css=(null!==(_b=CONFIG.TinyMCE.content_css)&&void 0!==_b?_b:[]).concat(`systems/${game.system.id}/styles/pf2e.css`),CONFIG.TinyMCE.style_formats=(null!==(_c=CONFIG.TinyMCE.style_formats)&&void 0!==_c?_c:[]).concat({title:"Icons A D T F R",inline:"span",classes:["pf2-icon"],wrapper:!0}),player_config_1.PlayerConfigPF2e.hookOnRenderSettings(),settings_1.registerSettings(),templates_1.loadPF2ETemplates(),handlebars_1.registerHandlebarsHelpers(),Object.defineProperty(window,"DicePF2e",{get:function(){return console.warn("This object is deprecated and may be removed by May, 2021. Please use game.pf2e.Dice instead."),dice_1.DicePF2e}}),Object.defineProperty(window,"PF2eStatusEffects",{get:function(){return console.warn("This object is deprecated and may be removed by May, 2021. Please use game.pf2e.StatusEffects instead."),status_effects_1.StatusEffects}}),Object.defineProperty(window,"PF2eConditionManager",{get:function(){return console.warn("This object is deprecated and may be removed by May, 2021. Please use game.pf2e.ConditionManager instead."),conditions_1.ConditionManager}}),Object.defineProperty(window,"PF2ModifierType",{get:function(){return console.warn("This object is deprecated and may be removed by May, 2021. Please use game.pf2e.ModifierType instead."),modifiers_1.MODIFIER_TYPE}}),Object.defineProperty(window,"PF2Modifier",{get:function(){return console.warn("This object is deprecated and may be removed by May, 2021. Please use game.pf2e.Modifier instead."),modifiers_1.ModifierPF2e}}),Object.defineProperty(window,"AbilityModifier",{get:function(){return console.warn("This object is deprecated and may be removed by May, 2021. Please use game.pf2e.AbilityModifier instead."),modifiers_1.AbilityModifier}}),Object.defineProperty(window,"ProficiencyModifier",{get:function(){return console.warn("This object is deprecated and may be removed by May, 2021. Please use game.pf2e.ProficiencyModifier instead."),modifiers_1.ProficiencyModifier}}),Object.defineProperty(window,"PF2StatisticModifier",{get:function(){return console.warn("This object is deprecated and may be removed by May, 2021. Please use game.pf2e.StatisticModifier instead."),modifiers_1.StatisticModifier}}),Object.defineProperty(window,"PF2CheckModifier",{get:function(){return console.warn("This object is deprecated and may be removed by May, 2021. Please use game.pf2e.CheckModifier instead."),modifiers_1.CheckModifier}}),Object.defineProperty(window,"PF2Check",{get:function(){return console.warn("This object is deprecated and may be removed by May, 2021. Please use game.pf2e.Check instead."),rolls_1.CheckPF2e}}),MonkeyPatch.patchCompendiumImports()}))}},3106:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.listen=void 0;const socket_1=__webpack_require__(7278),player_config_1=__webpack_require__(1457),update_minions_1=__webpack_require__(7492),migration_runner_1=__webpack_require__(749),migrations_1=__webpack_require__(2087),actions_1=__webpack_require__(4258),homebrew_1=__webpack_require__(6173);exports.listen=function(){Hooks.once("ready",(()=>{console.log("PF2e System | Readying Pathfinder 2nd Edition System"),console.debug("PF2e System | Build mode: production");const currentVersion=game.settings.get("pf2e","worldSchemaVersion");if(game.user.isGM){const migrationRunner=new migration_runner_1.MigrationRunner(migrations_1.Migrations.constructForWorld(currentVersion));migrationRunner.needsMigration()&&(currentVersion&&currentVersion<.411&&ui.notifications.error("Your PF2E system data is from too old a Foundry version and cannot be reliably migrated to the latest version. The process will be attempted, but errors may occur.",{permanent:!0}),migrationRunner.runMigration())}actions_1.ActionsPF2e.exposeActions(game.pf2e.actions),player_config_1.PlayerConfigPF2e.init(),player_config_1.PlayerConfigPF2e.activateColorScheme(),update_minions_1.updateMinionActors(),socket_1.activateSocketListener(),$("body").on("dragstart","a.entity-link",(event=>{var _a,_b,_c,_d;const match=(null!==(_c=null===(_b=null===(_a=null==event?void 0:event.currentTarget)||void 0===_a?void 0:_a.innerText)||void 0===_b?void 0:_b.trim())&&void 0!==_c?_c:"").match(/[0-9]+/);if(null!==match){const value=Number(match[0]),dataTransfer=null===(_d=null==event?void 0:event.originalEvent)||void 0===_d?void 0:_d.dataTransfer;if(dataTransfer){const data=JSON.parse(dataTransfer.getData("text/plain"));data.value=value,dataTransfer.setData("text/plain",JSON.stringify(data))}}}));{const index=game.system.entityTypes.Actor.indexOf("animalCompanion");game.system.entityTypes.Actor.splice(index,1)}homebrew_1.HomebrewElements.refreshTags()}))}},4439:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.listen=void 0;const crit_fumble_cards_1=__webpack_require__(9759);exports.listen=function(){Hooks.once("renderChatLog",(async()=>{(game.settings.get("pf2e","drawCritFumble")||game.settings.get("pf2e","critFumbleButtons"))&&crit_fumble_cards_1.CritFumbleCardsPF2e.init()}))}},3817:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.listen=void 0;const base_1=__webpack_require__(9978),localize_1=__webpack_require__(1608);function applyDamage(html,multiplier,promptModifier=!1){var _a;let attribute="attributes.hp";const $button=html.find("button.shield-block");CONFIG.PF2E.chatDamageButtonShieldToggle&&multiplier>0&&(attribute="attributes.shield",$button.removeClass("shield-activated"),CONFIG.PF2E.chatDamageButtonShieldToggle=!1);const shieldID=null!==(_a=$button.attr("data-shield-id"))&&void 0!==_a?_a:void 0;promptModifier?function(html,multiplier,attributePassed="attributes.hp"){new Dialog({title:game.i18n.localize("PF2E.UI.shiftModifyDamageTitle"),content:`<form>\n                <div class="form-group">\n                    <label>${game.i18n.localize("PF2E.UI.shiftModifyDamageLabel")}</label>\n                    <input type="number" name="modifier" value="" placeholder="0">\n                </div>\n                </form>\n                <script type="text/javascript">\n                $(function () {\n                    $(".form-group input").focus();\n                });\n                <\/script>`,buttons:{ok:{label:"Ok",callback:async dialogHtml=>{let modifier=parseFloat(dialogHtml.find('[name="modifier"]').val());Number.isNaN(modifier)&&(modifier=0),void 0!==modifier&&await base_1.ActorPF2e.applyDamage(html,multiplier,attributePassed,modifier)}}},default:"ok",close:()=>{}}).render(!0)}(html,multiplier,attribute):base_1.ActorPF2e.applyDamage(html,multiplier,attribute,0,{shieldID})}exports.listen=async function(message,html){var _a;const damageRoll=message.getFlag("pf2e","damageRoll"),fromRollTable=void 0!==message.getFlag("core","RollTable"),isRoll=damageRoll||message.isRoll,isD20=message.roll&&20===(null===(_a=message.roll.dice[0])||void 0===_a?void 0:_a.faces);if(!isRoll||isD20||fromRollTable)return;const $buttons=$(await renderTemplate("systems/pf2e/templates/chat/damage/buttons.html"));html.append($buttons);const full=html.find("button.full-damage"),half=html.find("button.half-damage"),double=html.find("button.double-damage"),heal=html.find("button.heal-damage"),contentSelector=`li.chat-message[data-message-id="${message.id}"] div.hover-content`,$shield=html.find("button.shield-block").attr({"data-tooltip-content":contentSelector}).tooltipster({animation:"fade",trigger:"click",arrow:!1,contentAsHTML:!0,debug:!1,interactive:!0,side:["top"],theme:"crb-hover"});$shield.tooltipster("disable"),html.find("button.shield-block").attr({title:localize_1.LocalizePF2e.translations.PF2E.DamageButton.ShieldBlock}),full.on("click",(event=>{applyDamage(html,1,event.shiftKey)})),half.on("click",(event=>{applyDamage(html,.5,event.shiftKey)})),double.on("click",(event=>{applyDamage(html,2,event.shiftKey)})),$shield.on("click",(async event=>{const tokens=canvas.tokens.controlled.filter((token=>token.actor));if(0===tokens.length){const errorMsg=localize_1.LocalizePF2e.translations.PF2E.UI.errorTargetToken;return ui.notifications.error(errorMsg),void event.stopPropagation()}const nonBrokenShields=tokens[0].actor.itemTypes.armor.filter((armor=>armor.isEquipped&&armor.isShield)).filter((shield=>!shield.isBroken)),multipleShields=1===tokens.length&&nonBrokenShields.length>1,shieldActivated=$shield.hasClass("shield-activated");if(multipleShields&&!shieldActivated){$shield.tooltipster("enable");const $list=$buttons.find("ul.shield-options");$list.children("li").remove();const $template=$list.children("template");for(const shield of nonBrokenShields){const $listItem=$($template.html());$listItem.children("input.data").val(shield.id),$listItem.children("span.label").text(shield.name);const hardnessLabel=localize_1.LocalizePF2e.translations.PF2E.ShieldHardnessLabel;$listItem.children("span.tag").text(`${hardnessLabel}: ${shield.hardness}`),$list.append($listItem)}return $list.find("li input").on("change",(event=>{const $input=$(event.currentTarget);$shield.attr({"data-shield-id":$input.val()}),$shield.tooltipster("close").tooltipster("disable"),$shield.addClass("shield-activated"),CONFIG.PF2E.chatDamageButtonShieldToggle=!0})),void $shield.tooltipster("open")}$shield.tooltipster("disable"),$shield.removeAttr("data-shield-id"),event.stopPropagation(),$shield.toggleClass("shield-activated"),CONFIG.PF2E.chatDamageButtonShieldToggle=!CONFIG.PF2E.chatDamageButtonShieldToggle})),heal.on("click",(event=>{event.stopPropagation(),applyDamage(html,-1,event.shiftKey)}))}},6686:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.listen=void 0;const base_1=__webpack_require__(9978);exports.listen=function(message,html){var _a;if(!message.isRoll||message.getFlag(game.system.id,"damageRoll"))return;const dice=null!==(_a=message.roll.dice[0])&&void 0!==_a?_a:{};if(20===dice.faces&&message.roll.dice.length&&message.isContentVisible){20===dice.total?html.find(".dice-total").addClass("success"):1===dice.total&&html.find(".dice-total").addClass("failure");const context=message.getFlag("pf2e","context");if((message.isAuthor||game.user.isGM)&&("skill-check"===(null==context?void 0:context.type)||"perception-check"===(null==context?void 0:context.type))){const btnStyling="width: 22px; height:22px; font-size:10px;line-height:1px",initiativeButtonTitle=game.i18n.localize("PF2E.ClickToSetInitiative"),setInitiativeButton=$(`<button class="dice-total-setInitiative-btn" style="${btnStyling}"><i class="fas fa-fist-raised" title="${initiativeButtonTitle}"></i></button>`),btnContainer=$('<span class="dmgBtn-container" style="position:absolute; right:0; bottom:1px;"></span>');btnContainer.append(setInitiativeButton),html.find(".dice-total").append(btnContainer),setInitiativeButton.on("click",(ev=>{ev.stopPropagation(),base_1.ActorPF2e.setCombatantInitiative(html)}))}}}},6070:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.listen=void 0;const DamageButtons=__importStar(__webpack_require__(3817)),DegreeOfSuccess=__importStar(__webpack_require__(6686));exports.listen=function(){Hooks.on("renderChatMessage",((message,html)=>{DamageButtons.listen(message,html),DegreeOfSuccess.listen(message,html)}))}},9404:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.listen=void 0;const migration_runner_1=__webpack_require__(749),migrations_1=__webpack_require__(2087);exports.listen=function(){Hooks.once("renderSettings",(async()=>{const storedSchemaVersion=game.settings.storage.get("world").get("pf2e.worldSchemaVersion");if(game.user.isGM&&void 0===storedSchemaVersion)if([game.actors.entities,game.items.entities].some((entities=>entities.length>0))){await game.settings.set("pf2e","worldSchemaVersion",.595);const migrationRunner=new migration_runner_1.MigrationRunner(migrations_1.Migrations.constructAll());await migrationRunner.runMigration()}else{const currentVersion=game.settings.get("pf2e","worldSchemaVersion");game.settings.set("pf2e","worldSchemaVersion",currentVersion)}}))}},7369:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.listen=void 0;const localize_1=__webpack_require__(1608),register_sheets_1=__webpack_require__(6258),xp_1=__webpack_require__(5063),travel_speed_sheet_1=__webpack_require__(9875),hotbar_1=__webpack_require__(7221),raise_a_shield_1=__webpack_require__(8909),steel_your_resolve_1=__webpack_require__(5982),earn_income_1=__webpack_require__(9435),world_clock_1=__webpack_require__(1845),effect_panel_1=__webpack_require__(9692),dice_1=__webpack_require__(1459),modifiers_1=__webpack_require__(6243),rolls_1=__webpack_require__(7540),rules_1=__webpack_require__(8094),conditions_1=__webpack_require__(5330),status_effects_1=__webpack_require__(7839);function registerPF2ActionClickListener(){$("body").on("click",(event=>{var _a,_b;let target=event.target;if(null==target?void 0:target.matches('[data-pf2-action]:not([data-pf2-action=""]), [data-pf2-action]:not([data-pf2-action=""]) *')){target=target.closest('[data-pf2-action]:not([data-pf2-action=""])');const{pf2Action,pf2Glyph,pf2Variant}=null!==(_a=target.dataset)&&void 0!==_a?_a:{},action=game.pf2e.actions[null!=pf2Action?pf2Action:""];pf2Action&&action?action({event,glyph:pf2Glyph,variant:pf2Variant}):console.warn(`PF2e System | Skip executing unknown action '${pf2Action}'`)}else if(null==target?void 0:target.matches('[data-pf2-saving-throw]:not([data-pf2-saving-throw=""]), [data-pf2-saving-throw]:not([data-pf2-saving-throw=""]) *')){target=target.closest('[data-pf2-saving-throw]:not([data-pf2-saving-throw=""])');const actors=function(){const actors=[];return canvas.tokens.controlled.length?actors.push(...canvas.tokens.controlled.map((token=>token.actor))):game.user.character&&actors.push(game.user.character),actors}();if(actors.length){const{pf2SavingThrow,pf2Dc,pf2Traits,pf2Label}=null!==(_b=target.dataset)&&void 0!==_b?_b:{};actors.forEach((actor=>{const savingThrow=actor.data.data.saves[null!=pf2SavingThrow?pf2SavingThrow:""];if(pf2SavingThrow&&savingThrow){const dc=Number.isInteger(Number(pf2Dc))?{label:pf2Label,value:Number(pf2Dc),visibility:"gm"}:void 0,options=actor.getRollOptions(["all","saving-throw",pf2SavingThrow]);if(pf2Traits){const traits=pf2Traits.split(",").map((trait=>trait.trim())).filter((trait=>!!trait));options.push(...traits)}savingThrow.roll({event,options,dc})}else console.warn(`PF2e System | Skip rolling unknown saving throw '${pf2SavingThrow}'`)}))}}}))}exports.listen=function(){Hooks.once("setup",(()=>{CONST.DEFAULT_TOKEN="systems/pf2e/icons/default-icons/mystery-man.svg",localize_1.LocalizePF2e.ready=!0,register_sheets_1.registerSheets(),new MutationObserver((mutations=>{for(const mutation of mutations)mutation.addedNodes.forEach((node=>{node instanceof HTMLElement&&node.querySelectorAll('[data-pf2-dc]:not([data-pf2-dc=""])[data-pf2-show-dc]:not([data-pf2-show-dc=""])').forEach((element=>{if(!(element instanceof HTMLElement))return;const dc=element.dataset.pf2Dc.trim(),role=element.dataset.pf2ShowDc.trim();(["all","owner"].includes(role)||"gm"===role&&game.user.isGM)&&(element.innerHTML=game.i18n.format("PF2E.DCWithValue",{dc,text:element.innerHTML}))}))}))})).observe(window.document.body,{childList:!0,subtree:!0}),registerPF2ActionClickListener(),game.pf2e={actions:{earnIncome:earn_income_1.earnIncome,raiseAShield:raise_a_shield_1.raiseAShield,steelYourResolve:steel_your_resolve_1.steelYourResolve},rollItemMacro:hotbar_1.rollItemMacro,rollActionMacro:hotbar_1.rollActionMacro,gm:{calculateXP:xp_1.calculateXP,launchTravelSheet:travel_speed_sheet_1.launchTravelSheet},effectPanel:new effect_panel_1.EffectPanel,worldClock:new world_clock_1.WorldClock,DicePF2e:dice_1.DicePF2e,StatusEffects:status_effects_1.StatusEffects,ConditionManager:conditions_1.ConditionManager,ModifierType:modifiers_1.MODIFIER_TYPE,Modifier:modifiers_1.ModifierPF2e,AbilityModifier:modifiers_1.AbilityModifier,ProficiencyModifier:modifiers_1.ProficiencyModifier,StatisticModifier:modifiers_1.StatisticModifier,CheckModifier:modifiers_1.CheckModifier,Check:rolls_1.CheckPF2e,RuleElements:rules_1.RuleElements}}))}},2465:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.listen=void 0,exports.listen=function(){Hooks.on("updateScene",((scene,diff)=>{const worldClockSettings=Object.values(ui.windows).find((app=>"world-clock-settings"===app.id));game.user.isGM&&"globalLight"in diff&&scene.active&&(null==worldClockSettings?void 0:worldClockSettings.rendered)&&worldClockSettings.render(!1)}))}},5953:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.listen=void 0,exports.listen=function(){Hooks.on("updateWorldTime",(async(_total,diff)=>{game.pf2e.effectPanel.refresh();const worldClock=game.pf2e.worldClock;setTimeout((()=>worldClock.render(!1)),1),await worldClock.animateDarkness(diff)}))}},9435:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.earnIncome=exports.multiplyIncome=void 0;const dc_1=__webpack_require__(2292),degree_of_success_1=__webpack_require__(2130);function buildRewards(...rewards){var _a,_b,_c;const[trained,expert,master,legendary]=rewards;return{trained,expert:null!=expert?expert:trained,master:null!==(_a=null!=master?master:expert)&&void 0!==_a?_a:trained,legendary:null!==(_c=null!==(_b=null!=legendary?legendary:master)&&void 0!==_b?_b:expert)&&void 0!==_c?_c:trained}}const earnIncomeTable={0:{failure:{cp:1},rewards:buildRewards({cp:5})},1:{failure:{cp:2},rewards:buildRewards({sp:2})},2:{failure:{cp:4},rewards:buildRewards({sp:3})},3:{failure:{cp:8},rewards:buildRewards({sp:5})},4:{failure:{sp:1},rewards:buildRewards({sp:7},{sp:8})},5:{failure:{sp:2},rewards:buildRewards({sp:9},{gp:1})},6:{failure:{sp:3},rewards:buildRewards({gp:1,sp:5},{gp:2})},7:{failure:{sp:4},rewards:buildRewards({gp:2},{gp:2,sp:5})},8:{failure:{sp:5},rewards:buildRewards({gp:2,sp:5},{gp:3})},9:{failure:{sp:6},rewards:buildRewards({gp:3},{gp:4})},10:{failure:{sp:7},rewards:buildRewards({gp:4},{gp:5},{gp:6})},11:{failure:{sp:8},rewards:buildRewards({gp:5},{gp:6},{gp:8})},12:{failure:{sp:9},rewards:buildRewards({gp:6},{gp:8},{gp:10})},13:{failure:{gp:1},rewards:buildRewards({gp:7},{gp:10},{gp:15})},14:{failure:{gp:1,sp:5},rewards:buildRewards({gp:8},{gp:15},{gp:20})},15:{failure:{gp:2},rewards:buildRewards({gp:10},{gp:20},{gp:28})},16:{failure:{gp:2,sp:5},rewards:buildRewards({gp:13},{gp:25},{gp:36},{gp:40})},17:{failure:{gp:3},rewards:buildRewards({gp:15},{gp:30},{gp:45},{gp:55})},18:{failure:{gp:4},rewards:buildRewards({gp:20},{gp:45},{gp:70},{gp:90})},19:{failure:{gp:6},rewards:buildRewards({gp:30},{gp:60},{gp:100},{gp:130})},20:{failure:{gp:8},rewards:buildRewards({gp:40},{gp:75},{gp:150},{gp:200})},21:{failure:{},rewards:buildRewards({gp:50},{gp:90},{gp:175},{gp:300})}};function getIncomeForLevel(level){return earnIncomeTable[Math.clamped(level,0,21)]}function multiplyIncome(income,factor){const result={};for(const[key,value]of Object.entries(income))result[key]=value*factor;return result}exports.multiplyIncome=multiplyIncome,exports.earnIncome=function(level,days,roll,proficiency,earnIncomeOptions,dcOptions){const dc=dc_1.calculateDC(level,dcOptions),degreeOfSuccess=degree_of_success_1.calculateDegreeOfSuccess(roll,dc),result={rewards:{},degreeOfSuccess};return degreeOfSuccess===degree_of_success_1.DegreeOfSuccess.CRITICAL_SUCCESS?result.rewards=getIncomeForLevel(level+1).rewards[proficiency]:degreeOfSuccess===degree_of_success_1.DegreeOfSuccess.SUCCESS?result.rewards=getIncomeForLevel(level).rewards[proficiency]:degreeOfSuccess===degree_of_success_1.DegreeOfSuccess.FAILURE&&(result.rewards=getIncomeForLevel(level).failure),function(result,earnIncomeOptions,level,proficiency){earnIncomeOptions.useLoreAsExperiencedProfessional&&(result.degreeOfSuccess===degree_of_success_1.DegreeOfSuccess.CRITICAL_FAILURE?(result.degreeOfSuccess=degree_of_success_1.DegreeOfSuccess.FAILURE,result.rewards=getIncomeForLevel(level).failure):result.degreeOfSuccess===degree_of_success_1.DegreeOfSuccess.FAILURE&&"trained"!==proficiency&&(result.rewards=multiplyIncome(result.rewards,2)))}(result,earnIncomeOptions,level,proficiency),{rewards:{perDay:result.rewards,combined:multiplyIncome(result.rewards,days)},degreeOfSuccess:result.degreeOfSuccess,daysSpentWorking:days,level,dc,roll:roll.modifier+roll.dieValue}}},7221:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.createToggleEffectMacro=exports.createTogglePropertyMacro=exports.createSkillMacro=exports.rollActionMacro=exports.createActionMacro=exports.rollItemMacro=exports.createItemMacro=void 0;const base_1=__webpack_require__(9978);exports.createItemMacro=async function(item,slot){const command=`game.pf2e.rollItemMacro("${item._id}");`;let macro=game.macros.entities.find((m=>m.name===item.name&&m.data.command===command));macro||(macro=await Macro.create({command,name:item.name,type:"script",img:item.img,flags:{"pf2e.itemMacro":!0}},{displaySheet:!1})),game.user.assignHotbarMacro(macro,slot)},exports.rollItemMacro=function(itemId){var _a,_b,_c,_d,_e;const speaker=ChatMessage.getSpeaker(),actor=null!==(_c=null===(_b=canvas.tokens.get(null!==(_a=speaker.token)&&void 0!==_a?_a:""))||void 0===_b?void 0:_b.actor)&&void 0!==_c?_c:game.actors.get(null!==(_d=speaker.actor)&&void 0!==_d?_d:""),item=null===(_e=null==actor?void 0:actor.items)||void 0===_e?void 0:_e.get(itemId);return item?item.roll():ui.notifications.warn(`Your controlled Actor does not have an item with ID ${itemId}`)},exports.createActionMacro=async function(actionIndex,actorId,slot){const action=game.actors.get(actorId).data.data.actions[actionIndex],macroName=`${game.i18n.localize("PF2E.WeaponStrikeLabel")}: ${action.name}`,command=`game.pf2e.rollActionMacro('${actorId}', ${actionIndex}, '${action.name}')`;let macro=game.macros.entities.find((m=>m.name===macroName&&m.data.command===command));macro||(macro=await Macro.create({command,name:macroName,type:"script",img:action.imageUrl,flags:{"pf2e.actionMacro":!0}},{displaySheet:!1})),game.user.assignHotbarMacro(macro,slot)},exports.rollActionMacro=async function(actorId,actionIndex,actionName){const actor=game.actors.get(actorId);if(actor){const action=actor.data.data.actions[actionIndex];if(action&&action.name===actionName){if("strike"===action.type){const templateData={actor,strike:action,strikeIndex:actionIndex,strikeDescription:TextEditor.enrichHTML(game.i18n.localize(action.description))},messageContent=await renderTemplate("systems/pf2e/templates/chat/strike-card.html",templateData),chatData={user:game.user._id,speaker:{actor:actor._id,token:actor.token,alias:actor.name},content:messageContent,type:CONST.CHAT_MESSAGE_TYPES.OTHER,flags:{core:{canPopout:!0}}},rollMode=game.settings.get("core","rollMode");["gmroll","blindroll"].includes(rollMode)&&(chatData.whisper=ChatMessage.getWhisperRecipients("GM").map((u=>u._id))),"blindroll"===rollMode&&(chatData.blind=!0),ChatMessage.create(chatData,{})}}else ui.notifications.error(game.i18n.localize("PF2E.MacroActionNoActionError"))}else ui.notifications.error(game.i18n.localize("PF2E.MacroActionNoActorError"))},exports.createSkillMacro=async function(skill,skillName,actorId,slot){var _a;const command=`\nconst a = game.actors.get('${actorId}');\nif (a) {\n    const opts = a.getRollOptions(['all', 'skill-check', '${null!==(_a=base_1.SKILL_DICTIONARY[skill])&&void 0!==_a?_a:skill}']);\n    a.data.data.skills['${skill}']?.roll(event, opts);\n} else {\n    ui.notifications.error(game.i18n.localize('PF2E.MacroActionNoActorError'));\n}`,macroName=game.i18n.format("PF2E.SkillCheckWithName",{skillName});let macro=game.macros.entities.find((m=>m.name===macroName&&m.data.command===command));macro||(macro=await Macro.create({command,name:macroName,type:"script",img:"icons/svg/d20-grey.svg",flags:{"pf2e.skillMacro":!0}},{displaySheet:!1})),game.user.assignHotbarMacro(macro,slot)},exports.createTogglePropertyMacro=async function(property,label,actorId,slot){const command=`const a = game.actors.get('${actorId}');\nif (a) {\n    const value = getProperty(a, 'data.${property}');\n    a.update({'${property}': !value});\n} else {\n    ui.notifications.error(game.i18n.localize('PF2E.MacroActionNoActorError'));\n}`,macroName=game.i18n.format("PF2E.ToggleWithName",{property:label});let macro=game.macros.entities.find((m=>m.name===macroName&&m.data.command===command));macro||(macro=await Macro.create({command,name:macroName,type:"script",img:"icons/svg/d20-grey.svg",flags:{"pf2e.skillMacro":!0}},{})),game.user.assignHotbarMacro(macro,slot)},exports.createToggleEffectMacro=async function(pack,effect,slot){const command=`\nconst ITEM_UUID = '${pack?`Compendium.${pack}`:"Item"}.${effect.id}'; // ${effect.data.name}\n(async () => {\n  const effect = duplicate(await fromUuid(ITEM_UUID));\n  effect.flags.core = effect.flags.core ?? {};\n  effect.flags.core.sourceId = ITEM_UUID;\n  for await (const token of canvas.tokens.controlled) {\n    let existing = token.actor.items.find(i => i.type === 'effect' && i.data.flags.core?.sourceId === ITEM_UUID);\n    if (existing) {\n      token.actor.deleteOwnedItem(existing._id);\n    } else {\n      token.actor.createOwnedItem(effect);\n    }\n  }\n})();\n`;let macro=game.macros.entities.find((m=>m.name===effect.data.name&&m.data.command===command));macro||(macro=await Macro.create({command,name:effect.data.name,type:"script",img:effect.data.img},{})),game.user.assignHotbarMacro(macro,slot)}},8909:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.raiseAShield=void 0;const character_1=__webpack_require__(3919),npc_1=__webpack_require__(5975),effect_1=__webpack_require__(541),utils_1=__webpack_require__(4930),localize_1=__webpack_require__(1608),ITEM_UUID="Compendium.pf2e.equipment-effects.2YgXoHvJfrDHucMr",TEMPLATES_flavor="./systems/pf2e/templates/chat/action/flavor.html",TEMPLATES_content="./systems/pf2e/templates/chat/action/content.html";exports.raiseAShield=async function(options){const translations=localize_1.LocalizePF2e.translations.PF2E.Actions.RaiseAShield,actors=Array.isArray(options.actors)?options.actors:[options.actors],actor=actors[0];if(actors.length>1||!(actor instanceof character_1.CharacterPF2e||actor instanceof npc_1.NPCPF2e))return void ui.notifications.error(translations.BadArgs);const shield=actor.itemTypes.armor.filter((armor=>"shield"===armor.data.data.armorType.value)).find((shield=>!0===shield.data.data.equipped.value)),speaker=ChatMessage.getSpeaker({actor});if(await(async()=>{if(shield&&!shield.isBroken){const existingEffect=actor.itemTypes.effect.find((effect=>effect.getFlag("core","sourceId")===ITEM_UUID));if(existingEffect)return await actor.deleteOwnedItem(existingEffect._id),!1;{const effect=await fromUuid(ITEM_UUID);if(!(effect instanceof effect_1.EffectPF2e))throw utils_1.ErrorPF2e("Raise a Shield effect not found");effect.data.img=shield.img;return effect.data.data.rules.find((rule=>"ac"===rule.selector&&"PF2E.RuleElement.FlatModifier"===rule.key)).value=shield.data.data.armor.value,await actor.createEmbeddedEntity("OwnedItem",effect.data),!0}}return(null==shield?void 0:shield.isBroken)?(ui.notifications.warn(game.i18n.format(translations.ShieldIsBroken,{actor:speaker.alias,shield:shield.name})),!1):(ui.notifications.warn(game.i18n.format(translations.NoShieldEquipped,{actor:speaker.alias})),!1)})()){const title=translations.Title,content=await renderTemplate(TEMPLATES_content,{imgPath:shield.img,message:game.i18n.format(translations.Content,{actor:speaker.alias})}),flavor=await renderTemplate(TEMPLATES_flavor,{action:{title,typeNumber:1}});await ChatMessage.create({type:CONST.CHAT_MESSAGE_TYPES.EMOTE,speaker,flavor,content})}}},5982:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.steelYourResolve=void 0;const character_1=__webpack_require__(3919),localize_1=__webpack_require__(1608);exports.steelYourResolve=function(options){const translations=localize_1.LocalizePF2e.translations.PF2E.Actions.SteelYourResolve,actors=Array.isArray(options.actors)?options.actors:[options.actors],actor=actors[0];if(actors.length>1||!(actor instanceof character_1.CharacterPF2e))return void ui.notifications.error(translations.BadArgs);const toChat=(alias,content)=>{ChatMessage.create({user:game.user.id,content,speaker:{alias}})},title=translations.Title,content=translations.Content;game.settings.get("pf2e","staminaVariant")?Dialog.confirm({title,content,yes:()=>{const{resolve,sp}=actor.data.data.attributes,spRatio=`${sp.value}/${sp.max}`,recoverStamina=game.i18n.format(translations.RecoverStamina,{name:actor.name,ratio:spRatio}),noStamina=game.i18n.format(translations.NoStamina,{name:actor.name});if(resolve.value>0){toChat(actor.name,recoverStamina);const newSP=sp.value+Math.floor(sp.max/2);actor.update({"data.attributes.sp.value":Math.min(newSP,sp.max),"data.attributes.resolve.value":resolve.value-1})}else toChat(actor.name,noStamina)},defaultYes:!0}):ui.notifications.error(translations.StaminaNotEnabled)}},9875:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.launchTravelSheet=void 0;const travel_speed_1=__webpack_require__(5197),utils_1=__webpack_require__(4930);class TravelSpeedSheet extends FormApplication{constructor(){super(...arguments),this.formData=void 0}static get defaultOptions(){const options=super.defaultOptions;return options.id="travel-duration",options.classes=["travel-duration"],options.title=game.i18n.localize("PF2E.TravelSpeed.Title"),options.template="systems/pf2e/templates/gm/travel/travel-speed-sheet.html",options.width="auto",options.submitOnChange=!0,options.closeOnSubmit=!1,options}async _updateObject(_event,formData){const data=expandObject(formData);data.actors=function(data){return Object.entries(data).sort((([a],[b])=>parseInt(a)-parseInt(b))).map((([_,a])=>a))}(data.actors),this.formData=data,this.render(!0)}actorFormToSheetData(actor,data){return{requiresDetectionMode:"Search"===data.explorationActivity||"DetectMagic"===data.explorationActivity,detectionMode:data.detectionMode,explorationActivity:data.explorationActivity,explorationSpeed:parseFloat(travel_speed_1.calculateNormalizedCharacterSpeed(data.speed,parseExplorationActivity(data.explorationActivity),parseDetectionModeData(data.detectionMode),parseExplorationOptions(actor)).toFixed(2)),speed:data.speed,name:actor.name}}getInitialActorData(actor){return this.actorFormToSheetData(actor,{detectionMode:"before",explorationActivity:"Search",speed:actor.data.data.attributes.speed.total})}formToSheetData(actors,data){const journey=[{terrainSlowdown:{difficult:data.difficultTerrainSlowdown,greaterDifficult:data.greaterDifficultTerrainSlowdown,normal:data.normalTerrainSlowdown},terrain:parseTerrainData(data.terrain),distance:{value:data.distance,unit:parseDistanceUnit(data.distanceUnit)}}],actorFormData=utils_1.zip(actors,data.actors,((actor,actorData)=>this.actorFormToSheetData(actor,actorData))),partySpeedInFeet=Math.min(...actorFormData.map((data=>data.explorationSpeed))),velocity=travel_speed_1.speedToVelocity(partySpeedInFeet);return{travelDuration:travel_speed_1.calculateTravelDuration({journey,hoursPerDay:data.hoursPerDay,velocity,hustleDurationInMinutes:data.hustleMinutes}),distance:data.distance,actors:actorFormData,normalTerrainSlowdown:data.normalTerrainSlowdown,difficultTerrainSlowdown:data.difficultTerrainSlowdown,greaterDifficultTerrainSlowdown:data.greaterDifficultTerrainSlowdown,distanceUnit:data.distanceUnit,terrain:data.terrain,partySpeedInFeet,hustleMinutes:data.hustleMinutes,hoursPerDay:data.hoursPerDay}}getInitialFormData(actors){return this.formToSheetData(actors,{actors:actors.map((actor=>this.getInitialActorData(actor))),terrain:"normal",distanceUnit:"miles",normalTerrainSlowdown:{denominator:1,numerator:1},difficultTerrainSlowdown:{denominator:1,numerator:2},greaterDifficultTerrainSlowdown:{denominator:1,numerator:3},distance:1,hustleMinutes:getHustleMinutes(actors),hoursPerDay:8})}getData(){const sheetData=super.getData();let data;return data=void 0===this.formData?this.getInitialFormData(this.options.actors):this.formToSheetData(this.options.actors,this.formData),Object.assign(sheetData,data),sheetData}}function parseDistanceUnit(unit){return"feet"===unit?travel_speed_1.LengthUnit.FEET:travel_speed_1.LengthUnit.MILES}function parseTerrainData(terrain){return"normal"===terrain?travel_speed_1.Terrain.NORMAL:"difficult"===terrain?travel_speed_1.Terrain.DIFFICULT:travel_speed_1.Terrain.GREATER_DIFFICULT}function parseDetectionModeData(detectionMode){return"none"===detectionMode?travel_speed_1.DetectionMode.NONE:"before"===detectionMode?travel_speed_1.DetectionMode.DETECT_BEFORE_WALKING_INTO_IT:travel_speed_1.DetectionMode.DETECT_EVERYTHING}function parseExplorationActivity(activity){return"AvoidNotice"===activity?travel_speed_1.ExplorationActivities.AVOID_NOTICE:"Defend"===activity?travel_speed_1.ExplorationActivities.DEFEND:"DetectMagic"===activity?travel_speed_1.ExplorationActivities.DETECT_MAGIC:"Scout"===activity?travel_speed_1.ExplorationActivities.SCOUT:"Search"===activity?travel_speed_1.ExplorationActivities.SEARCH:"None"===activity?travel_speed_1.ExplorationActivities.NONE:travel_speed_1.ExplorationActivities.HALF_SPEED}function getHustleMinutes(actors){return Math.min(...actors.map((actor=>10*Math.max(1,actor.data.data.abilities.con.mod))))}function hasFeat(actor,slug){return actor.itemTypes.feat.some((feat=>feat.slug===slug))}function parseExplorationOptions(actor){return{practicedDefender:hasFeat(actor,"practiced-defender"),swiftSneak:hasFeat(actor,"swift-sneak"),legendarySneak:hasFeat(actor,"legendary-sneak"),expeditiousSearch:hasFeat(actor,"expeditious-search"),expeditiousSearchLegendary:hasFeat(actor,"expeditious-search")&&4===actor.attributes.perception.rank}}exports.launchTravelSheet=function(actors){new TravelSpeedSheet({},{actors}).render(!0)}},5197:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.calculateTravelDuration=exports.Terrain=exports.speedToVelocity=exports.TimeUnit=exports.LengthUnit=exports.calculateNormalizedCharacterSpeed=exports.DetectionMode=exports.ExplorationActivities=void 0;const utils_1=__webpack_require__(4930);var ExplorationActivities,DetectionMode,LengthUnit;!function(ExplorationActivities){ExplorationActivities[ExplorationActivities.NONE=0]="NONE",ExplorationActivities[ExplorationActivities.HALF_SPEED=1]="HALF_SPEED",ExplorationActivities[ExplorationActivities.AVOID_NOTICE=2]="AVOID_NOTICE",ExplorationActivities[ExplorationActivities.DEFEND=3]="DEFEND",ExplorationActivities[ExplorationActivities.DETECT_MAGIC=4]="DETECT_MAGIC",ExplorationActivities[ExplorationActivities.SCOUT=5]="SCOUT",ExplorationActivities[ExplorationActivities.SEARCH=6]="SEARCH"}(ExplorationActivities=exports.ExplorationActivities||(exports.ExplorationActivities={})),function(DetectionMode){DetectionMode[DetectionMode.NONE=0]="NONE",DetectionMode[DetectionMode.DETECT_EVERYTHING=1]="DETECT_EVERYTHING",DetectionMode[DetectionMode.DETECT_BEFORE_WALKING_INTO_IT=2]="DETECT_BEFORE_WALKING_INTO_IT"}(DetectionMode=exports.DetectionMode||(exports.DetectionMode={})),exports.calculateNormalizedCharacterSpeed=function(defaultSpeedInFeet,activity,detectionMode,explorationOptions){return Math.max(5,function(defaultSpeedInFeet,activity,detectionMode,explorationOptions){const halvedSpeed=defaultSpeedInFeet/2;if(function(activity,explorationOptions){return activity===ExplorationActivities.AVOID_NOTICE&&(explorationOptions.legendarySneak||explorationOptions.swiftSneak)}(activity,explorationOptions)||function(activity,explorationOptions){return activity===ExplorationActivities.DEFEND&&explorationOptions.practicedDefender}(activity,explorationOptions))return defaultSpeedInFeet;if(activity===ExplorationActivities.SEARCH){let searchSpeedFactor=1;return explorationOptions.expeditiousSearchLegendary?searchSpeedFactor=4:explorationOptions.expeditiousSearch&&(searchSpeedFactor=2),detectionMode===DetectionMode.DETECT_EVERYTHING?Math.min(halvedSpeed,30*searchSpeedFactor):detectionMode===DetectionMode.DETECT_BEFORE_WALKING_INTO_IT?Math.min(halvedSpeed,15*searchSpeedFactor):halvedSpeed}return activity===ExplorationActivities.DETECT_MAGIC?detectionMode===DetectionMode.DETECT_EVERYTHING?Math.min(halvedSpeed,30):detectionMode===DetectionMode.DETECT_BEFORE_WALKING_INTO_IT?Math.min(halvedSpeed,15):halvedSpeed:activity===ExplorationActivities.NONE?defaultSpeedInFeet:halvedSpeed}(defaultSpeedInFeet,activity,detectionMode,explorationOptions))},function(LengthUnit){LengthUnit[LengthUnit.MILES=0]="MILES",LengthUnit[LengthUnit.FEET=1]="FEET"}(LengthUnit=exports.LengthUnit||(exports.LengthUnit={}));function toFeet(distance){return distance.unit===LengthUnit.MILES?6e3*distance.value:distance.value}var TimeUnit,Terrain;function toFeetPerMinute(velocity){return velocity.time===TimeUnit.MINUTE?toFeet(velocity.distance):toFeetPerMinute({distance:{unit:velocity.distance.unit,value:velocity.distance.value/60},time:TimeUnit.MINUTE})}function increaseDistanceByTerrain(trip){const feet=toFeet(trip.distance);return trip.terrain===Terrain.DIFFICULT?feet*trip.terrainSlowdown.difficult.numerator/trip.terrainSlowdown.difficult.denominator:trip.terrain===Terrain.GREATER_DIFFICULT?feet*trip.terrainSlowdown.greaterDifficult.numerator/trip.terrainSlowdown.greaterDifficult.denominator:feet*trip.terrainSlowdown.normal.numerator/trip.terrainSlowdown.normal.denominator}!function(TimeUnit){TimeUnit[TimeUnit.MINUTE=0]="MINUTE",TimeUnit[TimeUnit.HOUR=1]="HOUR"}(TimeUnit=exports.TimeUnit||(exports.TimeUnit={})),exports.speedToVelocity=function(speedInFeet){return{distance:{unit:LengthUnit.FEET,value:10*speedInFeet},time:TimeUnit.MINUTE}},function(Terrain){Terrain[Terrain.NORMAL=0]="NORMAL",Terrain[Terrain.DIFFICULT=1]="DIFFICULT",Terrain[Terrain.GREATER_DIFFICULT=2]="GREATER_DIFFICULT"}(Terrain=exports.Terrain||(exports.Terrain={}));exports.calculateTravelDuration=function({journey,velocity,hustleDurationInMinutes=0,hoursPerDay=8}){return function({distanceInFeet,feetPerMinute,hustleDurationInMinutes,hoursPerDay=8}){const minutesPerDay=60*hoursPerDay,minutesPerWeek=7*minutesPerDay,hustleDuration=Math.min(hustleDurationInMinutes,minutesPerDay),averageSpeed=(2*feetPerMinute*hustleDuration+feetPerMinute*(minutesPerDay-hustleDuration))/minutesPerDay,totalMinutes=Math.round(distanceInFeet/averageSpeed),weeks=Math.floor(totalMinutes/minutesPerWeek),days=Math.floor((totalMinutes-weeks*minutesPerWeek)/minutesPerDay),remainingMinutesMovingAtDoubleSpeed=(distanceInFeet-weeks*minutesPerWeek*averageSpeed-days*minutesPerDay*averageSpeed)/(2*feetPerMinute),remainingMinutesSpentHustling=Math.min(remainingMinutesMovingAtDoubleSpeed,hustleDurationInMinutes)+2*Math.max(0,remainingMinutesMovingAtDoubleSpeed-hustleDurationInMinutes),hours=Math.floor(remainingMinutesSpentHustling/60);return{weeks,days,hours,minutes:Math.round(remainingMinutesSpentHustling-60*hours)}}({distanceInFeet:utils_1.sum(journey.map(increaseDistanceByTerrain)),feetPerMinute:toFeetPerMinute(velocity),hustleDurationInMinutes,hoursPerDay})}},5063:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.calculateXP=void 0;const xpVariantCreatureDifferences=new Map;xpVariantCreatureDifferences.set(-7,9),xpVariantCreatureDifferences.set(-6,12),xpVariantCreatureDifferences.set(-5,14),xpVariantCreatureDifferences.set(-4,18),xpVariantCreatureDifferences.set(-3,21),xpVariantCreatureDifferences.set(-2,26),xpVariantCreatureDifferences.set(-1,32),xpVariantCreatureDifferences.set(0,40),xpVariantCreatureDifferences.set(1,48),xpVariantCreatureDifferences.set(2,60),xpVariantCreatureDifferences.set(3,72),xpVariantCreatureDifferences.set(4,90),xpVariantCreatureDifferences.set(5,108),xpVariantCreatureDifferences.set(6,135),xpVariantCreatureDifferences.set(7,160);const xpCreatureDifferences=new Map;xpCreatureDifferences.set(-4,10),xpCreatureDifferences.set(-3,15),xpCreatureDifferences.set(-2,20),xpCreatureDifferences.set(-1,30),xpCreatureDifferences.set(0,40),xpCreatureDifferences.set(1,60),xpCreatureDifferences.set(2,80),xpCreatureDifferences.set(3,120),xpCreatureDifferences.set(4,160);const xpSimpleHazardDifferences=new Map;function getXPFromMap(partyLevel,entityLevel,values){var _a;const difference=entityLevel+1-(partyLevel+1),range=Math.floor(values.size/2),boundedDifference=Math.clamped(difference,0-range,range);return null!==(_a=values.get(boundedDifference))&&void 0!==_a?_a:0}function calculateCreatureXP(partyLevel,npcLevel,dcOptions){return dcOptions.proficiencyWithoutLevel?getXPFromMap(partyLevel,npcLevel,xpVariantCreatureDifferences):getXPFromMap(partyLevel,npcLevel,xpCreatureDifferences)}xpSimpleHazardDifferences.set(-4,2),xpSimpleHazardDifferences.set(-3,3),xpSimpleHazardDifferences.set(-2,4),xpSimpleHazardDifferences.set(-1,6),xpSimpleHazardDifferences.set(0,8),xpSimpleHazardDifferences.set(1,12),xpSimpleHazardDifferences.set(2,16),xpSimpleHazardDifferences.set(3,24),xpSimpleHazardDifferences.set(4,32),exports.calculateXP=function(partyLevel,partySize,npcLevels,hazards,dcOptions){const budget=20*partySize,totalXP=npcLevels.map((level=>calculateCreatureXP(partyLevel,level,dcOptions))).reduce(((a,b)=>a+b),0)+hazards.map((hazard=>function(partyLevel,hazard,dcOptions){return hazard.isComplex?calculateCreatureXP(partyLevel,hazard.level,dcOptions):getXPFromMap(partyLevel,hazard.level,xpSimpleHazardDifferences)}(partyLevel,hazard,dcOptions))).reduce(((a,b)=>a+b),0),encounterBudgets={trivial:Math.floor(.5*budget),low:Math.floor(.75*budget),moderate:budget,severe:Math.floor(1.5*budget),extreme:Math.floor(2*budget)},rating=(challenge=totalXP)<(budgets=encounterBudgets).low?"trivial":challenge<budgets.moderate?"low":challenge<budgets.severe?"moderate":challenge<budgets.extreme?"severe":"extreme";var challenge,budgets;return{partyLevel,partySize,totalXP,encounterBudgets,rating,xpPerPlayer:Math.floor(totalXP/partySize*4)}}},6258:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.registerSheets=void 0;const character_1=__webpack_require__(1726),updated_npc_sheet_1=__webpack_require__(1420),action_1=__webpack_require__(5070),hazard_1=__webpack_require__(858),loot_1=__webpack_require__(7500),familiar_1=__webpack_require__(86),vehicle_1=__webpack_require__(5193),simple_npc_sheet_1=__webpack_require__(4062),base_1=(__webpack_require__(7027),__webpack_require__(8206)),kit_1=__webpack_require__(3477),ancestry_1=__webpack_require__(1039),background_1=__webpack_require__(3666),class_1=__webpack_require__(5839),localize_1=__webpack_require__(1608),physical_1=__webpack_require__(293),feat_1=(__webpack_require__(5164),__webpack_require__(106));exports.registerSheets=function(){const translations=localize_1.LocalizePF2e.translations.PF2E,sheetLabel=translations.SheetLabel,sheetLabelOld=(translations.SheetLabelNew,translations.SheetLabelOld);translations.SheetLabelDataEntry,Actors.unregisterSheet("core",ActorSheet);const localizeType=type=>{const entityType=type in CONFIG.PF2E.Actor.entityClasses?"ACTOR":"ITEM",camelized=type[0].toUpperCase()+type.slice(1).toLowerCase();return game.i18n.localize(`${entityType}.Type${camelized}`)};Actors.registerSheet("pf2e",character_1.CharacterSheetPF2e,{types:["character"],label:game.i18n.format(sheetLabel,{type:localizeType("character")}),makeDefault:!0}),Actors.registerSheet("pf2e",updated_npc_sheet_1.UpdatedNPCSheetPF2e,{types:["npc"],label:game.i18n.format(sheetLabelOld,{type:localizeType("npc")}),makeDefault:!1}),Actors.registerSheet("pf2e",simple_npc_sheet_1.ActorSheetPF2eSimpleNPC,{types:["npc"],label:game.i18n.format(sheetLabel,{type:localizeType("npc")}),makeDefault:!0}),Actors.registerSheet("pf2e",hazard_1.HazardSheetPF2e,{types:["hazard"],label:game.i18n.format(sheetLabel,{type:localizeType("hazard")}),makeDefault:!0}),Actors.registerSheet("pf2e",loot_1.LootSheetPF2e,{types:["loot"],label:game.i18n.format(sheetLabel,{type:localizeType("loot")}),makeDefault:!0}),Actors.registerSheet("pf2e",familiar_1.FamiliarSheetPF2e,{types:["familiar"],label:game.i18n.format(sheetLabel,{type:localizeType("familiar")}),makeDefault:!0}),Actors.registerSheet("pf2e",vehicle_1.VehicleSheetPF2e,{types:["vehicle"],label:game.i18n.format(sheetLabel,{type:localizeType("vehicle")}),makeDefault:!0}),Items.unregisterSheet("core",ItemSheet);const itemTypes=["condition","effect","lore","martial","spell","spellcastingEntry"];for(const itemType of itemTypes)Items.registerSheet("pf2e",base_1.ItemSheetPF2e,{types:[itemType],label:game.i18n.format(sheetLabel,{type:localizeType(itemType)}),makeDefault:!0});const physicalItemTypes=["armor","backpack","consumable","equipment","melee","treasure","weapon"];for(const itemType of physicalItemTypes)Items.registerSheet("pf2e",physical_1.PhysicalItemSheetPF2e,{types:[itemType],label:game.i18n.format(sheetLabel,{type:localizeType(itemType)}),makeDefault:!0});const sheetEntries=[["action",action_1.ActionSheetPF2e],["ancestry",ancestry_1.AncestrySheetPF2e],["background",background_1.BackgroundSheetPF2e],["class",class_1.ClassSheetPF2e],["feat",feat_1.FeatSheetPF2e],["kit",kit_1.KitSheetPF2e]];for(const[type,Sheet]of sheetEntries)Items.registerSheet("pf2e",Sheet,{types:[type],label:game.i18n.format(sheetLabel,{type:localizeType(type)}),makeDefault:!0})}},7278:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.activateSocketListener=void 0;const item_transfer_1=__webpack_require__(4494);exports.activateSocketListener=function(){game.socket.on("system.pf2e",(async(...[message,userId])=>{var _a;const sender=game.users.find((user=>user.id===userId));switch(message.request){case"itemTransfer":if(game.user.isGM){console.debug(`PF2e System | Received item-transfer request from ${sender.name}`);const data=message.data;new item_transfer_1.ItemTransfer(data.source,data.target,data.quantity,data.containerId).enact(sender)}break;case"refreshSceneControls":game.user.isGM||message.data.layer!==(null===(_a=ui.controls.control)||void 0===_a?void 0:_a.layer)||(console.debug("PF2e System | Refreshing Scene Controls"),ui.controls.initialize({layer:message.data.layer}));break;default:throw Error(`PF2e System | Received unrecognized socket emission: ${message.request}`)}}))}},1361:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Hooks.on("dropCanvasData",(async(c,data)=>{const target=c.tokens.placeables.find((token=>{const maximumX=token.x+token.hitArea.right,maximumY=token.y+token.hitArea.bottom;return data.x>=token.x&&data.y>=token.y&&data.x<=maximumX&&data.y<=maximumY}));if((null==target?void 0:target.actor)&&["character","npc","loot"].includes(target.actor.data.type)){const sheet=target.actor.sheet;if("Item"===data.type)return await sheet.onDropItem(data),!0}return!1}))},8317:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.patchTokenClasses=exports.patchCompendiumImports=void 0,exports.patchCompendiumImports=function(){"0.7.9"===game.data.version&&(EntityCollection.prototype.importFromCollection=async function(collection,entryId,updateData={},options={}){var _a;const entName=this.object.entity,pack=game.packs.get(collection);if(!pack||pack.metadata.entity!==entName)return Promise.reject();const source=await pack.getEntity(entryId),createData=mergeObject(this.fromCompendium(source._data),updateData);return delete createData._id,console.log(`${vtt} | Importing ${entName} ${source.name} from ${collection}`),null===(_a=this.directory)||void 0===_a||_a.activate(),await this.object.create(createData,options)},Compendium.prototype.importAll=async function({folderId,folderName}={}){if(CONST.FOLDER_ENTITY_TYPES.includes(this.entity)){const f=folderId?game.folders.get(folderId,{strict:!0}):await Folder.create({name:folderName||this.metadata.label,type:this.entity,parent:null});folderId=f.id,folderName=f.name}const entities=await this.getContent();ui.notifications.info(game.i18n.format("COMPENDIUM.ImportAllStart",{number:entities.length,type:this.entity,folder:folderName}));const created=await this.cls.create(entities.map((e=>(e._data.folder=folderId,e._data))));return ui.notifications.info(game.i18n.format("COMPENDIUM.ImportAllFinish",{number:(Array.isArray(created)?created:[created]).length,type:this.entity,folder:folderName})),created})},exports.patchTokenClasses=function(){"0.7.9"===game.data.version&&void 0!==Token.prototype._getBorderColor&&void 0!==CONFIG.Canvas.dispositionColors&&(Token.prototype._getBorderColor=function(){var _a;const colors=CONFIG.Canvas.dispositionColors;if(this._controlled)return colors.CONTROLLED;if(this._hover){const disposition="string"==typeof this.data.disposition?parseInt(this.data.disposition,10):this.data.disposition;return!game.user.isGM&&this.owner?colors.CONTROLLED:(null===(_a=this.actor)||void 0===_a?void 0:_a.hasPlayerOwner)?colors.PARTY:disposition===CONST.TOKEN_DISPOSITIONS.FRIENDLY?colors.FRIENDLY:disposition===CONST.TOKEN_DISPOSITIONS.NEUTRAL?colors.NEUTRAL:colors.HOSTILE}return null}),TokenHUD.prototype.clear=function(){BasePlaceableHUD.prototype.clear.call(this),Hooks.call("onTokenHUDClear",this,this.object)}}}},__webpack_module_cache__={};function __webpack_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(void 0!==cachedModule)return cachedModule.exports;var module=__webpack_module_cache__[moduleId]={exports:{}};return __webpack_modules__[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(result,chunkIds,fn,priority)=>{if(!chunkIds){var notFulfilled=1/0;for(i=0;i<deferred.length;i++){for(var[chunkIds,fn,priority]=deferred[i],fulfilled=!0,j=0;j<chunkIds.length;j++)(!1&priority||notFulfilled>=priority)&&Object.keys(__webpack_require__.O).every((key=>__webpack_require__.O[key](chunkIds[j])))?chunkIds.splice(j--,1):(fulfilled=!1,priority<notFulfilled&&(notFulfilled=priority));fulfilled&&(deferred.splice(i--,1),result=fn())}return result}priority=priority||0;for(var i=deferred.length;i>0&&deferred[i-1][2]>priority;i--)deferred[i]=deferred[i-1];deferred[i]=[chunkIds,fn,priority]},__webpack_require__.o=(obj,prop)=>Object.prototype.hasOwnProperty.call(obj,prop),__webpack_require__.r=exports=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})},(()=>{var installedChunks={179:0};__webpack_require__.O.j=chunkId=>0===installedChunks[chunkId];var webpackJsonpCallback=(parentChunkLoadingFunction,data)=>{var moduleId,chunkId,[chunkIds,moreModules,runtime]=data,i=0;for(moduleId in moreModules)__webpack_require__.o(moreModules,moduleId)&&(__webpack_require__.m[moduleId]=moreModules[moduleId]);for(runtime&&runtime(__webpack_require__),parentChunkLoadingFunction&&parentChunkLoadingFunction(data);i<chunkIds.length;i++)chunkId=chunkIds[i],__webpack_require__.o(installedChunks,chunkId)&&installedChunks[chunkId]&&installedChunks[chunkId][0](),installedChunks[chunkIds[i]]=0;__webpack_require__.O()},chunkLoadingGlobal=self.webpackChunkfoundry_pf2e=self.webpackChunkfoundry_pf2e||[];chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null,0)),chunkLoadingGlobal.push=webpackJsonpCallback.bind(null,chunkLoadingGlobal.push.bind(chunkLoadingGlobal))})();var __webpack_exports__=__webpack_require__.O(void 0,[736],(()=>__webpack_require__(6295)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();